2018-11-02 10:33:54,634:INFO: Creating the datasets...
2018-11-02 10:34:03,237:INFO: - done.
2018-11-02 10:34:03,237:INFO: Creating the model...
2018-11-02 10:37:11,712:INFO: Creating the datasets...
2018-11-02 10:37:20,123:INFO: - done.
2018-11-02 10:37:20,123:INFO: Creating the model...
2018-11-02 10:43:56,124:INFO: Creating the datasets...
2018-11-02 10:44:08,689:INFO: - done.
2018-11-02 10:44:08,689:INFO: Creating the model...
2018-11-02 10:44:25,204:INFO: Creating the datasets...
2018-11-02 10:44:36,285:INFO: - done.
2018-11-02 10:44:36,286:INFO: Creating the model...
2018-11-02 12:51:05,927:INFO: Creating the datasets...
2018-11-02 12:51:59,808:INFO: Creating the datasets...
2018-11-02 14:37:36,448:INFO: Creating the datasets...
2018-11-02 14:37:56,596:INFO: - done.
2018-11-02 14:37:56,597:INFO: Creating the model...
2018-11-02 14:38:40,813:INFO: Creating the datasets...
2018-11-02 14:38:53,204:INFO: - done.
2018-11-02 14:38:53,204:INFO: Creating the model...
2018-11-02 16:34:14,056:INFO: Creating the datasets...
2018-11-02 16:35:52,803:INFO: Creating the datasets...
2018-11-02 16:36:35,422:INFO: Creating the datasets...
2018-11-02 16:37:13,979:INFO: Creating the datasets...
2018-11-02 16:38:19,661:INFO: Creating the datasets...
2018-11-02 16:38:50,582:INFO: Creating the datasets...
2018-11-02 16:39:26,612:INFO: Creating the datasets...
2018-11-02 16:39:38,782:INFO: - done.
2018-11-02 16:39:38,783:INFO: Creating the model...
2018-11-02 16:39:56,055:INFO: Creating the datasets...
2018-11-02 16:40:12,076:INFO: - done.
2018-11-02 16:40:12,077:INFO: Creating the model...
2018-11-02 16:40:49,387:INFO: Creating the datasets...
2018-11-02 16:41:02,899:INFO: - done.
2018-11-02 16:41:02,899:INFO: Creating the model...
2018-11-02 16:42:06,536:INFO: Creating the datasets...
2018-11-02 16:42:25,910:INFO: - done.
2018-11-02 16:42:25,911:INFO: Creating the model...
2018-11-02 16:42:47,039:INFO: Creating the datasets...
2018-11-02 16:44:56,799:INFO: Creating the datasets...
2018-11-02 16:45:13,248:INFO: - done.
2018-11-02 16:45:13,249:INFO: Creating the model...
2018-11-02 16:45:44,246:INFO: Creating the datasets...
2018-11-02 16:45:58,207:INFO: - done.
2018-11-02 16:45:58,208:INFO: Creating the model...
2018-11-05 11:05:02,988:INFO: Creating the datasets...
2018-11-05 11:05:23,723:INFO: - done.
2018-11-05 11:05:23,723:INFO: Creating the model...
2018-11-05 11:10:58,456:INFO: Creating the datasets...
2018-11-05 11:11:08,050:INFO: - done.
2018-11-05 11:11:08,050:INFO: Creating the model...
2018-11-05 11:14:12,926:INFO: Creating the datasets...
2018-11-05 11:14:15,711:INFO: - done.
2018-11-05 11:14:15,711:INFO: Creating the model...
2018-11-05 11:19:36,673:INFO: Creating the datasets...
2018-11-05 11:19:39,437:INFO: - done.
2018-11-05 11:19:39,437:INFO: Creating the model...
2018-11-05 11:23:31,304:INFO: Creating the datasets...
2018-11-05 11:23:34,083:INFO: - done.
2018-11-05 11:23:34,083:INFO: Creating the model...
2018-11-05 11:23:57,060:INFO: Creating the datasets...
2018-11-05 11:23:59,788:INFO: - done.
2018-11-05 11:23:59,788:INFO: Creating the model...
2018-11-05 11:34:30,929:INFO: Creating the datasets...
2018-11-05 11:34:33,754:INFO: - done.
2018-11-05 11:34:33,754:INFO: Creating the model...
2018-11-05 11:38:27,299:INFO: Creating the datasets...
2018-11-05 11:38:30,068:INFO: - done.
2018-11-05 11:38:30,068:INFO: Creating the model...
2018-11-05 11:46:41,099:INFO: Creating the datasets...
2018-11-05 11:50:06,193:INFO: Creating the datasets...
2018-11-05 11:50:09,215:INFO: - done.
2018-11-05 11:50:09,215:INFO: Creating the model...
2018-11-05 11:50:29,425:INFO: Creating the datasets...
2018-11-05 11:50:32,232:INFO: - done.
2018-11-05 11:50:32,232:INFO: Creating the model...
2018-11-05 11:50:56,934:INFO: Creating the datasets...
2018-11-05 11:50:59,684:INFO: - done.
2018-11-05 11:50:59,685:INFO: Creating the model...
2018-11-05 12:44:58,715:INFO: Creating the datasets...
2018-11-05 12:45:01,531:INFO: - done.
2018-11-05 12:45:01,531:INFO: Creating the model...
2018-11-05 12:46:00,097:INFO: Creating the datasets...
2018-11-05 12:46:02,870:INFO: - done.
2018-11-05 12:46:02,870:INFO: Creating the model...
2018-11-05 12:46:14,348:INFO: Creating the datasets...
2018-11-05 12:46:17,090:INFO: - done.
2018-11-05 12:46:17,090:INFO: Creating the model...
2018-11-05 12:47:19,199:INFO: Creating the datasets...
2018-11-05 12:47:22,034:INFO: - done.
2018-11-05 12:47:22,034:INFO: Creating the model...
2018-11-05 12:48:10,947:INFO: Creating the datasets...
2018-11-05 12:48:13,737:INFO: - done.
2018-11-05 12:48:13,737:INFO: Creating the model...
2018-11-05 12:50:22,940:INFO: Creating the datasets...
2018-11-05 12:50:25,681:INFO: - done.
2018-11-05 12:50:25,681:INFO: Creating the model...
2018-11-05 12:51:15,888:INFO: Creating the datasets...
2018-11-05 12:51:18,672:INFO: - done.
2018-11-05 12:51:18,672:INFO: Creating the model...
2018-11-05 12:52:05,267:INFO: Creating the datasets...
2018-11-05 12:52:08,061:INFO: - done.
2018-11-05 12:52:08,061:INFO: Creating the model...
2018-11-05 12:52:08,671:INFO: - done.
2018-11-05 12:52:08,671:INFO: Starting training for 2 epoch(s)
2018-11-05 12:52:09,424:INFO: Epoch 1/2
2018-11-05 12:53:38,818:INFO: Creating the datasets...
2018-11-05 12:53:41,612:INFO: - done.
2018-11-05 12:53:41,612:INFO: Creating the model...
2018-11-05 12:53:42,192:INFO: - done.
2018-11-05 12:53:42,192:INFO: Starting training for 2 epoch(s)
2018-11-05 12:53:42,606:INFO: Epoch 1/2
2018-11-05 12:55:16,033:INFO: Creating the datasets...
2018-11-05 12:55:18,768:INFO: - done.
2018-11-05 12:55:18,769:INFO: Creating the model...
2018-11-05 12:55:19,345:INFO: - done.
2018-11-05 12:55:19,345:INFO: Starting training for 2 epoch(s)
2018-11-05 12:55:19,763:INFO: Epoch 1/2
2018-11-05 13:00:01,246:INFO: Creating the datasets...
2018-11-05 13:00:04,063:INFO: - done.
2018-11-05 13:00:04,063:INFO: Creating the model...
2018-11-05 13:00:04,649:INFO: - done.
2018-11-05 13:00:04,649:INFO: Starting training for 2 epoch(s)
2018-11-05 13:00:05,073:INFO: Epoch 1/2
2018-11-05 13:01:13,585:INFO: Creating the datasets...
2018-11-05 13:01:16,334:INFO: - done.
2018-11-05 13:01:16,334:INFO: Creating the model...
2018-11-05 13:01:25,003:INFO: Creating the datasets...
2018-11-05 13:01:27,694:INFO: - done.
2018-11-05 13:01:27,695:INFO: Creating the model...
2018-11-05 13:01:28,273:INFO: - done.
2018-11-05 13:01:28,273:INFO: Starting training for 2 epoch(s)
2018-11-05 13:01:28,691:INFO: Epoch 1/2
2018-11-05 13:02:37,320:INFO: Creating the datasets...
2018-11-05 13:02:40,045:INFO: - done.
2018-11-05 13:02:40,045:INFO: Creating the model...
2018-11-05 13:02:40,640:INFO: - done.
2018-11-05 13:02:40,640:INFO: Starting training for 2 epoch(s)
2018-11-05 13:02:41,065:INFO: Epoch 1/2
2018-11-05 13:02:48,358:INFO: - Train metrics: accuracy: -37716.289 ; loss: 1508.572
2018-11-05 13:02:48,689:INFO: - Eval metrics: accuracy: -137083.797 ; loss: 1084.889
2018-11-05 13:02:48,718:INFO: Epoch 2/2
2018-11-05 13:02:55,334:INFO: - Train metrics: accuracy: -106985.336 ; loss: 1401.689
2018-11-05 13:02:55,555:INFO: - Eval metrics: accuracy: -232848.266 ; loss: 1015.909
2018-11-05 13:03:16,566:INFO: Creating the datasets...
2018-11-05 13:03:19,435:INFO: - done.
2018-11-05 13:03:19,435:INFO: Creating the model...
2018-11-05 13:03:20,039:INFO: - done.
2018-11-05 13:03:20,039:INFO: Starting training for 20 epoch(s)
2018-11-05 13:03:20,469:INFO: Epoch 1/20
2018-11-05 13:03:27,565:INFO: - Train metrics: accuracy: -37716.289 ; loss: 1508.572
2018-11-05 13:03:27,899:INFO: - Eval metrics: accuracy: -137083.797 ; loss: 1084.889
2018-11-05 13:03:27,908:INFO: Epoch 2/20
2018-11-05 13:03:34,666:INFO: - Train metrics: accuracy: -106985.336 ; loss: 1401.689
2018-11-05 13:03:34,870:INFO: - Eval metrics: accuracy: -232848.266 ; loss: 1015.909
2018-11-05 13:03:34,871:INFO: Epoch 3/20
2018-11-05 13:03:41,648:INFO: - Train metrics: accuracy: -126637.656 ; loss: 1305.597
2018-11-05 13:03:41,847:INFO: - Eval metrics: accuracy: -231595.797 ; loss: 953.886
2018-11-05 13:03:41,848:INFO: Epoch 4/20
2018-11-05 13:03:48,564:INFO: - Train metrics: accuracy: -123010.055 ; loss: 1216.390
2018-11-05 13:03:48,757:INFO: - Eval metrics: accuracy: -247345.000 ; loss: 897.352
2018-11-05 13:03:48,758:INFO: Epoch 5/20
2018-11-05 13:03:55,580:INFO: - Train metrics: accuracy: -122407.031 ; loss: 1137.521
2018-11-05 13:03:55,804:INFO: - Eval metrics: accuracy: -245530.953 ; loss: 847.635
2018-11-05 13:03:55,805:INFO: Epoch 6/20
2018-11-05 13:04:02,752:INFO: - Train metrics: accuracy: -121449.484 ; loss: 1066.151
2018-11-05 13:04:02,932:INFO: - Eval metrics: accuracy: -240874.406 ; loss: 802.457
2018-11-05 13:04:02,934:INFO: Epoch 7/20
2018-11-05 13:04:09,724:INFO: - Train metrics: accuracy: -120672.258 ; loss: 1002.791
2018-11-05 13:04:09,892:INFO: - Eval metrics: accuracy: -226380.016 ; loss: 761.581
2018-11-05 13:04:09,894:INFO: Epoch 8/20
2018-11-05 13:04:16,637:INFO: - Train metrics: accuracy: -117960.164 ; loss: 945.660
2018-11-05 13:04:16,847:INFO: - Eval metrics: accuracy: -207428.156 ; loss: 723.970
2018-11-05 13:04:16,848:INFO: Epoch 9/20
2018-11-05 13:04:23,641:INFO: - Train metrics: accuracy: -114135.664 ; loss: 892.987
2018-11-05 13:04:23,853:INFO: - Eval metrics: accuracy: -190977.312 ; loss: 688.156
2018-11-05 13:04:23,854:INFO: Epoch 10/20
2018-11-05 13:04:30,482:INFO: - Train metrics: accuracy: -111913.336 ; loss: 842.129
2018-11-05 13:04:30,692:INFO: - Eval metrics: accuracy: -178731.078 ; loss: 654.599
2018-11-05 13:04:30,693:INFO: Epoch 11/20
2018-11-05 13:04:37,681:INFO: - Train metrics: accuracy: -109184.633 ; loss: 796.023
2018-11-05 13:04:37,859:INFO: - Eval metrics: accuracy: -171022.375 ; loss: 624.306
2018-11-05 13:04:37,859:INFO: Epoch 12/20
2018-11-05 13:04:44,656:INFO: - Train metrics: accuracy: -106783.352 ; loss: 754.083
2018-11-05 13:04:44,840:INFO: - Eval metrics: accuracy: -163598.625 ; loss: 596.434
2018-11-05 13:04:44,841:INFO: Epoch 13/20
2018-11-05 13:04:51,591:INFO: - Train metrics: accuracy: -104949.664 ; loss: 715.573
2018-11-05 13:04:51,789:INFO: - Eval metrics: accuracy: -157406.859 ; loss: 570.701
2018-11-05 13:04:51,790:INFO: Epoch 14/20
2018-11-05 13:04:58,486:INFO: - Train metrics: accuracy: -103174.797 ; loss: 680.032
2018-11-05 13:04:58,720:INFO: - Eval metrics: accuracy: -153130.469 ; loss: 546.813
2018-11-05 13:04:58,721:INFO: Epoch 15/20
2018-11-05 13:05:05,604:INFO: - Train metrics: accuracy: -101826.547 ; loss: 647.113
2018-11-05 13:05:05,806:INFO: - Eval metrics: accuracy: -148866.328 ; loss: 524.800
2018-11-05 13:05:05,807:INFO: Epoch 16/20
2018-11-05 13:05:12,595:INFO: - Train metrics: accuracy: -100278.141 ; loss: 616.597
2018-11-05 13:05:12,802:INFO: - Eval metrics: accuracy: -147044.812 ; loss: 504.340
2018-11-05 13:05:12,803:INFO: Epoch 17/20
2018-11-05 13:05:19,476:INFO: - Train metrics: accuracy: -98854.211 ; loss: 588.191
2018-11-05 13:05:19,697:INFO: - Eval metrics: accuracy: -143149.625 ; loss: 485.162
2018-11-05 13:05:19,698:INFO: Epoch 18/20
2018-11-05 13:05:26,395:INFO: - Train metrics: accuracy: -98118.992 ; loss: 561.787
2018-11-05 13:05:26,606:INFO: - Eval metrics: accuracy: -140790.781 ; loss: 467.384
2018-11-05 13:05:26,607:INFO: Epoch 19/20
2018-11-05 13:05:33,541:INFO: - Train metrics: accuracy: -96539.555 ; loss: 537.186
2018-11-05 13:05:33,760:INFO: - Eval metrics: accuracy: -138510.484 ; loss: 450.691
2018-11-05 13:05:33,762:INFO: Epoch 20/20
2018-11-05 13:05:40,609:INFO: - Train metrics: accuracy: -95576.703 ; loss: 514.212
2018-11-05 13:05:40,808:INFO: - Eval metrics: accuracy: -136052.766 ; loss: 435.131
2018-11-05 13:05:55,398:INFO: Creating the datasets...
2018-11-05 13:05:58,214:INFO: - done.
2018-11-05 13:05:58,214:INFO: Creating the model...
2018-11-05 13:05:58,796:INFO: - done.
2018-11-05 13:05:58,796:INFO: Starting training for 200 epoch(s)
2018-11-05 13:05:59,218:INFO: Epoch 1/200
2018-11-05 13:06:06,650:INFO: - Train metrics: loss: 1508.572 ; accuracy: -37716.289
2018-11-05 13:06:06,961:INFO: - Eval metrics: loss: 1084.889 ; accuracy: -137083.797
2018-11-05 13:06:06,969:INFO: Epoch 2/200
2018-11-05 13:06:14,026:INFO: - Train metrics: loss: 1401.689 ; accuracy: -106985.336
2018-11-05 13:06:14,227:INFO: - Eval metrics: loss: 1015.909 ; accuracy: -232848.266
2018-11-05 13:06:14,228:INFO: Epoch 3/200
2018-11-05 13:06:21,423:INFO: - Train metrics: loss: 1305.597 ; accuracy: -126637.656
2018-11-05 13:06:21,638:INFO: - Eval metrics: loss: 953.886 ; accuracy: -231595.797
2018-11-05 13:06:21,639:INFO: Epoch 4/200
2018-11-05 13:06:28,663:INFO: - Train metrics: loss: 1216.390 ; accuracy: -123010.055
2018-11-05 13:06:28,891:INFO: - Eval metrics: loss: 897.352 ; accuracy: -247345.000
2018-11-05 13:06:28,892:INFO: Epoch 5/200
2018-11-05 13:06:36,057:INFO: - Train metrics: loss: 1137.521 ; accuracy: -122407.031
2018-11-05 13:06:36,256:INFO: - Eval metrics: loss: 847.635 ; accuracy: -245530.953
2018-11-05 13:06:36,257:INFO: Epoch 6/200
2018-11-05 13:06:43,249:INFO: - Train metrics: loss: 1066.151 ; accuracy: -121449.484
2018-11-05 13:06:43,443:INFO: - Eval metrics: loss: 802.457 ; accuracy: -240874.406
2018-11-05 13:06:43,444:INFO: Epoch 7/200
2018-11-05 13:06:50,223:INFO: - Train metrics: loss: 1002.791 ; accuracy: -120672.258
2018-11-05 13:06:50,406:INFO: - Eval metrics: loss: 761.581 ; accuracy: -226380.016
2018-11-05 13:06:50,407:INFO: Epoch 8/200
2018-11-05 13:06:57,314:INFO: - Train metrics: loss: 945.660 ; accuracy: -117960.164
2018-11-05 13:06:57,496:INFO: - Eval metrics: loss: 723.970 ; accuracy: -207428.156
2018-11-05 13:06:57,498:INFO: Epoch 9/200
2018-11-05 13:07:04,578:INFO: - Train metrics: loss: 892.987 ; accuracy: -114135.664
2018-11-05 13:07:04,750:INFO: - Eval metrics: loss: 688.156 ; accuracy: -190977.312
2018-11-05 13:07:04,751:INFO: Epoch 10/200
2018-11-05 13:07:11,922:INFO: - Train metrics: loss: 842.129 ; accuracy: -111913.336
2018-11-05 13:07:12,101:INFO: - Eval metrics: loss: 654.599 ; accuracy: -178731.078
2018-11-05 13:07:12,102:INFO: Epoch 11/200
2018-11-05 13:07:19,168:INFO: - Train metrics: loss: 796.023 ; accuracy: -109184.633
2018-11-05 13:07:19,351:INFO: - Eval metrics: loss: 624.306 ; accuracy: -171022.375
2018-11-05 13:07:19,352:INFO: Epoch 12/200
2018-11-05 13:07:26,479:INFO: - Train metrics: loss: 754.083 ; accuracy: -106783.352
2018-11-05 13:07:26,705:INFO: - Eval metrics: loss: 596.434 ; accuracy: -163598.625
2018-11-05 13:07:26,706:INFO: Epoch 13/200
2018-11-05 13:07:33,707:INFO: - Train metrics: loss: 715.573 ; accuracy: -104949.664
2018-11-05 13:07:33,922:INFO: - Eval metrics: loss: 570.701 ; accuracy: -157406.859
2018-11-05 13:07:33,923:INFO: Epoch 14/200
2018-11-05 13:07:40,243:INFO: - Train metrics: loss: 680.032 ; accuracy: -103174.797
2018-11-05 13:07:40,413:INFO: - Eval metrics: loss: 546.813 ; accuracy: -153130.469
2018-11-05 13:07:40,413:INFO: Epoch 15/200
2018-11-05 13:07:47,232:INFO: - Train metrics: loss: 647.113 ; accuracy: -101826.547
2018-11-05 13:07:47,411:INFO: - Eval metrics: loss: 524.800 ; accuracy: -148866.328
2018-11-05 13:07:47,412:INFO: Epoch 16/200
2018-11-05 13:07:54,586:INFO: - Train metrics: loss: 616.597 ; accuracy: -100278.141
2018-11-05 13:07:54,790:INFO: - Eval metrics: loss: 504.340 ; accuracy: -147044.812
2018-11-05 13:07:54,790:INFO: Epoch 17/200
2018-11-05 13:08:01,834:INFO: - Train metrics: loss: 588.191 ; accuracy: -98854.211
2018-11-05 13:08:02,066:INFO: - Eval metrics: loss: 485.162 ; accuracy: -143149.625
2018-11-05 13:08:02,067:INFO: Epoch 18/200
2018-11-05 13:08:09,296:INFO: - Train metrics: loss: 561.787 ; accuracy: -98118.992
2018-11-05 13:08:09,500:INFO: - Eval metrics: loss: 467.384 ; accuracy: -140790.781
2018-11-05 13:08:09,501:INFO: Epoch 19/200
2018-11-05 13:08:16,652:INFO: - Train metrics: loss: 537.186 ; accuracy: -96539.555
2018-11-05 13:08:16,854:INFO: - Eval metrics: loss: 450.691 ; accuracy: -138510.484
2018-11-05 13:08:16,855:INFO: Epoch 20/200
2018-11-05 13:08:23,802:INFO: - Train metrics: loss: 514.212 ; accuracy: -95576.703
2018-11-05 13:08:23,963:INFO: - Eval metrics: loss: 435.131 ; accuracy: -136052.766
2018-11-05 13:08:23,964:INFO: Epoch 21/200
2018-11-05 13:08:31,101:INFO: - Train metrics: loss: 492.781 ; accuracy: -94066.008
2018-11-05 13:08:31,303:INFO: - Eval metrics: loss: 420.665 ; accuracy: -136280.172
2018-11-05 13:08:31,304:INFO: Epoch 22/200
2018-11-05 13:08:38,252:INFO: - Train metrics: loss: 472.718 ; accuracy: -92854.844
2018-11-05 13:08:38,469:INFO: - Eval metrics: loss: 407.156 ; accuracy: -132855.172
2018-11-05 13:08:38,470:INFO: Epoch 23/200
2018-11-05 13:08:45,844:INFO: - Train metrics: loss: 454.054 ; accuracy: -92459.867
2018-11-05 13:08:46,062:INFO: - Eval metrics: loss: 394.320 ; accuracy: -132661.953
2018-11-05 13:08:46,062:INFO: Epoch 24/200
2018-11-05 13:08:53,297:INFO: - Train metrics: loss: 436.607 ; accuracy: -91612.109
2018-11-05 13:08:53,511:INFO: - Eval metrics: loss: 382.747 ; accuracy: -130645.578
2018-11-05 13:08:53,512:INFO: Epoch 25/200
2018-11-05 13:09:00,607:INFO: - Train metrics: loss: 420.267 ; accuracy: -90242.742
2018-11-05 13:09:00,794:INFO: - Eval metrics: loss: 371.667 ; accuracy: -129565.344
2018-11-05 13:09:00,795:INFO: Epoch 26/200
2018-11-05 13:09:08,100:INFO: - Train metrics: loss: 404.945 ; accuracy: -89368.148
2018-11-05 13:09:08,312:INFO: - Eval metrics: loss: 361.189 ; accuracy: -127021.688
2018-11-05 13:09:08,313:INFO: Epoch 27/200
2018-11-05 13:09:15,747:INFO: - Train metrics: loss: 390.664 ; accuracy: -89099.516
2018-11-05 13:09:15,933:INFO: - Eval metrics: loss: 351.604 ; accuracy: -126532.633
2018-11-05 13:09:15,933:INFO: Epoch 28/200
2018-11-05 13:09:23,226:INFO: - Train metrics: loss: 377.268 ; accuracy: -88695.492
2018-11-05 13:09:23,450:INFO: - Eval metrics: loss: 342.711 ; accuracy: -125535.203
2018-11-05 13:09:23,451:INFO: Epoch 29/200
2018-11-05 13:09:30,760:INFO: - Train metrics: loss: 364.662 ; accuracy: -87662.148
2018-11-05 13:09:30,975:INFO: - Eval metrics: loss: 334.469 ; accuracy: -124232.492
2018-11-05 13:09:30,976:INFO: Epoch 30/200
2018-11-05 13:09:37,912:INFO: - Train metrics: loss: 352.921 ; accuracy: -87158.031
2018-11-05 13:09:38,089:INFO: - Eval metrics: loss: 326.447 ; accuracy: -123523.625
2018-11-05 13:09:38,090:INFO: Epoch 31/200
2018-11-05 13:09:45,195:INFO: - Train metrics: loss: 341.799 ; accuracy: -86170.734
2018-11-05 13:09:45,408:INFO: - Eval metrics: loss: 319.105 ; accuracy: -123206.133
2018-11-05 13:09:45,409:INFO: Epoch 32/200
2018-11-05 13:09:52,469:INFO: - Train metrics: loss: 331.495 ; accuracy: -85859.648
2018-11-05 13:09:52,643:INFO: - Eval metrics: loss: 312.395 ; accuracy: -122644.180
2018-11-05 13:09:52,644:INFO: Epoch 33/200
2018-11-05 13:09:59,972:INFO: - Train metrics: loss: 321.607 ; accuracy: -85532.141
2018-11-05 13:10:00,158:INFO: - Eval metrics: loss: 305.960 ; accuracy: -121910.000
2018-11-05 13:10:00,158:INFO: Epoch 34/200
2018-11-05 13:10:07,343:INFO: - Train metrics: loss: 312.441 ; accuracy: -84892.406
2018-11-05 13:10:07,541:INFO: - Eval metrics: loss: 300.141 ; accuracy: -122401.469
2018-11-05 13:10:07,542:INFO: Epoch 35/200
2018-11-05 13:10:14,780:INFO: - Train metrics: loss: 303.736 ; accuracy: -84566.984
2018-11-05 13:10:14,965:INFO: - Eval metrics: loss: 294.326 ; accuracy: -120258.203
2018-11-05 13:10:14,966:INFO: Epoch 36/200
2018-11-05 13:10:22,082:INFO: - Train metrics: loss: 295.524 ; accuracy: -83808.461
2018-11-05 13:10:22,256:INFO: - Eval metrics: loss: 289.174 ; accuracy: -119549.789
2018-11-05 13:10:22,257:INFO: Epoch 37/200
2018-11-05 13:10:29,341:INFO: - Train metrics: loss: 287.846 ; accuracy: -83767.562
2018-11-05 13:10:29,531:INFO: - Eval metrics: loss: 284.184 ; accuracy: -119868.047
2018-11-05 13:10:29,532:INFO: Epoch 38/200
2018-11-05 13:10:36,589:INFO: - Train metrics: loss: 280.524 ; accuracy: -83636.555
2018-11-05 13:10:36,810:INFO: - Eval metrics: loss: 279.473 ; accuracy: -119279.258
2018-11-05 13:10:36,810:INFO: Epoch 39/200
2018-11-05 13:10:44,004:INFO: - Train metrics: loss: 273.787 ; accuracy: -83037.391
2018-11-05 13:10:44,196:INFO: - Eval metrics: loss: 275.478 ; accuracy: -120054.242
2018-11-05 13:10:44,197:INFO: Epoch 40/200
2018-11-05 13:10:51,353:INFO: - Train metrics: loss: 267.328 ; accuracy: -83189.359
2018-11-05 13:10:51,557:INFO: - Eval metrics: loss: 271.495 ; accuracy: -119387.055
2018-11-05 13:10:51,558:INFO: Epoch 41/200
2018-11-05 13:10:58,460:INFO: - Train metrics: loss: 261.189 ; accuracy: -82582.055
2018-11-05 13:10:58,690:INFO: - Eval metrics: loss: 267.359 ; accuracy: -118387.664
2018-11-05 13:10:58,691:INFO: Epoch 42/200
2018-11-05 13:11:05,714:INFO: - Train metrics: loss: 255.474 ; accuracy: -82301.930
2018-11-05 13:11:05,916:INFO: - Eval metrics: loss: 263.934 ; accuracy: -118249.711
2018-11-05 13:11:05,917:INFO: Epoch 43/200
2018-11-05 13:11:13,157:INFO: - Train metrics: loss: 250.121 ; accuracy: -82547.266
2018-11-05 13:11:13,325:INFO: - Eval metrics: loss: 261.136 ; accuracy: -122450.789
2018-11-05 13:11:13,326:INFO: Epoch 44/200
2018-11-05 13:11:20,474:INFO: - Train metrics: loss: 244.939 ; accuracy: -82442.086
2018-11-05 13:11:20,663:INFO: - Eval metrics: loss: 257.669 ; accuracy: -119592.531
2018-11-05 13:11:20,664:INFO: Epoch 45/200
2018-11-05 13:11:27,796:INFO: - Train metrics: loss: 240.002 ; accuracy: -82094.844
2018-11-05 13:11:28,008:INFO: - Eval metrics: loss: 254.709 ; accuracy: -118884.508
2018-11-05 13:11:28,009:INFO: Epoch 46/200
2018-11-05 13:11:35,153:INFO: - Train metrics: loss: 235.465 ; accuracy: -82504.555
2018-11-05 13:11:35,361:INFO: - Eval metrics: loss: 251.935 ; accuracy: -119350.914
2018-11-05 13:11:35,362:INFO: Epoch 47/200
2018-11-05 13:11:42,432:INFO: - Train metrics: loss: 230.859 ; accuracy: -81732.789
2018-11-05 13:11:42,627:INFO: - Eval metrics: loss: 249.374 ; accuracy: -118574.859
2018-11-05 13:11:42,628:INFO: Epoch 48/200
2018-11-05 13:11:49,791:INFO: - Train metrics: loss: 226.648 ; accuracy: -82035.234
2018-11-05 13:11:49,986:INFO: - Eval metrics: loss: 246.724 ; accuracy: -117983.469
2018-11-05 13:11:49,987:INFO: Epoch 49/200
2018-11-05 13:11:57,042:INFO: - Train metrics: loss: 222.628 ; accuracy: -81865.852
2018-11-05 13:11:57,270:INFO: - Eval metrics: loss: 244.335 ; accuracy: -117663.914
2018-11-05 13:11:57,271:INFO: Epoch 50/200
2018-11-05 13:12:04,645:INFO: - Train metrics: loss: 218.861 ; accuracy: -82095.906
2018-11-05 13:12:04,824:INFO: - Eval metrics: loss: 242.126 ; accuracy: -117454.031
2018-11-05 13:12:04,825:INFO: Epoch 51/200
2018-11-05 13:12:11,954:INFO: - Train metrics: loss: 215.297 ; accuracy: -82051.109
2018-11-05 13:12:12,142:INFO: - Eval metrics: loss: 240.169 ; accuracy: -117818.969
2018-11-05 13:12:12,143:INFO: Epoch 52/200
2018-11-05 13:12:19,398:INFO: - Train metrics: loss: 211.864 ; accuracy: -82104.703
2018-11-05 13:12:19,594:INFO: - Eval metrics: loss: 238.206 ; accuracy: -119066.641
2018-11-05 13:12:19,594:INFO: Epoch 53/200
2018-11-05 13:12:26,669:INFO: - Train metrics: loss: 208.519 ; accuracy: -81419.266
2018-11-05 13:12:26,878:INFO: - Eval metrics: loss: 236.064 ; accuracy: -118019.844
2018-11-05 13:12:26,879:INFO: Epoch 54/200
2018-11-05 13:12:34,016:INFO: - Train metrics: loss: 205.394 ; accuracy: -81820.961
2018-11-05 13:12:34,239:INFO: - Eval metrics: loss: 234.391 ; accuracy: -118386.070
2018-11-05 13:12:34,240:INFO: Epoch 55/200
2018-11-05 13:12:41,452:INFO: - Train metrics: loss: 202.499 ; accuracy: -81292.547
2018-11-05 13:12:41,633:INFO: - Eval metrics: loss: 232.607 ; accuracy: -119176.445
2018-11-05 13:12:41,633:INFO: Epoch 56/200
2018-11-05 13:12:48,732:INFO: - Train metrics: loss: 199.527 ; accuracy: -81551.641
2018-11-05 13:12:48,942:INFO: - Eval metrics: loss: 231.063 ; accuracy: -118100.477
2018-11-05 13:12:48,942:INFO: Epoch 57/200
2018-11-05 13:12:56,017:INFO: - Train metrics: loss: 196.849 ; accuracy: -81584.336
2018-11-05 13:12:56,228:INFO: - Eval metrics: loss: 229.618 ; accuracy: -118096.492
2018-11-05 13:12:56,229:INFO: Epoch 58/200
2018-11-05 13:13:03,314:INFO: - Train metrics: loss: 194.360 ; accuracy: -82120.547
2018-11-05 13:13:03,509:INFO: - Eval metrics: loss: 227.952 ; accuracy: -117590.836
2018-11-05 13:13:03,510:INFO: Epoch 59/200
2018-11-05 13:13:10,586:INFO: - Train metrics: loss: 191.723 ; accuracy: -81472.367
2018-11-05 13:13:10,800:INFO: - Eval metrics: loss: 226.444 ; accuracy: -116979.203
2018-11-05 13:13:10,801:INFO: Epoch 60/200
2018-11-05 13:13:17,435:INFO: - Train metrics: loss: 189.436 ; accuracy: -81683.336
2018-11-05 13:13:17,711:INFO: - Eval metrics: loss: 225.122 ; accuracy: -118691.258
2018-11-05 13:13:17,712:INFO: Epoch 61/200
2018-11-05 13:13:24,918:INFO: - Train metrics: loss: 187.019 ; accuracy: -81405.391
2018-11-05 13:13:25,091:INFO: - Eval metrics: loss: 223.625 ; accuracy: -119726.531
2018-11-05 13:13:25,092:INFO: Epoch 62/200
2018-11-05 13:13:32,066:INFO: - Train metrics: loss: 184.527 ; accuracy: -81727.164
2018-11-05 13:13:32,257:INFO: - Eval metrics: loss: 222.025 ; accuracy: -119568.758
2018-11-05 13:13:32,258:INFO: Epoch 63/200
2018-11-05 13:13:39,399:INFO: - Train metrics: loss: 182.297 ; accuracy: -81468.805
2018-11-05 13:13:39,606:INFO: - Eval metrics: loss: 220.711 ; accuracy: -120057.219
2018-11-05 13:13:39,607:INFO: Epoch 64/200
2018-11-05 13:13:46,756:INFO: - Train metrics: loss: 180.253 ; accuracy: -81333.180
2018-11-05 13:13:46,951:INFO: - Eval metrics: loss: 219.681 ; accuracy: -118177.031
2018-11-05 13:13:46,953:INFO: Epoch 65/200
2018-11-05 13:13:53,985:INFO: - Train metrics: loss: 178.366 ; accuracy: -81659.914
2018-11-05 13:13:54,189:INFO: - Eval metrics: loss: 218.332 ; accuracy: -120667.820
2018-11-05 13:13:54,190:INFO: Epoch 66/200
2018-11-05 13:14:01,413:INFO: - Train metrics: loss: 176.491 ; accuracy: -81796.000
2018-11-05 13:14:01,601:INFO: - Eval metrics: loss: 217.227 ; accuracy: -118952.422
2018-11-05 13:14:01,603:INFO: Epoch 67/200
2018-11-05 13:14:08,777:INFO: - Train metrics: loss: 174.592 ; accuracy: -82216.820
2018-11-05 13:14:09,011:INFO: - Eval metrics: loss: 216.454 ; accuracy: -120972.219
2018-11-05 13:14:09,012:INFO: Epoch 68/200
2018-11-05 13:14:16,297:INFO: - Train metrics: loss: 172.684 ; accuracy: -82216.445
2018-11-05 13:14:16,492:INFO: - Eval metrics: loss: 215.045 ; accuracy: -121139.977
2018-11-05 13:14:16,493:INFO: Epoch 69/200
2018-11-05 13:14:23,761:INFO: - Train metrics: loss: 170.782 ; accuracy: -81903.180
2018-11-05 13:14:23,942:INFO: - Eval metrics: loss: 213.849 ; accuracy: -118977.586
2018-11-05 13:14:23,942:INFO: Epoch 70/200
2018-11-05 13:14:31,227:INFO: - Train metrics: loss: 168.967 ; accuracy: -81891.453
2018-11-05 13:14:31,421:INFO: - Eval metrics: loss: 213.142 ; accuracy: -119505.234
2018-11-05 13:14:31,422:INFO: Epoch 71/200
2018-11-05 13:14:38,610:INFO: - Train metrics: loss: 167.364 ; accuracy: -82508.016
2018-11-05 13:14:38,802:INFO: - Eval metrics: loss: 211.627 ; accuracy: -120375.867
2018-11-05 13:14:38,803:INFO: Epoch 72/200
2018-11-05 13:14:45,655:INFO: - Train metrics: loss: 165.705 ; accuracy: -81746.680
2018-11-05 13:14:45,861:INFO: - Eval metrics: loss: 210.769 ; accuracy: -119923.219
2018-11-05 13:14:45,862:INFO: Epoch 73/200
2018-11-05 13:14:52,868:INFO: - Train metrics: loss: 164.334 ; accuracy: -81818.750
2018-11-05 13:14:53,071:INFO: - Eval metrics: loss: 209.941 ; accuracy: -121305.914
2018-11-05 13:14:53,072:INFO: Epoch 74/200
2018-11-05 13:15:00,405:INFO: - Train metrics: loss: 162.710 ; accuracy: -81945.414
2018-11-05 13:15:00,604:INFO: - Eval metrics: loss: 209.083 ; accuracy: -120227.734
2018-11-05 13:15:00,605:INFO: Epoch 75/200
2018-11-05 13:15:07,887:INFO: - Train metrics: loss: 161.221 ; accuracy: -81145.992
2018-11-05 13:15:08,093:INFO: - Eval metrics: loss: 207.983 ; accuracy: -119637.281
2018-11-05 13:15:08,095:INFO: Epoch 76/200
2018-11-05 13:15:15,240:INFO: - Train metrics: loss: 159.843 ; accuracy: -81708.500
2018-11-05 13:15:15,466:INFO: - Eval metrics: loss: 207.097 ; accuracy: -118931.734
2018-11-05 13:15:15,467:INFO: Epoch 77/200
2018-11-05 13:15:22,523:INFO: - Train metrics: loss: 158.488 ; accuracy: -81658.320
2018-11-05 13:15:22,747:INFO: - Eval metrics: loss: 206.408 ; accuracy: -120539.180
2018-11-05 13:15:22,748:INFO: Epoch 78/200
2018-11-05 13:15:29,980:INFO: - Train metrics: loss: 157.277 ; accuracy: -81761.883
2018-11-05 13:15:30,185:INFO: - Eval metrics: loss: 205.587 ; accuracy: -121718.867
2018-11-05 13:15:30,185:INFO: Epoch 79/200
2018-11-05 13:15:37,188:INFO: - Train metrics: loss: 156.102 ; accuracy: -81302.492
2018-11-05 13:15:37,394:INFO: - Eval metrics: loss: 204.940 ; accuracy: -120259.211
2018-11-05 13:15:37,395:INFO: Epoch 80/200
2018-11-05 13:15:44,505:INFO: - Train metrics: loss: 154.722 ; accuracy: -80957.930
2018-11-05 13:15:44,736:INFO: - Eval metrics: loss: 203.887 ; accuracy: -119644.391
2018-11-05 13:15:44,737:INFO: Epoch 81/200
2018-11-05 13:15:51,756:INFO: - Train metrics: loss: 153.563 ; accuracy: -81486.109
2018-11-05 13:15:51,949:INFO: - Eval metrics: loss: 203.551 ; accuracy: -120149.133
2018-11-05 13:15:51,950:INFO: Epoch 82/200
2018-11-05 13:15:58,836:INFO: - Train metrics: loss: 152.501 ; accuracy: -81904.891
2018-11-05 13:15:59,042:INFO: - Eval metrics: loss: 202.538 ; accuracy: -120925.469
2018-11-05 13:15:59,043:INFO: Epoch 83/200
2018-11-05 13:16:06,432:INFO: - Train metrics: loss: 151.035 ; accuracy: -81376.664
2018-11-05 13:16:06,625:INFO: - Eval metrics: loss: 201.505 ; accuracy: -119479.953
2018-11-05 13:16:06,626:INFO: Epoch 84/200
2018-11-05 13:16:14,010:INFO: - Train metrics: loss: 149.942 ; accuracy: -80866.148
2018-11-05 13:16:14,199:INFO: - Eval metrics: loss: 200.942 ; accuracy: -118860.914
2018-11-05 13:16:14,200:INFO: Epoch 85/200
2018-11-05 13:16:21,401:INFO: - Train metrics: loss: 148.939 ; accuracy: -81382.734
2018-11-05 13:16:21,579:INFO: - Eval metrics: loss: 200.231 ; accuracy: -121417.070
2018-11-05 13:16:21,580:INFO: Epoch 86/200
2018-11-05 13:16:28,452:INFO: - Train metrics: loss: 147.672 ; accuracy: -80895.016
2018-11-05 13:16:28,655:INFO: - Eval metrics: loss: 199.215 ; accuracy: -119418.664
2018-11-05 13:16:28,655:INFO: Epoch 87/200
2018-11-05 13:16:35,901:INFO: - Train metrics: loss: 146.891 ; accuracy: -80910.203
2018-11-05 13:16:36,092:INFO: - Eval metrics: loss: 198.874 ; accuracy: -120037.289
2018-11-05 13:16:36,093:INFO: Epoch 88/200
2018-11-05 13:16:43,366:INFO: - Train metrics: loss: 145.641 ; accuracy: -81252.688
2018-11-05 13:16:43,554:INFO: - Eval metrics: loss: 197.855 ; accuracy: -120347.391
2018-11-05 13:16:43,555:INFO: Epoch 89/200
2018-11-05 13:16:50,463:INFO: - Train metrics: loss: 144.549 ; accuracy: -80823.219
2018-11-05 13:16:50,656:INFO: - Eval metrics: loss: 196.908 ; accuracy: -118845.375
2018-11-05 13:16:50,657:INFO: Epoch 90/200
2018-11-05 13:16:57,778:INFO: - Train metrics: loss: 143.938 ; accuracy: -80900.453
2018-11-05 13:16:58,035:INFO: - Eval metrics: loss: 196.548 ; accuracy: -119481.711
2018-11-05 13:16:58,036:INFO: Epoch 91/200
2018-11-05 13:17:05,124:INFO: - Train metrics: loss: 142.874 ; accuracy: -81283.133
2018-11-05 13:17:05,361:INFO: - Eval metrics: loss: 195.686 ; accuracy: -121327.492
2018-11-05 13:17:05,362:INFO: Epoch 92/200
2018-11-05 13:17:12,513:INFO: - Train metrics: loss: 142.090 ; accuracy: -81577.250
2018-11-05 13:17:12,712:INFO: - Eval metrics: loss: 195.035 ; accuracy: -121063.430
2018-11-05 13:17:12,712:INFO: Epoch 93/200
2018-11-05 13:17:19,859:INFO: - Train metrics: loss: 141.301 ; accuracy: -81485.148
2018-11-05 13:17:20,057:INFO: - Eval metrics: loss: 194.572 ; accuracy: -120570.266
2018-11-05 13:17:20,057:INFO: Epoch 94/200
2018-11-05 13:17:27,137:INFO: - Train metrics: loss: 140.274 ; accuracy: -81385.391
2018-11-05 13:17:27,337:INFO: - Eval metrics: loss: 193.585 ; accuracy: -121085.688
2018-11-05 13:17:27,338:INFO: Epoch 95/200
2018-11-05 13:17:34,360:INFO: - Train metrics: loss: 139.339 ; accuracy: -81702.758
2018-11-05 13:17:34,544:INFO: - Eval metrics: loss: 192.995 ; accuracy: -119278.375
2018-11-05 13:17:34,545:INFO: Epoch 96/200
2018-11-05 13:17:41,646:INFO: - Train metrics: loss: 138.471 ; accuracy: -81223.242
2018-11-05 13:17:41,879:INFO: - Eval metrics: loss: 192.401 ; accuracy: -118667.711
2018-11-05 13:17:41,880:INFO: Epoch 97/200
2018-11-05 13:17:48,925:INFO: - Train metrics: loss: 137.589 ; accuracy: -81381.164
2018-11-05 13:17:49,115:INFO: - Eval metrics: loss: 191.403 ; accuracy: -118298.266
2018-11-05 13:17:49,116:INFO: Epoch 98/200
2018-11-05 13:17:56,229:INFO: - Train metrics: loss: 136.749 ; accuracy: -80956.609
2018-11-05 13:17:56,430:INFO: - Eval metrics: loss: 191.109 ; accuracy: -119647.359
2018-11-05 13:17:56,431:INFO: Epoch 99/200
2018-11-05 13:18:03,726:INFO: - Train metrics: loss: 136.210 ; accuracy: -81126.961
2018-11-05 13:18:03,969:INFO: - Eval metrics: loss: 190.130 ; accuracy: -118119.078
2018-11-05 13:18:03,970:INFO: Epoch 100/200
2018-11-05 13:18:11,091:INFO: - Train metrics: loss: 135.376 ; accuracy: -81080.055
2018-11-05 13:18:11,258:INFO: - Eval metrics: loss: 189.779 ; accuracy: -118968.125
2018-11-05 13:18:11,259:INFO: Epoch 101/200
2018-11-05 13:18:18,177:INFO: - Train metrics: loss: 134.667 ; accuracy: -81271.656
2018-11-05 13:18:18,382:INFO: - Eval metrics: loss: 188.841 ; accuracy: -118225.547
2018-11-05 13:18:18,383:INFO: Epoch 102/200
2018-11-05 13:18:25,522:INFO: - Train metrics: loss: 133.720 ; accuracy: -81328.289
2018-11-05 13:18:25,750:INFO: - Eval metrics: loss: 188.294 ; accuracy: -120390.453
2018-11-05 13:18:25,751:INFO: Epoch 103/200
2018-11-05 13:18:32,896:INFO: - Train metrics: loss: 133.018 ; accuracy: -81566.469
2018-11-05 13:18:33,078:INFO: - Eval metrics: loss: 187.238 ; accuracy: -118960.602
2018-11-05 13:18:33,080:INFO: Epoch 104/200
2018-11-05 13:18:40,130:INFO: - Train metrics: loss: 132.286 ; accuracy: -81012.242
2018-11-05 13:18:40,321:INFO: - Eval metrics: loss: 186.583 ; accuracy: -119079.188
2018-11-05 13:18:40,322:INFO: Epoch 105/200
2018-11-05 13:18:47,503:INFO: - Train metrics: loss: 131.708 ; accuracy: -81306.695
2018-11-05 13:18:47,722:INFO: - Eval metrics: loss: 185.944 ; accuracy: -118467.258
2018-11-05 13:18:47,723:INFO: Epoch 106/200
2018-11-05 13:18:54,952:INFO: - Train metrics: loss: 131.075 ; accuracy: -81844.852
2018-11-05 13:18:55,162:INFO: - Eval metrics: loss: 185.422 ; accuracy: -119153.023
2018-11-05 13:18:55,163:INFO: Epoch 107/200
2018-11-05 13:19:02,145:INFO: - Train metrics: loss: 130.189 ; accuracy: -81073.148
2018-11-05 13:19:02,338:INFO: - Eval metrics: loss: 184.749 ; accuracy: -118766.602
2018-11-05 13:19:02,339:INFO: Epoch 108/200
2018-11-05 13:19:09,601:INFO: - Train metrics: loss: 129.973 ; accuracy: -81452.352
2018-11-05 13:19:09,797:INFO: - Eval metrics: loss: 184.356 ; accuracy: -119773.086
2018-11-05 13:19:09,799:INFO: Epoch 109/200
2018-11-05 13:19:17,150:INFO: - Train metrics: loss: 129.263 ; accuracy: -82058.555
2018-11-05 13:19:17,390:INFO: - Eval metrics: loss: 184.539 ; accuracy: -119856.492
2018-11-05 13:19:17,391:INFO: Epoch 110/200
2018-11-05 13:19:24,269:INFO: - Train metrics: loss: 128.695 ; accuracy: -81452.617
2018-11-05 13:19:24,464:INFO: - Eval metrics: loss: 182.917 ; accuracy: -118658.078
2018-11-05 13:19:24,465:INFO: Epoch 111/200
2018-11-05 13:19:31,531:INFO: - Train metrics: loss: 128.002 ; accuracy: -82878.938
2018-11-05 13:19:31,757:INFO: - Eval metrics: loss: 181.990 ; accuracy: -120022.766
2018-11-05 13:19:31,758:INFO: Epoch 112/200
2018-11-05 13:19:38,795:INFO: - Train metrics: loss: 127.415 ; accuracy: -81799.391
2018-11-05 13:19:38,998:INFO: - Eval metrics: loss: 181.333 ; accuracy: -118700.844
2018-11-05 13:19:38,999:INFO: Epoch 113/200
2018-11-05 13:19:46,341:INFO: - Train metrics: loss: 126.313 ; accuracy: -80929.461
2018-11-05 13:19:46,562:INFO: - Eval metrics: loss: 180.537 ; accuracy: -118403.133
2018-11-05 13:19:46,563:INFO: Epoch 114/200
2018-11-05 13:19:53,764:INFO: - Train metrics: loss: 125.942 ; accuracy: -80853.367
2018-11-05 13:19:53,935:INFO: - Eval metrics: loss: 179.663 ; accuracy: -117803.867
2018-11-05 13:19:53,936:INFO: Epoch 115/200
2018-11-05 13:19:59,974:INFO: - Train metrics: loss: 125.111 ; accuracy: -81107.250
2018-11-05 13:20:00,162:INFO: - Eval metrics: loss: 178.569 ; accuracy: -119225.398
2018-11-05 13:20:00,163:INFO: Epoch 116/200
2018-11-05 13:20:06,923:INFO: - Train metrics: loss: 124.315 ; accuracy: -81203.594
2018-11-05 13:20:07,153:INFO: - Eval metrics: loss: 177.883 ; accuracy: -118777.891
2018-11-05 13:20:07,154:INFO: Epoch 117/200
2018-11-05 13:20:14,160:INFO: - Train metrics: loss: 123.729 ; accuracy: -80916.031
2018-11-05 13:20:14,355:INFO: - Eval metrics: loss: 176.851 ; accuracy: -117262.922
2018-11-05 13:20:14,356:INFO: Epoch 118/200
2018-11-05 13:20:21,497:INFO: - Train metrics: loss: 123.276 ; accuracy: -81331.633
2018-11-05 13:20:21,667:INFO: - Eval metrics: loss: 175.545 ; accuracy: -119172.055
2018-11-05 13:20:21,668:INFO: Epoch 119/200
2018-11-05 13:20:28,975:INFO: - Train metrics: loss: 122.467 ; accuracy: -81243.859
2018-11-05 13:20:29,189:INFO: - Eval metrics: loss: 174.893 ; accuracy: -118017.469
2018-11-05 13:20:29,190:INFO: Epoch 120/200
2018-11-05 13:20:36,336:INFO: - Train metrics: loss: 122.132 ; accuracy: -81455.789
2018-11-05 13:20:36,540:INFO: - Eval metrics: loss: 174.430 ; accuracy: -117818.211
2018-11-05 13:20:36,541:INFO: Epoch 121/200
2018-11-05 13:20:43,538:INFO: - Train metrics: loss: 121.415 ; accuracy: -81097.930
2018-11-05 13:20:43,767:INFO: - Eval metrics: loss: 173.226 ; accuracy: -117450.000
2018-11-05 13:20:43,768:INFO: Epoch 122/200
2018-11-05 13:20:50,761:INFO: - Train metrics: loss: 120.579 ; accuracy: -81254.461
2018-11-05 13:20:50,957:INFO: - Eval metrics: loss: 172.155 ; accuracy: -115844.547
2018-11-05 13:20:50,958:INFO: Epoch 123/200
2018-11-05 13:20:57,909:INFO: - Train metrics: loss: 120.012 ; accuracy: -81091.414
2018-11-05 13:20:58,133:INFO: - Eval metrics: loss: 171.666 ; accuracy: -117876.820
2018-11-05 13:20:58,134:INFO: Epoch 124/200
2018-11-05 13:21:05,358:INFO: - Train metrics: loss: 119.245 ; accuracy: -80945.000
2018-11-05 13:21:05,575:INFO: - Eval metrics: loss: 170.660 ; accuracy: -117430.859
2018-11-05 13:21:05,577:INFO: Epoch 125/200
2018-11-05 13:21:12,904:INFO: - Train metrics: loss: 118.349 ; accuracy: -80985.148
2018-11-05 13:21:13,099:INFO: - Eval metrics: loss: 169.391 ; accuracy: -116171.367
2018-11-05 13:21:13,100:INFO: Epoch 126/200
2018-11-05 13:21:20,643:INFO: - Train metrics: loss: 117.740 ; accuracy: -80934.211
2018-11-05 13:21:20,829:INFO: - Eval metrics: loss: 168.839 ; accuracy: -116489.703
2018-11-05 13:21:20,830:INFO: Epoch 127/200
2018-11-05 13:21:27,912:INFO: - Train metrics: loss: 116.990 ; accuracy: -80533.047
2018-11-05 13:21:28,131:INFO: - Eval metrics: loss: 167.530 ; accuracy: -116280.289
2018-11-05 13:21:28,132:INFO: Epoch 128/200
2018-11-05 13:21:35,100:INFO: - Train metrics: loss: 116.379 ; accuracy: -81033.141
2018-11-05 13:21:35,283:INFO: - Eval metrics: loss: 166.721 ; accuracy: -115110.180
2018-11-05 13:21:35,284:INFO: Epoch 129/200
2018-11-05 13:21:41,789:INFO: - Train metrics: loss: 115.744 ; accuracy: -80741.492
2018-11-05 13:21:41,989:INFO: - Eval metrics: loss: 165.693 ; accuracy: -114520.570
2018-11-05 13:21:41,990:INFO: Epoch 130/200
2018-11-05 13:21:49,029:INFO: - Train metrics: loss: 115.035 ; accuracy: -80740.938
2018-11-05 13:21:49,197:INFO: - Eval metrics: loss: 164.954 ; accuracy: -115401.109
2018-11-05 13:21:49,198:INFO: Epoch 131/200
2018-11-05 13:21:56,305:INFO: - Train metrics: loss: 114.685 ; accuracy: -80814.359
2018-11-05 13:21:56,486:INFO: - Eval metrics: loss: 164.607 ; accuracy: -114546.445
2018-11-05 13:21:56,487:INFO: Epoch 132/200
2018-11-05 13:22:04,533:INFO: Creating the datasets...
2018-11-05 13:22:07,381:INFO: - done.
2018-11-05 13:22:07,381:INFO: Creating the model...
2018-11-05 13:22:08,017:INFO: - done.
2018-11-05 13:22:08,017:INFO: Starting training for 200 epoch(s)
2018-11-05 13:22:08,429:INFO: Epoch 1/200
2018-11-05 13:22:15,517:INFO: - Train metrics: loss: 1508.572 ; accuracy: -26.813
2018-11-05 13:22:15,786:INFO: - Eval metrics: loss: 1084.889 ; accuracy: -71.574
2018-11-05 13:22:15,793:INFO: Epoch 2/200
2018-11-05 13:22:22,704:INFO: - Train metrics: loss: 1401.689 ; accuracy: -38.732
2018-11-05 13:22:22,874:INFO: - Eval metrics: loss: 1015.909 ; accuracy: -72.495
2018-11-05 13:22:22,875:INFO: Epoch 3/200
2018-11-05 13:22:29,807:INFO: - Train metrics: loss: 1305.597 ; accuracy: -38.593
2018-11-05 13:22:30,008:INFO: - Eval metrics: loss: 953.886 ; accuracy: -72.038
2018-11-05 13:22:30,009:INFO: Epoch 4/200
2018-11-05 13:22:36,995:INFO: - Train metrics: loss: 1216.390 ; accuracy: -37.409
2018-11-05 13:22:37,186:INFO: - Eval metrics: loss: 897.352 ; accuracy: -71.138
2018-11-05 13:22:37,187:INFO: Epoch 5/200
2018-11-05 13:22:45,788:INFO: Creating the datasets...
2018-11-05 13:22:48,532:INFO: - done.
2018-11-05 13:22:48,532:INFO: Creating the model...
2018-11-05 13:22:49,118:INFO: - done.
2018-11-05 13:22:49,118:INFO: Starting training for 200 epoch(s)
2018-11-05 13:22:49,533:INFO: Epoch 1/200
2018-11-05 13:22:56,862:INFO: - Train metrics: accuracy: -3.675 ; loss: 1508.572
2018-11-05 13:22:57,161:INFO: - Eval metrics: accuracy: -7.579 ; loss: 1084.889
2018-11-05 13:22:57,170:INFO: Epoch 2/200
2018-11-05 13:23:08,453:INFO: Creating the datasets...
2018-11-05 13:23:11,187:INFO: - done.
2018-11-05 13:23:11,187:INFO: Creating the model...
2018-11-05 13:23:11,781:INFO: - done.
2018-11-05 13:23:11,781:INFO: Starting training for 200 epoch(s)
2018-11-05 13:23:12,206:INFO: Epoch 1/200
2018-11-05 13:23:19,044:INFO: - Train metrics: accuracy: -0.328 ; loss: 1508.572
2018-11-05 13:23:19,341:INFO: - Eval metrics: accuracy: -1.012 ; loss: 1084.889
2018-11-05 13:23:19,351:INFO: Epoch 2/200
2018-11-05 13:23:25,803:INFO: - Train metrics: accuracy: -0.522 ; loss: 1401.689
2018-11-05 13:23:25,989:INFO: - Eval metrics: accuracy: -1.501 ; loss: 1015.909
2018-11-05 13:23:25,991:INFO: Epoch 3/200
2018-11-05 13:23:32,743:INFO: - Train metrics: accuracy: -0.604 ; loss: 1305.597
2018-11-05 13:23:32,914:INFO: - Eval metrics: accuracy: -1.503 ; loss: 953.886
2018-11-05 13:23:32,915:INFO: Epoch 4/200
2018-11-05 13:23:42,224:INFO: Creating the datasets...
2018-11-05 13:23:44,947:INFO: - done.
2018-11-05 13:23:44,947:INFO: Creating the model...
2018-11-05 13:23:45,535:INFO: - done.
2018-11-05 13:23:45,535:INFO: Starting training for 200 epoch(s)
2018-11-05 13:23:45,963:INFO: Epoch 1/200
2018-11-05 13:23:53,452:INFO: - Train metrics: accuracy: 0.149 ; loss: 1508.572
2018-11-05 13:23:53,759:INFO: - Eval metrics: accuracy: 0.240 ; loss: 1084.889
2018-11-05 13:23:53,856:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 13:23:53,856:INFO: Epoch 2/200
2018-11-05 13:24:00,763:INFO: - Train metrics: accuracy: 0.270 ; loss: 1401.689
2018-11-05 13:24:00,942:INFO: - Eval metrics: accuracy: 0.254 ; loss: 1015.909
2018-11-05 13:24:01,038:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 13:24:01,038:INFO: Epoch 3/200
2018-11-05 13:24:07,996:INFO: - Train metrics: accuracy: 0.318 ; loss: 1305.597
2018-11-05 13:24:08,180:INFO: - Eval metrics: accuracy: 0.272 ; loss: 953.886
2018-11-05 13:24:08,267:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 13:24:08,267:INFO: Epoch 4/200
2018-11-05 13:24:15,430:INFO: - Train metrics: accuracy: 0.350 ; loss: 1216.390
2018-11-05 13:24:15,635:INFO: - Eval metrics: accuracy: 0.280 ; loss: 897.352
2018-11-05 13:24:15,723:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 13:24:15,724:INFO: Epoch 5/200
2018-11-05 13:24:22,949:INFO: - Train metrics: accuracy: 0.373 ; loss: 1137.521
2018-11-05 13:24:23,128:INFO: - Eval metrics: accuracy: 0.290 ; loss: 847.635
2018-11-05 13:24:23,214:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 13:24:23,214:INFO: Epoch 6/200
2018-11-05 13:24:30,180:INFO: - Train metrics: accuracy: 0.390 ; loss: 1066.151
2018-11-05 13:24:30,382:INFO: - Eval metrics: accuracy: 0.299 ; loss: 802.457
2018-11-05 13:24:30,467:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-05 13:24:30,467:INFO: Epoch 7/200
2018-11-05 13:24:37,460:INFO: - Train metrics: accuracy: 0.403 ; loss: 1002.791
2018-11-05 13:24:37,623:INFO: - Eval metrics: accuracy: 0.314 ; loss: 761.581
2018-11-05 13:24:37,709:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-05 13:24:37,710:INFO: Epoch 8/200
2018-11-05 13:24:44,584:INFO: - Train metrics: accuracy: 0.416 ; loss: 945.660
2018-11-05 13:24:44,773:INFO: - Eval metrics: accuracy: 0.335 ; loss: 723.970
2018-11-05 13:24:44,862:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-05 13:24:44,862:INFO: Epoch 9/200
2018-11-05 13:24:51,958:INFO: - Train metrics: accuracy: 0.429 ; loss: 892.987
2018-11-05 13:24:52,166:INFO: - Eval metrics: accuracy: 0.355 ; loss: 688.156
2018-11-05 13:24:52,252:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-05 13:24:52,252:INFO: Epoch 10/200
2018-11-05 13:24:59,286:INFO: - Train metrics: accuracy: 0.440 ; loss: 842.129
2018-11-05 13:24:59,463:INFO: - Eval metrics: accuracy: 0.372 ; loss: 654.599
2018-11-05 13:24:59,546:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-05 13:24:59,546:INFO: Epoch 11/200
2018-11-05 13:25:06,727:INFO: - Train metrics: accuracy: 0.451 ; loss: 796.023
2018-11-05 13:25:06,903:INFO: - Eval metrics: accuracy: 0.385 ; loss: 624.306
2018-11-05 13:25:06,990:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-05 13:25:06,991:INFO: Epoch 12/200
2018-11-05 13:25:14,079:INFO: - Train metrics: accuracy: 0.461 ; loss: 754.083
2018-11-05 13:25:14,261:INFO: - Eval metrics: accuracy: 0.396 ; loss: 596.434
2018-11-05 13:25:14,342:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-05 13:25:14,343:INFO: Epoch 13/200
2018-11-05 13:25:21,268:INFO: - Train metrics: accuracy: 0.470 ; loss: 715.573
2018-11-05 13:25:21,479:INFO: - Eval metrics: accuracy: 0.405 ; loss: 570.701
2018-11-05 13:25:21,559:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-05 13:25:21,559:INFO: Epoch 14/200
2018-11-05 13:25:28,697:INFO: - Train metrics: accuracy: 0.478 ; loss: 680.032
2018-11-05 13:25:28,906:INFO: - Eval metrics: accuracy: 0.413 ; loss: 546.813
2018-11-05 13:25:28,996:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-05 13:25:28,997:INFO: Epoch 15/200
2018-11-05 13:25:35,966:INFO: - Train metrics: accuracy: 0.485 ; loss: 647.113
2018-11-05 13:25:36,148:INFO: - Eval metrics: accuracy: 0.418 ; loss: 524.800
2018-11-05 13:25:36,236:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-05 13:25:36,237:INFO: Epoch 16/200
2018-11-05 13:25:43,185:INFO: - Train metrics: accuracy: 0.492 ; loss: 616.597
2018-11-05 13:25:43,392:INFO: - Eval metrics: accuracy: 0.423 ; loss: 504.340
2018-11-05 13:25:43,479:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-05 13:25:43,479:INFO: Epoch 17/200
2018-11-05 13:25:50,400:INFO: - Train metrics: accuracy: 0.498 ; loss: 588.191
2018-11-05 13:25:50,621:INFO: - Eval metrics: accuracy: 0.429 ; loss: 485.162
2018-11-05 13:25:50,706:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-05 13:25:50,707:INFO: Epoch 18/200
2018-11-05 13:25:57,645:INFO: - Train metrics: accuracy: 0.504 ; loss: 561.787
2018-11-05 13:25:57,858:INFO: - Eval metrics: accuracy: 0.432 ; loss: 467.384
2018-11-05 13:25:57,946:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-05 13:25:57,946:INFO: Epoch 19/200
2018-11-05 13:26:04,883:INFO: - Train metrics: accuracy: 0.510 ; loss: 537.186
2018-11-05 13:26:05,101:INFO: - Eval metrics: accuracy: 0.431 ; loss: 450.691
2018-11-05 13:26:05,102:INFO: Epoch 20/200
2018-11-05 13:26:12,108:INFO: - Train metrics: accuracy: 0.515 ; loss: 514.212
2018-11-05 13:26:12,320:INFO: - Eval metrics: accuracy: 0.435 ; loss: 435.131
2018-11-05 13:26:12,406:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-20
2018-11-05 13:26:12,406:INFO: Epoch 21/200
2018-11-05 13:26:19,627:INFO: - Train metrics: accuracy: 0.520 ; loss: 492.781
2018-11-05 13:26:19,832:INFO: - Eval metrics: accuracy: 0.436 ; loss: 420.665
2018-11-05 13:26:19,918:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-05 13:26:19,918:INFO: Epoch 22/200
2018-11-05 13:26:27,042:INFO: - Train metrics: accuracy: 0.525 ; loss: 472.718
2018-11-05 13:26:27,237:INFO: - Eval metrics: accuracy: 0.438 ; loss: 407.156
2018-11-05 13:26:27,322:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-05 13:26:27,322:INFO: Epoch 23/200
2018-11-05 13:26:34,142:INFO: - Train metrics: accuracy: 0.529 ; loss: 454.054
2018-11-05 13:26:34,336:INFO: - Eval metrics: accuracy: 0.441 ; loss: 394.320
2018-11-05 13:26:34,424:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-05 13:26:34,424:INFO: Epoch 24/200
2018-11-05 13:26:41,472:INFO: - Train metrics: accuracy: 0.533 ; loss: 436.607
2018-11-05 13:26:41,693:INFO: - Eval metrics: accuracy: 0.443 ; loss: 382.747
2018-11-05 13:26:41,777:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-05 13:26:41,778:INFO: Epoch 25/200
2018-11-05 13:26:48,790:INFO: - Train metrics: accuracy: 0.538 ; loss: 420.267
2018-11-05 13:26:48,980:INFO: - Eval metrics: accuracy: 0.445 ; loss: 371.667
2018-11-05 13:26:49,064:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-05 13:26:49,064:INFO: Epoch 26/200
2018-11-05 13:26:56,126:INFO: - Train metrics: accuracy: 0.542 ; loss: 404.945
2018-11-05 13:26:56,328:INFO: - Eval metrics: accuracy: 0.449 ; loss: 361.189
2018-11-05 13:26:56,413:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-05 13:26:56,413:INFO: Epoch 27/200
2018-11-05 13:27:03,531:INFO: - Train metrics: accuracy: 0.544 ; loss: 390.664
2018-11-05 13:27:03,710:INFO: - Eval metrics: accuracy: 0.451 ; loss: 351.604
2018-11-05 13:27:03,794:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-05 13:27:03,794:INFO: Epoch 28/200
2018-11-05 13:27:10,822:INFO: - Train metrics: accuracy: 0.547 ; loss: 377.268
2018-11-05 13:27:11,016:INFO: - Eval metrics: accuracy: 0.451 ; loss: 342.711
2018-11-05 13:27:11,017:INFO: Epoch 29/200
2018-11-05 13:27:18,182:INFO: - Train metrics: accuracy: 0.550 ; loss: 364.662
2018-11-05 13:27:18,357:INFO: - Eval metrics: accuracy: 0.452 ; loss: 334.469
2018-11-05 13:27:18,451:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-05 13:27:18,451:INFO: Epoch 30/200
2018-11-05 13:27:25,326:INFO: - Train metrics: accuracy: 0.552 ; loss: 352.921
2018-11-05 13:27:25,504:INFO: - Eval metrics: accuracy: 0.454 ; loss: 326.447
2018-11-05 13:27:25,594:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-30
2018-11-05 13:27:25,595:INFO: Epoch 31/200
2018-11-05 13:27:32,534:INFO: - Train metrics: accuracy: 0.555 ; loss: 341.799
2018-11-05 13:27:32,729:INFO: - Eval metrics: accuracy: 0.456 ; loss: 319.105
2018-11-05 13:27:32,813:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-31
2018-11-05 13:27:32,814:INFO: Epoch 32/200
2018-11-05 13:27:39,975:INFO: - Train metrics: accuracy: 0.556 ; loss: 331.495
2018-11-05 13:27:40,234:INFO: - Eval metrics: accuracy: 0.452 ; loss: 312.395
2018-11-05 13:27:40,235:INFO: Epoch 33/200
2018-11-05 13:27:47,099:INFO: - Train metrics: accuracy: 0.560 ; loss: 321.607
2018-11-05 13:27:47,292:INFO: - Eval metrics: accuracy: 0.455 ; loss: 305.960
2018-11-05 13:27:47,293:INFO: Epoch 34/200
2018-11-05 13:27:54,210:INFO: - Train metrics: accuracy: 0.561 ; loss: 312.441
2018-11-05 13:27:54,382:INFO: - Eval metrics: accuracy: 0.456 ; loss: 300.141
2018-11-05 13:27:54,383:INFO: Epoch 35/200
2018-11-05 13:28:01,472:INFO: - Train metrics: accuracy: 0.564 ; loss: 303.736
2018-11-05 13:28:01,646:INFO: - Eval metrics: accuracy: 0.459 ; loss: 294.326
2018-11-05 13:28:01,733:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-35
2018-11-05 13:28:01,733:INFO: Epoch 36/200
2018-11-05 13:28:08,782:INFO: - Train metrics: accuracy: 0.566 ; loss: 295.524
2018-11-05 13:28:08,962:INFO: - Eval metrics: accuracy: 0.460 ; loss: 289.174
2018-11-05 13:28:09,049:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-36
2018-11-05 13:28:09,050:INFO: Epoch 37/200
2018-11-05 13:28:16,031:INFO: - Train metrics: accuracy: 0.569 ; loss: 287.846
2018-11-05 13:28:16,249:INFO: - Eval metrics: accuracy: 0.461 ; loss: 284.184
2018-11-05 13:28:16,335:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-37
2018-11-05 13:28:16,336:INFO: Epoch 38/200
2018-11-05 13:28:23,358:INFO: - Train metrics: accuracy: 0.572 ; loss: 280.524
2018-11-05 13:28:23,561:INFO: - Eval metrics: accuracy: 0.466 ; loss: 279.473
2018-11-05 13:28:23,642:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-38
2018-11-05 13:28:23,643:INFO: Epoch 39/200
2018-11-05 13:28:30,438:INFO: - Train metrics: accuracy: 0.571 ; loss: 273.787
2018-11-05 13:28:30,655:INFO: - Eval metrics: accuracy: 0.463 ; loss: 275.478
2018-11-05 13:28:30,656:INFO: Epoch 40/200
2018-11-05 13:28:37,827:INFO: - Train metrics: accuracy: 0.573 ; loss: 267.328
2018-11-05 13:28:38,033:INFO: - Eval metrics: accuracy: 0.463 ; loss: 271.495
2018-11-05 13:28:38,034:INFO: Epoch 41/200
2018-11-05 13:28:45,127:INFO: - Train metrics: accuracy: 0.574 ; loss: 261.189
2018-11-05 13:28:45,318:INFO: - Eval metrics: accuracy: 0.464 ; loss: 267.359
2018-11-05 13:28:45,320:INFO: Epoch 42/200
2018-11-05 13:28:52,205:INFO: - Train metrics: accuracy: 0.576 ; loss: 255.474
2018-11-05 13:28:52,382:INFO: - Eval metrics: accuracy: 0.467 ; loss: 263.934
2018-11-05 13:28:52,467:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-42
2018-11-05 13:28:52,467:INFO: Epoch 43/200
2018-11-05 13:28:59,344:INFO: - Train metrics: accuracy: 0.578 ; loss: 250.121
2018-11-05 13:28:59,540:INFO: - Eval metrics: accuracy: 0.471 ; loss: 261.136
2018-11-05 13:28:59,624:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-43
2018-11-05 13:28:59,625:INFO: Epoch 44/200
2018-11-05 13:29:05,787:INFO: - Train metrics: accuracy: 0.580 ; loss: 244.939
2018-11-05 13:29:05,980:INFO: - Eval metrics: accuracy: 0.468 ; loss: 257.669
2018-11-05 13:29:05,981:INFO: Epoch 45/200
2018-11-05 13:29:12,682:INFO: - Train metrics: accuracy: 0.581 ; loss: 240.002
2018-11-05 13:29:12,888:INFO: - Eval metrics: accuracy: 0.472 ; loss: 254.709
2018-11-05 13:29:12,975:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-45
2018-11-05 13:29:12,975:INFO: Epoch 46/200
2018-11-05 13:29:19,727:INFO: - Train metrics: accuracy: 0.582 ; loss: 235.465
2018-11-05 13:29:19,903:INFO: - Eval metrics: accuracy: 0.474 ; loss: 251.935
2018-11-05 13:29:19,994:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-46
2018-11-05 13:29:19,995:INFO: Epoch 47/200
2018-11-05 13:29:27,206:INFO: - Train metrics: accuracy: 0.585 ; loss: 230.859
2018-11-05 13:29:27,427:INFO: - Eval metrics: accuracy: 0.474 ; loss: 249.374
2018-11-05 13:29:27,518:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-47
2018-11-05 13:29:27,519:INFO: Epoch 48/200
2018-11-05 13:29:34,693:INFO: - Train metrics: accuracy: 0.586 ; loss: 226.648
2018-11-05 13:29:34,873:INFO: - Eval metrics: accuracy: 0.472 ; loss: 246.724
2018-11-05 13:29:34,874:INFO: Epoch 49/200
2018-11-05 13:29:41,936:INFO: - Train metrics: accuracy: 0.588 ; loss: 222.628
2018-11-05 13:29:42,171:INFO: - Eval metrics: accuracy: 0.474 ; loss: 244.335
2018-11-05 13:29:42,265:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-49
2018-11-05 13:29:42,265:INFO: Epoch 50/200
2018-11-05 13:29:49,442:INFO: - Train metrics: accuracy: 0.589 ; loss: 218.861
2018-11-05 13:29:49,684:INFO: - Eval metrics: accuracy: 0.477 ; loss: 242.126
2018-11-05 13:29:49,765:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-50
2018-11-05 13:29:49,766:INFO: Epoch 51/200
2018-11-05 13:29:56,985:INFO: - Train metrics: accuracy: 0.589 ; loss: 215.297
2018-11-05 13:29:57,215:INFO: - Eval metrics: accuracy: 0.474 ; loss: 240.169
2018-11-05 13:29:57,216:INFO: Epoch 52/200
2018-11-05 13:30:04,419:INFO: - Train metrics: accuracy: 0.590 ; loss: 211.864
2018-11-05 13:30:04,662:INFO: - Eval metrics: accuracy: 0.479 ; loss: 238.206
2018-11-05 13:30:04,759:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-52
2018-11-05 13:30:04,760:INFO: Epoch 53/200
2018-11-05 13:30:11,705:INFO: - Train metrics: accuracy: 0.592 ; loss: 208.519
2018-11-05 13:30:11,889:INFO: - Eval metrics: accuracy: 0.480 ; loss: 236.064
2018-11-05 13:30:11,986:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-53
2018-11-05 13:30:11,987:INFO: Epoch 54/200
2018-11-05 13:30:18,645:INFO: - Train metrics: accuracy: 0.593 ; loss: 205.394
2018-11-05 13:30:18,871:INFO: - Eval metrics: accuracy: 0.480 ; loss: 234.391
2018-11-05 13:30:18,965:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-54
2018-11-05 13:30:18,965:INFO: Epoch 55/200
2018-11-05 13:30:26,182:INFO: - Train metrics: accuracy: 0.593 ; loss: 202.499
2018-11-05 13:30:26,400:INFO: - Eval metrics: accuracy: 0.480 ; loss: 232.607
2018-11-05 13:30:26,401:INFO: Epoch 56/200
2018-11-05 13:30:33,554:INFO: - Train metrics: accuracy: 0.595 ; loss: 199.527
2018-11-05 13:30:33,754:INFO: - Eval metrics: accuracy: 0.480 ; loss: 231.063
2018-11-05 13:30:33,755:INFO: Epoch 57/200
2018-11-05 13:30:41,077:INFO: - Train metrics: accuracy: 0.594 ; loss: 196.849
2018-11-05 13:30:41,307:INFO: - Eval metrics: accuracy: 0.483 ; loss: 229.618
2018-11-05 13:30:41,398:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-57
2018-11-05 13:30:41,398:INFO: Epoch 58/200
2018-11-05 13:30:48,376:INFO: - Train metrics: accuracy: 0.594 ; loss: 194.360
2018-11-05 13:30:48,588:INFO: - Eval metrics: accuracy: 0.483 ; loss: 227.952
2018-11-05 13:30:48,589:INFO: Epoch 59/200
2018-11-05 13:30:55,522:INFO: - Train metrics: accuracy: 0.595 ; loss: 191.723
2018-11-05 13:30:55,715:INFO: - Eval metrics: accuracy: 0.485 ; loss: 226.444
2018-11-05 13:30:55,807:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-59
2018-11-05 13:30:55,807:INFO: Epoch 60/200
2018-11-05 13:31:02,636:INFO: - Train metrics: accuracy: 0.596 ; loss: 189.436
2018-11-05 13:31:02,817:INFO: - Eval metrics: accuracy: 0.481 ; loss: 225.122
2018-11-05 13:31:02,818:INFO: Epoch 61/200
2018-11-05 13:31:09,112:INFO: - Train metrics: accuracy: 0.596 ; loss: 187.019
2018-11-05 13:31:09,339:INFO: - Eval metrics: accuracy: 0.481 ; loss: 223.625
2018-11-05 13:31:09,340:INFO: Epoch 62/200
2018-11-05 13:31:16,301:INFO: - Train metrics: accuracy: 0.598 ; loss: 184.527
2018-11-05 13:31:16,488:INFO: - Eval metrics: accuracy: 0.488 ; loss: 222.025
2018-11-05 13:31:16,586:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-62
2018-11-05 13:31:16,586:INFO: Epoch 63/200
2018-11-05 13:31:22,786:INFO: - Train metrics: accuracy: 0.600 ; loss: 182.297
2018-11-05 13:31:23,001:INFO: - Eval metrics: accuracy: 0.487 ; loss: 220.711
2018-11-05 13:31:23,002:INFO: Epoch 64/200
2018-11-05 13:31:29,913:INFO: - Train metrics: accuracy: 0.600 ; loss: 180.253
2018-11-05 13:31:30,121:INFO: - Eval metrics: accuracy: 0.488 ; loss: 219.681
2018-11-05 13:31:30,213:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-64
2018-11-05 13:31:30,214:INFO: Epoch 65/200
2018-11-05 13:31:37,004:INFO: - Train metrics: accuracy: 0.600 ; loss: 178.366
2018-11-05 13:31:37,212:INFO: - Eval metrics: accuracy: 0.488 ; loss: 218.332
2018-11-05 13:31:37,307:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-65
2018-11-05 13:31:37,308:INFO: Epoch 66/200
2018-11-05 13:31:44,309:INFO: - Train metrics: accuracy: 0.599 ; loss: 176.491
2018-11-05 13:31:44,479:INFO: - Eval metrics: accuracy: 0.486 ; loss: 217.227
2018-11-05 13:31:44,480:INFO: Epoch 67/200
2018-11-05 13:31:51,578:INFO: - Train metrics: accuracy: 0.600 ; loss: 174.592
2018-11-05 13:31:51,792:INFO: - Eval metrics: accuracy: 0.486 ; loss: 216.454
2018-11-05 13:31:51,792:INFO: Epoch 68/200
2018-11-05 13:31:59,313:INFO: - Train metrics: accuracy: 0.601 ; loss: 172.684
2018-11-05 13:31:59,502:INFO: - Eval metrics: accuracy: 0.487 ; loss: 215.045
2018-11-05 13:31:59,503:INFO: Epoch 69/200
2018-11-05 13:32:06,638:INFO: - Train metrics: accuracy: 0.602 ; loss: 170.782
2018-11-05 13:32:06,833:INFO: - Eval metrics: accuracy: 0.492 ; loss: 213.849
2018-11-05 13:32:06,924:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-69
2018-11-05 13:32:06,924:INFO: Epoch 70/200
2018-11-05 13:32:13,799:INFO: - Train metrics: accuracy: 0.604 ; loss: 168.967
2018-11-05 13:32:13,976:INFO: - Eval metrics: accuracy: 0.492 ; loss: 213.142
2018-11-05 13:32:13,977:INFO: Epoch 71/200
2018-11-05 13:32:21,130:INFO: - Train metrics: accuracy: 0.604 ; loss: 167.364
2018-11-05 13:32:21,315:INFO: - Eval metrics: accuracy: 0.491 ; loss: 211.627
2018-11-05 13:32:21,316:INFO: Epoch 72/200
2018-11-05 13:32:28,016:INFO: - Train metrics: accuracy: 0.606 ; loss: 165.705
2018-11-05 13:32:28,218:INFO: - Eval metrics: accuracy: 0.494 ; loss: 210.769
2018-11-05 13:32:28,300:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-72
2018-11-05 13:32:28,300:INFO: Epoch 73/200
2018-11-05 13:32:35,081:INFO: - Train metrics: accuracy: 0.603 ; loss: 164.334
2018-11-05 13:32:35,300:INFO: - Eval metrics: accuracy: 0.491 ; loss: 209.941
2018-11-05 13:32:35,301:INFO: Epoch 74/200
2018-11-05 13:32:42,674:INFO: - Train metrics: accuracy: 0.605 ; loss: 162.710
2018-11-05 13:32:42,928:INFO: - Eval metrics: accuracy: 0.493 ; loss: 209.083
2018-11-05 13:32:42,929:INFO: Epoch 75/200
2018-11-05 13:32:48,654:INFO: - Train metrics: accuracy: 0.606 ; loss: 161.221
2018-11-05 13:32:48,835:INFO: - Eval metrics: accuracy: 0.494 ; loss: 207.983
2018-11-05 13:32:48,835:INFO: Epoch 76/200
2018-11-05 13:32:55,470:INFO: - Train metrics: accuracy: 0.607 ; loss: 159.843
2018-11-05 13:32:55,657:INFO: - Eval metrics: accuracy: 0.496 ; loss: 207.097
2018-11-05 13:32:55,748:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-76
2018-11-05 13:32:55,749:INFO: Epoch 77/200
2018-11-05 13:33:03,073:INFO: - Train metrics: accuracy: 0.607 ; loss: 158.488
2018-11-05 13:33:03,309:INFO: - Eval metrics: accuracy: 0.494 ; loss: 206.408
2018-11-05 13:33:03,310:INFO: Epoch 78/200
2018-11-05 13:33:10,467:INFO: - Train metrics: accuracy: 0.607 ; loss: 157.277
2018-11-05 13:33:10,678:INFO: - Eval metrics: accuracy: 0.493 ; loss: 205.587
2018-11-05 13:33:10,678:INFO: Epoch 79/200
2018-11-05 13:33:18,065:INFO: - Train metrics: accuracy: 0.607 ; loss: 156.102
2018-11-05 13:33:18,264:INFO: - Eval metrics: accuracy: 0.494 ; loss: 204.940
2018-11-05 13:33:18,265:INFO: Epoch 80/200
2018-11-05 13:33:25,485:INFO: - Train metrics: accuracy: 0.608 ; loss: 154.722
2018-11-05 13:33:25,704:INFO: - Eval metrics: accuracy: 0.498 ; loss: 203.887
2018-11-05 13:33:25,795:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-80
2018-11-05 13:33:25,795:INFO: Epoch 81/200
2018-11-05 13:33:32,804:INFO: - Train metrics: accuracy: 0.609 ; loss: 153.563
2018-11-05 13:33:32,994:INFO: - Eval metrics: accuracy: 0.495 ; loss: 203.551
2018-11-05 13:33:32,995:INFO: Epoch 82/200
2018-11-05 13:33:39,995:INFO: - Train metrics: accuracy: 0.606 ; loss: 152.501
2018-11-05 13:33:40,269:INFO: - Eval metrics: accuracy: 0.495 ; loss: 202.538
2018-11-05 13:33:40,270:INFO: Epoch 83/200
2018-11-05 13:33:47,366:INFO: - Train metrics: accuracy: 0.611 ; loss: 151.035
2018-11-05 13:33:47,582:INFO: - Eval metrics: accuracy: 0.497 ; loss: 201.505
2018-11-05 13:33:47,583:INFO: Epoch 84/200
2018-11-05 13:33:56,347:INFO: - Train metrics: accuracy: 0.611 ; loss: 149.942
2018-11-05 13:34:00,987:INFO: - Eval metrics: accuracy: 0.501 ; loss: 200.942
2018-11-05 13:34:02,149:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-84
2018-11-05 13:34:02,192:INFO: Epoch 85/200
2018-11-05 13:34:12,098:INFO: - Train metrics: accuracy: 0.610 ; loss: 148.939
2018-11-05 13:34:25,908:INFO: - Eval metrics: accuracy: 0.496 ; loss: 200.231
2018-11-05 13:34:26,208:INFO: Epoch 86/200
2018-11-05 13:34:33,513:INFO: - Train metrics: accuracy: 0.612 ; loss: 147.672
2018-11-05 13:34:33,734:INFO: - Eval metrics: accuracy: 0.499 ; loss: 199.215
2018-11-05 13:34:33,746:INFO: Epoch 87/200
2018-11-05 13:34:40,879:INFO: - Train metrics: accuracy: 0.613 ; loss: 146.891
2018-11-05 13:34:41,087:INFO: - Eval metrics: accuracy: 0.500 ; loss: 198.874
2018-11-05 13:34:41,088:INFO: Epoch 88/200
2018-11-05 13:34:48,341:INFO: - Train metrics: accuracy: 0.613 ; loss: 145.641
2018-11-05 13:34:48,567:INFO: - Eval metrics: accuracy: 0.500 ; loss: 197.855
2018-11-05 13:34:48,588:INFO: Epoch 89/200
2018-11-05 13:34:55,931:INFO: - Train metrics: accuracy: 0.615 ; loss: 144.549
2018-11-05 13:34:56,149:INFO: - Eval metrics: accuracy: 0.502 ; loss: 196.908
2018-11-05 13:34:56,238:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-89
2018-11-05 13:34:56,238:INFO: Epoch 90/200
2018-11-05 13:35:03,344:INFO: - Train metrics: accuracy: 0.614 ; loss: 143.938
2018-11-05 13:35:03,550:INFO: - Eval metrics: accuracy: 0.501 ; loss: 196.548
2018-11-05 13:35:03,551:INFO: Epoch 91/200
2018-11-05 13:35:10,796:INFO: - Train metrics: accuracy: 0.614 ; loss: 142.874
2018-11-05 13:35:11,031:INFO: - Eval metrics: accuracy: 0.501 ; loss: 195.686
2018-11-05 13:35:11,032:INFO: Epoch 92/200
2018-11-05 13:35:18,298:INFO: - Train metrics: accuracy: 0.613 ; loss: 142.090
2018-11-05 13:35:18,516:INFO: - Eval metrics: accuracy: 0.499 ; loss: 195.035
2018-11-05 13:35:18,517:INFO: Epoch 93/200
2018-11-05 13:35:25,951:INFO: - Train metrics: accuracy: 0.613 ; loss: 141.301
2018-11-05 13:35:26,149:INFO: - Eval metrics: accuracy: 0.500 ; loss: 194.572
2018-11-05 13:35:26,149:INFO: Epoch 94/200
2018-11-05 13:35:33,566:INFO: - Train metrics: accuracy: 0.614 ; loss: 140.274
2018-11-05 13:35:33,805:INFO: - Eval metrics: accuracy: 0.499 ; loss: 193.585
2018-11-05 13:35:33,806:INFO: Epoch 95/200
2018-11-05 13:35:41,141:INFO: - Train metrics: accuracy: 0.615 ; loss: 139.339
2018-11-05 13:35:41,329:INFO: - Eval metrics: accuracy: 0.501 ; loss: 192.995
2018-11-05 13:35:41,342:INFO: Epoch 96/200
2018-11-05 13:35:48,231:INFO: - Train metrics: accuracy: 0.616 ; loss: 138.471
2018-11-05 13:35:48,410:INFO: - Eval metrics: accuracy: 0.502 ; loss: 192.401
2018-11-05 13:35:48,505:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-96
2018-11-05 13:35:48,535:INFO: Epoch 97/200
2018-11-05 13:35:54,387:INFO: - Train metrics: accuracy: 0.617 ; loss: 137.589
2018-11-05 13:35:54,605:INFO: - Eval metrics: accuracy: 0.503 ; loss: 191.403
2018-11-05 13:35:54,708:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-97
2018-11-05 13:35:54,709:INFO: Epoch 98/200
2018-11-05 13:36:01,141:INFO: - Train metrics: accuracy: 0.618 ; loss: 136.749
2018-11-05 13:36:01,364:INFO: - Eval metrics: accuracy: 0.501 ; loss: 191.109
2018-11-05 13:36:01,379:INFO: Epoch 99/200
2018-11-05 13:36:08,697:INFO: - Train metrics: accuracy: 0.617 ; loss: 136.210
2018-11-05 13:36:08,890:INFO: - Eval metrics: accuracy: 0.504 ; loss: 190.130
2018-11-05 13:36:08,984:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-99
2018-11-05 13:36:08,985:INFO: Epoch 100/200
2018-11-05 13:36:16,007:INFO: - Train metrics: accuracy: 0.618 ; loss: 135.376
2018-11-05 13:36:16,192:INFO: - Eval metrics: accuracy: 0.503 ; loss: 189.779
2018-11-05 13:36:16,193:INFO: Epoch 101/200
2018-11-05 13:36:22,912:INFO: - Train metrics: accuracy: 0.618 ; loss: 134.667
2018-11-05 13:36:23,149:INFO: - Eval metrics: accuracy: 0.505 ; loss: 188.841
2018-11-05 13:36:23,252:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-101
2018-11-05 13:36:23,252:INFO: Epoch 102/200
2018-11-05 13:36:30,300:INFO: - Train metrics: accuracy: 0.619 ; loss: 133.720
2018-11-05 13:36:30,510:INFO: - Eval metrics: accuracy: 0.501 ; loss: 188.294
2018-11-05 13:36:30,511:INFO: Epoch 103/200
2018-11-05 13:36:37,898:INFO: - Train metrics: accuracy: 0.619 ; loss: 133.018
2018-11-05 13:36:38,110:INFO: - Eval metrics: accuracy: 0.504 ; loss: 187.238
2018-11-05 13:36:38,111:INFO: Epoch 104/200
2018-11-05 13:36:45,455:INFO: - Train metrics: accuracy: 0.620 ; loss: 132.286
2018-11-05 13:36:45,680:INFO: - Eval metrics: accuracy: 0.504 ; loss: 186.583
2018-11-05 13:36:45,681:INFO: Epoch 105/200
2018-11-05 13:36:52,411:INFO: - Train metrics: accuracy: 0.620 ; loss: 131.708
2018-11-05 13:36:52,632:INFO: - Eval metrics: accuracy: 0.502 ; loss: 185.944
2018-11-05 13:36:52,633:INFO: Epoch 106/200
2018-11-05 13:36:59,485:INFO: - Train metrics: accuracy: 0.619 ; loss: 131.075
2018-11-05 13:36:59,666:INFO: - Eval metrics: accuracy: 0.502 ; loss: 185.422
2018-11-05 13:36:59,667:INFO: Epoch 107/200
2018-11-05 13:37:06,542:INFO: - Train metrics: accuracy: 0.621 ; loss: 130.189
2018-11-05 13:37:06,753:INFO: - Eval metrics: accuracy: 0.504 ; loss: 184.749
2018-11-05 13:37:06,754:INFO: Epoch 108/200
2018-11-05 13:37:13,502:INFO: - Train metrics: accuracy: 0.620 ; loss: 129.973
2018-11-05 13:37:13,686:INFO: - Eval metrics: accuracy: 0.502 ; loss: 184.356
2018-11-05 13:37:13,687:INFO: Epoch 109/200
2018-11-05 13:37:20,590:INFO: - Train metrics: accuracy: 0.619 ; loss: 129.263
2018-11-05 13:37:20,798:INFO: - Eval metrics: accuracy: 0.499 ; loss: 184.539
2018-11-05 13:37:20,799:INFO: Epoch 110/200
2018-11-05 13:37:27,988:INFO: - Train metrics: accuracy: 0.621 ; loss: 128.695
2018-11-05 13:37:28,173:INFO: - Eval metrics: accuracy: 0.503 ; loss: 182.917
2018-11-05 13:37:28,174:INFO: Epoch 111/200
2018-11-05 13:37:35,157:INFO: - Train metrics: accuracy: 0.619 ; loss: 128.002
2018-11-05 13:37:35,354:INFO: - Eval metrics: accuracy: 0.499 ; loss: 181.990
2018-11-05 13:37:35,354:INFO: Epoch 112/200
2018-11-05 13:37:41,979:INFO: - Train metrics: accuracy: 0.621 ; loss: 127.415
2018-11-05 13:37:42,190:INFO: - Eval metrics: accuracy: 0.500 ; loss: 181.333
2018-11-05 13:37:42,191:INFO: Epoch 113/200
2018-11-05 13:37:49,164:INFO: - Train metrics: accuracy: 0.624 ; loss: 126.313
2018-11-05 13:37:49,362:INFO: - Eval metrics: accuracy: 0.501 ; loss: 180.537
2018-11-05 13:37:49,363:INFO: Epoch 114/200
2018-11-05 13:37:56,229:INFO: - Train metrics: accuracy: 0.622 ; loss: 125.942
2018-11-05 13:37:56,457:INFO: - Eval metrics: accuracy: 0.504 ; loss: 179.663
2018-11-05 13:37:56,458:INFO: Epoch 115/200
2018-11-05 13:38:03,610:INFO: - Train metrics: accuracy: 0.623 ; loss: 125.111
2018-11-05 13:38:03,833:INFO: - Eval metrics: accuracy: 0.500 ; loss: 178.569
2018-11-05 13:38:03,834:INFO: Epoch 116/200
2018-11-05 13:38:11,311:INFO: - Train metrics: accuracy: 0.624 ; loss: 124.315
2018-11-05 13:38:11,504:INFO: - Eval metrics: accuracy: 0.501 ; loss: 177.883
2018-11-05 13:38:11,505:INFO: Epoch 117/200
2018-11-05 13:38:18,902:INFO: - Train metrics: accuracy: 0.625 ; loss: 123.729
2018-11-05 13:38:19,091:INFO: - Eval metrics: accuracy: 0.503 ; loss: 176.851
2018-11-05 13:38:19,091:INFO: Epoch 118/200
2018-11-05 13:38:26,359:INFO: - Train metrics: accuracy: 0.624 ; loss: 123.276
2018-11-05 13:38:26,594:INFO: - Eval metrics: accuracy: 0.503 ; loss: 175.545
2018-11-05 13:38:26,595:INFO: Epoch 119/200
2018-11-05 13:38:34,019:INFO: - Train metrics: accuracy: 0.625 ; loss: 122.467
2018-11-05 13:38:34,206:INFO: - Eval metrics: accuracy: 0.503 ; loss: 174.893
2018-11-05 13:38:34,207:INFO: Epoch 120/200
2018-11-05 13:38:41,289:INFO: - Train metrics: accuracy: 0.624 ; loss: 122.132
2018-11-05 13:38:41,530:INFO: - Eval metrics: accuracy: 0.502 ; loss: 174.430
2018-11-05 13:38:41,530:INFO: Epoch 121/200
2018-11-05 13:38:48,869:INFO: - Train metrics: accuracy: 0.625 ; loss: 121.415
2018-11-05 13:38:49,047:INFO: - Eval metrics: accuracy: 0.504 ; loss: 173.226
2018-11-05 13:38:49,048:INFO: Epoch 122/200
2018-11-05 13:38:56,331:INFO: - Train metrics: accuracy: 0.625 ; loss: 120.579
2018-11-05 13:38:56,549:INFO: - Eval metrics: accuracy: 0.505 ; loss: 172.155
2018-11-05 13:38:56,550:INFO: Epoch 123/200
2018-11-05 13:39:03,538:INFO: - Train metrics: accuracy: 0.626 ; loss: 120.012
2018-11-05 13:39:03,749:INFO: - Eval metrics: accuracy: 0.503 ; loss: 171.666
2018-11-05 13:39:03,751:INFO: Epoch 124/200
2018-11-05 13:39:11,485:INFO: - Train metrics: accuracy: 0.626 ; loss: 119.245
2018-11-05 13:39:50,651:INFO: - Eval metrics: accuracy: 0.504 ; loss: 170.660
2018-11-05 13:39:53,066:INFO: Epoch 125/200
2018-11-05 13:40:02,665:INFO: - Train metrics: accuracy: 0.628 ; loss: 118.349
2018-11-05 13:40:05,299:INFO: - Eval metrics: accuracy: 0.505 ; loss: 169.391
2018-11-05 13:40:05,493:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-125
2018-11-05 13:40:05,970:INFO: Epoch 126/200
2018-11-05 13:40:12,891:INFO: - Train metrics: accuracy: 0.627 ; loss: 117.740
2018-11-05 13:40:13,077:INFO: - Eval metrics: accuracy: 0.504 ; loss: 168.839
2018-11-05 13:40:13,078:INFO: Epoch 127/200
2018-11-05 13:40:19,997:INFO: - Train metrics: accuracy: 0.629 ; loss: 116.990
2018-11-05 13:40:20,186:INFO: - Eval metrics: accuracy: 0.505 ; loss: 167.530
2018-11-05 13:40:20,269:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-127
2018-11-05 13:40:20,270:INFO: Epoch 128/200
2018-11-05 13:40:27,389:INFO: - Train metrics: accuracy: 0.628 ; loss: 116.379
2018-11-05 13:40:27,602:INFO: - Eval metrics: accuracy: 0.506 ; loss: 166.721
2018-11-05 13:40:27,689:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-128
2018-11-05 13:40:27,689:INFO: Epoch 129/200
2018-11-05 13:40:34,908:INFO: - Train metrics: accuracy: 0.629 ; loss: 115.744
2018-11-05 13:40:35,125:INFO: - Eval metrics: accuracy: 0.506 ; loss: 165.693
2018-11-05 13:40:35,211:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-129
2018-11-05 13:40:35,211:INFO: Epoch 130/200
2018-11-05 13:40:42,409:INFO: - Train metrics: accuracy: 0.630 ; loss: 115.035
2018-11-05 13:40:42,608:INFO: - Eval metrics: accuracy: 0.505 ; loss: 164.954
2018-11-05 13:40:42,609:INFO: Epoch 131/200
2018-11-05 13:40:50,133:INFO: - Train metrics: accuracy: 0.629 ; loss: 114.685
2018-11-05 13:40:50,332:INFO: - Eval metrics: accuracy: 0.506 ; loss: 164.607
2018-11-05 13:40:50,416:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-131
2018-11-05 13:40:50,432:INFO: Epoch 132/200
2018-11-05 13:40:57,341:INFO: - Train metrics: accuracy: 0.629 ; loss: 113.842
2018-11-05 13:40:57,537:INFO: - Eval metrics: accuracy: 0.504 ; loss: 162.970
2018-11-05 13:40:57,538:INFO: Epoch 133/200
2018-11-05 13:41:04,776:INFO: - Train metrics: accuracy: 0.631 ; loss: 112.980
2018-11-05 13:41:04,964:INFO: - Eval metrics: accuracy: 0.505 ; loss: 161.546
2018-11-05 13:41:04,965:INFO: Epoch 134/200
2018-11-05 13:41:12,042:INFO: - Train metrics: accuracy: 0.631 ; loss: 112.265
2018-11-05 13:41:12,264:INFO: - Eval metrics: accuracy: 0.505 ; loss: 160.981
2018-11-05 13:41:12,265:INFO: Epoch 135/200
2018-11-05 13:41:19,577:INFO: - Train metrics: accuracy: 0.631 ; loss: 111.499
2018-11-05 13:41:19,806:INFO: - Eval metrics: accuracy: 0.506 ; loss: 160.034
2018-11-05 13:41:19,807:INFO: Epoch 136/200
2018-11-05 13:41:27,143:INFO: - Train metrics: accuracy: 0.631 ; loss: 110.965
2018-11-05 13:41:27,366:INFO: - Eval metrics: accuracy: 0.507 ; loss: 158.890
2018-11-05 13:41:27,459:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-136
2018-11-05 13:41:27,460:INFO: Epoch 137/200
2018-11-05 13:41:34,779:INFO: - Train metrics: accuracy: 0.632 ; loss: 110.120
2018-11-05 13:41:34,972:INFO: - Eval metrics: accuracy: 0.506 ; loss: 158.110
2018-11-05 13:41:34,973:INFO: Epoch 138/200
2018-11-05 13:41:41,889:INFO: - Train metrics: accuracy: 0.632 ; loss: 109.491
2018-11-05 13:41:42,111:INFO: - Eval metrics: accuracy: 0.504 ; loss: 157.167
2018-11-05 13:41:42,112:INFO: Epoch 139/200
2018-11-05 13:41:47,620:INFO: - Train metrics: accuracy: 0.632 ; loss: 108.773
2018-11-05 13:41:47,800:INFO: - Eval metrics: accuracy: 0.506 ; loss: 156.010
2018-11-05 13:41:47,801:INFO: Epoch 140/200
2018-11-05 13:41:54,605:INFO: - Train metrics: accuracy: 0.633 ; loss: 107.971
2018-11-05 13:41:54,795:INFO: - Eval metrics: accuracy: 0.506 ; loss: 154.887
2018-11-05 13:41:54,795:INFO: Epoch 141/200
2018-11-05 13:42:01,166:INFO: - Train metrics: accuracy: 0.633 ; loss: 107.337
2018-11-05 13:42:01,350:INFO: - Eval metrics: accuracy: 0.507 ; loss: 154.626
2018-11-05 13:42:01,446:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-141
2018-11-05 13:42:01,447:INFO: Epoch 142/200
2018-11-05 13:42:08,714:INFO: - Train metrics: accuracy: 0.634 ; loss: 106.558
2018-11-05 13:42:08,898:INFO: - Eval metrics: accuracy: 0.508 ; loss: 153.896
2018-11-05 13:42:08,987:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-142
2018-11-05 13:42:08,988:INFO: Epoch 143/200
2018-11-05 13:42:15,950:INFO: - Train metrics: accuracy: 0.634 ; loss: 105.838
2018-11-05 13:42:17,090:INFO: - Eval metrics: accuracy: 0.506 ; loss: 152.404
2018-11-05 13:42:17,091:INFO: Epoch 144/200
2018-11-05 13:42:23,747:INFO: - Train metrics: accuracy: 0.633 ; loss: 105.261
2018-11-05 13:42:23,936:INFO: - Eval metrics: accuracy: 0.507 ; loss: 152.080
2018-11-05 13:42:23,937:INFO: Epoch 145/200
2018-11-05 13:42:30,620:INFO: - Train metrics: accuracy: 0.634 ; loss: 104.563
2018-11-05 13:42:30,869:INFO: - Eval metrics: accuracy: 0.507 ; loss: 150.352
2018-11-05 13:42:30,870:INFO: Epoch 146/200
2018-11-05 13:42:37,870:INFO: - Train metrics: accuracy: 0.634 ; loss: 103.711
2018-11-05 13:42:38,066:INFO: - Eval metrics: accuracy: 0.507 ; loss: 149.603
2018-11-05 13:42:38,067:INFO: Epoch 147/200
2018-11-05 13:42:45,042:INFO: - Train metrics: accuracy: 0.635 ; loss: 102.962
2018-11-05 13:42:45,226:INFO: - Eval metrics: accuracy: 0.508 ; loss: 148.842
2018-11-05 13:42:45,228:INFO: Epoch 148/200
2018-11-05 13:42:52,618:INFO: - Train metrics: accuracy: 0.635 ; loss: 102.185
2018-11-05 13:42:52,846:INFO: - Eval metrics: accuracy: 0.507 ; loss: 147.697
2018-11-05 13:42:52,847:INFO: Epoch 149/200
2018-11-05 13:43:00,209:INFO: - Train metrics: accuracy: 0.635 ; loss: 101.447
2018-11-05 13:43:00,396:INFO: - Eval metrics: accuracy: 0.508 ; loss: 146.947
2018-11-05 13:43:00,397:INFO: Epoch 150/200
2018-11-05 13:43:07,643:INFO: - Train metrics: accuracy: 0.636 ; loss: 100.540
2018-11-05 13:43:07,868:INFO: - Eval metrics: accuracy: 0.507 ; loss: 145.531
2018-11-05 13:43:07,869:INFO: Epoch 151/200
2018-11-05 13:43:14,788:INFO: - Train metrics: accuracy: 0.635 ; loss: 100.140
2018-11-05 13:43:14,987:INFO: - Eval metrics: accuracy: 0.508 ; loss: 145.522
2018-11-05 13:43:14,988:INFO: Epoch 152/200
2018-11-05 13:43:22,210:INFO: - Train metrics: accuracy: 0.636 ; loss: 99.327
2018-11-05 13:43:22,463:INFO: - Eval metrics: accuracy: 0.507 ; loss: 144.164
2018-11-05 13:43:22,464:INFO: Epoch 153/200
2018-11-05 13:43:29,596:INFO: - Train metrics: accuracy: 0.636 ; loss: 98.652
2018-11-05 13:43:29,826:INFO: - Eval metrics: accuracy: 0.505 ; loss: 142.970
2018-11-05 13:43:29,827:INFO: Epoch 154/200
2018-11-05 13:43:35,787:INFO: - Train metrics: accuracy: 0.636 ; loss: 98.159
2018-11-05 13:43:35,970:INFO: - Eval metrics: accuracy: 0.505 ; loss: 143.422
2018-11-05 13:43:35,971:INFO: Epoch 155/200
2018-11-05 13:43:41,639:INFO: - Train metrics: accuracy: 0.636 ; loss: 97.332
2018-11-05 13:43:41,818:INFO: - Eval metrics: accuracy: 0.508 ; loss: 140.964
2018-11-05 13:43:41,911:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-155
2018-11-05 13:43:41,911:INFO: Epoch 156/200
2018-11-05 13:43:47,666:INFO: - Train metrics: accuracy: 0.637 ; loss: 96.387
2018-11-05 13:43:47,845:INFO: - Eval metrics: accuracy: 0.508 ; loss: 140.841
2018-11-05 13:43:47,846:INFO: Epoch 157/200
2018-11-05 13:43:54,482:INFO: - Train metrics: accuracy: 0.637 ; loss: 96.013
2018-11-05 13:43:54,689:INFO: - Eval metrics: accuracy: 0.509 ; loss: 139.954
2018-11-05 13:43:54,795:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-157
2018-11-05 13:43:54,796:INFO: Epoch 158/200
2018-11-05 13:44:01,829:INFO: - Train metrics: accuracy: 0.637 ; loss: 95.293
2018-11-05 13:44:02,023:INFO: - Eval metrics: accuracy: 0.508 ; loss: 138.872
2018-11-05 13:44:02,024:INFO: Epoch 159/200
2018-11-05 13:44:09,166:INFO: - Train metrics: accuracy: 0.637 ; loss: 94.611
2018-11-05 13:44:09,343:INFO: - Eval metrics: accuracy: 0.508 ; loss: 138.515
2018-11-05 13:44:09,344:INFO: Epoch 160/200
2018-11-05 13:44:16,326:INFO: - Train metrics: accuracy: 0.637 ; loss: 93.746
2018-11-05 13:44:16,520:INFO: - Eval metrics: accuracy: 0.508 ; loss: 138.032
2018-11-05 13:44:16,520:INFO: Epoch 161/200
2018-11-05 13:44:23,115:INFO: - Train metrics: accuracy: 0.637 ; loss: 93.240
2018-11-05 13:44:23,361:INFO: - Eval metrics: accuracy: 0.507 ; loss: 135.965
2018-11-05 13:44:23,362:INFO: Epoch 162/200
2018-11-05 13:44:30,508:INFO: - Train metrics: accuracy: 0.638 ; loss: 92.399
2018-11-05 13:44:30,696:INFO: - Eval metrics: accuracy: 0.509 ; loss: 135.239
2018-11-05 13:44:30,785:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-162
2018-11-05 13:44:30,785:INFO: Epoch 163/200
2018-11-05 13:44:37,936:INFO: - Train metrics: accuracy: 0.638 ; loss: 91.724
2018-11-05 13:44:38,149:INFO: - Eval metrics: accuracy: 0.510 ; loss: 135.326
2018-11-05 13:44:38,238:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-163
2018-11-05 13:44:38,239:INFO: Epoch 164/200
2018-11-05 13:44:45,425:INFO: - Train metrics: accuracy: 0.638 ; loss: 91.107
2018-11-05 13:44:45,656:INFO: - Eval metrics: accuracy: 0.510 ; loss: 133.826
2018-11-05 13:44:45,745:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-164
2018-11-05 13:44:45,745:INFO: Epoch 165/200
2018-11-05 13:44:53,269:INFO: - Train metrics: accuracy: 0.638 ; loss: 90.368
2018-11-05 13:44:53,489:INFO: - Eval metrics: accuracy: 0.512 ; loss: 132.439
2018-11-05 13:44:53,580:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-165
2018-11-05 13:44:53,581:INFO: Epoch 166/200
2018-11-05 13:44:59,998:INFO: - Train metrics: accuracy: 0.639 ; loss: 89.634
2018-11-05 13:45:00,179:INFO: - Eval metrics: accuracy: 0.510 ; loss: 131.485
2018-11-05 13:45:00,180:INFO: Epoch 167/200
2018-11-05 13:45:06,220:INFO: - Train metrics: accuracy: 0.639 ; loss: 88.815
2018-11-05 13:45:06,401:INFO: - Eval metrics: accuracy: 0.512 ; loss: 130.299
2018-11-05 13:45:06,490:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-167
2018-11-05 13:45:06,491:INFO: Epoch 168/200
2018-11-05 13:45:13,831:INFO: - Train metrics: accuracy: 0.639 ; loss: 88.153
2018-11-05 13:45:14,065:INFO: - Eval metrics: accuracy: 0.514 ; loss: 130.003
2018-11-05 13:45:14,157:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-168
2018-11-05 13:45:14,157:INFO: Epoch 169/200
2018-11-05 13:45:21,011:INFO: - Train metrics: accuracy: 0.640 ; loss: 87.576
2018-11-05 13:45:21,208:INFO: - Eval metrics: accuracy: 0.513 ; loss: 129.259
2018-11-05 13:45:21,209:INFO: Epoch 170/200
2018-11-05 13:45:28,385:INFO: - Train metrics: accuracy: 0.639 ; loss: 87.172
2018-11-05 13:45:28,624:INFO: - Eval metrics: accuracy: 0.515 ; loss: 128.675
2018-11-05 13:45:28,707:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-170
2018-11-05 13:45:28,707:INFO: Epoch 171/200
2018-11-05 13:45:35,994:INFO: - Train metrics: accuracy: 0.640 ; loss: 86.597
2018-11-05 13:45:36,221:INFO: - Eval metrics: accuracy: 0.514 ; loss: 127.894
2018-11-05 13:45:36,222:INFO: Epoch 172/200
2018-11-05 13:45:43,572:INFO: - Train metrics: accuracy: 0.640 ; loss: 85.795
2018-11-05 13:45:43,780:INFO: - Eval metrics: accuracy: 0.515 ; loss: 126.721
2018-11-05 13:45:43,868:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-172
2018-11-05 13:45:43,869:INFO: Epoch 173/200
2018-11-05 13:45:51,091:INFO: - Train metrics: accuracy: 0.640 ; loss: 85.119
2018-11-05 13:45:51,313:INFO: - Eval metrics: accuracy: 0.514 ; loss: 125.924
2018-11-05 13:45:51,314:INFO: Epoch 174/200
2018-11-05 13:45:58,724:INFO: - Train metrics: accuracy: 0.641 ; loss: 84.427
2018-11-05 13:45:58,924:INFO: - Eval metrics: accuracy: 0.515 ; loss: 124.641
2018-11-05 13:45:58,926:INFO: Epoch 175/200
2018-11-05 13:46:06,360:INFO: - Train metrics: accuracy: 0.641 ; loss: 83.836
2018-11-05 13:46:06,572:INFO: - Eval metrics: accuracy: 0.514 ; loss: 123.498
2018-11-05 13:46:06,573:INFO: Epoch 176/200
2018-11-05 13:46:13,894:INFO: - Train metrics: accuracy: 0.641 ; loss: 83.162
2018-11-05 13:46:14,106:INFO: - Eval metrics: accuracy: 0.514 ; loss: 122.801
2018-11-05 13:46:14,107:INFO: Epoch 177/200
2018-11-05 13:46:21,518:INFO: - Train metrics: accuracy: 0.641 ; loss: 82.558
2018-11-05 13:46:21,694:INFO: - Eval metrics: accuracy: 0.513 ; loss: 121.822
2018-11-05 13:46:21,695:INFO: Epoch 178/200
2018-11-05 13:46:28,982:INFO: - Train metrics: accuracy: 0.642 ; loss: 82.012
2018-11-05 13:46:29,219:INFO: - Eval metrics: accuracy: 0.515 ; loss: 120.951
2018-11-05 13:46:29,316:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-178
2018-11-05 13:46:29,316:INFO: Epoch 179/200
2018-11-05 13:46:36,752:INFO: - Train metrics: accuracy: 0.642 ; loss: 81.309
2018-11-05 13:46:36,967:INFO: - Eval metrics: accuracy: 0.513 ; loss: 119.942
2018-11-05 13:46:36,968:INFO: Epoch 180/200
2018-11-05 13:46:44,096:INFO: - Train metrics: accuracy: 0.643 ; loss: 80.798
2018-11-05 13:46:44,321:INFO: - Eval metrics: accuracy: 0.515 ; loss: 118.990
2018-11-05 13:46:44,322:INFO: Epoch 181/200
2018-11-05 13:46:51,273:INFO: - Train metrics: accuracy: 0.643 ; loss: 80.275
2018-11-05 13:46:51,515:INFO: - Eval metrics: accuracy: 0.516 ; loss: 118.095
2018-11-05 13:46:51,605:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-181
2018-11-05 13:46:51,605:INFO: Epoch 182/200
2018-11-05 13:46:59,100:INFO: - Train metrics: accuracy: 0.643 ; loss: 79.876
2018-11-05 13:46:59,344:INFO: - Eval metrics: accuracy: 0.516 ; loss: 117.665
2018-11-05 13:46:59,345:INFO: Epoch 183/200
2018-11-05 13:47:06,991:INFO: - Train metrics: accuracy: 0.643 ; loss: 79.596
2018-11-05 13:47:07,209:INFO: - Eval metrics: accuracy: 0.513 ; loss: 119.399
2018-11-05 13:47:07,210:INFO: Epoch 184/200
2018-11-05 13:47:14,767:INFO: - Train metrics: accuracy: 0.643 ; loss: 79.348
2018-11-05 13:47:14,954:INFO: - Eval metrics: accuracy: 0.514 ; loss: 117.283
2018-11-05 13:47:14,954:INFO: Epoch 185/200
2018-11-05 13:47:21,421:INFO: - Train metrics: accuracy: 0.643 ; loss: 78.716
2018-11-05 13:47:21,677:INFO: - Eval metrics: accuracy: 0.518 ; loss: 115.008
2018-11-05 13:47:21,768:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-185
2018-11-05 13:47:21,769:INFO: Epoch 186/200
2018-11-05 13:47:29,071:INFO: - Train metrics: accuracy: 0.643 ; loss: 78.050
2018-11-05 13:47:29,286:INFO: - Eval metrics: accuracy: 0.515 ; loss: 114.390
2018-11-05 13:47:29,286:INFO: Epoch 187/200
2018-11-05 13:47:36,812:INFO: - Train metrics: accuracy: 0.643 ; loss: 77.474
2018-11-05 13:47:37,022:INFO: - Eval metrics: accuracy: 0.513 ; loss: 113.358
2018-11-05 13:47:37,023:INFO: Epoch 188/200
2018-11-05 13:47:43,923:INFO: - Train metrics: accuracy: 0.644 ; loss: 76.853
2018-11-05 13:47:44,152:INFO: - Eval metrics: accuracy: 0.516 ; loss: 112.469
2018-11-05 13:47:44,153:INFO: Epoch 189/200
2018-11-05 13:47:51,526:INFO: - Train metrics: accuracy: 0.645 ; loss: 76.314
2018-11-05 13:47:51,749:INFO: - Eval metrics: accuracy: 0.516 ; loss: 112.126
2018-11-05 13:47:51,750:INFO: Epoch 190/200
2018-11-05 13:47:58,989:INFO: - Train metrics: accuracy: 0.645 ; loss: 75.857
2018-11-05 13:47:59,195:INFO: - Eval metrics: accuracy: 0.516 ; loss: 111.028
2018-11-05 13:47:59,269:INFO: Epoch 191/200
2018-11-05 13:48:06,348:INFO: - Train metrics: accuracy: 0.645 ; loss: 75.435
2018-11-05 13:48:06,563:INFO: - Eval metrics: accuracy: 0.517 ; loss: 110.347
2018-11-05 13:48:06,564:INFO: Epoch 192/200
2018-11-05 13:48:13,848:INFO: - Train metrics: accuracy: 0.645 ; loss: 74.996
2018-11-05 13:48:14,071:INFO: - Eval metrics: accuracy: 0.519 ; loss: 109.520
2018-11-05 13:48:14,170:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-192
2018-11-05 13:48:14,170:INFO: Epoch 193/200
2018-11-05 13:48:21,699:INFO: - Train metrics: accuracy: 0.646 ; loss: 74.461
2018-11-05 13:48:21,883:INFO: - Eval metrics: accuracy: 0.519 ; loss: 108.831
2018-11-05 13:48:21,884:INFO: Epoch 194/200
2018-11-05 13:48:29,516:INFO: - Train metrics: accuracy: 0.646 ; loss: 74.077
2018-11-05 13:48:29,720:INFO: - Eval metrics: accuracy: 0.519 ; loss: 107.856
2018-11-05 13:48:29,809:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-194
2018-11-05 13:48:29,809:INFO: Epoch 195/200
2018-11-05 13:48:36,172:INFO: - Train metrics: accuracy: 0.647 ; loss: 73.582
2018-11-05 13:48:36,394:INFO: - Eval metrics: accuracy: 0.520 ; loss: 106.853
2018-11-05 13:48:36,484:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-195
2018-11-05 13:48:36,484:INFO: Epoch 196/200
2018-11-05 13:48:43,574:INFO: - Train metrics: accuracy: 0.647 ; loss: 73.168
2018-11-05 13:48:43,783:INFO: - Eval metrics: accuracy: 0.521 ; loss: 106.524
2018-11-05 13:48:43,877:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-196
2018-11-05 13:48:43,877:INFO: Epoch 197/200
2018-11-05 13:48:50,934:INFO: - Train metrics: accuracy: 0.647 ; loss: 72.718
2018-11-05 13:48:51,153:INFO: - Eval metrics: accuracy: 0.521 ; loss: 105.734
2018-11-05 13:48:51,154:INFO: Epoch 198/200
2018-11-05 13:48:58,375:INFO: - Train metrics: accuracy: 0.647 ; loss: 72.401
2018-11-05 13:48:58,592:INFO: - Eval metrics: accuracy: 0.522 ; loss: 104.892
2018-11-05 13:48:58,753:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-198
2018-11-05 13:48:58,753:INFO: Epoch 199/200
2018-11-05 13:49:06,053:INFO: - Train metrics: accuracy: 0.647 ; loss: 72.037
2018-11-05 13:49:06,292:INFO: - Eval metrics: accuracy: 0.520 ; loss: 104.489
2018-11-05 13:49:06,293:INFO: Epoch 200/200
2018-11-05 13:49:12,791:INFO: - Train metrics: accuracy: 0.647 ; loss: 71.667
2018-11-05 13:49:13,038:INFO: - Eval metrics: accuracy: 0.521 ; loss: 103.296
2018-11-05 15:27:19,702:INFO: Creating the datasets...
2018-11-05 15:27:31,359:INFO: - done.
2018-11-05 15:27:31,359:INFO: Creating the model...
2018-11-05 15:27:32,173:INFO: - done.
2018-11-05 15:27:32,173:INFO: Starting training for 300 epoch(s)
2018-11-05 15:27:32,749:INFO: Epoch 1/300
2018-11-05 15:27:41,619:INFO: - Train metrics: accuracy: 0.292 ; loss: 1295.666
2018-11-05 15:27:41,937:INFO: - Eval metrics: accuracy: 0.213 ; loss: 847.351
2018-11-05 15:27:42,028:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 15:27:42,028:INFO: Epoch 2/300
2018-11-05 15:27:49,910:INFO: - Train metrics: accuracy: 0.378 ; loss: 929.382
2018-11-05 15:27:50,120:INFO: - Eval metrics: accuracy: 0.267 ; loss: 657.682
2018-11-05 15:27:50,213:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 15:27:50,214:INFO: Epoch 3/300
2018-11-05 15:27:58,083:INFO: - Train metrics: accuracy: 0.443 ; loss: 689.147
2018-11-05 15:27:58,304:INFO: - Eval metrics: accuracy: 0.356 ; loss: 503.435
2018-11-05 15:27:58,388:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 15:27:58,389:INFO: Epoch 4/300
2018-11-05 15:28:06,220:INFO: - Train metrics: accuracy: 0.507 ; loss: 519.840
2018-11-05 15:28:06,429:INFO: - Eval metrics: accuracy: 0.420 ; loss: 406.504
2018-11-05 15:28:06,520:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 15:28:06,521:INFO: Epoch 5/300
2018-11-05 15:28:13,884:INFO: - Train metrics: accuracy: 0.544 ; loss: 407.336
2018-11-05 15:28:14,096:INFO: - Eval metrics: accuracy: 0.442 ; loss: 343.865
2018-11-05 15:28:14,183:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 15:28:14,184:INFO: Epoch 6/300
2018-11-05 15:28:21,449:INFO: - Train metrics: accuracy: 0.531 ; loss: 331.941
2018-11-05 15:28:21,634:INFO: - Eval metrics: accuracy: 0.370 ; loss: 318.495
2018-11-05 15:28:21,635:INFO: Epoch 7/300
2018-11-05 15:28:28,760:INFO: - Train metrics: accuracy: 0.539 ; loss: 270.838
2018-11-05 15:28:28,980:INFO: - Eval metrics: accuracy: 0.408 ; loss: 276.534
2018-11-05 15:28:28,981:INFO: Epoch 8/300
2018-11-05 15:28:36,101:INFO: - Train metrics: accuracy: 0.566 ; loss: 229.113
2018-11-05 15:28:36,325:INFO: - Eval metrics: accuracy: 0.436 ; loss: 255.584
2018-11-05 15:28:36,326:INFO: Epoch 9/300
2018-11-05 15:28:43,581:INFO: - Train metrics: accuracy: 0.565 ; loss: 205.620
2018-11-05 15:28:43,810:INFO: - Eval metrics: accuracy: 0.395 ; loss: 252.411
2018-11-05 15:28:43,811:INFO: Epoch 10/300
2018-11-05 15:28:51,541:INFO: - Train metrics: accuracy: 0.584 ; loss: 197.648
2018-11-05 15:28:51,760:INFO: - Eval metrics: accuracy: 0.466 ; loss: 238.275
2018-11-05 15:28:51,849:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-05 15:28:51,850:INFO: Epoch 11/300
2018-11-05 15:28:59,160:INFO: - Train metrics: accuracy: 0.592 ; loss: 179.672
2018-11-05 15:28:59,371:INFO: - Eval metrics: accuracy: 0.461 ; loss: 222.815
2018-11-05 15:28:59,372:INFO: Epoch 12/300
2018-11-05 15:29:06,901:INFO: - Train metrics: accuracy: 0.583 ; loss: 168.026
2018-11-05 15:29:07,123:INFO: - Eval metrics: accuracy: 0.436 ; loss: 212.264
2018-11-05 15:29:07,124:INFO: Epoch 13/300
2018-11-05 15:29:14,584:INFO: - Train metrics: accuracy: 0.587 ; loss: 155.616
2018-11-05 15:29:14,806:INFO: - Eval metrics: accuracy: 0.450 ; loss: 199.024
2018-11-05 15:29:14,807:INFO: Epoch 14/300
2018-11-05 15:29:22,529:INFO: - Train metrics: accuracy: 0.594 ; loss: 144.042
2018-11-05 15:29:22,750:INFO: - Eval metrics: accuracy: 0.456 ; loss: 187.184
2018-11-05 15:29:22,751:INFO: Epoch 15/300
2018-11-05 15:29:30,586:INFO: - Train metrics: accuracy: 0.594 ; loss: 135.596
2018-11-05 15:29:30,802:INFO: - Eval metrics: accuracy: 0.451 ; loss: 177.847
2018-11-05 15:29:30,803:INFO: Epoch 16/300
2018-11-05 15:29:38,539:INFO: - Train metrics: accuracy: 0.597 ; loss: 128.181
2018-11-05 15:29:38,772:INFO: - Eval metrics: accuracy: 0.465 ; loss: 169.044
2018-11-05 15:29:38,773:INFO: Epoch 17/300
2018-11-05 15:29:46,596:INFO: - Train metrics: accuracy: 0.591 ; loss: 124.277
2018-11-05 15:29:46,834:INFO: - Eval metrics: accuracy: 0.435 ; loss: 167.780
2018-11-05 15:29:46,835:INFO: Epoch 18/300
2018-11-05 15:29:54,139:INFO: - Train metrics: accuracy: 0.589 ; loss: 118.911
2018-11-05 15:29:54,345:INFO: - Eval metrics: accuracy: 0.456 ; loss: 160.340
2018-11-05 15:29:54,346:INFO: Epoch 19/300
2018-11-05 15:30:01,720:INFO: - Train metrics: accuracy: 0.595 ; loss: 115.467
2018-11-05 15:30:01,940:INFO: - Eval metrics: accuracy: 0.463 ; loss: 160.026
2018-11-05 15:30:01,941:INFO: Epoch 20/300
2018-11-05 15:30:09,770:INFO: - Train metrics: accuracy: 0.594 ; loss: 112.577
2018-11-05 15:30:09,990:INFO: - Eval metrics: accuracy: 0.462 ; loss: 159.981
2018-11-05 15:30:09,991:INFO: Epoch 21/300
2018-11-05 15:30:17,560:INFO: - Train metrics: accuracy: 0.596 ; loss: 108.871
2018-11-05 15:30:17,777:INFO: - Eval metrics: accuracy: 0.464 ; loss: 151.067
2018-11-05 15:30:17,780:INFO: Epoch 22/300
2018-11-05 15:30:25,759:INFO: - Train metrics: accuracy: 0.597 ; loss: 106.545
2018-11-05 15:30:25,991:INFO: - Eval metrics: accuracy: 0.476 ; loss: 148.133
2018-11-05 15:30:26,101:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-05 15:30:26,101:INFO: Epoch 23/300
2018-11-05 15:30:33,815:INFO: - Train metrics: accuracy: 0.595 ; loss: 103.034
2018-11-05 15:30:34,056:INFO: - Eval metrics: accuracy: 0.457 ; loss: 145.371
2018-11-05 15:30:34,056:INFO: Epoch 24/300
2018-11-05 15:30:41,994:INFO: - Train metrics: accuracy: 0.594 ; loss: 101.640
2018-11-05 15:30:42,220:INFO: - Eval metrics: accuracy: 0.459 ; loss: 146.146
2018-11-05 15:30:42,222:INFO: Epoch 25/300
2018-11-05 15:30:49,235:INFO: - Train metrics: accuracy: 0.597 ; loss: 99.985
2018-11-05 15:30:49,403:INFO: - Eval metrics: accuracy: 0.461 ; loss: 144.584
2018-11-05 15:30:49,404:INFO: Epoch 26/300
2018-11-05 15:30:56,467:INFO: - Train metrics: accuracy: 0.596 ; loss: 96.895
2018-11-05 15:30:56,670:INFO: - Eval metrics: accuracy: 0.448 ; loss: 141.126
2018-11-05 15:30:56,671:INFO: Epoch 27/300
2018-11-05 15:31:03,848:INFO: - Train metrics: accuracy: 0.598 ; loss: 94.281
2018-11-05 15:31:04,056:INFO: - Eval metrics: accuracy: 0.465 ; loss: 133.571
2018-11-05 15:31:04,057:INFO: Epoch 28/300
2018-11-05 15:31:09,887:INFO: - Train metrics: accuracy: 0.599 ; loss: 92.621
2018-11-05 15:31:10,109:INFO: - Eval metrics: accuracy: 0.456 ; loss: 132.011
2018-11-05 15:31:10,110:INFO: Epoch 29/300
2018-11-05 15:31:16,900:INFO: - Train metrics: accuracy: 0.593 ; loss: 91.463
2018-11-05 15:31:17,127:INFO: - Eval metrics: accuracy: 0.440 ; loss: 130.279
2018-11-05 15:31:17,128:INFO: Epoch 30/300
2018-11-05 15:31:24,317:INFO: - Train metrics: accuracy: 0.596 ; loss: 90.057
2018-11-05 15:31:24,512:INFO: - Eval metrics: accuracy: 0.447 ; loss: 129.514
2018-11-05 15:31:24,512:INFO: Epoch 31/300
2018-11-05 15:31:31,180:INFO: - Train metrics: accuracy: 0.593 ; loss: 90.710
2018-11-05 15:31:31,413:INFO: - Eval metrics: accuracy: 0.448 ; loss: 131.966
2018-11-05 15:31:31,414:INFO: Epoch 32/300
2018-11-05 15:31:39,346:INFO: - Train metrics: accuracy: 0.583 ; loss: 92.261
2018-11-05 15:31:39,562:INFO: - Eval metrics: accuracy: 0.411 ; loss: 140.846
2018-11-05 15:31:39,563:INFO: Epoch 33/300
2018-11-05 15:31:47,440:INFO: - Train metrics: accuracy: 0.583 ; loss: 93.224
2018-11-05 15:31:47,673:INFO: - Eval metrics: accuracy: 0.437 ; loss: 130.566
2018-11-05 15:31:47,674:INFO: Epoch 34/300
2018-11-05 15:31:55,590:INFO: - Train metrics: accuracy: 0.593 ; loss: 89.154
2018-11-05 15:31:55,812:INFO: - Eval metrics: accuracy: 0.450 ; loss: 126.645
2018-11-05 15:31:55,812:INFO: Epoch 35/300
2018-11-05 15:32:03,849:INFO: - Train metrics: accuracy: 0.597 ; loss: 87.931
2018-11-05 15:32:04,057:INFO: - Eval metrics: accuracy: 0.409 ; loss: 137.156
2018-11-05 15:32:04,058:INFO: Epoch 36/300
2018-11-05 15:32:12,123:INFO: - Train metrics: accuracy: 0.593 ; loss: 90.697
2018-11-05 15:32:12,369:INFO: - Eval metrics: accuracy: 0.476 ; loss: 123.349
2018-11-05 15:32:12,452:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-36
2018-11-05 15:32:12,453:INFO: Epoch 37/300
2018-11-05 15:32:20,485:INFO: - Train metrics: accuracy: 0.605 ; loss: 86.546
2018-11-05 15:32:20,710:INFO: - Eval metrics: accuracy: 0.476 ; loss: 119.722
2018-11-05 15:32:20,711:INFO: Epoch 38/300
2018-11-05 15:32:28,521:INFO: - Train metrics: accuracy: 0.603 ; loss: 84.663
2018-11-05 15:32:28,744:INFO: - Eval metrics: accuracy: 0.466 ; loss: 116.461
2018-11-05 15:32:28,746:INFO: Epoch 39/300
2018-11-05 15:32:36,803:INFO: - Train metrics: accuracy: 0.604 ; loss: 85.473
2018-11-05 15:32:37,040:INFO: - Eval metrics: accuracy: 0.476 ; loss: 115.621
2018-11-05 15:32:37,043:INFO: Epoch 40/300
2018-11-05 15:32:44,870:INFO: - Train metrics: accuracy: 0.603 ; loss: 82.603
2018-11-05 15:32:45,049:INFO: - Eval metrics: accuracy: 0.463 ; loss: 114.566
2018-11-05 15:32:45,050:INFO: Epoch 41/300
2018-11-05 15:32:52,876:INFO: - Train metrics: accuracy: 0.601 ; loss: 83.681
2018-11-05 15:32:53,104:INFO: - Eval metrics: accuracy: 0.476 ; loss: 115.299
2018-11-05 15:32:53,104:INFO: Epoch 42/300
2018-11-05 15:33:01,033:INFO: - Train metrics: accuracy: 0.601 ; loss: 82.183
2018-11-05 15:33:01,258:INFO: - Eval metrics: accuracy: 0.473 ; loss: 118.316
2018-11-05 15:33:01,259:INFO: Epoch 43/300
2018-11-05 15:33:09,197:INFO: - Train metrics: accuracy: 0.596 ; loss: 84.537
2018-11-05 15:33:09,408:INFO: - Eval metrics: accuracy: 0.474 ; loss: 114.243
2018-11-05 15:33:09,410:INFO: Epoch 44/300
2018-11-05 15:33:17,318:INFO: - Train metrics: accuracy: 0.599 ; loss: 82.079
2018-11-05 15:33:17,532:INFO: - Eval metrics: accuracy: 0.478 ; loss: 110.784
2018-11-05 15:33:17,615:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-44
2018-11-05 15:33:17,616:INFO: Epoch 45/300
2018-11-05 15:33:25,445:INFO: - Train metrics: accuracy: 0.606 ; loss: 80.645
2018-11-05 15:33:25,677:INFO: - Eval metrics: accuracy: 0.481 ; loss: 111.282
2018-11-05 15:33:25,763:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-45
2018-11-05 15:33:25,764:INFO: Epoch 46/300
2018-11-05 15:33:33,807:INFO: - Train metrics: accuracy: 0.605 ; loss: 80.303
2018-11-05 15:33:34,043:INFO: - Eval metrics: accuracy: 0.479 ; loss: 106.031
2018-11-05 15:33:34,044:INFO: Epoch 47/300
2018-11-05 15:33:41,976:INFO: - Train metrics: accuracy: 0.607 ; loss: 79.913
2018-11-05 15:33:42,193:INFO: - Eval metrics: accuracy: 0.480 ; loss: 111.709
2018-11-05 15:33:42,194:INFO: Epoch 48/300
2018-11-05 15:33:50,059:INFO: - Train metrics: accuracy: 0.604 ; loss: 81.141
2018-11-05 15:33:50,278:INFO: - Eval metrics: accuracy: 0.485 ; loss: 108.947
2018-11-05 15:33:50,362:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-48
2018-11-05 15:33:50,363:INFO: Epoch 49/300
2018-11-05 15:33:58,248:INFO: - Train metrics: accuracy: 0.607 ; loss: 80.802
2018-11-05 15:33:58,469:INFO: - Eval metrics: accuracy: 0.476 ; loss: 110.218
2018-11-05 15:33:58,469:INFO: Epoch 50/300
2018-11-05 15:34:06,477:INFO: - Train metrics: accuracy: 0.606 ; loss: 80.310
2018-11-05 15:34:06,710:INFO: - Eval metrics: accuracy: 0.488 ; loss: 108.766
2018-11-05 15:34:06,799:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-50
2018-11-05 15:34:06,799:INFO: Epoch 51/300
2018-11-05 15:34:14,595:INFO: - Train metrics: accuracy: 0.608 ; loss: 78.530
2018-11-05 15:34:14,810:INFO: - Eval metrics: accuracy: 0.486 ; loss: 102.189
2018-11-05 15:34:14,811:INFO: Epoch 52/300
2018-11-05 15:34:22,862:INFO: - Train metrics: accuracy: 0.609 ; loss: 78.093
2018-11-05 15:34:23,076:INFO: - Eval metrics: accuracy: 0.479 ; loss: 106.467
2018-11-05 15:34:23,076:INFO: Epoch 53/300
2018-11-05 15:34:31,215:INFO: - Train metrics: accuracy: 0.604 ; loss: 80.048
2018-11-05 15:34:31,432:INFO: - Eval metrics: accuracy: 0.470 ; loss: 109.344
2018-11-05 15:34:31,433:INFO: Epoch 54/300
2018-11-05 15:34:39,308:INFO: - Train metrics: accuracy: 0.600 ; loss: 79.703
2018-11-05 15:34:39,527:INFO: - Eval metrics: accuracy: 0.489 ; loss: 109.943
2018-11-05 15:34:39,618:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-54
2018-11-05 15:34:39,618:INFO: Epoch 55/300
2018-11-05 15:34:47,452:INFO: - Train metrics: accuracy: 0.604 ; loss: 79.093
2018-11-05 15:34:47,694:INFO: - Eval metrics: accuracy: 0.465 ; loss: 106.159
2018-11-05 15:34:47,695:INFO: Epoch 56/300
2018-11-05 15:34:55,573:INFO: - Train metrics: accuracy: 0.596 ; loss: 79.520
2018-11-05 15:34:55,795:INFO: - Eval metrics: accuracy: 0.476 ; loss: 104.911
2018-11-05 15:34:55,796:INFO: Epoch 57/300
2018-11-05 15:35:03,819:INFO: - Train metrics: accuracy: 0.602 ; loss: 79.243
2018-11-05 15:35:04,013:INFO: - Eval metrics: accuracy: 0.456 ; loss: 109.791
2018-11-05 15:35:04,014:INFO: Epoch 58/300
2018-11-05 15:35:11,982:INFO: - Train metrics: accuracy: 0.598 ; loss: 80.481
2018-11-05 15:35:12,215:INFO: - Eval metrics: accuracy: 0.475 ; loss: 102.976
2018-11-05 15:35:12,217:INFO: Epoch 59/300
2018-11-05 15:35:20,009:INFO: - Train metrics: accuracy: 0.606 ; loss: 78.207
2018-11-05 15:35:20,220:INFO: - Eval metrics: accuracy: 0.468 ; loss: 105.505
2018-11-05 15:35:20,221:INFO: Epoch 60/300
2018-11-05 15:35:28,009:INFO: - Train metrics: accuracy: 0.606 ; loss: 78.689
2018-11-05 15:35:28,227:INFO: - Eval metrics: accuracy: 0.492 ; loss: 100.764
2018-11-05 15:35:28,322:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-60
2018-11-05 15:35:28,323:INFO: Epoch 61/300
2018-11-05 15:35:36,323:INFO: - Train metrics: accuracy: 0.609 ; loss: 76.660
2018-11-05 15:35:36,562:INFO: - Eval metrics: accuracy: 0.485 ; loss: 101.832
2018-11-05 15:35:36,563:INFO: Epoch 62/300
2018-11-05 15:35:44,240:INFO: - Train metrics: accuracy: 0.608 ; loss: 76.745
2018-11-05 15:35:44,477:INFO: - Eval metrics: accuracy: 0.480 ; loss: 100.116
2018-11-05 15:35:44,478:INFO: Epoch 63/300
2018-11-05 15:35:52,466:INFO: - Train metrics: accuracy: 0.602 ; loss: 77.167
2018-11-05 15:35:52,707:INFO: - Eval metrics: accuracy: 0.458 ; loss: 105.516
2018-11-05 15:35:52,708:INFO: Epoch 64/300
2018-11-05 15:36:00,631:INFO: - Train metrics: accuracy: 0.599 ; loss: 76.415
2018-11-05 15:36:00,861:INFO: - Eval metrics: accuracy: 0.469 ; loss: 100.578
2018-11-05 15:36:00,862:INFO: Epoch 65/300
2018-11-05 15:36:08,788:INFO: - Train metrics: accuracy: 0.606 ; loss: 75.558
2018-11-05 15:36:09,022:INFO: - Eval metrics: accuracy: 0.488 ; loss: 98.831
2018-11-05 15:36:09,023:INFO: Epoch 66/300
2018-11-05 15:36:17,037:INFO: - Train metrics: accuracy: 0.606 ; loss: 76.246
2018-11-05 15:36:17,271:INFO: - Eval metrics: accuracy: 0.472 ; loss: 98.095
2018-11-05 15:36:17,272:INFO: Epoch 67/300
2018-11-05 15:36:25,453:INFO: - Train metrics: accuracy: 0.614 ; loss: 74.619
2018-11-05 15:36:25,689:INFO: - Eval metrics: accuracy: 0.486 ; loss: 96.610
2018-11-05 15:36:25,690:INFO: Epoch 68/300
2018-11-05 15:36:33,713:INFO: - Train metrics: accuracy: 0.615 ; loss: 74.407
2018-11-05 15:36:33,947:INFO: - Eval metrics: accuracy: 0.486 ; loss: 96.550
2018-11-05 15:36:33,948:INFO: Epoch 69/300
2018-11-05 15:36:41,826:INFO: - Train metrics: accuracy: 0.609 ; loss: 75.575
2018-11-05 15:36:42,022:INFO: - Eval metrics: accuracy: 0.495 ; loss: 99.661
2018-11-05 15:36:42,115:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-69
2018-11-05 15:36:42,115:INFO: Epoch 70/300
2018-11-05 15:36:50,116:INFO: - Train metrics: accuracy: 0.612 ; loss: 75.625
2018-11-05 15:36:50,322:INFO: - Eval metrics: accuracy: 0.497 ; loss: 95.078
2018-11-05 15:36:50,413:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-70
2018-11-05 15:36:50,413:INFO: Epoch 71/300
2018-11-05 15:36:58,364:INFO: - Train metrics: accuracy: 0.613 ; loss: 72.942
2018-11-05 15:36:58,576:INFO: - Eval metrics: accuracy: 0.485 ; loss: 98.118
2018-11-05 15:36:58,576:INFO: Epoch 72/300
2018-11-05 15:37:06,686:INFO: - Train metrics: accuracy: 0.612 ; loss: 75.446
2018-11-05 15:37:06,910:INFO: - Eval metrics: accuracy: 0.499 ; loss: 96.469
2018-11-05 15:37:06,998:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-72
2018-11-05 15:37:06,998:INFO: Epoch 73/300
2018-11-05 15:37:14,927:INFO: - Train metrics: accuracy: 0.613 ; loss: 72.988
2018-11-05 15:37:15,151:INFO: - Eval metrics: accuracy: 0.502 ; loss: 95.444
2018-11-05 15:37:15,242:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-73
2018-11-05 15:37:15,242:INFO: Epoch 74/300
2018-11-05 15:37:23,280:INFO: - Train metrics: accuracy: 0.617 ; loss: 73.524
2018-11-05 15:37:23,508:INFO: - Eval metrics: accuracy: 0.493 ; loss: 89.911
2018-11-05 15:37:23,509:INFO: Epoch 75/300
2018-11-05 15:37:31,517:INFO: - Train metrics: accuracy: 0.613 ; loss: 73.709
2018-11-05 15:37:31,754:INFO: - Eval metrics: accuracy: 0.490 ; loss: 90.563
2018-11-05 15:37:31,755:INFO: Epoch 76/300
2018-11-05 15:37:39,654:INFO: - Train metrics: accuracy: 0.612 ; loss: 74.084
2018-11-05 15:37:39,902:INFO: - Eval metrics: accuracy: 0.476 ; loss: 98.294
2018-11-05 15:37:39,904:INFO: Epoch 77/300
2018-11-05 15:37:47,722:INFO: - Train metrics: accuracy: 0.611 ; loss: 76.234
2018-11-05 15:37:47,956:INFO: - Eval metrics: accuracy: 0.493 ; loss: 100.159
2018-11-05 15:37:47,957:INFO: Epoch 78/300
2018-11-05 15:37:55,976:INFO: - Train metrics: accuracy: 0.612 ; loss: 75.550
2018-11-05 15:37:56,200:INFO: - Eval metrics: accuracy: 0.497 ; loss: 100.218
2018-11-05 15:37:56,203:INFO: Epoch 79/300
2018-11-05 15:38:04,324:INFO: - Train metrics: accuracy: 0.614 ; loss: 74.527
2018-11-05 15:38:04,536:INFO: - Eval metrics: accuracy: 0.495 ; loss: 95.349
2018-11-05 15:38:04,538:INFO: Epoch 80/300
2018-11-05 15:38:12,491:INFO: - Train metrics: accuracy: 0.616 ; loss: 73.206
2018-11-05 15:38:12,740:INFO: - Eval metrics: accuracy: 0.494 ; loss: 92.147
2018-11-05 15:38:12,741:INFO: Epoch 81/300
2018-11-05 15:38:20,659:INFO: - Train metrics: accuracy: 0.615 ; loss: 72.699
2018-11-05 15:38:20,863:INFO: - Eval metrics: accuracy: 0.500 ; loss: 93.041
2018-11-05 15:38:20,864:INFO: Epoch 82/300
2018-11-05 15:38:28,909:INFO: - Train metrics: accuracy: 0.613 ; loss: 72.662
2018-11-05 15:38:29,124:INFO: - Eval metrics: accuracy: 0.482 ; loss: 95.309
2018-11-05 15:38:29,125:INFO: Epoch 83/300
2018-11-05 15:38:36,496:INFO: - Train metrics: accuracy: 0.612 ; loss: 72.566
2018-11-05 15:38:36,702:INFO: - Eval metrics: accuracy: 0.482 ; loss: 93.988
2018-11-05 15:38:36,703:INFO: Epoch 84/300
2018-11-05 15:38:43,792:INFO: - Train metrics: accuracy: 0.609 ; loss: 72.345
2018-11-05 15:38:43,955:INFO: - Eval metrics: accuracy: 0.492 ; loss: 90.545
2018-11-05 15:38:43,956:INFO: Epoch 85/300
2018-11-05 15:41:40,044:INFO: Creating the datasets...
2018-11-05 15:41:42,910:INFO: - done.
2018-11-05 15:41:42,910:INFO: Creating the model...
2018-11-05 15:41:43,456:INFO: - done.
2018-11-05 15:41:43,456:INFO: Starting training for 300 epoch(s)
2018-11-05 15:41:43,820:INFO: Epoch 1/300
2018-11-05 15:41:51,120:INFO: - Train metrics: loss: -1559.323 ; accuracy: 0.013
2018-11-05 15:41:51,376:INFO: - Eval metrics: loss: -1158.478 ; accuracy: 0.007
2018-11-05 15:41:51,451:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 15:41:51,456:INFO: Epoch 2/300
2018-11-05 15:41:58,264:INFO: - Train metrics: loss: -1559.333 ; accuracy: 0.004
2018-11-05 15:41:58,488:INFO: - Eval metrics: loss: -1158.478 ; accuracy: 0.007
2018-11-05 15:41:58,488:INFO: Epoch 3/300
2018-11-05 15:42:05,387:INFO: - Train metrics: loss: -1559.333 ; accuracy: 0.005
2018-11-05 15:42:05,589:INFO: - Eval metrics: loss: -1158.478 ; accuracy: 0.011
2018-11-05 15:42:05,658:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 15:42:05,663:INFO: Epoch 4/300
2018-11-05 15:42:12,363:INFO: - Train metrics: loss: -1559.333 ; accuracy: 0.007
2018-11-05 15:42:12,543:INFO: - Eval metrics: loss: -1158.478 ; accuracy: 0.014
2018-11-05 15:42:12,611:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 15:42:12,615:INFO: Epoch 5/300
2018-11-05 15:42:19,706:INFO: - Train metrics: loss: -1559.333 ; accuracy: 0.009
2018-11-05 15:42:19,895:INFO: - Eval metrics: loss: -1158.478 ; accuracy: 0.016
2018-11-05 15:42:19,969:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 15:42:19,974:INFO: Epoch 6/300
2018-11-05 15:43:37,979:INFO: Creating the datasets...
2018-11-05 15:43:40,675:INFO: - done.
2018-11-05 15:43:40,676:INFO: Creating the model...
2018-11-05 15:43:41,225:INFO: - done.
2018-11-05 15:43:41,226:INFO: Starting training for 300 epoch(s)
2018-11-05 15:43:41,597:INFO: Epoch 1/300
2018-11-05 15:43:48,863:INFO: - Train metrics: accuracy: 0.149 ; loss: 1510.248
2018-11-05 15:43:49,170:INFO: - Eval metrics: accuracy: 0.238 ; loss: 1083.020
2018-11-05 15:43:49,248:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 15:43:49,249:INFO: Epoch 2/300
2018-11-05 15:43:55,940:INFO: - Train metrics: accuracy: 0.273 ; loss: 1405.725
2018-11-05 15:43:56,095:INFO: - Eval metrics: accuracy: 0.253 ; loss: 1018.672
2018-11-05 15:43:56,173:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 15:43:56,173:INFO: Epoch 3/300
2018-11-05 15:44:03,000:INFO: - Train metrics: accuracy: 0.317 ; loss: 1318.177
2018-11-05 15:44:03,155:INFO: - Eval metrics: accuracy: 0.266 ; loss: 964.226
2018-11-05 15:44:03,231:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 15:44:03,231:INFO: Epoch 4/300
2018-11-05 15:44:10,016:INFO: - Train metrics: accuracy: 0.348 ; loss: 1238.434
2018-11-05 15:44:10,198:INFO: - Eval metrics: accuracy: 0.275 ; loss: 910.484
2018-11-05 15:44:10,275:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 15:44:10,275:INFO: Epoch 5/300
2018-11-05 15:44:17,129:INFO: - Train metrics: accuracy: 0.370 ; loss: 1159.030
2018-11-05 15:44:17,299:INFO: - Eval metrics: accuracy: 0.287 ; loss: 859.261
2018-11-05 15:44:17,371:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 15:44:17,372:INFO: Epoch 6/300
2018-11-05 15:44:24,174:INFO: - Train metrics: accuracy: 0.389 ; loss: 1085.074
2018-11-05 15:44:24,337:INFO: - Eval metrics: accuracy: 0.297 ; loss: 810.707
2018-11-05 15:44:24,411:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-05 15:44:24,412:INFO: Epoch 7/300
2018-11-05 15:44:31,286:INFO: - Train metrics: accuracy: 0.403 ; loss: 1017.628
2018-11-05 15:44:31,474:INFO: - Eval metrics: accuracy: 0.312 ; loss: 767.931
2018-11-05 15:44:31,550:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-05 15:44:31,550:INFO: Epoch 8/300
2018-11-05 15:44:38,261:INFO: - Train metrics: accuracy: 0.417 ; loss: 958.321
2018-11-05 15:44:38,442:INFO: - Eval metrics: accuracy: 0.329 ; loss: 729.404
2018-11-05 15:44:38,511:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-05 15:44:38,511:INFO: Epoch 9/300
2018-11-05 15:44:45,375:INFO: - Train metrics: accuracy: 0.429 ; loss: 904.823
2018-11-05 15:44:45,584:INFO: - Eval metrics: accuracy: 0.349 ; loss: 694.182
2018-11-05 15:44:45,655:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-05 15:44:45,655:INFO: Epoch 10/300
2018-11-05 15:44:52,522:INFO: - Train metrics: accuracy: 0.440 ; loss: 856.019
2018-11-05 15:44:52,714:INFO: - Eval metrics: accuracy: 0.366 ; loss: 661.831
2018-11-05 15:44:52,789:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-05 15:44:52,790:INFO: Epoch 11/300
2018-11-05 15:44:59,724:INFO: - Train metrics: accuracy: 0.449 ; loss: 811.253
2018-11-05 15:44:59,928:INFO: - Eval metrics: accuracy: 0.379 ; loss: 632.183
2018-11-05 15:45:00,004:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-05 15:45:00,005:INFO: Epoch 12/300
2018-11-05 15:45:06,935:INFO: - Train metrics: accuracy: 0.458 ; loss: 769.965
2018-11-05 15:45:07,127:INFO: - Eval metrics: accuracy: 0.390 ; loss: 604.672
2018-11-05 15:45:07,201:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-05 15:45:07,202:INFO: Epoch 13/300
2018-11-05 15:45:14,077:INFO: - Train metrics: accuracy: 0.466 ; loss: 731.769
2018-11-05 15:45:14,252:INFO: - Eval metrics: accuracy: 0.401 ; loss: 579.131
2018-11-05 15:45:14,332:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-05 15:45:14,332:INFO: Epoch 14/300
2018-11-05 15:45:21,178:INFO: - Train metrics: accuracy: 0.473 ; loss: 696.359
2018-11-05 15:45:21,338:INFO: - Eval metrics: accuracy: 0.405 ; loss: 555.475
2018-11-05 15:45:21,414:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-05 15:45:21,414:INFO: Epoch 15/300
2018-11-05 15:45:28,465:INFO: - Train metrics: accuracy: 0.479 ; loss: 663.488
2018-11-05 15:45:28,647:INFO: - Eval metrics: accuracy: 0.410 ; loss: 533.415
2018-11-05 15:45:28,725:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-05 15:45:28,726:INFO: Epoch 16/300
2018-11-05 15:45:35,668:INFO: - Train metrics: accuracy: 0.486 ; loss: 632.889
2018-11-05 15:45:35,852:INFO: - Eval metrics: accuracy: 0.413 ; loss: 512.869
2018-11-05 15:45:35,929:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-05 15:45:35,929:INFO: Epoch 17/300
2018-11-05 15:45:43,004:INFO: - Train metrics: accuracy: 0.491 ; loss: 604.357
2018-11-05 15:45:43,199:INFO: - Eval metrics: accuracy: 0.416 ; loss: 493.376
2018-11-05 15:45:43,281:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-05 15:45:43,282:INFO: Epoch 18/300
2018-11-05 15:45:50,120:INFO: - Train metrics: accuracy: 0.497 ; loss: 575.626
2018-11-05 15:45:50,275:INFO: - Eval metrics: accuracy: 0.418 ; loss: 473.548
2018-11-05 15:45:50,347:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-05 15:45:50,348:INFO: Epoch 19/300
2018-11-05 15:45:57,458:INFO: - Train metrics: accuracy: 0.503 ; loss: 548.724
2018-11-05 15:45:57,653:INFO: - Eval metrics: accuracy: 0.421 ; loss: 455.805
2018-11-05 15:45:57,736:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-05 15:45:57,736:INFO: Epoch 20/300
2018-11-05 15:46:04,645:INFO: - Train metrics: accuracy: 0.508 ; loss: 524.424
2018-11-05 15:46:04,863:INFO: - Eval metrics: accuracy: 0.422 ; loss: 439.551
2018-11-05 15:46:04,943:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-20
2018-11-05 15:46:04,943:INFO: Epoch 21/300
2018-11-05 15:46:12,069:INFO: - Train metrics: accuracy: 0.513 ; loss: 502.043
2018-11-05 15:46:12,234:INFO: - Eval metrics: accuracy: 0.428 ; loss: 424.516
2018-11-05 15:46:12,315:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-05 15:46:12,315:INFO: Epoch 22/300
2018-11-05 15:46:19,225:INFO: - Train metrics: accuracy: 0.517 ; loss: 481.345
2018-11-05 15:46:19,412:INFO: - Eval metrics: accuracy: 0.427 ; loss: 410.540
2018-11-05 15:46:19,413:INFO: Epoch 23/300
2018-11-05 15:46:26,329:INFO: - Train metrics: accuracy: 0.523 ; loss: 462.142
2018-11-05 15:46:26,500:INFO: - Eval metrics: accuracy: 0.433 ; loss: 397.601
2018-11-05 15:46:26,574:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-05 15:46:26,574:INFO: Epoch 24/300
2018-11-05 15:46:33,272:INFO: - Train metrics: accuracy: 0.526 ; loss: 444.246
2018-11-05 15:46:33,434:INFO: - Eval metrics: accuracy: 0.437 ; loss: 385.581
2018-11-05 15:46:33,506:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-05 15:46:33,507:INFO: Epoch 25/300
2018-11-05 15:46:40,350:INFO: - Train metrics: accuracy: 0.530 ; loss: 427.502
2018-11-05 15:46:40,559:INFO: - Eval metrics: accuracy: 0.437 ; loss: 374.354
2018-11-05 15:46:40,631:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-05 15:46:40,632:INFO: Epoch 26/300
2018-11-05 15:46:47,293:INFO: - Train metrics: accuracy: 0.534 ; loss: 411.966
2018-11-05 15:46:47,499:INFO: - Eval metrics: accuracy: 0.435 ; loss: 364.315
2018-11-05 15:46:47,501:INFO: Epoch 27/300
2018-11-05 15:46:54,544:INFO: - Train metrics: accuracy: 0.539 ; loss: 397.195
2018-11-05 15:46:54,712:INFO: - Eval metrics: accuracy: 0.443 ; loss: 354.237
2018-11-05 15:46:54,790:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-05 15:46:54,791:INFO: Epoch 28/300
2018-11-05 15:47:01,681:INFO: - Train metrics: accuracy: 0.541 ; loss: 383.560
2018-11-05 15:47:01,867:INFO: - Eval metrics: accuracy: 0.444 ; loss: 345.198
2018-11-05 15:47:01,942:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-05 15:47:01,942:INFO: Epoch 29/300
2018-11-05 15:47:08,822:INFO: - Train metrics: accuracy: 0.546 ; loss: 370.739
2018-11-05 15:47:09,035:INFO: - Eval metrics: accuracy: 0.447 ; loss: 336.589
2018-11-05 15:47:09,112:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-05 15:47:09,112:INFO: Epoch 30/300
2018-11-05 15:47:15,998:INFO: - Train metrics: accuracy: 0.550 ; loss: 358.653
2018-11-05 15:47:16,164:INFO: - Eval metrics: accuracy: 0.446 ; loss: 328.975
2018-11-05 15:47:16,165:INFO: Epoch 31/300
2018-11-05 15:47:23,338:INFO: - Train metrics: accuracy: 0.555 ; loss: 347.287
2018-11-05 15:47:23,555:INFO: - Eval metrics: accuracy: 0.452 ; loss: 321.236
2018-11-05 15:47:23,635:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-31
2018-11-05 15:47:23,635:INFO: Epoch 32/300
2018-11-05 15:47:30,536:INFO: - Train metrics: accuracy: 0.557 ; loss: 336.632
2018-11-05 15:47:30,724:INFO: - Eval metrics: accuracy: 0.456 ; loss: 314.453
2018-11-05 15:47:30,799:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-05 15:47:30,799:INFO: Epoch 33/300
2018-11-05 15:47:37,621:INFO: - Train metrics: accuracy: 0.560 ; loss: 326.733
2018-11-05 15:47:37,806:INFO: - Eval metrics: accuracy: 0.457 ; loss: 307.854
2018-11-05 15:47:37,878:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-33
2018-11-05 15:47:37,879:INFO: Epoch 34/300
2018-11-05 15:47:44,754:INFO: - Train metrics: accuracy: 0.562 ; loss: 317.355
2018-11-05 15:47:44,962:INFO: - Eval metrics: accuracy: 0.457 ; loss: 301.944
2018-11-05 15:47:45,030:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-34
2018-11-05 15:47:45,031:INFO: Epoch 35/300
2018-11-05 15:47:51,802:INFO: - Train metrics: accuracy: 0.565 ; loss: 308.504
2018-11-05 15:47:52,002:INFO: - Eval metrics: accuracy: 0.458 ; loss: 296.152
2018-11-05 15:47:52,076:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-35
2018-11-05 15:47:52,076:INFO: Epoch 36/300
2018-11-05 15:47:58,958:INFO: - Train metrics: accuracy: 0.567 ; loss: 300.293
2018-11-05 15:47:59,158:INFO: - Eval metrics: accuracy: 0.460 ; loss: 290.953
2018-11-05 15:47:59,241:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-36
2018-11-05 15:47:59,242:INFO: Epoch 37/300
2018-11-05 15:48:06,026:INFO: - Train metrics: accuracy: 0.570 ; loss: 292.319
2018-11-05 15:48:06,217:INFO: - Eval metrics: accuracy: 0.460 ; loss: 286.115
2018-11-05 15:48:06,219:INFO: Epoch 38/300
2018-11-05 15:48:13,071:INFO: - Train metrics: accuracy: 0.572 ; loss: 285.022
2018-11-05 15:48:13,264:INFO: - Eval metrics: accuracy: 0.463 ; loss: 281.272
2018-11-05 15:48:13,341:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-38
2018-11-05 15:48:13,341:INFO: Epoch 39/300
2018-11-05 15:48:20,499:INFO: - Train metrics: accuracy: 0.574 ; loss: 278.042
2018-11-05 15:48:20,723:INFO: - Eval metrics: accuracy: 0.464 ; loss: 277.143
2018-11-05 15:48:20,797:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-39
2018-11-05 15:48:20,797:INFO: Epoch 40/300
2018-11-05 15:48:27,635:INFO: - Train metrics: accuracy: 0.575 ; loss: 271.503
2018-11-05 15:48:27,841:INFO: - Eval metrics: accuracy: 0.464 ; loss: 272.998
2018-11-05 15:48:27,918:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-40
2018-11-05 15:48:27,918:INFO: Epoch 41/300
2018-11-05 15:48:35,070:INFO: - Train metrics: accuracy: 0.578 ; loss: 265.181
2018-11-05 15:48:35,235:INFO: - Eval metrics: accuracy: 0.467 ; loss: 269.121
2018-11-05 15:48:35,311:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-41
2018-11-05 15:48:35,312:INFO: Epoch 42/300
2018-11-05 15:48:42,217:INFO: - Train metrics: accuracy: 0.579 ; loss: 259.314
2018-11-05 15:48:42,391:INFO: - Eval metrics: accuracy: 0.471 ; loss: 265.531
2018-11-05 15:48:42,459:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-42
2018-11-05 15:48:42,460:INFO: Epoch 43/300
2018-11-05 15:48:49,338:INFO: - Train metrics: accuracy: 0.581 ; loss: 253.660
2018-11-05 15:48:49,548:INFO: - Eval metrics: accuracy: 0.471 ; loss: 262.239
2018-11-05 15:48:49,626:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-43
2018-11-05 15:48:49,626:INFO: Epoch 44/300
2018-11-05 15:48:56,381:INFO: - Train metrics: accuracy: 0.582 ; loss: 248.635
2018-11-05 15:48:56,592:INFO: - Eval metrics: accuracy: 0.468 ; loss: 259.204
2018-11-05 15:48:56,593:INFO: Epoch 45/300
2018-11-05 15:49:03,445:INFO: - Train metrics: accuracy: 0.583 ; loss: 243.560
2018-11-05 15:49:03,642:INFO: - Eval metrics: accuracy: 0.472 ; loss: 256.089
2018-11-05 15:49:03,719:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-45
2018-11-05 15:49:03,719:INFO: Epoch 46/300
2018-11-05 15:49:10,641:INFO: - Train metrics: accuracy: 0.585 ; loss: 238.832
2018-11-05 15:49:10,836:INFO: - Eval metrics: accuracy: 0.471 ; loss: 253.371
2018-11-05 15:49:10,837:INFO: Epoch 47/300
2018-11-05 15:49:17,705:INFO: - Train metrics: accuracy: 0.586 ; loss: 234.246
2018-11-05 15:49:17,878:INFO: - Eval metrics: accuracy: 0.473 ; loss: 250.750
2018-11-05 15:49:17,948:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-47
2018-11-05 15:49:17,948:INFO: Epoch 48/300
2018-11-05 15:49:24,851:INFO: - Train metrics: accuracy: 0.587 ; loss: 230.086
2018-11-05 15:49:25,058:INFO: - Eval metrics: accuracy: 0.473 ; loss: 248.304
2018-11-05 15:49:25,059:INFO: Epoch 49/300
2018-11-05 15:49:32,047:INFO: - Train metrics: accuracy: 0.587 ; loss: 226.127
2018-11-05 15:49:32,205:INFO: - Eval metrics: accuracy: 0.475 ; loss: 245.699
2018-11-05 15:49:32,280:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-49
2018-11-05 15:49:32,281:INFO: Epoch 50/300
2018-11-05 15:49:39,143:INFO: - Train metrics: accuracy: 0.588 ; loss: 222.262
2018-11-05 15:49:39,353:INFO: - Eval metrics: accuracy: 0.473 ; loss: 243.858
2018-11-05 15:49:39,355:INFO: Epoch 51/300
2018-11-05 15:49:46,289:INFO: - Train metrics: accuracy: 0.589 ; loss: 218.469
2018-11-05 15:49:46,483:INFO: - Eval metrics: accuracy: 0.478 ; loss: 241.374
2018-11-05 15:49:46,552:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-51
2018-11-05 15:49:46,553:INFO: Epoch 52/300
2018-11-05 15:49:53,525:INFO: - Train metrics: accuracy: 0.590 ; loss: 214.881
2018-11-05 15:49:53,705:INFO: - Eval metrics: accuracy: 0.478 ; loss: 239.582
2018-11-05 15:49:53,773:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-52
2018-11-05 15:49:53,774:INFO: Epoch 53/300
2018-11-05 15:50:00,563:INFO: - Train metrics: accuracy: 0.593 ; loss: 211.406
2018-11-05 15:50:00,756:INFO: - Eval metrics: accuracy: 0.478 ; loss: 237.520
2018-11-05 15:50:00,757:INFO: Epoch 54/300
2018-11-05 15:50:07,595:INFO: - Train metrics: accuracy: 0.594 ; loss: 208.137
2018-11-05 15:50:07,797:INFO: - Eval metrics: accuracy: 0.480 ; loss: 235.567
2018-11-05 15:50:07,875:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-54
2018-11-05 15:50:07,875:INFO: Epoch 55/300
2018-11-05 15:50:14,634:INFO: - Train metrics: accuracy: 0.592 ; loss: 205.342
2018-11-05 15:50:14,842:INFO: - Eval metrics: accuracy: 0.479 ; loss: 234.237
2018-11-05 15:50:14,843:INFO: Epoch 56/300
2018-11-05 15:50:21,647:INFO: - Train metrics: accuracy: 0.594 ; loss: 202.439
2018-11-05 15:50:21,840:INFO: - Eval metrics: accuracy: 0.479 ; loss: 232.615
2018-11-05 15:50:21,841:INFO: Epoch 57/300
2018-11-05 15:50:28,795:INFO: - Train metrics: accuracy: 0.595 ; loss: 199.659
2018-11-05 15:50:28,995:INFO: - Eval metrics: accuracy: 0.481 ; loss: 230.848
2018-11-05 15:50:29,068:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-57
2018-11-05 15:50:29,068:INFO: Epoch 58/300
2018-11-05 15:50:35,792:INFO: - Train metrics: accuracy: 0.596 ; loss: 196.821
2018-11-05 15:50:35,981:INFO: - Eval metrics: accuracy: 0.482 ; loss: 229.311
2018-11-05 15:50:36,063:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-58
2018-11-05 15:50:36,063:INFO: Epoch 59/300
2018-11-05 15:50:42,826:INFO: - Train metrics: accuracy: 0.596 ; loss: 194.189
2018-11-05 15:50:43,041:INFO: - Eval metrics: accuracy: 0.482 ; loss: 227.615
2018-11-05 15:50:43,042:INFO: Epoch 60/300
2018-11-05 15:50:49,989:INFO: - Train metrics: accuracy: 0.595 ; loss: 192.024
2018-11-05 15:50:50,178:INFO: - Eval metrics: accuracy: 0.484 ; loss: 226.227
2018-11-05 15:50:50,261:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-60
2018-11-05 15:50:50,262:INFO: Epoch 61/300
2018-11-05 15:50:57,136:INFO: - Train metrics: accuracy: 0.596 ; loss: 189.535
2018-11-05 15:50:57,315:INFO: - Eval metrics: accuracy: 0.485 ; loss: 224.908
2018-11-05 15:50:57,383:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-61
2018-11-05 15:50:57,384:INFO: Epoch 62/300
2018-11-05 15:51:04,283:INFO: - Train metrics: accuracy: 0.598 ; loss: 187.041
2018-11-05 15:51:04,470:INFO: - Eval metrics: accuracy: 0.484 ; loss: 223.490
2018-11-05 15:51:04,471:INFO: Epoch 63/300
2018-11-05 15:51:11,483:INFO: - Train metrics: accuracy: 0.597 ; loss: 184.920
2018-11-05 15:51:11,675:INFO: - Eval metrics: accuracy: 0.485 ; loss: 222.691
2018-11-05 15:51:11,676:INFO: Epoch 64/300
2018-11-05 15:51:18,910:INFO: - Train metrics: accuracy: 0.600 ; loss: 182.702
2018-11-05 15:51:19,117:INFO: - Eval metrics: accuracy: 0.485 ; loss: 221.275
2018-11-05 15:51:19,200:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-64
2018-11-05 15:51:19,200:INFO: Epoch 65/300
2018-11-05 15:51:26,108:INFO: - Train metrics: accuracy: 0.600 ; loss: 180.582
2018-11-05 15:51:26,306:INFO: - Eval metrics: accuracy: 0.486 ; loss: 219.997
2018-11-05 15:51:26,382:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-65
2018-11-05 15:51:26,382:INFO: Epoch 66/300
2018-11-05 15:51:33,260:INFO: - Train metrics: accuracy: 0.599 ; loss: 178.879
2018-11-05 15:51:33,434:INFO: - Eval metrics: accuracy: 0.488 ; loss: 218.840
2018-11-05 15:51:33,511:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-66
2018-11-05 15:51:33,512:INFO: Epoch 67/300
2018-11-05 15:51:40,111:INFO: - Train metrics: accuracy: 0.601 ; loss: 176.679
2018-11-05 15:51:40,309:INFO: - Eval metrics: accuracy: 0.491 ; loss: 217.369
2018-11-05 15:51:40,455:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-67
2018-11-05 15:51:40,456:INFO: Epoch 68/300
2018-11-05 15:51:47,221:INFO: - Train metrics: accuracy: 0.602 ; loss: 174.644
2018-11-05 15:51:47,419:INFO: - Eval metrics: accuracy: 0.489 ; loss: 216.212
2018-11-05 15:51:47,419:INFO: Epoch 69/300
2018-11-05 15:51:54,254:INFO: - Train metrics: accuracy: 0.601 ; loss: 172.862
2018-11-05 15:51:54,454:INFO: - Eval metrics: accuracy: 0.489 ; loss: 215.107
2018-11-05 15:51:54,455:INFO: Epoch 70/300
2018-11-05 15:52:01,446:INFO: - Train metrics: accuracy: 0.602 ; loss: 171.080
2018-11-05 15:52:01,616:INFO: - Eval metrics: accuracy: 0.490 ; loss: 214.093
2018-11-05 15:52:01,617:INFO: Epoch 71/300
2018-11-05 15:52:08,525:INFO: - Train metrics: accuracy: 0.603 ; loss: 169.383
2018-11-05 15:52:08,703:INFO: - Eval metrics: accuracy: 0.492 ; loss: 212.821
2018-11-05 15:52:08,777:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-71
2018-11-05 15:52:08,778:INFO: Epoch 72/300
2018-11-05 15:52:15,629:INFO: - Train metrics: accuracy: 0.602 ; loss: 167.760
2018-11-05 15:52:15,841:INFO: - Eval metrics: accuracy: 0.490 ; loss: 212.369
2018-11-05 15:52:15,842:INFO: Epoch 73/300
2018-11-05 15:52:22,884:INFO: - Train metrics: accuracy: 0.603 ; loss: 166.234
2018-11-05 15:52:23,059:INFO: - Eval metrics: accuracy: 0.490 ; loss: 211.027
2018-11-05 15:52:23,061:INFO: Epoch 74/300
2018-11-05 15:52:29,770:INFO: - Train metrics: accuracy: 0.603 ; loss: 164.637
2018-11-05 15:52:29,968:INFO: - Eval metrics: accuracy: 0.489 ; loss: 210.240
2018-11-05 15:52:29,969:INFO: Epoch 75/300
2018-11-05 15:52:36,717:INFO: - Train metrics: accuracy: 0.604 ; loss: 163.134
2018-11-05 15:52:36,902:INFO: - Eval metrics: accuracy: 0.490 ; loss: 209.358
2018-11-05 15:52:36,903:INFO: Epoch 76/300
2018-11-05 15:52:43,821:INFO: - Train metrics: accuracy: 0.605 ; loss: 161.479
2018-11-05 15:52:44,007:INFO: - Eval metrics: accuracy: 0.491 ; loss: 208.429
2018-11-05 15:52:44,008:INFO: Epoch 77/300
2018-11-05 15:52:50,786:INFO: - Train metrics: accuracy: 0.606 ; loss: 160.062
2018-11-05 15:52:50,961:INFO: - Eval metrics: accuracy: 0.494 ; loss: 207.325
2018-11-05 15:52:51,031:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-77
2018-11-05 15:52:51,031:INFO: Epoch 78/300
2018-11-05 15:52:57,973:INFO: - Train metrics: accuracy: 0.606 ; loss: 158.760
2018-11-05 15:52:58,158:INFO: - Eval metrics: accuracy: 0.494 ; loss: 206.478
2018-11-05 15:52:58,239:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-78
2018-11-05 15:52:58,239:INFO: Epoch 79/300
2018-11-05 15:53:04,931:INFO: - Train metrics: accuracy: 0.608 ; loss: 157.370
2018-11-05 15:53:05,122:INFO: - Eval metrics: accuracy: 0.492 ; loss: 205.970
2018-11-05 15:53:05,123:INFO: Epoch 80/300
2018-11-05 15:53:11,986:INFO: - Train metrics: accuracy: 0.609 ; loss: 156.273
2018-11-05 15:53:12,167:INFO: - Eval metrics: accuracy: 0.493 ; loss: 205.869
2018-11-05 15:53:12,168:INFO: Epoch 81/300
2018-11-05 15:53:19,140:INFO: - Train metrics: accuracy: 0.608 ; loss: 154.832
2018-11-05 15:53:19,342:INFO: - Eval metrics: accuracy: 0.495 ; loss: 204.054
2018-11-05 15:53:19,421:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-81
2018-11-05 15:53:19,422:INFO: Epoch 82/300
2018-11-05 15:53:26,419:INFO: - Train metrics: accuracy: 0.609 ; loss: 153.556
2018-11-05 15:53:26,611:INFO: - Eval metrics: accuracy: 0.495 ; loss: 202.980
2018-11-05 15:53:26,612:INFO: Epoch 83/300
2018-11-05 15:53:33,558:INFO: - Train metrics: accuracy: 0.610 ; loss: 152.148
2018-11-05 15:53:33,750:INFO: - Eval metrics: accuracy: 0.496 ; loss: 202.173
2018-11-05 15:53:33,822:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-83
2018-11-05 15:53:33,823:INFO: Epoch 84/300
2018-11-05 15:53:40,791:INFO: - Train metrics: accuracy: 0.612 ; loss: 151.031
2018-11-05 15:53:40,985:INFO: - Eval metrics: accuracy: 0.498 ; loss: 201.470
2018-11-05 15:53:41,066:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-84
2018-11-05 15:53:41,066:INFO: Epoch 85/300
2018-11-05 15:53:47,883:INFO: - Train metrics: accuracy: 0.612 ; loss: 149.954
2018-11-05 15:53:48,104:INFO: - Eval metrics: accuracy: 0.497 ; loss: 200.680
2018-11-05 15:53:48,105:INFO: Epoch 86/300
2018-11-05 15:53:54,580:INFO: - Train metrics: accuracy: 0.612 ; loss: 148.859
2018-11-05 15:53:54,770:INFO: - Eval metrics: accuracy: 0.498 ; loss: 199.719
2018-11-05 15:53:54,845:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-86
2018-11-05 15:53:54,846:INFO: Epoch 87/300
2018-11-05 15:54:00,992:INFO: - Train metrics: accuracy: 0.612 ; loss: 147.924
2018-11-05 15:54:01,170:INFO: - Eval metrics: accuracy: 0.497 ; loss: 199.428
2018-11-05 15:54:01,171:INFO: Epoch 88/300
2018-11-05 15:54:07,074:INFO: - Train metrics: accuracy: 0.612 ; loss: 146.756
2018-11-05 15:54:07,234:INFO: - Eval metrics: accuracy: 0.498 ; loss: 198.619
2018-11-05 15:54:07,304:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-88
2018-11-05 15:54:07,304:INFO: Epoch 89/300
2018-11-05 15:54:12,780:INFO: - Train metrics: accuracy: 0.612 ; loss: 145.919
2018-11-05 15:54:12,940:INFO: - Eval metrics: accuracy: 0.499 ; loss: 197.651
2018-11-05 15:54:13,012:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-89
2018-11-05 15:54:13,012:INFO: Epoch 90/300
2018-11-05 15:54:18,254:INFO: - Train metrics: accuracy: 0.613 ; loss: 144.750
2018-11-05 15:54:18,482:INFO: - Eval metrics: accuracy: 0.500 ; loss: 196.973
2018-11-05 15:54:18,554:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-90
2018-11-05 15:54:18,555:INFO: Epoch 91/300
2018-11-05 15:54:24,119:INFO: - Train metrics: accuracy: 0.614 ; loss: 143.694
2018-11-05 15:54:24,280:INFO: - Eval metrics: accuracy: 0.500 ; loss: 196.247
2018-11-05 15:54:24,357:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-91
2018-11-05 15:54:24,358:INFO: Epoch 92/300
2018-11-05 15:54:30,046:INFO: - Train metrics: accuracy: 0.614 ; loss: 142.910
2018-11-05 15:54:30,213:INFO: - Eval metrics: accuracy: 0.500 ; loss: 195.798
2018-11-05 15:54:30,214:INFO: Epoch 93/300
2018-11-05 15:54:36,064:INFO: - Train metrics: accuracy: 0.614 ; loss: 142.177
2018-11-05 15:54:36,256:INFO: - Eval metrics: accuracy: 0.499 ; loss: 195.176
2018-11-05 15:54:36,257:INFO: Epoch 94/300
2018-11-05 15:54:43,084:INFO: - Train metrics: accuracy: 0.615 ; loss: 140.997
2018-11-05 15:54:43,272:INFO: - Eval metrics: accuracy: 0.501 ; loss: 194.184
2018-11-05 15:54:43,351:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-94
2018-11-05 15:54:43,351:INFO: Epoch 95/300
2018-11-05 15:54:50,259:INFO: - Train metrics: accuracy: 0.615 ; loss: 140.334
2018-11-05 15:54:50,446:INFO: - Eval metrics: accuracy: 0.501 ; loss: 193.520
2018-11-05 15:54:50,447:INFO: Epoch 96/300
2018-11-05 15:54:57,517:INFO: - Train metrics: accuracy: 0.615 ; loss: 139.424
2018-11-05 15:54:57,702:INFO: - Eval metrics: accuracy: 0.500 ; loss: 192.776
2018-11-05 15:54:57,703:INFO: Epoch 97/300
2018-11-05 15:55:04,558:INFO: - Train metrics: accuracy: 0.616 ; loss: 138.751
2018-11-05 15:55:04,761:INFO: - Eval metrics: accuracy: 0.501 ; loss: 192.841
2018-11-05 15:55:04,836:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-97
2018-11-05 15:55:04,837:INFO: Epoch 98/300
2018-11-05 15:55:12,064:INFO: - Train metrics: accuracy: 0.615 ; loss: 138.237
2018-11-05 15:55:12,243:INFO: - Eval metrics: accuracy: 0.502 ; loss: 191.599
2018-11-05 15:55:12,315:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-98
2018-11-05 15:55:12,315:INFO: Epoch 99/300
2018-11-05 15:55:19,491:INFO: - Train metrics: accuracy: 0.616 ; loss: 137.029
2018-11-05 15:55:19,659:INFO: - Eval metrics: accuracy: 0.503 ; loss: 190.740
2018-11-05 15:55:19,739:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-99
2018-11-05 15:55:19,740:INFO: Epoch 100/300
2018-11-05 15:55:26,805:INFO: - Train metrics: accuracy: 0.617 ; loss: 136.084
2018-11-05 15:55:27,017:INFO: - Eval metrics: accuracy: 0.501 ; loss: 189.759
2018-11-05 15:55:27,018:INFO: Epoch 101/300
2018-11-05 15:55:33,679:INFO: - Train metrics: accuracy: 0.618 ; loss: 135.209
2018-11-05 15:55:33,879:INFO: - Eval metrics: accuracy: 0.502 ; loss: 189.276
2018-11-05 15:55:33,880:INFO: Epoch 102/300
2018-11-05 15:55:40,685:INFO: - Train metrics: accuracy: 0.619 ; loss: 134.395
2018-11-05 15:55:40,902:INFO: - Eval metrics: accuracy: 0.503 ; loss: 188.572
2018-11-05 15:55:40,903:INFO: Epoch 103/300
2018-11-05 15:55:47,651:INFO: - Train metrics: accuracy: 0.619 ; loss: 133.724
2018-11-05 15:55:47,830:INFO: - Eval metrics: accuracy: 0.504 ; loss: 187.898
2018-11-05 15:55:47,901:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-103
2018-11-05 15:55:47,902:INFO: Epoch 104/300
2018-11-05 15:55:54,571:INFO: - Train metrics: accuracy: 0.619 ; loss: 132.915
2018-11-05 15:55:54,770:INFO: - Eval metrics: accuracy: 0.505 ; loss: 186.988
2018-11-05 15:55:54,848:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-104
2018-11-05 15:55:54,848:INFO: Epoch 105/300
2018-11-05 15:56:01,855:INFO: - Train metrics: accuracy: 0.621 ; loss: 132.067
2018-11-05 15:56:02,031:INFO: - Eval metrics: accuracy: 0.503 ; loss: 186.033
2018-11-05 15:56:02,032:INFO: Epoch 106/300
2018-11-05 15:56:09,090:INFO: - Train metrics: accuracy: 0.621 ; loss: 131.422
2018-11-05 15:56:09,257:INFO: - Eval metrics: accuracy: 0.503 ; loss: 185.651
2018-11-05 15:56:09,258:INFO: Epoch 107/300
2018-11-05 15:56:16,341:INFO: - Train metrics: accuracy: 0.620 ; loss: 130.771
2018-11-05 15:56:16,507:INFO: - Eval metrics: accuracy: 0.501 ; loss: 185.639
2018-11-05 15:56:16,508:INFO: Epoch 108/300
2018-11-05 15:56:23,337:INFO: - Train metrics: accuracy: 0.621 ; loss: 130.160
2018-11-05 15:56:23,501:INFO: - Eval metrics: accuracy: 0.503 ; loss: 184.269
2018-11-05 15:56:23,501:INFO: Epoch 109/300
2018-11-05 15:56:30,191:INFO: - Train metrics: accuracy: 0.621 ; loss: 129.272
2018-11-05 15:56:30,392:INFO: - Eval metrics: accuracy: 0.504 ; loss: 183.255
2018-11-05 15:56:30,394:INFO: Epoch 110/300
2018-11-05 15:56:37,693:INFO: - Train metrics: accuracy: 0.621 ; loss: 128.648
2018-11-05 15:56:37,867:INFO: - Eval metrics: accuracy: 0.502 ; loss: 182.354
2018-11-05 15:56:37,868:INFO: Epoch 111/300
2018-11-05 15:56:44,737:INFO: - Train metrics: accuracy: 0.622 ; loss: 127.997
2018-11-05 15:56:44,909:INFO: - Eval metrics: accuracy: 0.505 ; loss: 181.853
2018-11-05 15:56:44,910:INFO: Epoch 112/300
2018-11-05 15:56:51,492:INFO: - Train metrics: accuracy: 0.624 ; loss: 127.129
2018-11-05 15:56:51,696:INFO: - Eval metrics: accuracy: 0.504 ; loss: 180.621
2018-11-05 15:56:51,697:INFO: Epoch 113/300
2018-11-05 15:56:58,491:INFO: - Train metrics: accuracy: 0.624 ; loss: 126.362
2018-11-05 15:56:58,656:INFO: - Eval metrics: accuracy: 0.506 ; loss: 179.668
2018-11-05 15:56:58,735:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-113
2018-11-05 15:56:58,735:INFO: Epoch 114/300
2018-11-05 15:57:05,447:INFO: - Train metrics: accuracy: 0.624 ; loss: 125.652
2018-11-05 15:57:05,672:INFO: - Eval metrics: accuracy: 0.504 ; loss: 178.980
2018-11-05 15:57:05,673:INFO: Epoch 115/300
2018-11-05 15:57:12,537:INFO: - Train metrics: accuracy: 0.625 ; loss: 124.939
2018-11-05 15:57:12,694:INFO: - Eval metrics: accuracy: 0.506 ; loss: 177.880
2018-11-05 15:57:12,700:INFO: Epoch 116/300
2018-11-05 15:57:19,268:INFO: - Train metrics: accuracy: 0.625 ; loss: 124.295
2018-11-05 15:57:19,430:INFO: - Eval metrics: accuracy: 0.505 ; loss: 176.904
2018-11-05 15:57:19,431:INFO: Epoch 117/300
2018-11-05 15:57:26,325:INFO: - Train metrics: accuracy: 0.625 ; loss: 123.642
2018-11-05 15:57:26,543:INFO: - Eval metrics: accuracy: 0.505 ; loss: 176.283
2018-11-05 15:57:26,543:INFO: Epoch 118/300
2018-11-05 15:57:33,232:INFO: - Train metrics: accuracy: 0.626 ; loss: 123.163
2018-11-05 15:57:33,407:INFO: - Eval metrics: accuracy: 0.505 ; loss: 176.635
2018-11-05 15:57:33,408:INFO: Epoch 119/300
2018-11-05 15:57:40,295:INFO: - Train metrics: accuracy: 0.627 ; loss: 122.631
2018-11-05 15:57:40,503:INFO: - Eval metrics: accuracy: 0.505 ; loss: 174.355
2018-11-05 15:57:40,504:INFO: Epoch 120/300
2018-11-05 15:57:47,315:INFO: - Train metrics: accuracy: 0.627 ; loss: 121.793
2018-11-05 15:57:47,498:INFO: - Eval metrics: accuracy: 0.506 ; loss: 173.446
2018-11-05 15:57:47,499:INFO: Epoch 121/300
2018-11-05 15:57:54,352:INFO: - Train metrics: accuracy: 0.627 ; loss: 121.135
2018-11-05 15:57:54,570:INFO: - Eval metrics: accuracy: 0.505 ; loss: 173.129
2018-11-05 15:57:54,571:INFO: Epoch 122/300
2018-11-05 15:58:01,487:INFO: - Train metrics: accuracy: 0.627 ; loss: 120.504
2018-11-05 15:58:01,683:INFO: - Eval metrics: accuracy: 0.506 ; loss: 172.151
2018-11-05 15:58:01,755:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-122
2018-11-05 15:58:01,756:INFO: Epoch 123/300
2018-11-05 15:58:08,555:INFO: - Train metrics: accuracy: 0.628 ; loss: 119.868
2018-11-05 15:58:08,735:INFO: - Eval metrics: accuracy: 0.507 ; loss: 171.018
2018-11-05 15:58:08,808:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-123
2018-11-05 15:58:08,809:INFO: Epoch 124/300
2018-11-05 15:58:15,693:INFO: - Train metrics: accuracy: 0.628 ; loss: 119.259
2018-11-05 15:58:15,855:INFO: - Eval metrics: accuracy: 0.509 ; loss: 170.194
2018-11-05 15:58:15,924:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-124
2018-11-05 15:58:15,925:INFO: Epoch 125/300
2018-11-05 15:58:22,397:INFO: - Train metrics: accuracy: 0.629 ; loss: 118.577
2018-11-05 15:58:22,561:INFO: - Eval metrics: accuracy: 0.509 ; loss: 169.297
2018-11-05 15:58:22,562:INFO: Epoch 126/300
2018-11-05 15:58:29,362:INFO: - Train metrics: accuracy: 0.630 ; loss: 117.858
2018-11-05 15:58:29,586:INFO: - Eval metrics: accuracy: 0.509 ; loss: 168.247
2018-11-05 15:58:29,657:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-126
2018-11-05 15:58:29,658:INFO: Epoch 127/300
2018-11-05 15:58:35,415:INFO: Creating the datasets...
2018-11-05 15:58:50,621:INFO: Creating the datasets...
2018-11-05 15:58:53,265:INFO: - done.
2018-11-05 15:58:53,265:INFO: Creating the model...
2018-11-05 15:58:53,816:INFO: - done.
2018-11-05 15:58:53,816:INFO: Starting training for 300 epoch(s)
2018-11-05 15:58:54,183:INFO: Epoch 1/300
2018-11-05 15:59:00,466:INFO: - Train metrics: loss: 0.001 ; accuracy: 0.344
2018-11-05 15:59:00,732:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.259
2018-11-05 15:59:00,807:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 15:59:00,811:INFO: Epoch 2/300
2018-11-05 15:59:06,783:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.444
2018-11-05 15:59:06,946:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.339
2018-11-05 15:59:07,018:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 15:59:07,022:INFO: Epoch 3/300
2018-11-05 15:59:13,149:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.501
2018-11-05 15:59:13,319:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.400
2018-11-05 15:59:13,389:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 15:59:13,394:INFO: Epoch 4/300
2018-11-05 15:59:19,627:INFO: Creating the datasets...
2018-11-05 15:59:22,231:INFO: - done.
2018-11-05 15:59:22,231:INFO: Creating the model...
2018-11-05 15:59:22,766:INFO: - done.
2018-11-05 15:59:22,766:INFO: Starting training for 300 epoch(s)
2018-11-05 15:59:23,127:INFO: Epoch 1/300
2018-11-05 15:59:29,448:INFO: - Train metrics: accuracy: 0.320 ; loss: 0.071
2018-11-05 15:59:29,734:INFO: - Eval metrics: accuracy: 0.349 ; loss: 0.022
2018-11-05 15:59:29,817:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 15:59:29,817:INFO: Epoch 2/300
2018-11-05 15:59:35,856:INFO: - Train metrics: accuracy: 0.465 ; loss: 0.019
2018-11-05 15:59:36,015:INFO: - Eval metrics: accuracy: 0.375 ; loss: 0.017
2018-11-05 15:59:36,086:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 15:59:36,086:INFO: Epoch 3/300
2018-11-05 15:59:42,357:INFO: - Train metrics: accuracy: 0.509 ; loss: 0.013
2018-11-05 15:59:42,530:INFO: - Eval metrics: accuracy: 0.380 ; loss: 0.016
2018-11-05 15:59:42,599:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 15:59:42,600:INFO: Epoch 4/300
2018-11-05 15:59:48,918:INFO: - Train metrics: accuracy: 0.525 ; loss: 0.012
2018-11-05 15:59:49,100:INFO: - Eval metrics: accuracy: 0.387 ; loss: 0.014
2018-11-05 15:59:49,170:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 15:59:49,171:INFO: Epoch 5/300
2018-11-05 15:59:55,596:INFO: - Train metrics: accuracy: 0.532 ; loss: 0.011
2018-11-05 15:59:55,754:INFO: - Eval metrics: accuracy: 0.400 ; loss: 0.012
2018-11-05 15:59:55,858:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 15:59:55,858:INFO: Epoch 6/300
2018-11-05 16:00:02,036:INFO: - Train metrics: accuracy: 0.539 ; loss: 0.010
2018-11-05 16:00:02,213:INFO: - Eval metrics: accuracy: 0.415 ; loss: 0.010
2018-11-05 16:00:02,285:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-05 16:00:02,286:INFO: Epoch 7/300
2018-11-05 16:00:08,386:INFO: - Train metrics: accuracy: 0.549 ; loss: 0.008
2018-11-05 16:00:08,569:INFO: - Eval metrics: accuracy: 0.430 ; loss: 0.008
2018-11-05 16:00:08,639:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-05 16:00:08,640:INFO: Epoch 8/300
2018-11-05 16:00:14,890:INFO: - Train metrics: accuracy: 0.560 ; loss: 0.007
2018-11-05 16:00:15,094:INFO: - Eval metrics: accuracy: 0.440 ; loss: 0.007
2018-11-05 16:00:15,170:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-05 16:00:15,171:INFO: Epoch 9/300
2018-11-05 16:00:21,381:INFO: - Train metrics: accuracy: 0.571 ; loss: 0.006
2018-11-05 16:00:21,553:INFO: - Eval metrics: accuracy: 0.446 ; loss: 0.006
2018-11-05 16:00:21,633:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-05 16:00:21,633:INFO: Epoch 10/300
2018-11-05 16:00:27,847:INFO: - Train metrics: accuracy: 0.581 ; loss: 0.006
2018-11-05 16:00:28,020:INFO: - Eval metrics: accuracy: 0.450 ; loss: 0.006
2018-11-05 16:00:28,095:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-05 16:00:28,095:INFO: Epoch 11/300
2018-11-05 16:00:34,329:INFO: - Train metrics: accuracy: 0.588 ; loss: 0.005
2018-11-05 16:00:34,532:INFO: - Eval metrics: accuracy: 0.454 ; loss: 0.005
2018-11-05 16:00:34,614:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-05 16:00:34,615:INFO: Epoch 12/300
2018-11-05 16:00:40,926:INFO: - Train metrics: accuracy: 0.595 ; loss: 0.005
2018-11-05 16:00:41,109:INFO: - Eval metrics: accuracy: 0.457 ; loss: 0.005
2018-11-05 16:00:41,187:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-05 16:00:41,187:INFO: Epoch 13/300
2018-11-05 16:00:47,321:INFO: - Train metrics: accuracy: 0.600 ; loss: 0.005
2018-11-05 16:00:47,496:INFO: - Eval metrics: accuracy: 0.460 ; loss: 0.005
2018-11-05 16:00:47,570:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-05 16:00:47,570:INFO: Epoch 14/300
2018-11-05 16:00:53,600:INFO: - Train metrics: accuracy: 0.604 ; loss: 0.005
2018-11-05 16:00:53,779:INFO: - Eval metrics: accuracy: 0.462 ; loss: 0.005
2018-11-05 16:00:53,852:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-05 16:00:53,853:INFO: Epoch 15/300
2018-11-05 16:00:59,900:INFO: - Train metrics: accuracy: 0.609 ; loss: 0.004
2018-11-05 16:01:00,071:INFO: - Eval metrics: accuracy: 0.465 ; loss: 0.004
2018-11-05 16:01:00,142:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-05 16:01:00,143:INFO: Epoch 16/300
2018-11-05 16:01:06,239:INFO: - Train metrics: accuracy: 0.612 ; loss: 0.004
2018-11-05 16:01:06,417:INFO: - Eval metrics: accuracy: 0.468 ; loss: 0.004
2018-11-05 16:01:06,486:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-05 16:01:06,487:INFO: Epoch 17/300
2018-11-05 16:01:12,587:INFO: - Train metrics: accuracy: 0.616 ; loss: 0.004
2018-11-05 16:01:12,758:INFO: - Eval metrics: accuracy: 0.471 ; loss: 0.004
2018-11-05 16:01:12,828:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-05 16:01:12,828:INFO: Epoch 18/300
2018-11-05 16:02:09,508:INFO: Creating the datasets...
2018-11-05 16:02:12,104:INFO: - done.
2018-11-05 16:02:12,104:INFO: Creating the model...
2018-11-05 16:02:12,644:INFO: - done.
2018-11-05 16:02:12,644:INFO: Starting training for 300 epoch(s)
2018-11-05 16:02:13,026:INFO: Epoch 1/300
2018-11-05 16:02:19,370:INFO: - Train metrics: accuracy: 0.320 ; loss: 0.071
2018-11-05 16:02:19,649:INFO: - Eval metrics: accuracy: 0.349 ; loss: 0.022
2018-11-05 16:02:19,731:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 16:02:19,736:INFO: Epoch 2/300
2018-11-05 16:02:25,788:INFO: - Train metrics: accuracy: 0.465 ; loss: 0.019
2018-11-05 16:02:25,974:INFO: - Eval metrics: accuracy: 0.375 ; loss: 0.017
2018-11-05 16:02:26,043:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 16:02:26,048:INFO: Epoch 3/300
2018-11-05 16:02:32,148:INFO: - Train metrics: accuracy: 0.509 ; loss: 0.013
2018-11-05 16:02:32,317:INFO: - Eval metrics: accuracy: 0.380 ; loss: 0.016
2018-11-05 16:02:32,384:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 16:02:32,391:INFO: Epoch 4/300
2018-11-05 16:02:38,526:INFO: - Train metrics: accuracy: 0.525 ; loss: 0.012
2018-11-05 16:02:38,688:INFO: - Eval metrics: accuracy: 0.387 ; loss: 0.014
2018-11-05 16:02:38,760:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 16:02:38,764:INFO: Epoch 5/300
2018-11-05 16:02:44,951:INFO: - Train metrics: accuracy: 0.532 ; loss: 0.011
2018-11-05 16:02:45,125:INFO: - Eval metrics: accuracy: 0.400 ; loss: 0.012
2018-11-05 16:02:45,199:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 16:02:45,203:INFO: Epoch 6/300
2018-11-05 16:02:51,489:INFO: - Train metrics: accuracy: 0.539 ; loss: 0.010
2018-11-05 16:02:51,684:INFO: - Eval metrics: accuracy: 0.415 ; loss: 0.010
2018-11-05 16:02:51,765:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-05 16:02:51,771:INFO: Epoch 7/300
2018-11-05 16:02:58,834:INFO: - Train metrics: accuracy: 0.549 ; loss: 0.008
2018-11-05 16:02:59,014:INFO: - Eval metrics: accuracy: 0.430 ; loss: 0.008
2018-11-05 16:02:59,085:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-05 16:02:59,089:INFO: Epoch 8/300
2018-11-05 16:03:05,208:INFO: - Train metrics: accuracy: 0.560 ; loss: 0.007
2018-11-05 16:03:05,390:INFO: - Eval metrics: accuracy: 0.440 ; loss: 0.007
2018-11-05 16:03:05,456:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-05 16:03:05,461:INFO: Epoch 9/300
2018-11-05 16:03:11,574:INFO: - Train metrics: accuracy: 0.571 ; loss: 0.006
2018-11-05 16:03:11,742:INFO: - Eval metrics: accuracy: 0.446 ; loss: 0.006
2018-11-05 16:03:11,819:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-05 16:03:11,823:INFO: Epoch 10/300
2018-11-05 16:03:17,963:INFO: - Train metrics: accuracy: 0.581 ; loss: 0.006
2018-11-05 16:03:18,145:INFO: - Eval metrics: accuracy: 0.450 ; loss: 0.006
2018-11-05 16:03:18,222:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-05 16:03:18,227:INFO: Epoch 11/300
2018-11-05 16:03:24,243:INFO: - Train metrics: accuracy: 0.588 ; loss: 0.005
2018-11-05 16:03:24,406:INFO: - Eval metrics: accuracy: 0.454 ; loss: 0.005
2018-11-05 16:03:24,474:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-05 16:03:24,478:INFO: Epoch 12/300
2018-11-05 16:03:56,676:INFO: Creating the datasets...
2018-11-05 16:09:16,675:INFO: Creating the datasets...
2018-11-05 16:09:56,978:INFO: Creating the datasets...
2018-11-05 16:10:36,541:INFO: Creating the datasets...
2018-11-05 16:11:18,901:INFO: Creating the datasets...
2018-11-05 16:11:21,854:INFO: - done.
2018-11-05 16:11:21,854:INFO: Creating the model...
2018-11-05 16:11:46,331:INFO: Creating the datasets...
2018-11-05 16:11:49,299:INFO: - done.
2018-11-05 16:11:49,299:INFO: Creating the model...
2018-11-05 16:12:09,436:INFO: Creating the datasets...
2018-11-05 16:12:24,761:INFO: Creating the datasets...
2018-11-05 16:13:25,208:INFO: Creating the datasets...
2018-11-05 16:13:53,091:INFO: Creating the datasets...
2018-11-05 16:14:50,938:INFO: Creating the datasets...
2018-11-05 16:14:53,968:INFO: - done.
2018-11-05 16:14:53,968:INFO: Creating the model...
2018-11-05 16:14:54,576:INFO: - done.
2018-11-05 16:14:54,576:INFO: Starting training for 300 epoch(s)
2018-11-05 16:14:54,984:INFO: Epoch 1/300
2018-11-05 16:15:23,627:INFO: Creating the datasets...
2018-11-05 16:15:26,733:INFO: - done.
2018-11-05 16:15:26,734:INFO: Creating the model...
2018-11-05 16:15:27,320:INFO: - done.
2018-11-05 16:15:27,320:INFO: Starting training for 300 epoch(s)
2018-11-05 16:15:27,707:INFO: Epoch 1/300
2018-11-05 16:15:39,957:INFO: Creating the datasets...
2018-11-05 16:16:05,116:INFO: Creating the datasets...
2018-11-05 16:16:12,858:INFO: Creating the datasets...
2018-11-05 16:16:27,993:INFO: Creating the datasets...
2018-11-05 16:17:01,759:INFO: Creating the datasets...
2018-11-05 16:17:16,065:INFO: Creating the datasets...
2018-11-05 16:17:18,947:INFO: - done.
2018-11-05 16:17:18,947:INFO: Creating the model...
2018-11-05 16:17:19,555:INFO: - done.
2018-11-05 16:17:19,555:INFO: Starting training for 300 epoch(s)
2018-11-05 16:17:19,871:INFO: Epoch 1/300
2018-11-05 16:18:19,743:INFO: Creating the datasets...
2018-11-05 16:18:59,401:INFO: Creating the datasets...
2018-11-05 16:19:02,082:INFO: - done.
2018-11-05 16:19:02,083:INFO: Creating the model...
2018-11-05 16:19:02,646:INFO: - done.
2018-11-05 16:19:02,646:INFO: Starting training for 300 epoch(s)
2018-11-05 16:19:03,016:INFO: Epoch 1/300
2018-11-05 16:19:26,185:INFO: Creating the datasets...
2018-11-05 16:19:28,883:INFO: - done.
2018-11-05 16:19:28,883:INFO: Creating the model...
2018-11-05 16:19:29,438:INFO: - done.
2018-11-05 16:19:29,438:INFO: Starting training for 300 epoch(s)
2018-11-05 16:19:29,810:INFO: Epoch 1/300
2018-11-05 16:19:36,059:INFO: - Train metrics: loss: 0.071 ; accuracy: 0.320
2018-11-05 16:19:36,343:INFO: - Eval metrics: loss: 0.022 ; accuracy: 0.349
2018-11-05 16:19:36,424:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 16:19:36,424:INFO: Epoch 2/300
2018-11-05 16:19:42,559:INFO: - Train metrics: loss: 0.019 ; accuracy: 0.465
2018-11-05 16:19:42,731:INFO: - Eval metrics: loss: 0.017 ; accuracy: 0.375
2018-11-05 16:19:42,804:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 16:19:42,804:INFO: Epoch 3/300
2018-11-05 16:19:48,792:INFO: - Train metrics: loss: 0.013 ; accuracy: 0.509
2018-11-05 16:19:48,965:INFO: - Eval metrics: loss: 0.016 ; accuracy: 0.380
2018-11-05 16:19:49,031:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 16:19:49,031:INFO: Epoch 4/300
2018-11-05 16:19:55,090:INFO: - Train metrics: loss: 0.012 ; accuracy: 0.525
2018-11-05 16:19:55,246:INFO: - Eval metrics: loss: 0.014 ; accuracy: 0.387
2018-11-05 16:19:55,320:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 16:19:55,320:INFO: Epoch 5/300
2018-11-05 16:20:01,729:INFO: - Train metrics: loss: 0.011 ; accuracy: 0.532
2018-11-05 16:20:01,902:INFO: - Eval metrics: loss: 0.012 ; accuracy: 0.400
2018-11-05 16:20:01,980:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 16:20:01,981:INFO: Epoch 6/300
2018-11-05 16:20:08,434:INFO: - Train metrics: loss: 0.010 ; accuracy: 0.539
2018-11-05 16:20:08,629:INFO: - Eval metrics: loss: 0.010 ; accuracy: 0.415
2018-11-05 16:20:08,705:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-05 16:20:08,706:INFO: Epoch 7/300
2018-11-05 16:20:14,984:INFO: - Train metrics: loss: 0.008 ; accuracy: 0.549
2018-11-05 16:20:15,167:INFO: - Eval metrics: loss: 0.008 ; accuracy: 0.430
2018-11-05 16:20:15,244:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-05 16:20:15,245:INFO: Epoch 8/300
2018-11-05 16:20:21,370:INFO: - Train metrics: loss: 0.007 ; accuracy: 0.560
2018-11-05 16:20:21,545:INFO: - Eval metrics: loss: 0.007 ; accuracy: 0.440
2018-11-05 16:20:21,615:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-05 16:20:21,616:INFO: Epoch 9/300
2018-11-05 16:20:27,919:INFO: - Train metrics: loss: 0.006 ; accuracy: 0.571
2018-11-05 16:20:28,105:INFO: - Eval metrics: loss: 0.006 ; accuracy: 0.446
2018-11-05 16:20:28,176:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-05 16:20:28,176:INFO: Epoch 10/300
2018-11-05 16:20:33,072:INFO: Creating the datasets...
2018-11-05 16:20:43,286:INFO: Creating the datasets...
2018-11-05 16:24:57,703:INFO: Creating the datasets...
2018-11-05 16:25:17,574:INFO: Creating the datasets...
2018-11-05 16:30:07,375:INFO: Creating the datasets...
2018-11-05 16:30:23,579:INFO: Creating the datasets...
2018-11-05 16:30:26,296:INFO: - done.
2018-11-05 16:30:26,297:INFO: Creating the model...
2018-11-05 16:30:26,861:INFO: - done.
2018-11-05 16:30:26,861:INFO: Starting training for 300 epoch(s)
2018-11-05 16:30:27,231:INFO: Epoch 1/300
2018-11-05 16:30:33,573:INFO: - Train metrics: accuracy: 0.320 ; loss: 0.071
2018-11-05 16:30:33,850:INFO: - Eval metrics: accuracy: 0.349 ; loss: 0.022
2018-11-05 16:30:33,924:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 16:30:33,925:INFO: Epoch 2/300
2018-11-05 16:30:39,916:INFO: - Train metrics: accuracy: 0.465 ; loss: 0.019
2018-11-05 16:30:40,102:INFO: - Eval metrics: accuracy: 0.375 ; loss: 0.017
2018-11-05 16:30:40,169:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 16:30:40,171:INFO: Epoch 3/300
2018-11-05 16:30:46,713:INFO: - Train metrics: accuracy: 0.509 ; loss: 0.013
2018-11-05 16:30:46,873:INFO: - Eval metrics: accuracy: 0.380 ; loss: 0.016
2018-11-05 16:30:46,946:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 16:30:46,947:INFO: Epoch 4/300
2018-11-05 16:30:53,486:INFO: - Train metrics: accuracy: 0.525 ; loss: 0.012
2018-11-05 16:30:53,674:INFO: - Eval metrics: accuracy: 0.387 ; loss: 0.014
2018-11-05 16:30:53,748:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 16:30:53,750:INFO: Epoch 5/300
2018-11-05 16:31:00,568:INFO: - Train metrics: accuracy: 0.532 ; loss: 0.011
2018-11-05 16:31:00,771:INFO: - Eval metrics: accuracy: 0.400 ; loss: 0.012
2018-11-05 16:31:00,845:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 16:31:00,846:INFO: Epoch 6/300
2018-11-05 16:31:07,568:INFO: - Train metrics: accuracy: 0.539 ; loss: 0.010
2018-11-05 16:31:07,758:INFO: - Eval metrics: accuracy: 0.415 ; loss: 0.010
2018-11-05 16:31:07,834:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-05 16:31:07,836:INFO: Epoch 7/300
2018-11-05 16:31:14,522:INFO: - Train metrics: accuracy: 0.549 ; loss: 0.008
2018-11-05 16:31:14,714:INFO: - Eval metrics: accuracy: 0.430 ; loss: 0.008
2018-11-05 16:31:14,782:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-05 16:31:14,783:INFO: Epoch 8/300
2018-11-05 16:31:21,487:INFO: - Train metrics: accuracy: 0.560 ; loss: 0.007
2018-11-05 16:31:21,666:INFO: - Eval metrics: accuracy: 0.440 ; loss: 0.007
2018-11-05 16:31:21,742:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-05 16:31:21,743:INFO: Epoch 9/300
2018-11-05 16:31:28,163:INFO: - Train metrics: accuracy: 0.571 ; loss: 0.006
2018-11-05 16:31:28,340:INFO: - Eval metrics: accuracy: 0.446 ; loss: 0.006
2018-11-05 16:31:28,411:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-05 16:31:28,412:INFO: Epoch 10/300
2018-11-05 16:31:34,884:INFO: - Train metrics: accuracy: 0.581 ; loss: 0.006
2018-11-05 16:31:35,076:INFO: - Eval metrics: accuracy: 0.450 ; loss: 0.006
2018-11-05 16:31:35,149:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-05 16:31:35,150:INFO: Epoch 11/300
2018-11-05 16:31:41,827:INFO: - Train metrics: accuracy: 0.588 ; loss: 0.005
2018-11-05 16:31:42,012:INFO: - Eval metrics: accuracy: 0.454 ; loss: 0.005
2018-11-05 16:31:42,086:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-05 16:31:42,087:INFO: Epoch 12/300
2018-11-05 16:31:48,716:INFO: - Train metrics: accuracy: 0.595 ; loss: 0.005
2018-11-05 16:31:48,906:INFO: - Eval metrics: accuracy: 0.457 ; loss: 0.005
2018-11-05 16:31:48,970:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-05 16:31:48,971:INFO: Epoch 13/300
2018-11-05 16:31:55,809:INFO: - Train metrics: accuracy: 0.600 ; loss: 0.005
2018-11-05 16:31:56,000:INFO: - Eval metrics: accuracy: 0.460 ; loss: 0.005
2018-11-05 16:31:56,067:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-05 16:31:56,069:INFO: Epoch 14/300
2018-11-05 16:32:02,956:INFO: - Train metrics: accuracy: 0.604 ; loss: 0.005
2018-11-05 16:32:03,155:INFO: - Eval metrics: accuracy: 0.462 ; loss: 0.005
2018-11-05 16:32:03,225:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-05 16:32:03,228:INFO: Epoch 15/300
2018-11-05 16:32:10,023:INFO: - Train metrics: accuracy: 0.609 ; loss: 0.004
2018-11-05 16:32:10,237:INFO: - Eval metrics: accuracy: 0.465 ; loss: 0.004
2018-11-05 16:32:10,323:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-05 16:32:10,325:INFO: Epoch 16/300
2018-11-05 16:32:17,176:INFO: - Train metrics: accuracy: 0.612 ; loss: 0.004
2018-11-05 16:32:17,364:INFO: - Eval metrics: accuracy: 0.468 ; loss: 0.004
2018-11-05 16:32:17,447:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-05 16:32:17,449:INFO: Epoch 17/300
2018-11-05 16:32:24,024:INFO: - Train metrics: accuracy: 0.616 ; loss: 0.004
2018-11-05 16:32:24,242:INFO: - Eval metrics: accuracy: 0.471 ; loss: 0.004
2018-11-05 16:32:24,311:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-05 16:32:24,313:INFO: Epoch 18/300
2018-11-05 16:32:30,877:INFO: - Train metrics: accuracy: 0.620 ; loss: 0.004
2018-11-05 16:32:31,054:INFO: - Eval metrics: accuracy: 0.473 ; loss: 0.004
2018-11-05 16:32:31,126:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-05 16:32:31,128:INFO: Epoch 19/300
2018-11-05 16:32:37,741:INFO: - Train metrics: accuracy: 0.623 ; loss: 0.004
2018-11-05 16:32:37,932:INFO: - Eval metrics: accuracy: 0.475 ; loss: 0.004
2018-11-05 16:32:38,007:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-05 16:32:38,009:INFO: Epoch 20/300
2018-11-05 16:32:44,832:INFO: - Train metrics: accuracy: 0.626 ; loss: 0.004
2018-11-05 16:32:45,026:INFO: - Eval metrics: accuracy: 0.477 ; loss: 0.004
2018-11-05 16:32:45,136:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-20
2018-11-05 16:32:45,138:INFO: Epoch 21/300
2018-11-05 16:32:51,561:INFO: - Train metrics: accuracy: 0.630 ; loss: 0.003
2018-11-05 16:32:51,749:INFO: - Eval metrics: accuracy: 0.480 ; loss: 0.003
2018-11-05 16:32:51,818:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-05 16:32:51,819:INFO: Epoch 22/300
2018-11-05 16:32:58,385:INFO: - Train metrics: accuracy: 0.633 ; loss: 0.003
2018-11-05 16:32:58,566:INFO: - Eval metrics: accuracy: 0.484 ; loss: 0.003
2018-11-05 16:32:58,635:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-05 16:32:58,636:INFO: Epoch 23/300
2018-11-05 16:33:05,413:INFO: - Train metrics: accuracy: 0.637 ; loss: 0.003
2018-11-05 16:33:05,574:INFO: - Eval metrics: accuracy: 0.487 ; loss: 0.003
2018-11-05 16:33:05,637:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-05 16:33:05,638:INFO: Epoch 24/300
2018-11-05 16:33:12,256:INFO: - Train metrics: accuracy: 0.640 ; loss: 0.003
2018-11-05 16:33:12,450:INFO: - Eval metrics: accuracy: 0.492 ; loss: 0.003
2018-11-05 16:33:12,519:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-05 16:33:12,521:INFO: Epoch 25/300
2018-11-05 16:33:19,006:INFO: - Train metrics: accuracy: 0.644 ; loss: 0.003
2018-11-05 16:33:19,202:INFO: - Eval metrics: accuracy: 0.495 ; loss: 0.003
2018-11-05 16:33:19,272:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-05 16:33:19,274:INFO: Epoch 26/300
2018-11-05 16:33:25,736:INFO: - Train metrics: accuracy: 0.648 ; loss: 0.003
2018-11-05 16:33:25,922:INFO: - Eval metrics: accuracy: 0.499 ; loss: 0.003
2018-11-05 16:33:25,991:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-05 16:33:25,993:INFO: Epoch 27/300
2018-11-05 16:33:32,460:INFO: - Train metrics: accuracy: 0.652 ; loss: 0.003
2018-11-05 16:33:32,651:INFO: - Eval metrics: accuracy: 0.502 ; loss: 0.003
2018-11-05 16:33:32,723:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-05 16:33:32,724:INFO: Epoch 28/300
2018-11-05 16:33:39,267:INFO: - Train metrics: accuracy: 0.655 ; loss: 0.002
2018-11-05 16:33:39,450:INFO: - Eval metrics: accuracy: 0.506 ; loss: 0.002
2018-11-05 16:33:39,516:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-05 16:33:39,518:INFO: Epoch 29/300
2018-11-05 16:33:46,131:INFO: - Train metrics: accuracy: 0.659 ; loss: 0.002
2018-11-05 16:33:46,337:INFO: - Eval metrics: accuracy: 0.510 ; loss: 0.002
2018-11-05 16:33:46,411:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-05 16:33:46,413:INFO: Epoch 30/300
2018-11-05 16:33:52,986:INFO: - Train metrics: accuracy: 0.662 ; loss: 0.002
2018-11-05 16:33:53,175:INFO: - Eval metrics: accuracy: 0.514 ; loss: 0.002
2018-11-05 16:33:53,252:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-30
2018-11-05 16:33:53,253:INFO: Epoch 31/300
2018-11-05 16:33:59,828:INFO: - Train metrics: accuracy: 0.666 ; loss: 0.002
2018-11-05 16:34:00,007:INFO: - Eval metrics: accuracy: 0.518 ; loss: 0.002
2018-11-05 16:34:00,076:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-31
2018-11-05 16:34:00,078:INFO: Epoch 32/300
2018-11-05 16:34:06,682:INFO: - Train metrics: accuracy: 0.669 ; loss: 0.002
2018-11-05 16:34:06,869:INFO: - Eval metrics: accuracy: 0.522 ; loss: 0.002
2018-11-05 16:34:06,938:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-05 16:34:06,940:INFO: Epoch 33/300
2018-11-05 16:34:13,551:INFO: - Train metrics: accuracy: 0.672 ; loss: 0.002
2018-11-05 16:34:13,730:INFO: - Eval metrics: accuracy: 0.525 ; loss: 0.002
2018-11-05 16:34:13,801:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-33
2018-11-05 16:34:13,802:INFO: Epoch 34/300
2018-11-05 16:34:20,415:INFO: - Train metrics: accuracy: 0.675 ; loss: 0.002
2018-11-05 16:34:20,597:INFO: - Eval metrics: accuracy: 0.529 ; loss: 0.002
2018-11-05 16:34:20,671:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-34
2018-11-05 16:34:20,672:INFO: Epoch 35/300
2018-11-05 16:34:27,210:INFO: - Train metrics: accuracy: 0.678 ; loss: 0.002
2018-11-05 16:34:27,391:INFO: - Eval metrics: accuracy: 0.533 ; loss: 0.002
2018-11-05 16:34:27,462:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-35
2018-11-05 16:34:27,464:INFO: Epoch 36/300
2018-11-05 16:34:34,037:INFO: - Train metrics: accuracy: 0.681 ; loss: 0.002
2018-11-05 16:34:34,218:INFO: - Eval metrics: accuracy: 0.537 ; loss: 0.002
2018-11-05 16:34:34,298:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-36
2018-11-05 16:34:34,299:INFO: Epoch 37/300
2018-11-05 16:34:40,865:INFO: - Train metrics: accuracy: 0.684 ; loss: 0.002
2018-11-05 16:34:41,053:INFO: - Eval metrics: accuracy: 0.541 ; loss: 0.002
2018-11-05 16:34:41,123:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-37
2018-11-05 16:34:41,124:INFO: Epoch 38/300
2018-11-05 16:34:47,767:INFO: - Train metrics: accuracy: 0.686 ; loss: 0.002
2018-11-05 16:34:47,935:INFO: - Eval metrics: accuracy: 0.544 ; loss: 0.002
2018-11-05 16:34:48,012:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-38
2018-11-05 16:34:48,013:INFO: Epoch 39/300
2018-11-05 16:34:56,283:INFO: Creating the datasets...
2018-11-05 16:35:42,785:INFO: Creating the datasets...
2018-11-05 16:36:11,609:INFO: Creating the datasets...
2018-11-05 16:37:15,262:INFO: Creating the datasets...
2018-11-05 16:43:02,525:INFO: Creating the datasets...
2018-11-05 16:43:32,700:INFO: Creating the datasets...
2018-11-05 16:44:13,586:INFO: Creating the datasets...
2018-11-05 16:44:58,261:INFO: Creating the datasets...
2018-11-05 16:45:33,638:INFO: Creating the datasets...
2018-11-05 16:46:00,711:INFO: Creating the datasets...
2018-11-05 16:46:40,193:INFO: Creating the datasets...
2018-11-05 16:47:32,869:INFO: Creating the datasets...
2018-11-05 16:48:14,118:INFO: Creating the datasets...
2018-11-05 16:49:47,052:INFO: Creating the datasets...
2018-11-05 16:50:38,890:INFO: Creating the datasets...
2018-11-05 16:52:40,331:INFO: Creating the datasets...
2018-11-05 16:52:56,185:INFO: Creating the datasets...
2018-11-05 16:52:58,860:INFO: - done.
2018-11-05 16:52:58,860:INFO: Creating the model...
2018-11-05 16:52:59,408:INFO: - done.
2018-11-05 16:52:59,409:INFO: Starting training for 300 epoch(s)
2018-11-05 16:52:59,774:INFO: Epoch 1/300
2018-11-05 16:53:06,037:INFO: - Train metrics: accuracy: 0.185 ; loss: 34.213
2018-11-05 16:53:06,319:INFO: - Eval metrics: accuracy: 0.190 ; loss: 34.545
2018-11-05 16:53:06,405:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 16:53:06,409:INFO: Epoch 2/300
2018-11-05 16:53:12,420:INFO: - Train metrics: accuracy: 0.363 ; loss: 24.396
2018-11-05 16:53:12,596:INFO: - Eval metrics: accuracy: 0.255 ; loss: 27.700
2018-11-05 16:53:12,660:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 16:53:12,664:INFO: Epoch 3/300
2018-11-05 16:53:26,984:INFO: Creating the datasets...
2018-11-05 16:53:40,800:INFO: Creating the datasets...
2018-11-05 16:53:43,401:INFO: - done.
2018-11-05 16:53:43,401:INFO: Creating the model...
2018-11-05 16:53:43,935:INFO: - done.
2018-11-05 16:53:43,935:INFO: Starting training for 300 epoch(s)
2018-11-05 16:53:44,294:INFO: Epoch 1/300
2018-11-05 16:53:50,449:INFO: - Train metrics: accuracy: 0.185 ; loss: 34.213
2018-11-05 16:53:50,728:INFO: - Eval metrics: accuracy: 0.190 ; loss: 34.545
2018-11-05 16:53:50,802:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 16:53:50,806:INFO: Epoch 2/300
2018-11-05 16:53:56,709:INFO: - Train metrics: accuracy: 0.363 ; loss: 24.396
2018-11-05 16:53:56,889:INFO: - Eval metrics: accuracy: 0.255 ; loss: 27.700
2018-11-05 16:53:56,965:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 16:53:56,970:INFO: Epoch 3/300
2018-11-05 16:54:32,772:INFO: Creating the datasets...
2018-11-05 16:54:35,387:INFO: - done.
2018-11-05 16:54:35,387:INFO: Creating the model...
2018-11-05 16:54:35,923:INFO: - done.
2018-11-05 16:54:35,923:INFO: Starting training for 300 epoch(s)
2018-11-05 16:54:36,293:INFO: Epoch 1/300
2018-11-05 16:54:42,568:INFO: - Train metrics: accuracy: 0.185 ; loss: 34.213
2018-11-05 16:54:42,825:INFO: - Eval metrics: accuracy: 0.190 ; loss: 34.545
2018-11-05 16:54:42,906:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 16:54:42,906:INFO: Epoch 2/300
2018-11-05 16:54:48,952:INFO: - Train metrics: accuracy: 0.363 ; loss: 24.396
2018-11-05 16:54:49,124:INFO: - Eval metrics: accuracy: 0.255 ; loss: 27.700
2018-11-05 16:54:49,193:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 16:54:49,193:INFO: Epoch 3/300
2018-11-05 16:54:55,159:INFO: - Train metrics: accuracy: 0.422 ; loss: 18.795
2018-11-05 16:54:55,319:INFO: - Eval metrics: accuracy: 0.276 ; loss: 23.374
2018-11-05 16:54:55,390:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 16:54:55,390:INFO: Epoch 4/300
2018-11-05 16:55:01,450:INFO: - Train metrics: accuracy: 0.432 ; loss: 15.452
2018-11-05 16:55:01,611:INFO: - Eval metrics: accuracy: 0.289 ; loss: 20.514
2018-11-05 16:55:01,681:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 16:55:01,682:INFO: Epoch 5/300
2018-11-05 16:55:07,640:INFO: - Train metrics: accuracy: 0.427 ; loss: 13.395
2018-11-05 16:55:07,808:INFO: - Eval metrics: accuracy: 0.300 ; loss: 18.538
2018-11-05 16:55:07,875:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 16:55:07,876:INFO: Epoch 6/300
2018-11-05 16:55:13,965:INFO: - Train metrics: accuracy: 0.426 ; loss: 12.068
2018-11-05 16:55:14,132:INFO: - Eval metrics: accuracy: 0.303 ; loss: 17.077
2018-11-05 16:55:14,206:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-05 16:55:14,207:INFO: Epoch 7/300
2018-11-05 16:55:20,348:INFO: - Train metrics: accuracy: 0.425 ; loss: 11.143
2018-11-05 16:55:20,518:INFO: - Eval metrics: accuracy: 0.303 ; loss: 15.964
2018-11-05 16:55:20,586:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-05 16:55:20,587:INFO: Epoch 8/300
2018-11-05 16:55:26,761:INFO: - Train metrics: accuracy: 0.429 ; loss: 10.431
2018-11-05 16:55:26,917:INFO: - Eval metrics: accuracy: 0.305 ; loss: 15.085
2018-11-05 16:55:26,987:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-05 16:55:26,987:INFO: Epoch 9/300
2018-11-05 16:55:33,183:INFO: - Train metrics: accuracy: 0.431 ; loss: 9.858
2018-11-05 16:55:33,372:INFO: - Eval metrics: accuracy: 0.311 ; loss: 14.366
2018-11-05 16:55:33,443:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-05 16:55:33,443:INFO: Epoch 10/300
2018-11-05 16:55:42,122:INFO: Creating the datasets...
2018-11-05 16:55:44,749:INFO: - done.
2018-11-05 16:55:44,749:INFO: Creating the model...
2018-11-05 16:55:45,296:INFO: - done.
2018-11-05 16:55:45,296:INFO: Starting training for 300 epoch(s)
2018-11-05 16:55:45,652:INFO: Epoch 1/300
2018-11-05 16:55:51,997:INFO: - Train metrics: accuracy: 0.369 ; loss: 0.003
2018-11-05 16:55:52,267:INFO: - Eval metrics: accuracy: 0.299 ; loss: 0.002
2018-11-05 16:55:52,350:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 16:55:52,350:INFO: Epoch 2/300
2018-11-05 16:55:58,402:INFO: - Train metrics: accuracy: 0.461 ; loss: 0.001
2018-11-05 16:55:58,565:INFO: - Eval metrics: accuracy: 0.349 ; loss: 0.001
2018-11-05 16:55:58,636:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 16:55:58,637:INFO: Epoch 3/300
2018-11-05 16:56:04,611:INFO: - Train metrics: accuracy: 0.519 ; loss: 0.001
2018-11-05 16:56:04,787:INFO: - Eval metrics: accuracy: 0.380 ; loss: 0.001
2018-11-05 16:56:04,859:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 16:56:04,859:INFO: Epoch 4/300
2018-11-05 16:56:10,826:INFO: - Train metrics: accuracy: 0.549 ; loss: 0.001
2018-11-05 16:56:10,987:INFO: - Eval metrics: accuracy: 0.426 ; loss: 0.001
2018-11-05 16:56:11,064:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 16:56:11,065:INFO: Epoch 5/300
2018-11-05 16:56:17,135:INFO: - Train metrics: accuracy: 0.574 ; loss: 0.001
2018-11-05 16:56:17,295:INFO: - Eval metrics: accuracy: 0.456 ; loss: 0.001
2018-11-05 16:56:17,373:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 16:56:17,373:INFO: Epoch 6/300
2018-11-05 16:56:23,432:INFO: - Train metrics: accuracy: 0.594 ; loss: 0.001
2018-11-05 16:56:23,602:INFO: - Eval metrics: accuracy: 0.474 ; loss: 0.001
2018-11-05 16:56:23,676:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-05 16:56:23,677:INFO: Epoch 7/300
2018-11-05 16:56:29,750:INFO: - Train metrics: accuracy: 0.609 ; loss: 0.001
2018-11-05 16:56:29,924:INFO: - Eval metrics: accuracy: 0.488 ; loss: 0.001
2018-11-05 16:56:30,001:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-05 16:56:30,002:INFO: Epoch 8/300
2018-11-05 16:56:36,036:INFO: - Train metrics: accuracy: 0.620 ; loss: 0.000
2018-11-05 16:56:36,219:INFO: - Eval metrics: accuracy: 0.502 ; loss: 0.001
2018-11-05 16:56:36,304:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-05 16:56:36,304:INFO: Epoch 9/300
2018-11-05 16:56:42,563:INFO: - Train metrics: accuracy: 0.629 ; loss: 0.000
2018-11-05 16:56:42,738:INFO: - Eval metrics: accuracy: 0.517 ; loss: 0.000
2018-11-05 16:56:42,813:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-05 16:56:42,813:INFO: Epoch 10/300
2018-11-05 16:56:48,857:INFO: - Train metrics: accuracy: 0.636 ; loss: 0.000
2018-11-05 16:56:49,040:INFO: - Eval metrics: accuracy: 0.529 ; loss: 0.000
2018-11-05 16:56:49,109:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-05 16:56:49,109:INFO: Epoch 11/300
2018-11-05 16:56:55,187:INFO: - Train metrics: accuracy: 0.643 ; loss: 0.000
2018-11-05 16:56:55,368:INFO: - Eval metrics: accuracy: 0.538 ; loss: 0.000
2018-11-05 16:56:55,445:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-05 16:56:55,446:INFO: Epoch 12/300
2018-11-05 16:57:01,488:INFO: - Train metrics: accuracy: 0.648 ; loss: 0.000
2018-11-05 16:57:01,666:INFO: - Eval metrics: accuracy: 0.546 ; loss: 0.000
2018-11-05 16:57:01,737:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-05 16:57:01,737:INFO: Epoch 13/300
2018-11-05 16:57:07,896:INFO: - Train metrics: accuracy: 0.654 ; loss: 0.000
2018-11-05 16:57:08,060:INFO: - Eval metrics: accuracy: 0.553 ; loss: 0.000
2018-11-05 16:57:08,130:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-05 16:57:08,131:INFO: Epoch 14/300
2018-11-05 16:57:14,228:INFO: - Train metrics: accuracy: 0.658 ; loss: 0.000
2018-11-05 16:57:14,387:INFO: - Eval metrics: accuracy: 0.559 ; loss: 0.000
2018-11-05 16:57:14,459:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-05 16:57:14,460:INFO: Epoch 15/300
2018-11-05 16:57:20,476:INFO: - Train metrics: accuracy: 0.663 ; loss: 0.000
2018-11-05 16:57:20,645:INFO: - Eval metrics: accuracy: 0.566 ; loss: 0.000
2018-11-05 16:57:20,714:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-05 16:57:20,715:INFO: Epoch 16/300
2018-11-05 16:57:26,847:INFO: - Train metrics: accuracy: 0.668 ; loss: 0.000
2018-11-05 16:57:27,014:INFO: - Eval metrics: accuracy: 0.573 ; loss: 0.000
2018-11-05 16:57:27,083:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-05 16:57:27,084:INFO: Epoch 17/300
2018-11-05 16:57:33,195:INFO: - Train metrics: accuracy: 0.673 ; loss: 0.000
2018-11-05 16:57:33,377:INFO: - Eval metrics: accuracy: 0.579 ; loss: 0.000
2018-11-05 16:57:33,455:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-05 16:57:33,455:INFO: Epoch 18/300
2018-11-05 16:57:39,623:INFO: - Train metrics: accuracy: 0.678 ; loss: 0.000
2018-11-05 16:57:39,801:INFO: - Eval metrics: accuracy: 0.584 ; loss: 0.000
2018-11-05 16:57:39,872:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-05 16:57:39,872:INFO: Epoch 19/300
2018-11-05 16:57:45,990:INFO: - Train metrics: accuracy: 0.683 ; loss: 0.000
2018-11-05 16:57:46,170:INFO: - Eval metrics: accuracy: 0.588 ; loss: 0.000
2018-11-05 16:57:46,244:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-05 16:57:46,244:INFO: Epoch 20/300
2018-11-05 16:57:52,444:INFO: - Train metrics: accuracy: 0.689 ; loss: 0.000
2018-11-05 16:57:52,618:INFO: - Eval metrics: accuracy: 0.592 ; loss: 0.000
2018-11-05 16:57:52,693:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-20
2018-11-05 16:57:52,693:INFO: Epoch 21/300
2018-11-05 16:57:58,746:INFO: - Train metrics: accuracy: 0.694 ; loss: 0.000
2018-11-05 16:57:58,911:INFO: - Eval metrics: accuracy: 0.595 ; loss: 0.000
2018-11-05 16:57:58,987:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-05 16:57:58,987:INFO: Epoch 22/300
2018-11-05 16:58:05,050:INFO: - Train metrics: accuracy: 0.698 ; loss: 0.000
2018-11-05 16:58:05,215:INFO: - Eval metrics: accuracy: 0.599 ; loss: 0.000
2018-11-05 16:58:05,284:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-05 16:58:05,285:INFO: Epoch 23/300
2018-11-05 16:58:11,324:INFO: - Train metrics: accuracy: 0.703 ; loss: 0.000
2018-11-05 16:58:11,497:INFO: - Eval metrics: accuracy: 0.601 ; loss: 0.000
2018-11-05 16:58:11,569:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-05 16:58:11,570:INFO: Epoch 24/300
2018-11-05 16:58:17,721:INFO: - Train metrics: accuracy: 0.706 ; loss: 0.000
2018-11-05 16:58:17,879:INFO: - Eval metrics: accuracy: 0.604 ; loss: 0.000
2018-11-05 16:58:17,953:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-05 16:58:17,954:INFO: Epoch 25/300
2018-11-05 16:58:24,036:INFO: - Train metrics: accuracy: 0.710 ; loss: 0.000
2018-11-05 16:58:24,203:INFO: - Eval metrics: accuracy: 0.606 ; loss: 0.000
2018-11-05 16:58:24,271:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-05 16:58:24,272:INFO: Epoch 26/300
2018-11-05 16:58:30,372:INFO: - Train metrics: accuracy: 0.713 ; loss: 0.000
2018-11-05 16:58:30,547:INFO: - Eval metrics: accuracy: 0.608 ; loss: 0.000
2018-11-05 16:58:30,618:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-05 16:58:30,618:INFO: Epoch 27/300
2018-11-05 16:58:36,758:INFO: - Train metrics: accuracy: 0.717 ; loss: 0.000
2018-11-05 16:58:36,934:INFO: - Eval metrics: accuracy: 0.610 ; loss: 0.000
2018-11-05 16:58:36,999:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-05 16:58:37,000:INFO: Epoch 28/300
2018-11-05 16:58:43,117:INFO: - Train metrics: accuracy: 0.719 ; loss: 0.000
2018-11-05 16:58:43,295:INFO: - Eval metrics: accuracy: 0.613 ; loss: 0.000
2018-11-05 16:58:43,366:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-05 16:58:43,366:INFO: Epoch 29/300
2018-11-05 16:58:49,432:INFO: - Train metrics: accuracy: 0.722 ; loss: 0.000
2018-11-05 16:58:49,605:INFO: - Eval metrics: accuracy: 0.615 ; loss: 0.000
2018-11-05 16:58:49,681:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-05 16:58:49,681:INFO: Epoch 30/300
2018-11-05 16:58:55,695:INFO: - Train metrics: accuracy: 0.725 ; loss: 0.000
2018-11-05 16:58:55,867:INFO: - Eval metrics: accuracy: 0.617 ; loss: 0.000
2018-11-05 16:58:55,948:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-30
2018-11-05 16:58:55,949:INFO: Epoch 31/300
2018-11-05 16:59:02,013:INFO: - Train metrics: accuracy: 0.728 ; loss: 0.000
2018-11-05 16:59:02,190:INFO: - Eval metrics: accuracy: 0.619 ; loss: 0.000
2018-11-05 16:59:02,260:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-31
2018-11-05 16:59:02,260:INFO: Epoch 32/300
2018-11-05 16:59:08,483:INFO: - Train metrics: accuracy: 0.730 ; loss: 0.000
2018-11-05 16:59:08,668:INFO: - Eval metrics: accuracy: 0.621 ; loss: 0.000
2018-11-05 16:59:08,752:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-05 16:59:08,753:INFO: Epoch 33/300
2018-11-05 16:59:14,909:INFO: - Train metrics: accuracy: 0.733 ; loss: 0.000
2018-11-05 16:59:15,077:INFO: - Eval metrics: accuracy: 0.623 ; loss: 0.000
2018-11-05 16:59:15,149:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-33
2018-11-05 16:59:15,150:INFO: Epoch 34/300
2018-11-05 16:59:21,277:INFO: - Train metrics: accuracy: 0.735 ; loss: 0.000
2018-11-05 16:59:21,449:INFO: - Eval metrics: accuracy: 0.624 ; loss: 0.000
2018-11-05 16:59:21,523:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-34
2018-11-05 16:59:21,524:INFO: Epoch 35/300
2018-11-05 16:59:27,763:INFO: - Train metrics: accuracy: 0.737 ; loss: 0.000
2018-11-05 16:59:27,930:INFO: - Eval metrics: accuracy: 0.626 ; loss: 0.000
2018-11-05 16:59:28,004:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-35
2018-11-05 16:59:28,004:INFO: Epoch 36/300
2018-11-05 16:59:34,166:INFO: - Train metrics: accuracy: 0.740 ; loss: 0.000
2018-11-05 16:59:34,346:INFO: - Eval metrics: accuracy: 0.629 ; loss: 0.000
2018-11-05 16:59:34,421:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-36
2018-11-05 16:59:34,422:INFO: Epoch 37/300
2018-11-05 16:59:40,501:INFO: - Train metrics: accuracy: 0.742 ; loss: 0.000
2018-11-05 16:59:40,688:INFO: - Eval metrics: accuracy: 0.631 ; loss: 0.000
2018-11-05 16:59:40,764:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-37
2018-11-05 16:59:40,764:INFO: Epoch 38/300
2018-11-05 16:59:46,918:INFO: - Train metrics: accuracy: 0.744 ; loss: 0.000
2018-11-05 16:59:47,090:INFO: - Eval metrics: accuracy: 0.634 ; loss: 0.000
2018-11-05 16:59:47,158:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-38
2018-11-05 16:59:47,159:INFO: Epoch 39/300
2018-11-05 16:59:53,303:INFO: - Train metrics: accuracy: 0.746 ; loss: 0.000
2018-11-05 16:59:53,479:INFO: - Eval metrics: accuracy: 0.636 ; loss: 0.000
2018-11-05 16:59:53,555:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-39
2018-11-05 16:59:53,556:INFO: Epoch 40/300
2018-11-05 16:59:59,761:INFO: - Train metrics: accuracy: 0.748 ; loss: 0.000
2018-11-05 16:59:59,938:INFO: - Eval metrics: accuracy: 0.639 ; loss: 0.000
2018-11-05 17:00:00,015:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-40
2018-11-05 17:00:00,016:INFO: Epoch 41/300
2018-11-05 17:00:06,211:INFO: - Train metrics: accuracy: 0.750 ; loss: 0.000
2018-11-05 17:00:06,396:INFO: - Eval metrics: accuracy: 0.642 ; loss: 0.000
2018-11-05 17:00:06,466:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-41
2018-11-05 17:00:06,467:INFO: Epoch 42/300
2018-11-05 17:00:12,634:INFO: - Train metrics: accuracy: 0.752 ; loss: 0.000
2018-11-05 17:00:12,821:INFO: - Eval metrics: accuracy: 0.644 ; loss: 0.000
2018-11-05 17:00:12,961:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-42
2018-11-05 17:00:12,961:INFO: Epoch 43/300
2018-11-05 17:00:19,150:INFO: - Train metrics: accuracy: 0.754 ; loss: 0.000
2018-11-05 17:00:19,332:INFO: - Eval metrics: accuracy: 0.647 ; loss: 0.000
2018-11-05 17:00:19,408:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-43
2018-11-05 17:00:19,409:INFO: Epoch 44/300
2018-11-05 17:00:25,487:INFO: - Train metrics: accuracy: 0.756 ; loss: 0.000
2018-11-05 17:00:25,670:INFO: - Eval metrics: accuracy: 0.649 ; loss: 0.000
2018-11-05 17:00:25,739:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-44
2018-11-05 17:00:25,739:INFO: Epoch 45/300
2018-11-05 17:00:31,948:INFO: - Train metrics: accuracy: 0.757 ; loss: 0.000
2018-11-05 17:00:32,127:INFO: - Eval metrics: accuracy: 0.652 ; loss: 0.000
2018-11-05 17:00:32,198:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-45
2018-11-05 17:00:32,199:INFO: Epoch 46/300
2018-11-05 17:00:38,336:INFO: - Train metrics: accuracy: 0.759 ; loss: 0.000
2018-11-05 17:00:38,514:INFO: - Eval metrics: accuracy: 0.654 ; loss: 0.000
2018-11-05 17:00:38,585:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-46
2018-11-05 17:00:38,585:INFO: Epoch 47/300
2018-11-05 17:00:44,795:INFO: - Train metrics: accuracy: 0.761 ; loss: 0.000
2018-11-05 17:00:44,985:INFO: - Eval metrics: accuracy: 0.656 ; loss: 0.000
2018-11-05 17:00:45,062:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-47
2018-11-05 17:00:45,063:INFO: Epoch 48/300
2018-11-05 17:00:51,144:INFO: - Train metrics: accuracy: 0.762 ; loss: 0.000
2018-11-05 17:00:51,337:INFO: - Eval metrics: accuracy: 0.657 ; loss: 0.000
2018-11-05 17:00:51,407:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-48
2018-11-05 17:00:51,408:INFO: Epoch 49/300
2018-11-05 17:00:57,541:INFO: - Train metrics: accuracy: 0.764 ; loss: 0.000
2018-11-05 17:00:57,719:INFO: - Eval metrics: accuracy: 0.659 ; loss: 0.000
2018-11-05 17:00:57,798:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-49
2018-11-05 17:00:57,799:INFO: Epoch 50/300
2018-11-05 17:01:03,958:INFO: - Train metrics: accuracy: 0.766 ; loss: 0.000
2018-11-05 17:01:04,144:INFO: - Eval metrics: accuracy: 0.661 ; loss: 0.000
2018-11-05 17:01:04,220:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-50
2018-11-05 17:01:04,221:INFO: Epoch 51/300
2018-11-05 17:01:10,168:INFO: - Train metrics: accuracy: 0.767 ; loss: 0.000
2018-11-05 17:01:10,355:INFO: - Eval metrics: accuracy: 0.662 ; loss: 0.000
2018-11-05 17:01:10,428:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-51
2018-11-05 17:01:10,429:INFO: Epoch 52/300
2018-11-05 17:01:16,504:INFO: - Train metrics: accuracy: 0.769 ; loss: 0.000
2018-11-05 17:01:16,677:INFO: - Eval metrics: accuracy: 0.664 ; loss: 0.000
2018-11-05 17:01:16,749:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-52
2018-11-05 17:01:16,749:INFO: Epoch 53/300
2018-11-05 17:01:22,833:INFO: - Train metrics: accuracy: 0.770 ; loss: 0.000
2018-11-05 17:01:23,007:INFO: - Eval metrics: accuracy: 0.666 ; loss: 0.000
2018-11-05 17:01:23,074:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-53
2018-11-05 17:01:23,075:INFO: Epoch 54/300
2018-11-05 17:01:29,289:INFO: - Train metrics: accuracy: 0.772 ; loss: 0.000
2018-11-05 17:01:29,478:INFO: - Eval metrics: accuracy: 0.667 ; loss: 0.000
2018-11-05 17:01:29,550:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-54
2018-11-05 17:01:29,550:INFO: Epoch 55/300
2018-11-05 17:01:35,656:INFO: - Train metrics: accuracy: 0.773 ; loss: 0.000
2018-11-05 17:01:35,831:INFO: - Eval metrics: accuracy: 0.669 ; loss: 0.000
2018-11-05 17:01:35,902:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-55
2018-11-05 17:01:35,903:INFO: Epoch 56/300
2018-11-05 17:01:42,086:INFO: - Train metrics: accuracy: 0.775 ; loss: 0.000
2018-11-05 17:01:42,271:INFO: - Eval metrics: accuracy: 0.670 ; loss: 0.000
2018-11-05 17:01:42,338:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-56
2018-11-05 17:01:42,339:INFO: Epoch 57/300
2018-11-05 17:01:48,430:INFO: - Train metrics: accuracy: 0.776 ; loss: 0.000
2018-11-05 17:01:48,614:INFO: - Eval metrics: accuracy: 0.672 ; loss: 0.000
2018-11-05 17:01:48,681:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-57
2018-11-05 17:01:48,681:INFO: Epoch 58/300
2018-11-05 17:01:54,774:INFO: - Train metrics: accuracy: 0.777 ; loss: 0.000
2018-11-05 17:01:54,943:INFO: - Eval metrics: accuracy: 0.673 ; loss: 0.000
2018-11-05 17:01:55,018:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-58
2018-11-05 17:01:55,018:INFO: Epoch 59/300
2018-11-05 17:02:01,266:INFO: - Train metrics: accuracy: 0.779 ; loss: 0.000
2018-11-05 17:02:01,429:INFO: - Eval metrics: accuracy: 0.675 ; loss: 0.000
2018-11-05 17:02:01,498:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-59
2018-11-05 17:02:01,498:INFO: Epoch 60/300
2018-11-05 17:02:07,662:INFO: - Train metrics: accuracy: 0.780 ; loss: 0.000
2018-11-05 17:02:07,852:INFO: - Eval metrics: accuracy: 0.676 ; loss: 0.000
2018-11-05 17:02:07,930:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-60
2018-11-05 17:02:07,931:INFO: Epoch 61/300
2018-11-05 17:02:14,151:INFO: - Train metrics: accuracy: 0.782 ; loss: 0.000
2018-11-05 17:02:14,320:INFO: - Eval metrics: accuracy: 0.678 ; loss: 0.000
2018-11-05 17:02:14,388:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-61
2018-11-05 17:02:14,389:INFO: Epoch 62/300
2018-11-05 17:02:20,595:INFO: - Train metrics: accuracy: 0.783 ; loss: 0.000
2018-11-05 17:02:20,785:INFO: - Eval metrics: accuracy: 0.679 ; loss: 0.000
2018-11-05 17:02:20,857:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-62
2018-11-05 17:02:20,858:INFO: Epoch 63/300
2018-11-05 17:02:26,924:INFO: - Train metrics: accuracy: 0.784 ; loss: 0.000
2018-11-05 17:02:27,119:INFO: - Eval metrics: accuracy: 0.680 ; loss: 0.000
2018-11-05 17:02:27,191:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-63
2018-11-05 17:02:27,192:INFO: Epoch 64/300
2018-11-05 17:02:33,443:INFO: - Train metrics: accuracy: 0.786 ; loss: 0.000
2018-11-05 17:02:33,609:INFO: - Eval metrics: accuracy: 0.682 ; loss: 0.000
2018-11-05 17:02:33,683:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-64
2018-11-05 17:02:33,683:INFO: Epoch 65/300
2018-11-05 17:02:39,828:INFO: - Train metrics: accuracy: 0.787 ; loss: 0.000
2018-11-05 17:02:40,003:INFO: - Eval metrics: accuracy: 0.683 ; loss: 0.000
2018-11-05 17:02:40,074:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-65
2018-11-05 17:02:40,075:INFO: Epoch 66/300
2018-11-05 17:02:46,185:INFO: - Train metrics: accuracy: 0.788 ; loss: 0.000
2018-11-05 17:02:46,376:INFO: - Eval metrics: accuracy: 0.685 ; loss: 0.000
2018-11-05 17:02:46,453:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-66
2018-11-05 17:02:46,454:INFO: Epoch 67/300
2018-11-05 17:02:52,571:INFO: - Train metrics: accuracy: 0.790 ; loss: 0.000
2018-11-05 17:02:52,750:INFO: - Eval metrics: accuracy: 0.686 ; loss: 0.000
2018-11-05 17:02:52,818:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-67
2018-11-05 17:02:52,819:INFO: Epoch 68/300
2018-11-05 17:02:59,050:INFO: - Train metrics: accuracy: 0.791 ; loss: 0.000
2018-11-05 17:02:59,239:INFO: - Eval metrics: accuracy: 0.687 ; loss: 0.000
2018-11-05 17:02:59,310:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-68
2018-11-05 17:02:59,310:INFO: Epoch 69/300
2018-11-05 17:03:05,335:INFO: - Train metrics: accuracy: 0.792 ; loss: 0.000
2018-11-05 17:03:05,497:INFO: - Eval metrics: accuracy: 0.689 ; loss: 0.000
2018-11-05 17:03:05,564:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-69
2018-11-05 17:03:05,565:INFO: Epoch 70/300
2018-11-05 17:03:11,768:INFO: - Train metrics: accuracy: 0.794 ; loss: 0.000
2018-11-05 17:03:11,934:INFO: - Eval metrics: accuracy: 0.690 ; loss: 0.000
2018-11-05 17:03:12,009:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-70
2018-11-05 17:03:12,010:INFO: Epoch 71/300
2018-11-05 17:03:18,195:INFO: - Train metrics: accuracy: 0.795 ; loss: 0.000
2018-11-05 17:03:18,367:INFO: - Eval metrics: accuracy: 0.692 ; loss: 0.000
2018-11-05 17:03:18,443:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-71
2018-11-05 17:03:18,444:INFO: Epoch 72/300
2018-11-05 17:03:24,597:INFO: - Train metrics: accuracy: 0.796 ; loss: 0.000
2018-11-05 17:03:24,760:INFO: - Eval metrics: accuracy: 0.693 ; loss: 0.000
2018-11-05 17:03:24,833:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-72
2018-11-05 17:03:24,833:INFO: Epoch 73/300
2018-11-05 17:03:31,029:INFO: - Train metrics: accuracy: 0.798 ; loss: 0.000
2018-11-05 17:03:31,247:INFO: - Eval metrics: accuracy: 0.695 ; loss: 0.000
2018-11-05 17:03:31,319:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-73
2018-11-05 17:03:31,320:INFO: Epoch 74/300
2018-11-05 17:03:37,524:INFO: - Train metrics: accuracy: 0.799 ; loss: 0.000
2018-11-05 17:03:37,708:INFO: - Eval metrics: accuracy: 0.696 ; loss: 0.000
2018-11-05 17:03:37,782:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-74
2018-11-05 17:03:37,783:INFO: Epoch 75/300
2018-11-05 17:03:43,962:INFO: - Train metrics: accuracy: 0.800 ; loss: 0.000
2018-11-05 17:03:44,155:INFO: - Eval metrics: accuracy: 0.698 ; loss: 0.000
2018-11-05 17:03:44,226:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-75
2018-11-05 17:03:44,227:INFO: Epoch 76/300
2018-11-05 17:03:50,309:INFO: - Train metrics: accuracy: 0.801 ; loss: 0.000
2018-11-05 17:03:50,476:INFO: - Eval metrics: accuracy: 0.699 ; loss: 0.000
2018-11-05 17:03:50,545:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-76
2018-11-05 17:03:50,546:INFO: Epoch 77/300
2018-11-05 17:03:56,634:INFO: - Train metrics: accuracy: 0.803 ; loss: 0.000
2018-11-05 17:03:56,814:INFO: - Eval metrics: accuracy: 0.701 ; loss: 0.000
2018-11-05 17:03:56,892:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-77
2018-11-05 17:03:56,893:INFO: Epoch 78/300
2018-11-05 17:04:03,080:INFO: - Train metrics: accuracy: 0.804 ; loss: 0.000
2018-11-05 17:04:03,256:INFO: - Eval metrics: accuracy: 0.702 ; loss: 0.000
2018-11-05 17:04:03,325:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-78
2018-11-05 17:04:03,326:INFO: Epoch 79/300
2018-11-05 17:04:09,382:INFO: - Train metrics: accuracy: 0.805 ; loss: 0.000
2018-11-05 17:04:09,568:INFO: - Eval metrics: accuracy: 0.703 ; loss: 0.000
2018-11-05 17:04:09,641:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-79
2018-11-05 17:04:09,641:INFO: Epoch 80/300
2018-11-05 17:04:15,814:INFO: - Train metrics: accuracy: 0.806 ; loss: 0.000
2018-11-05 17:04:16,028:INFO: - Eval metrics: accuracy: 0.705 ; loss: 0.000
2018-11-05 17:04:16,104:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-80
2018-11-05 17:04:16,105:INFO: Epoch 81/300
2018-11-05 17:04:22,233:INFO: - Train metrics: accuracy: 0.807 ; loss: 0.000
2018-11-05 17:04:22,417:INFO: - Eval metrics: accuracy: 0.706 ; loss: 0.000
2018-11-05 17:04:22,487:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-81
2018-11-05 17:04:22,487:INFO: Epoch 82/300
2018-11-05 17:04:28,605:INFO: - Train metrics: accuracy: 0.808 ; loss: 0.000
2018-11-05 17:04:28,781:INFO: - Eval metrics: accuracy: 0.707 ; loss: 0.000
2018-11-05 17:04:28,853:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-82
2018-11-05 17:04:28,854:INFO: Epoch 83/300
2018-11-05 17:04:35,022:INFO: - Train metrics: accuracy: 0.809 ; loss: 0.000
2018-11-05 17:04:35,196:INFO: - Eval metrics: accuracy: 0.709 ; loss: 0.000
2018-11-05 17:04:35,268:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-83
2018-11-05 17:04:35,269:INFO: Epoch 84/300
2018-11-05 17:04:41,384:INFO: - Train metrics: accuracy: 0.810 ; loss: 0.000
2018-11-05 17:04:41,570:INFO: - Eval metrics: accuracy: 0.710 ; loss: 0.000
2018-11-05 17:04:41,639:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-84
2018-11-05 17:04:41,640:INFO: Epoch 85/300
2018-11-05 17:04:47,761:INFO: - Train metrics: accuracy: 0.811 ; loss: 0.000
2018-11-05 17:04:47,939:INFO: - Eval metrics: accuracy: 0.710 ; loss: 0.000
2018-11-05 17:04:48,015:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-85
2018-11-05 17:04:48,015:INFO: Epoch 86/300
2018-11-05 17:04:54,104:INFO: - Train metrics: accuracy: 0.812 ; loss: 0.000
2018-11-05 17:04:54,281:INFO: - Eval metrics: accuracy: 0.711 ; loss: 0.000
2018-11-05 17:04:54,354:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-86
2018-11-05 17:04:54,355:INFO: Epoch 87/300
2018-11-05 17:05:00,487:INFO: - Train metrics: accuracy: 0.813 ; loss: 0.000
2018-11-05 17:05:00,667:INFO: - Eval metrics: accuracy: 0.712 ; loss: 0.000
2018-11-05 17:05:00,741:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-87
2018-11-05 17:05:00,741:INFO: Epoch 88/300
2018-11-05 17:05:06,808:INFO: - Train metrics: accuracy: 0.814 ; loss: 0.000
2018-11-05 17:05:06,984:INFO: - Eval metrics: accuracy: 0.713 ; loss: 0.000
2018-11-05 17:05:07,061:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-88
2018-11-05 17:05:07,061:INFO: Epoch 89/300
2018-11-05 17:05:13,235:INFO: - Train metrics: accuracy: 0.815 ; loss: 0.000
2018-11-05 17:05:13,421:INFO: - Eval metrics: accuracy: 0.714 ; loss: 0.000
2018-11-05 17:05:13,495:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-89
2018-11-05 17:05:13,496:INFO: Epoch 90/300
2018-11-05 17:05:19,679:INFO: - Train metrics: accuracy: 0.816 ; loss: 0.000
2018-11-05 17:05:19,862:INFO: - Eval metrics: accuracy: 0.715 ; loss: 0.000
2018-11-05 17:05:19,945:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-90
2018-11-05 17:05:19,946:INFO: Epoch 91/300
2018-11-05 17:05:26,406:INFO: - Train metrics: accuracy: 0.817 ; loss: 0.000
2018-11-05 17:05:26,595:INFO: - Eval metrics: accuracy: 0.717 ; loss: 0.000
2018-11-05 17:05:26,670:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-91
2018-11-05 17:05:26,671:INFO: Epoch 92/300
2018-11-05 17:05:32,961:INFO: - Train metrics: accuracy: 0.818 ; loss: 0.000
2018-11-05 17:05:33,146:INFO: - Eval metrics: accuracy: 0.718 ; loss: 0.000
2018-11-05 17:05:33,219:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-92
2018-11-05 17:05:33,219:INFO: Epoch 93/300
2018-11-05 17:05:39,468:INFO: - Train metrics: accuracy: 0.819 ; loss: 0.000
2018-11-05 17:05:39,646:INFO: - Eval metrics: accuracy: 0.719 ; loss: 0.000
2018-11-05 17:05:39,724:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-93
2018-11-05 17:05:39,725:INFO: Epoch 94/300
2018-11-05 17:05:45,834:INFO: - Train metrics: accuracy: 0.820 ; loss: 0.000
2018-11-05 17:05:46,022:INFO: - Eval metrics: accuracy: 0.720 ; loss: 0.000
2018-11-05 17:05:46,097:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-94
2018-11-05 17:05:46,097:INFO: Epoch 95/300
2018-11-05 17:05:52,273:INFO: - Train metrics: accuracy: 0.820 ; loss: 0.000
2018-11-05 17:05:52,451:INFO: - Eval metrics: accuracy: 0.721 ; loss: 0.000
2018-11-05 17:05:52,526:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-95
2018-11-05 17:05:52,527:INFO: Epoch 96/300
2018-11-05 17:05:58,762:INFO: - Train metrics: accuracy: 0.821 ; loss: 0.000
2018-11-05 17:05:58,945:INFO: - Eval metrics: accuracy: 0.722 ; loss: 0.000
2018-11-05 17:05:59,019:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-96
2018-11-05 17:05:59,020:INFO: Epoch 97/300
2018-11-05 17:06:05,353:INFO: - Train metrics: accuracy: 0.822 ; loss: 0.000
2018-11-05 17:06:05,531:INFO: - Eval metrics: accuracy: 0.723 ; loss: 0.000
2018-11-05 17:06:05,605:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-97
2018-11-05 17:06:05,606:INFO: Epoch 98/300
2018-11-05 17:06:11,749:INFO: - Train metrics: accuracy: 0.823 ; loss: 0.000
2018-11-05 17:06:11,924:INFO: - Eval metrics: accuracy: 0.724 ; loss: 0.000
2018-11-05 17:06:12,003:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-98
2018-11-05 17:06:12,003:INFO: Epoch 99/300
2018-11-05 17:06:18,074:INFO: - Train metrics: accuracy: 0.824 ; loss: 0.000
2018-11-05 17:06:18,252:INFO: - Eval metrics: accuracy: 0.724 ; loss: 0.000
2018-11-05 17:06:18,328:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-99
2018-11-05 17:06:18,329:INFO: Epoch 100/300
2018-11-05 17:06:24,498:INFO: - Train metrics: accuracy: 0.824 ; loss: 0.000
2018-11-05 17:06:24,683:INFO: - Eval metrics: accuracy: 0.725 ; loss: 0.000
2018-11-05 17:06:24,760:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-100
2018-11-05 17:06:24,761:INFO: Epoch 101/300
2018-11-05 17:06:30,919:INFO: - Train metrics: accuracy: 0.825 ; loss: 0.000
2018-11-05 17:06:31,109:INFO: - Eval metrics: accuracy: 0.726 ; loss: 0.000
2018-11-05 17:06:31,176:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-101
2018-11-05 17:06:31,176:INFO: Epoch 102/300
2018-11-05 17:06:37,218:INFO: - Train metrics: accuracy: 0.826 ; loss: 0.000
2018-11-05 17:06:37,387:INFO: - Eval metrics: accuracy: 0.727 ; loss: 0.000
2018-11-05 17:06:37,460:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-102
2018-11-05 17:06:37,461:INFO: Epoch 103/300
2018-11-05 17:06:43,628:INFO: - Train metrics: accuracy: 0.827 ; loss: 0.000
2018-11-05 17:06:43,801:INFO: - Eval metrics: accuracy: 0.728 ; loss: 0.000
2018-11-05 17:06:43,874:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-103
2018-11-05 17:06:43,875:INFO: Epoch 104/300
2018-11-05 17:06:50,004:INFO: - Train metrics: accuracy: 0.827 ; loss: 0.000
2018-11-05 17:06:50,183:INFO: - Eval metrics: accuracy: 0.729 ; loss: 0.000
2018-11-05 17:06:50,321:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-104
2018-11-05 17:06:50,321:INFO: Epoch 105/300
2018-11-05 17:06:56,469:INFO: - Train metrics: accuracy: 0.828 ; loss: 0.000
2018-11-05 17:06:56,648:INFO: - Eval metrics: accuracy: 0.730 ; loss: 0.000
2018-11-05 17:06:56,720:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-105
2018-11-05 17:06:56,721:INFO: Epoch 106/300
2018-11-05 17:07:02,870:INFO: - Train metrics: accuracy: 0.829 ; loss: 0.000
2018-11-05 17:07:03,051:INFO: - Eval metrics: accuracy: 0.731 ; loss: 0.000
2018-11-05 17:07:03,121:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-106
2018-11-05 17:07:03,122:INFO: Epoch 107/300
2018-11-05 17:07:09,221:INFO: - Train metrics: accuracy: 0.829 ; loss: 0.000
2018-11-05 17:07:09,385:INFO: - Eval metrics: accuracy: 0.732 ; loss: 0.000
2018-11-05 17:07:09,453:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-107
2018-11-05 17:07:09,454:INFO: Epoch 108/300
2018-11-05 17:07:15,525:INFO: - Train metrics: accuracy: 0.830 ; loss: 0.000
2018-11-05 17:07:15,684:INFO: - Eval metrics: accuracy: 0.732 ; loss: 0.000
2018-11-05 17:07:15,754:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-108
2018-11-05 17:07:15,754:INFO: Epoch 109/300
2018-11-05 17:07:21,930:INFO: - Train metrics: accuracy: 0.831 ; loss: 0.000
2018-11-05 17:07:22,102:INFO: - Eval metrics: accuracy: 0.733 ; loss: 0.000
2018-11-05 17:07:22,181:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-109
2018-11-05 17:07:22,181:INFO: Epoch 110/300
2018-11-05 17:07:28,271:INFO: - Train metrics: accuracy: 0.831 ; loss: 0.000
2018-11-05 17:07:28,443:INFO: - Eval metrics: accuracy: 0.734 ; loss: 0.000
2018-11-05 17:07:28,511:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-110
2018-11-05 17:07:28,511:INFO: Epoch 111/300
2018-11-05 17:07:34,569:INFO: - Train metrics: accuracy: 0.832 ; loss: 0.000
2018-11-05 17:07:34,753:INFO: - Eval metrics: accuracy: 0.735 ; loss: 0.000
2018-11-05 17:07:34,825:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-111
2018-11-05 17:07:34,826:INFO: Epoch 112/300
2018-11-05 17:07:40,828:INFO: - Train metrics: accuracy: 0.833 ; loss: 0.000
2018-11-05 17:07:41,010:INFO: - Eval metrics: accuracy: 0.735 ; loss: 0.000
2018-11-05 17:07:41,081:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-112
2018-11-05 17:07:41,082:INFO: Epoch 113/300
2018-11-05 17:07:47,206:INFO: - Train metrics: accuracy: 0.833 ; loss: 0.000
2018-11-05 17:07:47,366:INFO: - Eval metrics: accuracy: 0.736 ; loss: 0.000
2018-11-05 17:07:47,441:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-113
2018-11-05 17:07:47,442:INFO: Epoch 114/300
2018-11-05 17:07:53,559:INFO: - Train metrics: accuracy: 0.834 ; loss: 0.000
2018-11-05 17:07:53,738:INFO: - Eval metrics: accuracy: 0.736 ; loss: 0.000
2018-11-05 17:07:53,807:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-114
2018-11-05 17:07:53,808:INFO: Epoch 115/300
2018-11-05 17:07:59,965:INFO: - Train metrics: accuracy: 0.835 ; loss: 0.000
2018-11-05 17:08:00,162:INFO: - Eval metrics: accuracy: 0.736 ; loss: 0.000
2018-11-05 17:08:00,229:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-115
2018-11-05 17:08:00,229:INFO: Epoch 116/300
2018-11-05 17:08:06,281:INFO: - Train metrics: accuracy: 0.835 ; loss: 0.000
2018-11-05 17:08:06,463:INFO: - Eval metrics: accuracy: 0.737 ; loss: 0.000
2018-11-05 17:08:06,534:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-116
2018-11-05 17:08:06,535:INFO: Epoch 117/300
2018-11-05 17:08:12,660:INFO: - Train metrics: accuracy: 0.836 ; loss: 0.000
2018-11-05 17:08:12,836:INFO: - Eval metrics: accuracy: 0.738 ; loss: 0.000
2018-11-05 17:08:12,906:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-117
2018-11-05 17:08:12,907:INFO: Epoch 118/300
2018-11-05 17:08:19,118:INFO: - Train metrics: accuracy: 0.837 ; loss: 0.000
2018-11-05 17:08:19,305:INFO: - Eval metrics: accuracy: 0.738 ; loss: 0.000
2018-11-05 17:08:19,391:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-118
2018-11-05 17:08:19,391:INFO: Epoch 119/300
2018-11-05 17:08:25,544:INFO: - Train metrics: accuracy: 0.837 ; loss: 0.000
2018-11-05 17:08:25,729:INFO: - Eval metrics: accuracy: 0.739 ; loss: 0.000
2018-11-05 17:08:25,802:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-119
2018-11-05 17:08:25,803:INFO: Epoch 120/300
2018-11-05 17:08:31,996:INFO: - Train metrics: accuracy: 0.838 ; loss: 0.000
2018-11-05 17:08:32,181:INFO: - Eval metrics: accuracy: 0.740 ; loss: 0.000
2018-11-05 17:08:32,259:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-120
2018-11-05 17:08:32,260:INFO: Epoch 121/300
2018-11-05 17:08:39,239:INFO: - Train metrics: accuracy: 0.838 ; loss: 0.000
2018-11-05 17:08:39,399:INFO: - Eval metrics: accuracy: 0.741 ; loss: 0.000
2018-11-05 17:08:39,472:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-121
2018-11-05 17:08:39,473:INFO: Epoch 122/300
2018-11-05 17:08:45,553:INFO: - Train metrics: accuracy: 0.839 ; loss: 0.000
2018-11-05 17:08:45,728:INFO: - Eval metrics: accuracy: 0.742 ; loss: 0.000
2018-11-05 17:08:45,802:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-122
2018-11-05 17:08:45,802:INFO: Epoch 123/300
2018-11-05 17:08:51,979:INFO: - Train metrics: accuracy: 0.839 ; loss: 0.000
2018-11-05 17:08:52,150:INFO: - Eval metrics: accuracy: 0.742 ; loss: 0.000
2018-11-05 17:08:52,237:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-123
2018-11-05 17:08:52,237:INFO: Epoch 124/300
2018-11-05 17:08:58,381:INFO: - Train metrics: accuracy: 0.840 ; loss: 0.000
2018-11-05 17:08:58,564:INFO: - Eval metrics: accuracy: 0.743 ; loss: 0.000
2018-11-05 17:08:58,639:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-124
2018-11-05 17:08:58,640:INFO: Epoch 125/300
2018-11-05 17:09:04,712:INFO: - Train metrics: accuracy: 0.841 ; loss: 0.000
2018-11-05 17:09:04,887:INFO: - Eval metrics: accuracy: 0.744 ; loss: 0.000
2018-11-05 17:09:04,959:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-125
2018-11-05 17:09:04,959:INFO: Epoch 126/300
2018-11-05 17:09:11,079:INFO: - Train metrics: accuracy: 0.841 ; loss: 0.000
2018-11-05 17:09:11,258:INFO: - Eval metrics: accuracy: 0.745 ; loss: 0.000
2018-11-05 17:09:11,333:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-126
2018-11-05 17:09:11,334:INFO: Epoch 127/300
2018-11-05 17:09:17,537:INFO: - Train metrics: accuracy: 0.842 ; loss: 0.000
2018-11-05 17:09:17,722:INFO: - Eval metrics: accuracy: 0.746 ; loss: 0.000
2018-11-05 17:09:17,798:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-127
2018-11-05 17:09:17,798:INFO: Epoch 128/300
2018-11-05 17:09:23,856:INFO: - Train metrics: accuracy: 0.842 ; loss: 0.000
2018-11-05 17:09:24,037:INFO: - Eval metrics: accuracy: 0.746 ; loss: 0.000
2018-11-05 17:09:24,114:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-128
2018-11-05 17:09:24,114:INFO: Epoch 129/300
2018-11-05 17:09:30,153:INFO: - Train metrics: accuracy: 0.843 ; loss: 0.000
2018-11-05 17:09:30,322:INFO: - Eval metrics: accuracy: 0.747 ; loss: 0.000
2018-11-05 17:09:30,394:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-129
2018-11-05 17:09:30,394:INFO: Epoch 130/300
2018-11-05 17:09:36,640:INFO: - Train metrics: accuracy: 0.843 ; loss: 0.000
2018-11-05 17:09:36,801:INFO: - Eval metrics: accuracy: 0.748 ; loss: 0.000
2018-11-05 17:09:36,877:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-130
2018-11-05 17:09:36,878:INFO: Epoch 131/300
2018-11-05 17:09:42,934:INFO: - Train metrics: accuracy: 0.844 ; loss: 0.000
2018-11-05 17:09:43,152:INFO: - Eval metrics: accuracy: 0.749 ; loss: 0.000
2018-11-05 17:09:43,233:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-131
2018-11-05 17:09:43,234:INFO: Epoch 132/300
2018-11-05 17:09:50,351:INFO: - Train metrics: accuracy: 0.844 ; loss: 0.000
2018-11-05 17:09:50,533:INFO: - Eval metrics: accuracy: 0.750 ; loss: 0.000
2018-11-05 17:09:50,607:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-132
2018-11-05 17:09:50,608:INFO: Epoch 133/300
2018-11-05 17:09:56,808:INFO: - Train metrics: accuracy: 0.845 ; loss: 0.000
2018-11-05 17:09:56,984:INFO: - Eval metrics: accuracy: 0.751 ; loss: 0.000
2018-11-05 17:09:57,056:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-133
2018-11-05 17:09:57,057:INFO: Epoch 134/300
2018-11-05 17:10:03,158:INFO: - Train metrics: accuracy: 0.845 ; loss: 0.000
2018-11-05 17:10:03,330:INFO: - Eval metrics: accuracy: 0.752 ; loss: 0.000
2018-11-05 17:10:03,403:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-134
2018-11-05 17:10:03,403:INFO: Epoch 135/300
2018-11-05 17:10:09,492:INFO: - Train metrics: accuracy: 0.846 ; loss: 0.000
2018-11-05 17:10:09,660:INFO: - Eval metrics: accuracy: 0.752 ; loss: 0.000
2018-11-05 17:10:09,731:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-135
2018-11-05 17:10:09,732:INFO: Epoch 136/300
2018-11-05 17:10:15,935:INFO: - Train metrics: accuracy: 0.846 ; loss: 0.000
2018-11-05 17:10:16,111:INFO: - Eval metrics: accuracy: 0.753 ; loss: 0.000
2018-11-05 17:10:16,180:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-136
2018-11-05 17:10:16,181:INFO: Epoch 137/300
2018-11-05 17:10:22,317:INFO: - Train metrics: accuracy: 0.846 ; loss: 0.000
2018-11-05 17:10:22,502:INFO: - Eval metrics: accuracy: 0.754 ; loss: 0.000
2018-11-05 17:10:22,573:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-137
2018-11-05 17:10:22,574:INFO: Epoch 138/300
2018-11-05 17:10:28,745:INFO: - Train metrics: accuracy: 0.847 ; loss: 0.000
2018-11-05 17:10:28,914:INFO: - Eval metrics: accuracy: 0.755 ; loss: 0.000
2018-11-05 17:10:28,986:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-138
2018-11-05 17:10:28,986:INFO: Epoch 139/300
2018-11-05 17:10:35,213:INFO: - Train metrics: accuracy: 0.847 ; loss: 0.000
2018-11-05 17:10:35,397:INFO: - Eval metrics: accuracy: 0.756 ; loss: 0.000
2018-11-05 17:10:35,468:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-139
2018-11-05 17:10:35,468:INFO: Epoch 140/300
2018-11-05 17:10:41,658:INFO: - Train metrics: accuracy: 0.848 ; loss: 0.000
2018-11-05 17:10:41,850:INFO: - Eval metrics: accuracy: 0.757 ; loss: 0.000
2018-11-05 17:10:41,923:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-140
2018-11-05 17:10:41,924:INFO: Epoch 141/300
2018-11-05 17:10:48,093:INFO: - Train metrics: accuracy: 0.848 ; loss: 0.000
2018-11-05 17:10:48,259:INFO: - Eval metrics: accuracy: 0.758 ; loss: 0.000
2018-11-05 17:10:48,334:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-141
2018-11-05 17:10:48,334:INFO: Epoch 142/300
2018-11-05 17:10:54,489:INFO: - Train metrics: accuracy: 0.849 ; loss: 0.000
2018-11-05 17:10:54,663:INFO: - Eval metrics: accuracy: 0.760 ; loss: 0.000
2018-11-05 17:10:54,740:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-142
2018-11-05 17:10:54,741:INFO: Epoch 143/300
2018-11-05 17:11:01,739:INFO: - Train metrics: accuracy: 0.849 ; loss: 0.000
2018-11-05 17:11:01,923:INFO: - Eval metrics: accuracy: 0.761 ; loss: 0.000
2018-11-05 17:11:01,996:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-143
2018-11-05 17:11:01,997:INFO: Epoch 144/300
2018-11-05 17:11:08,059:INFO: - Train metrics: accuracy: 0.850 ; loss: 0.000
2018-11-05 17:11:08,234:INFO: - Eval metrics: accuracy: 0.762 ; loss: 0.000
2018-11-05 17:11:08,308:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-144
2018-11-05 17:11:08,308:INFO: Epoch 145/300
2018-11-05 17:11:14,381:INFO: - Train metrics: accuracy: 0.850 ; loss: 0.000
2018-11-05 17:11:14,554:INFO: - Eval metrics: accuracy: 0.763 ; loss: 0.000
2018-11-05 17:11:14,624:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-145
2018-11-05 17:11:14,625:INFO: Epoch 146/300
2018-11-05 17:11:20,719:INFO: - Train metrics: accuracy: 0.851 ; loss: 0.000
2018-11-05 17:11:20,893:INFO: - Eval metrics: accuracy: 0.764 ; loss: 0.000
2018-11-05 17:11:20,973:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-146
2018-11-05 17:11:20,973:INFO: Epoch 147/300
2018-11-05 17:11:26,991:INFO: - Train metrics: accuracy: 0.851 ; loss: 0.000
2018-11-05 17:11:27,182:INFO: - Eval metrics: accuracy: 0.765 ; loss: 0.000
2018-11-05 17:11:27,261:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-147
2018-11-05 17:11:27,262:INFO: Epoch 148/300
2018-11-05 17:11:33,410:INFO: - Train metrics: accuracy: 0.851 ; loss: 0.000
2018-11-05 17:11:33,589:INFO: - Eval metrics: accuracy: 0.766 ; loss: 0.000
2018-11-05 17:11:33,663:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-148
2018-11-05 17:11:33,663:INFO: Epoch 149/300
2018-11-05 17:11:39,705:INFO: - Train metrics: accuracy: 0.852 ; loss: 0.000
2018-11-05 17:11:39,881:INFO: - Eval metrics: accuracy: 0.767 ; loss: 0.000
2018-11-05 17:11:39,957:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-149
2018-11-05 17:11:39,958:INFO: Epoch 150/300
2018-11-05 17:11:46,104:INFO: - Train metrics: accuracy: 0.852 ; loss: 0.000
2018-11-05 17:11:46,278:INFO: - Eval metrics: accuracy: 0.768 ; loss: 0.000
2018-11-05 17:11:46,358:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-150
2018-11-05 17:11:46,358:INFO: Epoch 151/300
2018-11-05 17:11:52,482:INFO: - Train metrics: accuracy: 0.853 ; loss: 0.000
2018-11-05 17:11:52,640:INFO: - Eval metrics: accuracy: 0.768 ; loss: 0.000
2018-11-05 17:11:52,714:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-151
2018-11-05 17:11:52,715:INFO: Epoch 152/300
2018-11-05 17:11:58,807:INFO: - Train metrics: accuracy: 0.853 ; loss: 0.000
2018-11-05 17:11:58,978:INFO: - Eval metrics: accuracy: 0.769 ; loss: 0.000
2018-11-05 17:11:59,051:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-152
2018-11-05 17:11:59,051:INFO: Epoch 153/300
2018-11-05 17:12:05,188:INFO: - Train metrics: accuracy: 0.853 ; loss: 0.000
2018-11-05 17:12:05,363:INFO: - Eval metrics: accuracy: 0.770 ; loss: 0.000
2018-11-05 17:12:05,437:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-153
2018-11-05 17:12:05,437:INFO: Epoch 154/300
2018-11-05 17:12:11,523:INFO: - Train metrics: accuracy: 0.853 ; loss: 0.000
2018-11-05 17:12:11,689:INFO: - Eval metrics: accuracy: 0.764 ; loss: 0.000
2018-11-05 17:12:11,690:INFO: Epoch 155/300
2018-11-05 17:12:17,839:INFO: - Train metrics: accuracy: 0.852 ; loss: 0.000
2018-11-05 17:12:18,028:INFO: - Eval metrics: accuracy: 0.760 ; loss: 0.000
2018-11-05 17:12:18,029:INFO: Epoch 156/300
2018-11-05 17:12:24,181:INFO: - Train metrics: accuracy: 0.855 ; loss: 0.000
2018-11-05 17:12:24,368:INFO: - Eval metrics: accuracy: 0.772 ; loss: 0.000
2018-11-05 17:12:24,440:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-156
2018-11-05 17:12:24,441:INFO: Epoch 157/300
2018-11-05 17:12:30,612:INFO: - Train metrics: accuracy: 0.855 ; loss: 0.000
2018-11-05 17:12:30,843:INFO: - Eval metrics: accuracy: 0.770 ; loss: 0.000
2018-11-05 17:12:30,844:INFO: Epoch 158/300
2018-11-05 17:12:36,925:INFO: - Train metrics: accuracy: 0.856 ; loss: 0.000
2018-11-05 17:12:37,112:INFO: - Eval metrics: accuracy: 0.772 ; loss: 0.000
2018-11-05 17:12:37,189:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-158
2018-11-05 17:12:37,189:INFO: Epoch 159/300
2018-11-05 17:12:43,349:INFO: - Train metrics: accuracy: 0.856 ; loss: 0.000
2018-11-05 17:12:43,524:INFO: - Eval metrics: accuracy: 0.772 ; loss: 0.000
2018-11-05 17:12:43,599:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-159
2018-11-05 17:12:43,599:INFO: Epoch 160/300
2018-11-05 17:12:49,769:INFO: - Train metrics: accuracy: 0.856 ; loss: 0.000
2018-11-05 17:12:49,956:INFO: - Eval metrics: accuracy: 0.773 ; loss: 0.000
2018-11-05 17:12:50,031:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-160
2018-11-05 17:12:50,032:INFO: Epoch 161/300
2018-11-05 17:12:56,260:INFO: - Train metrics: accuracy: 0.857 ; loss: 0.000
2018-11-05 17:12:56,435:INFO: - Eval metrics: accuracy: 0.775 ; loss: 0.000
2018-11-05 17:12:56,513:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-161
2018-11-05 17:12:56,513:INFO: Epoch 162/300
2018-11-05 17:13:02,579:INFO: - Train metrics: accuracy: 0.857 ; loss: 0.000
2018-11-05 17:13:02,759:INFO: - Eval metrics: accuracy: 0.774 ; loss: 0.000
2018-11-05 17:13:02,759:INFO: Epoch 163/300
2018-11-05 17:13:08,914:INFO: - Train metrics: accuracy: 0.857 ; loss: 0.000
2018-11-05 17:13:09,100:INFO: - Eval metrics: accuracy: 0.776 ; loss: 0.000
2018-11-05 17:13:09,175:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-163
2018-11-05 17:13:09,176:INFO: Epoch 164/300
2018-11-05 17:13:15,354:INFO: - Train metrics: accuracy: 0.856 ; loss: 0.000
2018-11-05 17:13:15,528:INFO: - Eval metrics: accuracy: 0.771 ; loss: 0.000
2018-11-05 17:13:15,529:INFO: Epoch 165/300
2018-11-05 17:13:21,597:INFO: - Train metrics: accuracy: 0.857 ; loss: 0.000
2018-11-05 17:13:21,773:INFO: - Eval metrics: accuracy: 0.773 ; loss: 0.000
2018-11-05 17:13:21,774:INFO: Epoch 166/300
2018-11-05 17:13:27,902:INFO: - Train metrics: accuracy: 0.859 ; loss: 0.000
2018-11-05 17:13:28,082:INFO: - Eval metrics: accuracy: 0.780 ; loss: 0.000
2018-11-05 17:13:28,156:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-166
2018-11-05 17:13:28,157:INFO: Epoch 167/300
2018-11-05 17:13:35,578:INFO: - Train metrics: accuracy: 0.859 ; loss: 0.000
2018-11-05 17:13:35,755:INFO: - Eval metrics: accuracy: 0.780 ; loss: 0.000
2018-11-05 17:13:35,755:INFO: Epoch 168/300
2018-11-05 17:13:41,800:INFO: - Train metrics: accuracy: 0.860 ; loss: 0.000
2018-11-05 17:13:41,979:INFO: - Eval metrics: accuracy: 0.782 ; loss: 0.000
2018-11-05 17:13:42,052:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-168
2018-11-05 17:13:42,053:INFO: Epoch 169/300
2018-11-05 17:13:48,170:INFO: - Train metrics: accuracy: 0.860 ; loss: 0.000
2018-11-05 17:13:48,350:INFO: - Eval metrics: accuracy: 0.783 ; loss: 0.000
2018-11-05 17:13:48,419:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-169
2018-11-05 17:13:48,419:INFO: Epoch 170/300
2018-11-05 17:13:54,517:INFO: - Train metrics: accuracy: 0.860 ; loss: 0.000
2018-11-05 17:13:54,692:INFO: - Eval metrics: accuracy: 0.784 ; loss: 0.000
2018-11-05 17:13:54,764:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-170
2018-11-05 17:13:54,764:INFO: Epoch 171/300
2018-11-05 17:14:00,950:INFO: - Train metrics: accuracy: 0.860 ; loss: 0.000
2018-11-05 17:14:01,132:INFO: - Eval metrics: accuracy: 0.786 ; loss: 0.000
2018-11-05 17:14:01,202:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-171
2018-11-05 17:14:01,202:INFO: Epoch 172/300
2018-11-05 17:14:07,324:INFO: - Train metrics: accuracy: 0.860 ; loss: 0.000
2018-11-05 17:14:07,504:INFO: - Eval metrics: accuracy: 0.781 ; loss: 0.000
2018-11-05 17:14:07,505:INFO: Epoch 173/300
2018-11-05 17:14:13,619:INFO: - Train metrics: accuracy: 0.860 ; loss: 0.000
2018-11-05 17:14:13,794:INFO: - Eval metrics: accuracy: 0.771 ; loss: 0.000
2018-11-05 17:14:13,795:INFO: Epoch 174/300
2018-11-05 17:14:19,948:INFO: - Train metrics: accuracy: 0.861 ; loss: 0.000
2018-11-05 17:14:20,125:INFO: - Eval metrics: accuracy: 0.787 ; loss: 0.000
2018-11-05 17:14:20,198:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-174
2018-11-05 17:14:20,199:INFO: Epoch 175/300
2018-11-05 17:14:26,421:INFO: - Train metrics: accuracy: 0.862 ; loss: 0.000
2018-11-05 17:14:26,593:INFO: - Eval metrics: accuracy: 0.786 ; loss: 0.000
2018-11-05 17:14:26,593:INFO: Epoch 176/300
2018-11-05 17:14:32,735:INFO: - Train metrics: accuracy: 0.863 ; loss: 0.000
2018-11-05 17:14:32,913:INFO: - Eval metrics: accuracy: 0.789 ; loss: 0.000
2018-11-05 17:14:32,985:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-176
2018-11-05 17:14:32,986:INFO: Epoch 177/300
2018-11-05 17:14:39,051:INFO: - Train metrics: accuracy: 0.863 ; loss: 0.000
2018-11-05 17:14:39,221:INFO: - Eval metrics: accuracy: 0.789 ; loss: 0.000
2018-11-05 17:14:39,289:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-177
2018-11-05 17:14:39,290:INFO: Epoch 178/300
2018-11-05 17:14:45,481:INFO: - Train metrics: accuracy: 0.863 ; loss: 0.000
2018-11-05 17:14:45,661:INFO: - Eval metrics: accuracy: 0.791 ; loss: 0.000
2018-11-05 17:14:45,736:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-178
2018-11-05 17:14:45,736:INFO: Epoch 179/300
2018-11-05 17:14:51,926:INFO: - Train metrics: accuracy: 0.863 ; loss: 0.000
2018-11-05 17:14:52,101:INFO: - Eval metrics: accuracy: 0.788 ; loss: 0.000
2018-11-05 17:14:52,102:INFO: Epoch 180/300
2018-11-05 17:14:58,223:INFO: - Train metrics: accuracy: 0.862 ; loss: 0.000
2018-11-05 17:14:58,412:INFO: - Eval metrics: accuracy: 0.780 ; loss: 0.000
2018-11-05 17:14:58,413:INFO: Epoch 181/300
2018-11-05 17:15:04,593:INFO: - Train metrics: accuracy: 0.863 ; loss: 0.000
2018-11-05 17:15:04,764:INFO: - Eval metrics: accuracy: 0.790 ; loss: 0.000
2018-11-05 17:15:04,765:INFO: Epoch 182/300
2018-11-05 17:15:10,842:INFO: - Train metrics: accuracy: 0.865 ; loss: 0.000
2018-11-05 17:15:11,019:INFO: - Eval metrics: accuracy: 0.793 ; loss: 0.000
2018-11-05 17:15:11,100:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-182
2018-11-05 17:15:11,100:INFO: Epoch 183/300
2018-11-05 17:15:17,178:INFO: - Train metrics: accuracy: 0.865 ; loss: 0.000
2018-11-05 17:15:17,351:INFO: - Eval metrics: accuracy: 0.795 ; loss: 0.000
2018-11-05 17:15:17,421:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-183
2018-11-05 17:15:17,422:INFO: Epoch 184/300
2018-11-05 17:15:23,479:INFO: - Train metrics: accuracy: 0.865 ; loss: 0.000
2018-11-05 17:15:23,650:INFO: - Eval metrics: accuracy: 0.796 ; loss: 0.000
2018-11-05 17:15:23,721:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-184
2018-11-05 17:15:23,721:INFO: Epoch 185/300
2018-11-05 17:15:29,815:INFO: - Train metrics: accuracy: 0.865 ; loss: 0.000
2018-11-05 17:15:30,011:INFO: - Eval metrics: accuracy: 0.796 ; loss: 0.000
2018-11-05 17:15:30,012:INFO: Epoch 186/300
2018-11-05 17:15:36,116:INFO: - Train metrics: accuracy: 0.865 ; loss: 0.000
2018-11-05 17:15:36,294:INFO: - Eval metrics: accuracy: 0.788 ; loss: 0.000
2018-11-05 17:15:36,295:INFO: Epoch 187/300
2018-11-05 17:15:42,266:INFO: - Train metrics: accuracy: 0.865 ; loss: 0.000
2018-11-05 17:15:42,440:INFO: - Eval metrics: accuracy: 0.788 ; loss: 0.000
2018-11-05 17:15:42,441:INFO: Epoch 188/300
2018-11-05 17:15:48,665:INFO: - Train metrics: accuracy: 0.864 ; loss: 0.000
2018-11-05 17:15:48,847:INFO: - Eval metrics: accuracy: 0.790 ; loss: 0.000
2018-11-05 17:15:48,848:INFO: Epoch 189/300
2018-11-05 17:15:55,061:INFO: - Train metrics: accuracy: 0.867 ; loss: 0.000
2018-11-05 17:15:55,239:INFO: - Eval metrics: accuracy: 0.794 ; loss: 0.000
2018-11-05 17:15:55,240:INFO: Epoch 190/300
2018-11-05 17:16:01,354:INFO: - Train metrics: accuracy: 0.867 ; loss: 0.000
2018-11-05 17:16:01,538:INFO: - Eval metrics: accuracy: 0.798 ; loss: 0.000
2018-11-05 17:16:01,609:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-190
2018-11-05 17:16:01,609:INFO: Epoch 191/300
2018-11-05 17:16:07,703:INFO: - Train metrics: accuracy: 0.868 ; loss: 0.000
2018-11-05 17:16:07,896:INFO: - Eval metrics: accuracy: 0.797 ; loss: 0.000
2018-11-05 17:16:07,897:INFO: Epoch 192/300
2018-11-05 17:16:13,992:INFO: - Train metrics: accuracy: 0.866 ; loss: 0.000
2018-11-05 17:16:14,168:INFO: - Eval metrics: accuracy: 0.787 ; loss: 0.000
2018-11-05 17:16:14,169:INFO: Epoch 193/300
2018-11-05 17:16:20,278:INFO: - Train metrics: accuracy: 0.867 ; loss: 0.000
2018-11-05 17:16:20,442:INFO: - Eval metrics: accuracy: 0.798 ; loss: 0.000
2018-11-05 17:16:20,512:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-193
2018-11-05 17:16:20,513:INFO: Epoch 194/300
2018-11-05 17:16:26,667:INFO: - Train metrics: accuracy: 0.869 ; loss: 0.000
2018-11-05 17:16:26,832:INFO: - Eval metrics: accuracy: 0.799 ; loss: 0.000
2018-11-05 17:16:26,902:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-194
2018-11-05 17:16:26,903:INFO: Epoch 195/300
2018-11-05 17:16:32,981:INFO: - Train metrics: accuracy: 0.869 ; loss: 0.000
2018-11-05 17:16:33,169:INFO: - Eval metrics: accuracy: 0.800 ; loss: 0.000
2018-11-05 17:16:33,245:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-195
2018-11-05 17:16:33,245:INFO: Epoch 196/300
2018-11-05 17:16:39,349:INFO: - Train metrics: accuracy: 0.869 ; loss: 0.000
2018-11-05 17:16:39,531:INFO: - Eval metrics: accuracy: 0.800 ; loss: 0.000
2018-11-05 17:16:39,600:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-196
2018-11-05 17:16:39,601:INFO: Epoch 197/300
2018-11-05 17:16:45,673:INFO: - Train metrics: accuracy: 0.869 ; loss: 0.000
2018-11-05 17:16:45,853:INFO: - Eval metrics: accuracy: 0.796 ; loss: 0.000
2018-11-05 17:16:45,854:INFO: Epoch 198/300
2018-11-05 17:16:51,982:INFO: - Train metrics: accuracy: 0.867 ; loss: 0.000
2018-11-05 17:16:52,158:INFO: - Eval metrics: accuracy: 0.779 ; loss: 0.000
2018-11-05 17:16:52,159:INFO: Epoch 199/300
2018-11-05 17:16:58,220:INFO: - Train metrics: accuracy: 0.870 ; loss: 0.000
2018-11-05 17:16:58,409:INFO: - Eval metrics: accuracy: 0.798 ; loss: 0.000
2018-11-05 17:16:58,410:INFO: Epoch 200/300
2018-11-05 17:17:04,633:INFO: - Train metrics: accuracy: 0.870 ; loss: 0.000
2018-11-05 17:17:04,797:INFO: - Eval metrics: accuracy: 0.798 ; loss: 0.000
2018-11-05 17:17:04,798:INFO: Epoch 201/300
2018-11-05 17:17:10,864:INFO: - Train metrics: accuracy: 0.869 ; loss: 0.000
2018-11-05 17:17:11,041:INFO: - Eval metrics: accuracy: 0.800 ; loss: 0.000
2018-11-05 17:17:11,041:INFO: Epoch 202/300
2018-11-05 17:17:17,223:INFO: - Train metrics: accuracy: 0.871 ; loss: 0.000
2018-11-05 17:17:17,399:INFO: - Eval metrics: accuracy: 0.797 ; loss: 0.000
2018-11-05 17:17:17,400:INFO: Epoch 203/300
2018-11-05 17:17:23,517:INFO: - Train metrics: accuracy: 0.872 ; loss: 0.000
2018-11-05 17:17:23,694:INFO: - Eval metrics: accuracy: 0.803 ; loss: 0.000
2018-11-05 17:17:23,767:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-203
2018-11-05 17:17:23,767:INFO: Epoch 204/300
2018-11-05 17:17:29,773:INFO: - Train metrics: accuracy: 0.872 ; loss: 0.000
2018-11-05 17:17:29,943:INFO: - Eval metrics: accuracy: 0.803 ; loss: 0.000
2018-11-05 17:17:29,944:INFO: Epoch 205/300
2018-11-05 17:17:36,133:INFO: - Train metrics: accuracy: 0.872 ; loss: 0.000
2018-11-05 17:17:36,315:INFO: - Eval metrics: accuracy: 0.805 ; loss: 0.000
2018-11-05 17:17:36,385:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-205
2018-11-05 17:17:36,386:INFO: Epoch 206/300
2018-11-05 17:17:42,474:INFO: - Train metrics: accuracy: 0.872 ; loss: 0.000
2018-11-05 17:17:42,648:INFO: - Eval metrics: accuracy: 0.805 ; loss: 0.000
2018-11-05 17:17:42,721:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-206
2018-11-05 17:17:42,722:INFO: Epoch 207/300
2018-11-05 17:17:48,770:INFO: - Train metrics: accuracy: 0.873 ; loss: 0.000
2018-11-05 17:17:48,948:INFO: - Eval metrics: accuracy: 0.803 ; loss: 0.000
2018-11-05 17:17:48,949:INFO: Epoch 208/300
2018-11-05 17:17:55,041:INFO: - Train metrics: accuracy: 0.871 ; loss: 0.000
2018-11-05 17:17:55,219:INFO: - Eval metrics: accuracy: 0.801 ; loss: 0.000
2018-11-05 17:17:55,220:INFO: Epoch 209/300
2018-11-05 17:18:01,273:INFO: - Train metrics: accuracy: 0.872 ; loss: 0.000
2018-11-05 17:18:01,448:INFO: - Eval metrics: accuracy: 0.802 ; loss: 0.000
2018-11-05 17:18:01,449:INFO: Epoch 210/300
2018-11-05 17:18:07,549:INFO: - Train metrics: accuracy: 0.872 ; loss: 0.000
2018-11-05 17:18:07,717:INFO: - Eval metrics: accuracy: 0.795 ; loss: 0.000
2018-11-05 17:18:07,718:INFO: Epoch 211/300
2018-11-05 17:18:13,860:INFO: - Train metrics: accuracy: 0.869 ; loss: 0.000
2018-11-05 17:18:14,035:INFO: - Eval metrics: accuracy: 0.806 ; loss: 0.000
2018-11-05 17:18:14,113:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-211
2018-11-05 17:18:14,114:INFO: Epoch 212/300
2018-11-05 17:18:20,272:INFO: - Train metrics: accuracy: 0.873 ; loss: 0.000
2018-11-05 17:18:20,437:INFO: - Eval metrics: accuracy: 0.793 ; loss: 0.000
2018-11-05 17:18:20,438:INFO: Epoch 213/300
2018-11-05 17:18:26,590:INFO: - Train metrics: accuracy: 0.871 ; loss: 0.000
2018-11-05 17:18:26,776:INFO: - Eval metrics: accuracy: 0.804 ; loss: 0.000
2018-11-05 17:18:26,777:INFO: Epoch 214/300
2018-11-05 17:18:32,885:INFO: - Train metrics: accuracy: 0.874 ; loss: 0.000
2018-11-05 17:18:33,069:INFO: - Eval metrics: accuracy: 0.805 ; loss: 0.000
2018-11-05 17:18:33,070:INFO: Epoch 215/300
2018-11-05 17:18:39,206:INFO: - Train metrics: accuracy: 0.875 ; loss: 0.000
2018-11-05 17:18:39,380:INFO: - Eval metrics: accuracy: 0.806 ; loss: 0.000
2018-11-05 17:18:39,381:INFO: Epoch 216/300
2018-11-05 17:18:45,423:INFO: - Train metrics: accuracy: 0.875 ; loss: 0.000
2018-11-05 17:18:45,584:INFO: - Eval metrics: accuracy: 0.808 ; loss: 0.000
2018-11-05 17:18:45,726:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-216
2018-11-05 17:18:45,727:INFO: Epoch 217/300
2018-11-05 17:18:51,885:INFO: - Train metrics: accuracy: 0.874 ; loss: 0.000
2018-11-05 17:18:52,073:INFO: - Eval metrics: accuracy: 0.807 ; loss: 0.000
2018-11-05 17:18:52,074:INFO: Epoch 218/300
2018-11-05 17:18:58,114:INFO: - Train metrics: accuracy: 0.874 ; loss: 0.000
2018-11-05 17:18:58,282:INFO: - Eval metrics: accuracy: 0.804 ; loss: 0.000
2018-11-05 17:18:58,283:INFO: Epoch 219/300
2018-11-05 17:19:04,408:INFO: - Train metrics: accuracy: 0.873 ; loss: 0.000
2018-11-05 17:19:04,581:INFO: - Eval metrics: accuracy: 0.801 ; loss: 0.000
2018-11-05 17:19:04,582:INFO: Epoch 220/300
2018-11-05 17:19:10,708:INFO: - Train metrics: accuracy: 0.875 ; loss: 0.000
2018-11-05 17:19:10,894:INFO: - Eval metrics: accuracy: 0.804 ; loss: 0.000
2018-11-05 17:19:10,895:INFO: Epoch 221/300
2018-11-05 17:19:17,040:INFO: - Train metrics: accuracy: 0.875 ; loss: 0.000
2018-11-05 17:19:17,235:INFO: - Eval metrics: accuracy: 0.809 ; loss: 0.000
2018-11-05 17:19:17,307:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-221
2018-11-05 17:19:17,308:INFO: Epoch 222/300
2018-11-05 17:19:23,495:INFO: - Train metrics: accuracy: 0.874 ; loss: 0.000
2018-11-05 17:19:23,671:INFO: - Eval metrics: accuracy: 0.803 ; loss: 0.000
2018-11-05 17:19:23,672:INFO: Epoch 223/300
2018-11-05 17:19:29,811:INFO: - Train metrics: accuracy: 0.875 ; loss: 0.000
2018-11-05 17:19:29,980:INFO: - Eval metrics: accuracy: 0.811 ; loss: 0.000
2018-11-05 17:19:30,048:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-223
2018-11-05 17:19:30,048:INFO: Epoch 224/300
2018-11-05 17:19:36,260:INFO: - Train metrics: accuracy: 0.876 ; loss: 0.000
2018-11-05 17:19:36,440:INFO: - Eval metrics: accuracy: 0.811 ; loss: 0.000
2018-11-05 17:19:36,510:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-224
2018-11-05 17:19:36,510:INFO: Epoch 225/300
2018-11-05 17:19:42,617:INFO: - Train metrics: accuracy: 0.877 ; loss: 0.000
2018-11-05 17:19:42,785:INFO: - Eval metrics: accuracy: 0.811 ; loss: 0.000
2018-11-05 17:19:42,786:INFO: Epoch 226/300
2018-11-05 17:19:48,903:INFO: - Train metrics: accuracy: 0.876 ; loss: 0.000
2018-11-05 17:19:49,077:INFO: - Eval metrics: accuracy: 0.810 ; loss: 0.000
2018-11-05 17:19:49,078:INFO: Epoch 227/300
2018-11-05 17:19:55,180:INFO: - Train metrics: accuracy: 0.875 ; loss: 0.000
2018-11-05 17:19:55,362:INFO: - Eval metrics: accuracy: 0.808 ; loss: 0.000
2018-11-05 17:19:55,363:INFO: Epoch 228/300
2018-11-05 17:20:01,584:INFO: - Train metrics: accuracy: 0.875 ; loss: 0.000
2018-11-05 17:20:01,756:INFO: - Eval metrics: accuracy: 0.800 ; loss: 0.000
2018-11-05 17:20:01,757:INFO: Epoch 229/300
2018-11-05 17:20:07,952:INFO: - Train metrics: accuracy: 0.877 ; loss: 0.000
2018-11-05 17:20:08,133:INFO: - Eval metrics: accuracy: 0.812 ; loss: 0.000
2018-11-05 17:20:08,208:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-229
2018-11-05 17:20:08,209:INFO: Epoch 230/300
2018-11-05 17:20:14,352:INFO: - Train metrics: accuracy: 0.877 ; loss: 0.000
2018-11-05 17:20:14,530:INFO: - Eval metrics: accuracy: 0.808 ; loss: 0.000
2018-11-05 17:20:14,531:INFO: Epoch 231/300
2018-11-05 17:20:20,665:INFO: - Train metrics: accuracy: 0.877 ; loss: 0.000
2018-11-05 17:20:20,844:INFO: - Eval metrics: accuracy: 0.812 ; loss: 0.000
2018-11-05 17:20:20,920:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-231
2018-11-05 17:20:20,920:INFO: Epoch 232/300
2018-11-05 17:20:26,907:INFO: - Train metrics: accuracy: 0.875 ; loss: 0.000
2018-11-05 17:20:27,067:INFO: - Eval metrics: accuracy: 0.795 ; loss: 0.000
2018-11-05 17:20:27,068:INFO: Epoch 233/300
2018-11-05 17:20:33,249:INFO: - Train metrics: accuracy: 0.872 ; loss: 0.000
2018-11-05 17:20:33,425:INFO: - Eval metrics: accuracy: 0.812 ; loss: 0.000
2018-11-05 17:20:33,426:INFO: Epoch 234/300
2018-11-05 17:20:39,586:INFO: - Train metrics: accuracy: 0.878 ; loss: 0.000
2018-11-05 17:20:39,779:INFO: - Eval metrics: accuracy: 0.806 ; loss: 0.000
2018-11-05 17:20:39,780:INFO: Epoch 235/300
2018-11-05 17:20:45,928:INFO: - Train metrics: accuracy: 0.878 ; loss: 0.000
2018-11-05 17:20:46,103:INFO: - Eval metrics: accuracy: 0.814 ; loss: 0.000
2018-11-05 17:20:46,175:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-235
2018-11-05 17:20:46,176:INFO: Epoch 236/300
2018-11-05 17:20:52,328:INFO: - Train metrics: accuracy: 0.879 ; loss: 0.000
2018-11-05 17:20:52,486:INFO: - Eval metrics: accuracy: 0.815 ; loss: 0.000
2018-11-05 17:20:52,557:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-236
2018-11-05 17:20:52,558:INFO: Epoch 237/300
2018-11-05 17:20:58,719:INFO: - Train metrics: accuracy: 0.879 ; loss: 0.000
2018-11-05 17:20:58,901:INFO: - Eval metrics: accuracy: 0.813 ; loss: 0.000
2018-11-05 17:20:58,902:INFO: Epoch 238/300
2018-11-05 17:21:04,953:INFO: - Train metrics: accuracy: 0.876 ; loss: 0.000
2018-11-05 17:21:05,133:INFO: - Eval metrics: accuracy: 0.812 ; loss: 0.000
2018-11-05 17:21:05,134:INFO: Epoch 239/300
2018-11-05 17:21:11,280:INFO: - Train metrics: accuracy: 0.877 ; loss: 0.000
2018-11-05 17:21:11,451:INFO: - Eval metrics: accuracy: 0.803 ; loss: 0.000
2018-11-05 17:21:11,452:INFO: Epoch 240/300
2018-11-05 17:21:17,650:INFO: - Train metrics: accuracy: 0.879 ; loss: 0.000
2018-11-05 17:21:17,827:INFO: - Eval metrics: accuracy: 0.816 ; loss: 0.000
2018-11-05 17:21:17,897:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-240
2018-11-05 17:21:17,898:INFO: Epoch 241/300
2018-11-05 17:21:23,975:INFO: - Train metrics: accuracy: 0.880 ; loss: 0.000
2018-11-05 17:21:24,164:INFO: - Eval metrics: accuracy: 0.815 ; loss: 0.000
2018-11-05 17:21:24,164:INFO: Epoch 242/300
2018-11-05 17:21:30,315:INFO: - Train metrics: accuracy: 0.879 ; loss: 0.000
2018-11-05 17:21:30,472:INFO: - Eval metrics: accuracy: 0.814 ; loss: 0.000
2018-11-05 17:21:30,473:INFO: Epoch 243/300
2018-11-05 17:21:36,595:INFO: - Train metrics: accuracy: 0.877 ; loss: 0.000
2018-11-05 17:21:36,777:INFO: - Eval metrics: accuracy: 0.813 ; loss: 0.000
2018-11-05 17:21:36,778:INFO: Epoch 244/300
2018-11-05 17:21:42,668:INFO: - Train metrics: accuracy: 0.876 ; loss: 0.000
2018-11-05 17:21:42,848:INFO: - Eval metrics: accuracy: 0.804 ; loss: 0.000
2018-11-05 17:21:42,849:INFO: Epoch 245/300
2018-11-05 17:21:48,850:INFO: - Train metrics: accuracy: 0.879 ; loss: 0.000
2018-11-05 17:21:49,028:INFO: - Eval metrics: accuracy: 0.815 ; loss: 0.000
2018-11-05 17:21:49,029:INFO: Epoch 246/300
2018-11-05 17:21:55,233:INFO: - Train metrics: accuracy: 0.878 ; loss: 0.000
2018-11-05 17:21:55,414:INFO: - Eval metrics: accuracy: 0.806 ; loss: 0.000
2018-11-05 17:21:55,415:INFO: Epoch 247/300
2018-11-05 17:22:01,458:INFO: - Train metrics: accuracy: 0.880 ; loss: 0.000
2018-11-05 17:22:01,630:INFO: - Eval metrics: accuracy: 0.815 ; loss: 0.000
2018-11-05 17:22:01,631:INFO: Epoch 248/300
2018-11-05 17:22:07,799:INFO: - Train metrics: accuracy: 0.879 ; loss: 0.000
2018-11-05 17:22:07,984:INFO: - Eval metrics: accuracy: 0.811 ; loss: 0.000
2018-11-05 17:22:07,985:INFO: Epoch 249/300
2018-11-05 17:22:14,098:INFO: - Train metrics: accuracy: 0.878 ; loss: 0.000
2018-11-05 17:22:14,295:INFO: - Eval metrics: accuracy: 0.800 ; loss: 0.000
2018-11-05 17:22:14,296:INFO: Epoch 250/300
2018-11-05 17:22:20,474:INFO: - Train metrics: accuracy: 0.880 ; loss: 0.000
2018-11-05 17:22:20,652:INFO: - Eval metrics: accuracy: 0.814 ; loss: 0.000
2018-11-05 17:22:20,652:INFO: Epoch 251/300
2018-11-05 17:22:26,771:INFO: - Train metrics: accuracy: 0.881 ; loss: 0.000
2018-11-05 17:22:26,931:INFO: - Eval metrics: accuracy: 0.816 ; loss: 0.000
2018-11-05 17:22:27,003:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-251
2018-11-05 17:22:27,004:INFO: Epoch 252/300
2018-11-05 17:22:33,249:INFO: - Train metrics: accuracy: 0.878 ; loss: 0.000
2018-11-05 17:22:33,435:INFO: - Eval metrics: accuracy: 0.813 ; loss: 0.000
2018-11-05 17:22:33,436:INFO: Epoch 253/300
2018-11-05 17:22:39,507:INFO: - Train metrics: accuracy: 0.878 ; loss: 0.000
2018-11-05 17:22:39,684:INFO: - Eval metrics: accuracy: 0.809 ; loss: 0.000
2018-11-05 17:22:39,685:INFO: Epoch 254/300
2018-11-05 17:22:45,887:INFO: - Train metrics: accuracy: 0.880 ; loss: 0.000
2018-11-05 17:22:46,080:INFO: - Eval metrics: accuracy: 0.819 ; loss: 0.000
2018-11-05 17:22:46,162:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-254
2018-11-05 17:22:46,162:INFO: Epoch 255/300
2018-11-05 17:22:52,182:INFO: - Train metrics: accuracy: 0.882 ; loss: 0.000
2018-11-05 17:22:52,363:INFO: - Eval metrics: accuracy: 0.820 ; loss: 0.000
2018-11-05 17:22:52,435:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-255
2018-11-05 17:22:52,435:INFO: Epoch 256/300
2018-11-05 17:22:58,503:INFO: - Train metrics: accuracy: 0.882 ; loss: 0.000
2018-11-05 17:22:58,670:INFO: - Eval metrics: accuracy: 0.819 ; loss: 0.000
2018-11-05 17:22:58,671:INFO: Epoch 257/300
2018-11-05 17:23:04,836:INFO: - Train metrics: accuracy: 0.882 ; loss: 0.000
2018-11-05 17:23:05,012:INFO: - Eval metrics: accuracy: 0.819 ; loss: 0.000
2018-11-05 17:23:05,013:INFO: Epoch 258/300
2018-11-05 17:23:11,108:INFO: - Train metrics: accuracy: 0.880 ; loss: 0.000
2018-11-05 17:23:11,295:INFO: - Eval metrics: accuracy: 0.814 ; loss: 0.000
2018-11-05 17:23:11,295:INFO: Epoch 259/300
2018-11-05 17:23:17,428:INFO: - Train metrics: accuracy: 0.877 ; loss: 0.000
2018-11-05 17:23:17,591:INFO: - Eval metrics: accuracy: 0.809 ; loss: 0.000
2018-11-05 17:23:17,592:INFO: Epoch 260/300
2018-11-05 17:23:23,715:INFO: - Train metrics: accuracy: 0.881 ; loss: 0.000
2018-11-05 17:23:23,898:INFO: - Eval metrics: accuracy: 0.808 ; loss: 0.000
2018-11-05 17:23:23,899:INFO: Epoch 261/300
2018-11-05 17:23:30,096:INFO: - Train metrics: accuracy: 0.879 ; loss: 0.000
2018-11-05 17:23:30,283:INFO: - Eval metrics: accuracy: 0.813 ; loss: 0.000
2018-11-05 17:23:30,284:INFO: Epoch 262/300
2018-11-05 17:23:36,439:INFO: - Train metrics: accuracy: 0.879 ; loss: 0.000
2018-11-05 17:23:36,611:INFO: - Eval metrics: accuracy: 0.807 ; loss: 0.000
2018-11-05 17:23:36,612:INFO: Epoch 263/300
2018-11-05 17:23:42,743:INFO: - Train metrics: accuracy: 0.879 ; loss: 0.000
2018-11-05 17:23:42,928:INFO: - Eval metrics: accuracy: 0.809 ; loss: 0.000
2018-11-05 17:23:42,929:INFO: Epoch 264/300
2018-11-05 17:23:49,067:INFO: - Train metrics: accuracy: 0.882 ; loss: 0.000
2018-11-05 17:23:49,248:INFO: - Eval metrics: accuracy: 0.816 ; loss: 0.000
2018-11-05 17:23:49,248:INFO: Epoch 265/300
2018-11-05 17:23:55,320:INFO: - Train metrics: accuracy: 0.883 ; loss: 0.000
2018-11-05 17:23:55,510:INFO: - Eval metrics: accuracy: 0.820 ; loss: 0.000
2018-11-05 17:23:55,511:INFO: Epoch 266/300
2018-11-05 17:24:01,605:INFO: - Train metrics: accuracy: 0.883 ; loss: 0.000
2018-11-05 17:24:01,785:INFO: - Eval metrics: accuracy: 0.819 ; loss: 0.000
2018-11-05 17:24:01,786:INFO: Epoch 267/300
2018-11-05 17:24:07,905:INFO: - Train metrics: accuracy: 0.883 ; loss: 0.000
2018-11-05 17:24:08,095:INFO: - Eval metrics: accuracy: 0.821 ; loss: 0.000
2018-11-05 17:24:08,176:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-267
2018-11-05 17:24:08,177:INFO: Epoch 268/300
2018-11-05 17:24:14,385:INFO: - Train metrics: accuracy: 0.883 ; loss: 0.000
2018-11-05 17:24:14,549:INFO: - Eval metrics: accuracy: 0.820 ; loss: 0.000
2018-11-05 17:24:14,550:INFO: Epoch 269/300
2018-11-05 17:24:20,646:INFO: - Train metrics: accuracy: 0.883 ; loss: 0.000
2018-11-05 17:24:20,814:INFO: - Eval metrics: accuracy: 0.817 ; loss: 0.000
2018-11-05 17:24:20,815:INFO: Epoch 270/300
2018-11-05 17:24:26,906:INFO: - Train metrics: accuracy: 0.880 ; loss: 0.000
2018-11-05 17:24:27,099:INFO: - Eval metrics: accuracy: 0.808 ; loss: 0.000
2018-11-05 17:24:27,099:INFO: Epoch 271/300
2018-11-05 17:24:33,182:INFO: - Train metrics: accuracy: 0.878 ; loss: 0.000
2018-11-05 17:24:33,364:INFO: - Eval metrics: accuracy: 0.815 ; loss: 0.000
2018-11-05 17:24:33,365:INFO: Epoch 272/300
2018-11-05 17:24:39,400:INFO: - Train metrics: accuracy: 0.882 ; loss: 0.000
2018-11-05 17:24:39,572:INFO: - Eval metrics: accuracy: 0.808 ; loss: 0.000
2018-11-05 17:24:39,573:INFO: Epoch 273/300
2018-11-05 17:24:45,741:INFO: - Train metrics: accuracy: 0.882 ; loss: 0.000
2018-11-05 17:24:45,925:INFO: - Eval metrics: accuracy: 0.810 ; loss: 0.000
2018-11-05 17:24:45,926:INFO: Epoch 274/300
2018-11-05 17:24:52,138:INFO: - Train metrics: accuracy: 0.882 ; loss: 0.000
2018-11-05 17:24:52,332:INFO: - Eval metrics: accuracy: 0.822 ; loss: 0.000
2018-11-05 17:24:52,399:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-274
2018-11-05 17:24:52,400:INFO: Epoch 275/300
2018-11-05 17:24:58,531:INFO: - Train metrics: accuracy: 0.875 ; loss: 0.000
2018-11-05 17:24:58,708:INFO: - Eval metrics: accuracy: 0.788 ; loss: 0.000
2018-11-05 17:24:58,709:INFO: Epoch 276/300
2018-11-05 17:25:04,839:INFO: - Train metrics: accuracy: 0.882 ; loss: 0.000
2018-11-05 17:25:04,999:INFO: - Eval metrics: accuracy: 0.824 ; loss: 0.000
2018-11-05 17:25:05,070:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-276
2018-11-05 17:25:05,071:INFO: Epoch 277/300
2018-11-05 17:25:11,243:INFO: - Train metrics: accuracy: 0.884 ; loss: 0.000
2018-11-05 17:25:11,406:INFO: - Eval metrics: accuracy: 0.823 ; loss: 0.000
2018-11-05 17:25:11,407:INFO: Epoch 278/300
2018-11-05 17:25:17,491:INFO: - Train metrics: accuracy: 0.885 ; loss: 0.000
2018-11-05 17:25:17,673:INFO: - Eval metrics: accuracy: 0.824 ; loss: 0.000
2018-11-05 17:25:17,674:INFO: Epoch 279/300
2018-11-05 17:25:23,783:INFO: - Train metrics: accuracy: 0.885 ; loss: 0.000
2018-11-05 17:25:23,969:INFO: - Eval metrics: accuracy: 0.823 ; loss: 0.000
2018-11-05 17:25:23,970:INFO: Epoch 280/300
2018-11-05 17:25:30,061:INFO: - Train metrics: accuracy: 0.884 ; loss: 0.000
2018-11-05 17:25:30,229:INFO: - Eval metrics: accuracy: 0.821 ; loss: 0.000
2018-11-05 17:25:30,230:INFO: Epoch 281/300
2018-11-05 17:25:36,352:INFO: - Train metrics: accuracy: 0.881 ; loss: 0.000
2018-11-05 17:25:36,531:INFO: - Eval metrics: accuracy: 0.814 ; loss: 0.000
2018-11-05 17:25:36,531:INFO: Epoch 282/300
2018-11-05 17:25:42,774:INFO: - Train metrics: accuracy: 0.883 ; loss: 0.000
2018-11-05 17:25:42,976:INFO: - Eval metrics: accuracy: 0.814 ; loss: 0.000
2018-11-05 17:25:42,977:INFO: Epoch 283/300
2018-11-05 17:25:49,326:INFO: - Train metrics: accuracy: 0.885 ; loss: 0.000
2018-11-05 17:25:49,504:INFO: - Eval metrics: accuracy: 0.823 ; loss: 0.000
2018-11-05 17:25:49,505:INFO: Epoch 284/300
2018-11-05 17:25:55,756:INFO: - Train metrics: accuracy: 0.885 ; loss: 0.000
2018-11-05 17:25:55,932:INFO: - Eval metrics: accuracy: 0.821 ; loss: 0.000
2018-11-05 17:25:55,933:INFO: Epoch 285/300
2018-11-05 17:26:02,191:INFO: - Train metrics: accuracy: 0.883 ; loss: 0.000
2018-11-05 17:26:02,379:INFO: - Eval metrics: accuracy: 0.817 ; loss: 0.000
2018-11-05 17:26:02,380:INFO: Epoch 286/300
2018-11-05 17:26:08,698:INFO: - Train metrics: accuracy: 0.880 ; loss: 0.000
2018-11-05 17:26:08,884:INFO: - Eval metrics: accuracy: 0.800 ; loss: 0.000
2018-11-05 17:26:08,885:INFO: Epoch 287/300
2018-11-05 17:26:15,264:INFO: - Train metrics: accuracy: 0.881 ; loss: 0.000
2018-11-05 17:26:15,445:INFO: - Eval metrics: accuracy: 0.808 ; loss: 0.000
2018-11-05 17:26:15,446:INFO: Epoch 288/300
2018-11-05 17:26:21,597:INFO: - Train metrics: accuracy: 0.884 ; loss: 0.000
2018-11-05 17:26:21,788:INFO: - Eval metrics: accuracy: 0.820 ; loss: 0.000
2018-11-05 17:26:21,788:INFO: Epoch 289/300
2018-11-05 17:26:28,266:INFO: - Train metrics: accuracy: 0.885 ; loss: 0.000
2018-11-05 17:26:28,450:INFO: - Eval metrics: accuracy: 0.825 ; loss: 0.000
2018-11-05 17:26:28,526:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-289
2018-11-05 17:26:28,527:INFO: Epoch 290/300
2018-11-05 17:26:34,719:INFO: - Train metrics: accuracy: 0.886 ; loss: 0.000
2018-11-05 17:26:34,915:INFO: - Eval metrics: accuracy: 0.825 ; loss: 0.000
2018-11-05 17:26:34,916:INFO: Epoch 291/300
2018-11-05 17:26:41,093:INFO: - Train metrics: accuracy: 0.886 ; loss: 0.000
2018-11-05 17:26:41,268:INFO: - Eval metrics: accuracy: 0.824 ; loss: 0.000
2018-11-05 17:26:41,269:INFO: Epoch 292/300
2018-11-05 17:26:47,445:INFO: - Train metrics: accuracy: 0.884 ; loss: 0.000
2018-11-05 17:26:47,612:INFO: - Eval metrics: accuracy: 0.812 ; loss: 0.000
2018-11-05 17:26:47,613:INFO: Epoch 293/300
2018-11-05 17:26:53,782:INFO: - Train metrics: accuracy: 0.878 ; loss: 0.000
2018-11-05 17:26:53,970:INFO: - Eval metrics: accuracy: 0.819 ; loss: 0.000
2018-11-05 17:26:53,971:INFO: Epoch 294/300
2018-11-05 17:27:00,263:INFO: - Train metrics: accuracy: 0.882 ; loss: 0.000
2018-11-05 17:27:00,434:INFO: - Eval metrics: accuracy: 0.808 ; loss: 0.000
2018-11-05 17:27:00,435:INFO: Epoch 295/300
2018-11-05 17:27:06,739:INFO: - Train metrics: accuracy: 0.883 ; loss: 0.000
2018-11-05 17:27:06,926:INFO: - Eval metrics: accuracy: 0.813 ; loss: 0.000
2018-11-05 17:27:06,926:INFO: Epoch 296/300
2018-11-05 17:27:13,225:INFO: - Train metrics: accuracy: 0.886 ; loss: 0.000
2018-11-05 17:27:13,392:INFO: - Eval metrics: accuracy: 0.827 ; loss: 0.000
2018-11-05 17:27:13,464:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-296
2018-11-05 17:27:13,465:INFO: Epoch 297/300
2018-11-05 17:27:19,899:INFO: - Train metrics: accuracy: 0.886 ; loss: 0.000
2018-11-05 17:27:20,073:INFO: - Eval metrics: accuracy: 0.825 ; loss: 0.000
2018-11-05 17:27:20,074:INFO: Epoch 298/300
2018-11-05 17:27:26,047:INFO: - Train metrics: accuracy: 0.884 ; loss: 0.000
2018-11-05 17:27:26,217:INFO: - Eval metrics: accuracy: 0.821 ; loss: 0.000
2018-11-05 17:27:26,218:INFO: Epoch 299/300
2018-11-05 17:27:32,362:INFO: - Train metrics: accuracy: 0.881 ; loss: 0.000
2018-11-05 17:27:32,526:INFO: - Eval metrics: accuracy: 0.808 ; loss: 0.000
2018-11-05 17:27:32,527:INFO: Epoch 300/300
2018-11-05 17:27:38,646:INFO: - Train metrics: accuracy: 0.885 ; loss: 0.000
2018-11-05 17:27:38,812:INFO: - Eval metrics: accuracy: 0.819 ; loss: 0.000
2018-11-05 17:27:45,162:INFO: Creating the datasets...
2018-11-05 17:27:47,758:INFO: - done.
2018-11-05 17:27:47,759:INFO: Creating the model...
2018-11-05 17:27:48,301:INFO: - done.
2018-11-05 17:27:48,301:INFO: Starting training for 300 epoch(s)
2018-11-05 17:27:48,369:INFO: Restoring parameters from experiments/best_weights
2018-11-05 17:27:48,383:INFO: Restoring parameters from experiments/best_weights/after-epoch-296
2018-11-05 17:27:48,686:INFO: Epoch 297/596
2018-11-05 17:27:54,945:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:27:55,221:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:27:55,306:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-297
2018-11-05 17:27:55,307:INFO: Epoch 298/596
2018-11-05 17:28:01,215:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.854
2018-11-05 17:28:01,371:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.765
2018-11-05 17:28:01,372:INFO: Epoch 299/596
2018-11-05 17:28:07,420:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.852
2018-11-05 17:28:07,587:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.755
2018-11-05 17:28:07,587:INFO: Epoch 300/596
2018-11-05 17:28:13,631:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:28:13,807:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.760
2018-11-05 17:28:13,808:INFO: Epoch 301/596
2018-11-05 17:28:19,831:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:28:20,010:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:28:20,011:INFO: Epoch 302/596
2018-11-05 17:28:26,011:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:28:26,176:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:28:26,177:INFO: Epoch 303/596
2018-11-05 17:28:32,116:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:28:32,292:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:28:32,293:INFO: Epoch 304/596
2018-11-05 17:28:38,272:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.853
2018-11-05 17:28:38,444:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.759
2018-11-05 17:28:38,445:INFO: Epoch 305/596
2018-11-05 17:28:44,484:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.852
2018-11-05 17:28:44,654:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.763
2018-11-05 17:28:44,655:INFO: Epoch 306/596
2018-11-05 17:28:50,689:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.854
2018-11-05 17:28:50,873:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.763
2018-11-05 17:28:50,874:INFO: Epoch 307/596
2018-11-05 17:28:56,902:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:28:57,075:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:28:57,076:INFO: Epoch 308/596
2018-11-05 17:29:03,029:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.854
2018-11-05 17:29:03,214:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.765
2018-11-05 17:29:03,215:INFO: Epoch 309/596
2018-11-05 17:29:09,241:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:29:09,411:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:29:09,412:INFO: Epoch 310/596
2018-11-05 17:29:15,388:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:29:15,564:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:29:15,641:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-310
2018-11-05 17:29:15,642:INFO: Epoch 311/596
2018-11-05 17:29:21,682:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:29:21,845:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.765
2018-11-05 17:29:21,846:INFO: Epoch 312/596
2018-11-05 17:29:27,792:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.851
2018-11-05 17:29:27,984:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.760
2018-11-05 17:29:27,985:INFO: Epoch 313/596
2018-11-05 17:29:33,967:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:29:34,138:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.759
2018-11-05 17:29:34,139:INFO: Epoch 314/596
2018-11-05 17:29:40,083:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:29:40,259:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.764
2018-11-05 17:29:40,260:INFO: Epoch 315/596
2018-11-05 17:29:46,361:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:29:46,529:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.762
2018-11-05 17:29:46,530:INFO: Epoch 316/596
2018-11-05 17:29:52,483:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:29:52,672:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:29:52,673:INFO: Epoch 317/596
2018-11-05 17:29:58,622:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:29:58,791:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:29:58,792:INFO: Epoch 318/596
2018-11-05 17:30:04,801:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.854
2018-11-05 17:30:04,973:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.758
2018-11-05 17:30:04,974:INFO: Epoch 319/596
2018-11-05 17:30:11,005:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:30:11,180:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:30:11,181:INFO: Epoch 320/596
2018-11-05 17:30:17,267:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:30:17,448:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:30:17,449:INFO: Epoch 321/596
2018-11-05 17:30:23,424:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.854
2018-11-05 17:30:23,613:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.757
2018-11-05 17:30:23,613:INFO: Epoch 322/596
2018-11-05 17:30:29,684:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:30:29,855:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.762
2018-11-05 17:30:29,856:INFO: Epoch 323/596
2018-11-05 17:30:35,993:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:30:36,155:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.765
2018-11-05 17:30:36,156:INFO: Epoch 324/596
2018-11-05 17:30:42,131:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.851
2018-11-05 17:30:42,295:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.754
2018-11-05 17:30:42,296:INFO: Epoch 325/596
2018-11-05 17:30:48,314:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:30:48,491:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.765
2018-11-05 17:30:48,491:INFO: Epoch 326/596
2018-11-05 17:30:54,513:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:30:54,684:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:30:54,754:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-326
2018-11-05 17:30:54,755:INFO: Epoch 327/596
2018-11-05 17:31:00,885:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:31:01,059:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:31:01,130:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-327
2018-11-05 17:31:01,130:INFO: Epoch 328/596
2018-11-05 17:31:07,223:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:31:07,393:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:31:07,472:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-328
2018-11-05 17:31:07,472:INFO: Epoch 329/596
2018-11-05 17:31:13,494:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:31:13,666:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:31:13,667:INFO: Epoch 330/596
2018-11-05 17:31:19,581:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.854
2018-11-05 17:31:19,771:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:31:19,772:INFO: Epoch 331/596
2018-11-05 17:31:25,763:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.853
2018-11-05 17:31:25,934:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.760
2018-11-05 17:31:25,935:INFO: Epoch 332/596
2018-11-05 17:31:31,932:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:31:32,113:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.762
2018-11-05 17:31:32,113:INFO: Epoch 333/596
2018-11-05 17:31:38,149:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:31:38,323:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.757
2018-11-05 17:31:38,324:INFO: Epoch 334/596
2018-11-05 17:31:44,408:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.848
2018-11-05 17:31:44,586:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:31:44,587:INFO: Epoch 335/596
2018-11-05 17:31:50,661:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:31:50,816:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.762
2018-11-05 17:31:50,817:INFO: Epoch 336/596
2018-11-05 17:31:56,870:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:31:57,044:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:31:57,045:INFO: Epoch 337/596
2018-11-05 17:32:03,104:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:32:03,283:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:32:03,355:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-337
2018-11-05 17:32:03,355:INFO: Epoch 338/596
2018-11-05 17:32:09,461:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:32:09,630:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:32:09,708:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-338
2018-11-05 17:32:09,709:INFO: Epoch 339/596
2018-11-05 17:32:15,789:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:32:15,965:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:32:15,966:INFO: Epoch 340/596
2018-11-05 17:32:22,001:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:32:22,168:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.762
2018-11-05 17:32:22,169:INFO: Epoch 341/596
2018-11-05 17:32:28,236:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.851
2018-11-05 17:32:28,417:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.763
2018-11-05 17:32:28,418:INFO: Epoch 342/596
2018-11-05 17:32:34,507:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:32:34,670:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:32:34,671:INFO: Epoch 343/596
2018-11-05 17:32:40,706:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:32:40,891:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:32:40,892:INFO: Epoch 344/596
2018-11-05 17:32:46,921:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:32:47,114:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.764
2018-11-05 17:32:47,115:INFO: Epoch 345/596
2018-11-05 17:32:53,101:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:32:53,276:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:32:53,277:INFO: Epoch 346/596
2018-11-05 17:32:59,190:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:32:59,363:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:32:59,364:INFO: Epoch 347/596
2018-11-05 17:33:05,466:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:33:05,634:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:33:05,634:INFO: Epoch 348/596
2018-11-05 17:33:11,712:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:33:11,891:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:33:11,892:INFO: Epoch 349/596
2018-11-05 17:33:17,894:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:33:18,070:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:33:18,071:INFO: Epoch 350/596
2018-11-05 17:33:24,096:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:33:24,275:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.763
2018-11-05 17:33:24,276:INFO: Epoch 351/596
2018-11-05 17:33:30,278:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:33:30,450:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.765
2018-11-05 17:33:30,450:INFO: Epoch 352/596
2018-11-05 17:33:36,563:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:33:36,741:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:33:36,742:INFO: Epoch 353/596
2018-11-05 17:33:42,814:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:33:42,996:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.761
2018-11-05 17:33:42,996:INFO: Epoch 354/596
2018-11-05 17:33:49,023:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:33:49,195:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.758
2018-11-05 17:33:49,196:INFO: Epoch 355/596
2018-11-05 17:33:55,295:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:33:55,458:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:33:55,459:INFO: Epoch 356/596
2018-11-05 17:34:01,509:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:34:01,674:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:34:01,675:INFO: Epoch 357/596
2018-11-05 17:34:07,642:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.854
2018-11-05 17:34:07,820:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.745
2018-11-05 17:34:07,821:INFO: Epoch 358/596
2018-11-05 17:34:13,910:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:34:14,087:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.763
2018-11-05 17:34:14,088:INFO: Epoch 359/596
2018-11-05 17:34:20,119:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:34:20,305:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:34:20,307:INFO: Epoch 360/596
2018-11-05 17:34:27,346:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:34:27,522:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:34:27,523:INFO: Epoch 361/596
2018-11-05 17:34:33,557:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:34:33,725:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:34:33,726:INFO: Epoch 362/596
2018-11-05 17:34:39,779:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:34:39,959:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.764
2018-11-05 17:34:39,960:INFO: Epoch 363/596
2018-11-05 17:34:46,033:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:34:46,210:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:34:46,211:INFO: Epoch 364/596
2018-11-05 17:34:52,215:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:34:52,393:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:34:52,393:INFO: Epoch 365/596
2018-11-05 17:34:58,499:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:34:58,684:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.763
2018-11-05 17:34:58,685:INFO: Epoch 366/596
2018-11-05 17:35:04,647:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.853
2018-11-05 17:35:04,820:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.755
2018-11-05 17:35:04,821:INFO: Epoch 367/596
2018-11-05 17:35:10,905:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:35:11,085:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.765
2018-11-05 17:35:11,086:INFO: Epoch 368/596
2018-11-05 17:35:17,114:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:35:17,305:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:35:17,306:INFO: Epoch 369/596
2018-11-05 17:35:23,314:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.854
2018-11-05 17:35:23,488:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.762
2018-11-05 17:35:23,489:INFO: Epoch 370/596
2018-11-05 17:35:29,484:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:35:29,657:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.764
2018-11-05 17:35:29,658:INFO: Epoch 371/596
2018-11-05 17:35:35,691:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:35:35,873:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:35:35,874:INFO: Epoch 372/596
2018-11-05 17:35:41,964:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:35:42,142:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:35:42,143:INFO: Epoch 373/596
2018-11-05 17:35:48,173:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:35:48,337:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:35:48,338:INFO: Epoch 374/596
2018-11-05 17:35:54,425:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:35:54,591:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.763
2018-11-05 17:35:54,593:INFO: Epoch 375/596
2018-11-05 17:36:00,722:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:36:00,899:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:36:00,900:INFO: Epoch 376/596
2018-11-05 17:36:06,851:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:36:07,042:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:36:07,113:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-376
2018-11-05 17:36:07,114:INFO: Epoch 377/596
2018-11-05 17:36:13,057:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:36:13,243:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.764
2018-11-05 17:36:13,244:INFO: Epoch 378/596
2018-11-05 17:36:19,310:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:36:19,482:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.762
2018-11-05 17:36:19,483:INFO: Epoch 379/596
2018-11-05 17:36:25,502:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:36:25,662:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:36:25,663:INFO: Epoch 380/596
2018-11-05 17:36:31,713:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:36:31,899:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.761
2018-11-05 17:36:31,900:INFO: Epoch 381/596
2018-11-05 17:36:37,916:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:36:38,093:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.764
2018-11-05 17:36:38,093:INFO: Epoch 382/596
2018-11-05 17:36:44,190:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:36:44,367:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.765
2018-11-05 17:36:44,368:INFO: Epoch 383/596
2018-11-05 17:36:50,439:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:36:50,608:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:36:50,609:INFO: Epoch 384/596
2018-11-05 17:36:56,579:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:36:56,760:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:36:56,761:INFO: Epoch 385/596
2018-11-05 17:37:02,746:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:37:03,004:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.762
2018-11-05 17:37:03,005:INFO: Epoch 386/596
2018-11-05 17:37:09,060:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:37:09,243:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.765
2018-11-05 17:37:09,244:INFO: Epoch 387/596
2018-11-05 17:37:15,149:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:37:15,325:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:37:15,326:INFO: Epoch 388/596
2018-11-05 17:37:21,288:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:37:21,462:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:37:21,463:INFO: Epoch 389/596
2018-11-05 17:37:27,489:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:37:27,652:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.764
2018-11-05 17:37:27,653:INFO: Epoch 390/596
2018-11-05 17:37:33,678:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:37:33,849:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.763
2018-11-05 17:37:33,850:INFO: Epoch 391/596
2018-11-05 17:37:39,947:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.854
2018-11-05 17:37:40,119:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.757
2018-11-05 17:37:40,119:INFO: Epoch 392/596
2018-11-05 17:37:46,247:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:37:46,433:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:37:46,434:INFO: Epoch 393/596
2018-11-05 17:37:52,399:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:37:52,562:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:37:52,563:INFO: Epoch 394/596
2018-11-05 17:37:58,681:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:37:58,859:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:37:58,860:INFO: Epoch 395/596
2018-11-05 17:38:04,908:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:38:05,083:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:38:05,084:INFO: Epoch 396/596
2018-11-05 17:38:11,148:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:38:11,330:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.765
2018-11-05 17:38:11,331:INFO: Epoch 397/596
2018-11-05 17:38:17,404:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:38:17,578:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.754
2018-11-05 17:38:17,579:INFO: Epoch 398/596
2018-11-05 17:38:23,660:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:38:23,833:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:38:23,834:INFO: Epoch 399/596
2018-11-05 17:38:29,833:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:38:30,008:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:38:30,080:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-399
2018-11-05 17:38:30,080:INFO: Epoch 400/596
2018-11-05 17:38:36,148:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:38:36,331:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:38:36,332:INFO: Epoch 401/596
2018-11-05 17:38:42,371:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:38:42,541:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:38:42,542:INFO: Epoch 402/596
2018-11-05 17:38:48,635:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:38:48,809:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:38:48,810:INFO: Epoch 403/596
2018-11-05 17:38:54,862:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:38:55,045:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:38:55,046:INFO: Epoch 404/596
2018-11-05 17:39:01,041:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:39:01,219:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:39:01,220:INFO: Epoch 405/596
2018-11-05 17:39:07,244:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:39:07,424:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.757
2018-11-05 17:39:07,425:INFO: Epoch 406/596
2018-11-05 17:39:13,427:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:39:13,589:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:39:13,590:INFO: Epoch 407/596
2018-11-05 17:39:19,667:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:39:19,852:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:39:19,853:INFO: Epoch 408/596
2018-11-05 17:39:25,835:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:39:26,012:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:39:26,013:INFO: Epoch 409/596
2018-11-05 17:39:32,065:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:39:32,246:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.761
2018-11-05 17:39:32,247:INFO: Epoch 410/596
2018-11-05 17:39:38,265:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:39:38,431:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:39:38,505:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-410
2018-11-05 17:39:38,505:INFO: Epoch 411/596
2018-11-05 17:39:44,495:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:39:44,679:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:39:44,680:INFO: Epoch 412/596
2018-11-05 17:39:50,648:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:39:50,827:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:39:50,828:INFO: Epoch 413/596
2018-11-05 17:39:56,818:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:39:56,991:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.760
2018-11-05 17:39:56,992:INFO: Epoch 414/596
2018-11-05 17:40:03,109:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:40:03,289:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:40:03,289:INFO: Epoch 415/596
2018-11-05 17:40:09,369:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:40:09,561:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:40:09,562:INFO: Epoch 416/596
2018-11-05 17:40:15,569:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:40:15,744:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:40:15,745:INFO: Epoch 417/596
2018-11-05 17:40:21,793:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:40:21,972:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.755
2018-11-05 17:40:21,973:INFO: Epoch 418/596
2018-11-05 17:40:28,004:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:40:28,167:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:40:28,167:INFO: Epoch 419/596
2018-11-05 17:40:34,340:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:40:34,513:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.762
2018-11-05 17:40:34,514:INFO: Epoch 420/596
2018-11-05 17:40:40,516:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:40:40,688:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:40:40,688:INFO: Epoch 421/596
2018-11-05 17:40:46,700:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:40:46,878:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:40:46,879:INFO: Epoch 422/596
2018-11-05 17:40:52,855:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:40:53,041:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:40:53,042:INFO: Epoch 423/596
2018-11-05 17:40:59,033:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:40:59,198:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:40:59,199:INFO: Epoch 424/596
2018-11-05 17:41:05,233:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:41:05,413:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:41:05,414:INFO: Epoch 425/596
2018-11-05 17:41:11,404:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:41:11,565:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.752
2018-11-05 17:41:11,566:INFO: Epoch 426/596
2018-11-05 17:41:17,586:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:41:17,761:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:41:17,762:INFO: Epoch 427/596
2018-11-05 17:41:23,843:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:41:24,022:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:41:24,023:INFO: Epoch 428/596
2018-11-05 17:41:30,008:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:41:30,178:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:41:30,179:INFO: Epoch 429/596
2018-11-05 17:41:36,122:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:41:36,299:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:41:36,300:INFO: Epoch 430/596
2018-11-05 17:41:42,302:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:41:42,468:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:41:42,468:INFO: Epoch 431/596
2018-11-05 17:41:48,462:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:41:48,644:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:41:48,645:INFO: Epoch 432/596
2018-11-05 17:41:54,687:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:41:54,859:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.756
2018-11-05 17:41:54,860:INFO: Epoch 433/596
2018-11-05 17:42:00,811:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:42:00,977:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.763
2018-11-05 17:42:00,978:INFO: Epoch 434/596
2018-11-05 17:42:07,041:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:42:07,232:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:42:07,233:INFO: Epoch 435/596
2018-11-05 17:42:13,252:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:42:13,426:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:42:13,426:INFO: Epoch 436/596
2018-11-05 17:42:20,414:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:42:20,596:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.746
2018-11-05 17:42:20,597:INFO: Epoch 437/596
2018-11-05 17:42:26,588:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:42:26,772:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:42:26,773:INFO: Epoch 438/596
2018-11-05 17:42:32,742:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:42:32,915:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:42:32,989:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-438
2018-11-05 17:42:32,990:INFO: Epoch 439/596
2018-11-05 17:42:39,017:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:42:39,200:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:42:39,200:INFO: Epoch 440/596
2018-11-05 17:42:45,213:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:42:45,396:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:42:45,397:INFO: Epoch 441/596
2018-11-05 17:42:51,492:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:42:51,668:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:42:51,668:INFO: Epoch 442/596
2018-11-05 17:42:57,611:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:42:57,780:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.763
2018-11-05 17:42:57,780:INFO: Epoch 443/596
2018-11-05 17:43:03,803:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:43:03,975:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.760
2018-11-05 17:43:03,975:INFO: Epoch 444/596
2018-11-05 17:43:10,060:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:43:10,222:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:43:10,223:INFO: Epoch 445/596
2018-11-05 17:43:16,237:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:43:16,399:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:43:16,400:INFO: Epoch 446/596
2018-11-05 17:43:22,460:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:43:22,645:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:43:22,645:INFO: Epoch 447/596
2018-11-05 17:43:28,665:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:43:28,852:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.762
2018-11-05 17:43:28,853:INFO: Epoch 448/596
2018-11-05 17:43:34,884:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:43:35,064:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:43:35,064:INFO: Epoch 449/596
2018-11-05 17:43:41,115:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:43:41,298:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:43:41,299:INFO: Epoch 450/596
2018-11-05 17:43:47,281:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:43:47,439:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:43:47,440:INFO: Epoch 451/596
2018-11-05 17:43:53,393:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:43:53,568:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:43:53,569:INFO: Epoch 452/596
2018-11-05 17:43:59,581:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:43:59,761:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:43:59,762:INFO: Epoch 453/596
2018-11-05 17:44:05,723:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:44:05,890:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:44:05,891:INFO: Epoch 454/596
2018-11-05 17:44:11,940:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:44:12,117:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.760
2018-11-05 17:44:12,118:INFO: Epoch 455/596
2018-11-05 17:44:18,092:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:44:18,277:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.759
2018-11-05 17:44:18,278:INFO: Epoch 456/596
2018-11-05 17:44:24,348:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:44:24,525:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.756
2018-11-05 17:44:24,526:INFO: Epoch 457/596
2018-11-05 17:44:30,559:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:44:30,735:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:44:30,736:INFO: Epoch 458/596
2018-11-05 17:44:36,778:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:44:36,959:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:44:36,960:INFO: Epoch 459/596
2018-11-05 17:44:42,934:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:44:43,121:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:44:43,122:INFO: Epoch 460/596
2018-11-05 17:44:49,124:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:44:49,289:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.763
2018-11-05 17:44:49,290:INFO: Epoch 461/596
2018-11-05 17:44:55,342:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:44:55,515:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:44:55,516:INFO: Epoch 462/596
2018-11-05 17:45:01,561:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:45:01,735:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:45:01,736:INFO: Epoch 463/596
2018-11-05 17:45:07,804:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:45:07,979:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:45:07,980:INFO: Epoch 464/596
2018-11-05 17:45:13,993:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:45:14,158:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.765
2018-11-05 17:45:14,158:INFO: Epoch 465/596
2018-11-05 17:45:20,078:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:45:20,243:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:45:20,244:INFO: Epoch 466/596
2018-11-05 17:45:27,116:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:45:27,283:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:45:27,284:INFO: Epoch 467/596
2018-11-05 17:45:33,328:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:45:33,510:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:45:33,511:INFO: Epoch 468/596
2018-11-05 17:45:39,615:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:45:39,791:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.756
2018-11-05 17:45:39,792:INFO: Epoch 469/596
2018-11-05 17:45:45,772:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:45:46,006:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:45:46,007:INFO: Epoch 470/596
2018-11-05 17:45:52,035:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:45:52,214:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:45:52,215:INFO: Epoch 471/596
2018-11-05 17:45:58,233:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:45:58,419:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.777
2018-11-05 17:45:58,496:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-471
2018-11-05 17:45:58,497:INFO: Epoch 472/596
2018-11-05 17:46:04,425:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:46:04,603:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:46:04,604:INFO: Epoch 473/596
2018-11-05 17:46:10,623:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:46:10,802:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:46:10,803:INFO: Epoch 474/596
2018-11-05 17:46:16,748:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.855
2018-11-05 17:46:16,928:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.762
2018-11-05 17:46:16,929:INFO: Epoch 475/596
2018-11-05 17:46:22,929:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:46:23,106:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:46:23,107:INFO: Epoch 476/596
2018-11-05 17:46:29,087:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:46:29,265:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:46:29,266:INFO: Epoch 477/596
2018-11-05 17:46:35,383:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:46:35,547:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:46:35,548:INFO: Epoch 478/596
2018-11-05 17:46:41,603:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:46:41,776:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:46:41,777:INFO: Epoch 479/596
2018-11-05 17:46:47,787:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:46:47,961:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:46:47,962:INFO: Epoch 480/596
2018-11-05 17:46:54,026:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:46:54,203:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.761
2018-11-05 17:46:54,204:INFO: Epoch 481/596
2018-11-05 17:47:01,168:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:47:01,349:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:47:01,350:INFO: Epoch 482/596
2018-11-05 17:47:07,460:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:47:07,648:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:47:07,649:INFO: Epoch 483/596
2018-11-05 17:47:13,722:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:47:13,891:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:47:13,892:INFO: Epoch 484/596
2018-11-05 17:47:19,777:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:47:19,943:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:47:19,944:INFO: Epoch 485/596
2018-11-05 17:47:25,973:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:47:26,146:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:47:26,147:INFO: Epoch 486/596
2018-11-05 17:47:32,168:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:47:32,355:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.759
2018-11-05 17:47:32,356:INFO: Epoch 487/596
2018-11-05 17:47:38,359:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:47:38,524:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:47:38,525:INFO: Epoch 488/596
2018-11-05 17:47:44,488:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:47:44,658:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:47:44,659:INFO: Epoch 489/596
2018-11-05 17:47:50,647:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:47:50,819:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:47:50,820:INFO: Epoch 490/596
2018-11-05 17:47:56,916:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:47:57,085:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.761
2018-11-05 17:47:57,086:INFO: Epoch 491/596
2018-11-05 17:48:02,969:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:48:03,127:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:48:03,127:INFO: Epoch 492/596
2018-11-05 17:48:09,101:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:48:09,281:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:48:09,281:INFO: Epoch 493/596
2018-11-05 17:48:15,328:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:48:15,505:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:48:15,506:INFO: Epoch 494/596
2018-11-05 17:48:21,514:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.857
2018-11-05 17:48:21,679:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.752
2018-11-05 17:48:21,680:INFO: Epoch 495/596
2018-11-05 17:48:27,715:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:48:27,879:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:48:27,880:INFO: Epoch 496/596
2018-11-05 17:48:33,809:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:48:33,978:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:48:33,979:INFO: Epoch 497/596
2018-11-05 17:48:40,871:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:48:41,052:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.778
2018-11-05 17:48:41,123:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-497
2018-11-05 17:48:41,124:INFO: Epoch 498/596
2018-11-05 17:48:47,200:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:48:47,371:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:48:47,372:INFO: Epoch 499/596
2018-11-05 17:48:53,313:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:48:53,484:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.761
2018-11-05 17:48:53,485:INFO: Epoch 500/596
2018-11-05 17:48:59,582:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:48:59,764:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:48:59,765:INFO: Epoch 501/596
2018-11-05 17:49:05,783:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:49:06,006:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.760
2018-11-05 17:49:06,007:INFO: Epoch 502/596
2018-11-05 17:49:12,053:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:49:12,235:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:49:12,236:INFO: Epoch 503/596
2018-11-05 17:49:18,300:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.863
2018-11-05 17:49:18,486:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.778
2018-11-05 17:49:18,566:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-503
2018-11-05 17:49:18,567:INFO: Epoch 504/596
2018-11-05 17:49:24,621:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:49:24,798:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:49:24,799:INFO: Epoch 505/596
2018-11-05 17:49:30,842:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:49:31,007:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.778
2018-11-05 17:49:31,083:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-505
2018-11-05 17:49:31,083:INFO: Epoch 506/596
2018-11-05 17:49:37,114:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:49:37,292:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:49:37,293:INFO: Epoch 507/596
2018-11-05 17:49:43,375:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.856
2018-11-05 17:49:43,547:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.755
2018-11-05 17:49:43,547:INFO: Epoch 508/596
2018-11-05 17:49:49,597:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:49:49,771:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:49:49,771:INFO: Epoch 509/596
2018-11-05 17:49:55,818:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:49:55,994:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.777
2018-11-05 17:49:55,995:INFO: Epoch 510/596
2018-11-05 17:50:02,049:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:50:02,223:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:50:02,224:INFO: Epoch 511/596
2018-11-05 17:50:08,303:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:50:08,485:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:50:08,486:INFO: Epoch 512/596
2018-11-05 17:50:14,595:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:50:14,785:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:50:14,786:INFO: Epoch 513/596
2018-11-05 17:50:20,891:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:50:21,066:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.779
2018-11-05 17:50:21,145:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-513
2018-11-05 17:50:21,146:INFO: Epoch 514/596
2018-11-05 17:50:27,171:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:50:27,347:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:50:27,347:INFO: Epoch 515/596
2018-11-05 17:50:33,392:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:50:33,585:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:50:33,586:INFO: Epoch 516/596
2018-11-05 17:50:39,647:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:50:39,837:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:50:39,840:INFO: Epoch 517/596
2018-11-05 17:50:45,887:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:50:46,072:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:50:46,072:INFO: Epoch 518/596
2018-11-05 17:50:52,106:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:50:52,271:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:50:52,271:INFO: Epoch 519/596
2018-11-05 17:50:58,251:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.863
2018-11-05 17:50:58,419:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.779
2018-11-05 17:50:58,490:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-519
2018-11-05 17:50:58,490:INFO: Epoch 520/596
2018-11-05 17:51:04,568:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:51:04,738:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.764
2018-11-05 17:51:04,738:INFO: Epoch 521/596
2018-11-05 17:51:10,820:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:51:11,005:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:51:11,006:INFO: Epoch 522/596
2018-11-05 17:51:17,335:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:51:17,507:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:51:17,508:INFO: Epoch 523/596
2018-11-05 17:51:23,680:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:51:23,856:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:51:23,858:INFO: Epoch 524/596
2018-11-05 17:51:29,973:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:51:30,147:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:51:30,148:INFO: Epoch 525/596
2018-11-05 17:51:36,251:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:51:36,420:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:51:36,420:INFO: Epoch 526/596
2018-11-05 17:51:42,480:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:51:42,658:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:51:42,659:INFO: Epoch 527/596
2018-11-05 17:51:48,766:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:51:48,950:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:51:48,951:INFO: Epoch 528/596
2018-11-05 17:51:55,147:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:51:55,318:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.764
2018-11-05 17:51:55,318:INFO: Epoch 529/596
2018-11-05 17:52:01,453:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:52:01,632:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:52:01,633:INFO: Epoch 530/596
2018-11-05 17:52:07,850:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:52:08,015:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:52:08,017:INFO: Epoch 531/596
2018-11-05 17:52:14,133:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:52:14,306:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:52:14,307:INFO: Epoch 532/596
2018-11-05 17:52:20,333:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:52:20,520:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.765
2018-11-05 17:52:20,521:INFO: Epoch 533/596
2018-11-05 17:52:26,632:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:52:26,808:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:52:26,809:INFO: Epoch 534/596
2018-11-05 17:52:32,829:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:52:33,003:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:52:33,004:INFO: Epoch 535/596
2018-11-05 17:52:39,055:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:52:39,223:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:52:39,224:INFO: Epoch 536/596
2018-11-05 17:52:45,459:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:52:45,669:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:52:45,671:INFO: Epoch 537/596
2018-11-05 17:52:51,912:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:52:52,078:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:52:52,079:INFO: Epoch 538/596
2018-11-05 17:52:58,153:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:52:58,334:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:52:58,335:INFO: Epoch 539/596
2018-11-05 17:53:04,425:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:53:04,622:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:53:04,622:INFO: Epoch 540/596
2018-11-05 17:53:10,847:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:53:11,029:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.763
2018-11-05 17:53:11,030:INFO: Epoch 541/596
2018-11-05 17:53:17,264:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:53:17,449:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:53:17,450:INFO: Epoch 542/596
2018-11-05 17:53:23,544:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:53:23,716:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:53:23,716:INFO: Epoch 543/596
2018-11-05 17:53:29,828:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:53:29,994:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:53:29,995:INFO: Epoch 544/596
2018-11-05 17:53:36,053:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:53:36,227:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:53:36,228:INFO: Epoch 545/596
2018-11-05 17:53:42,226:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:53:42,404:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:53:42,405:INFO: Epoch 546/596
2018-11-05 17:53:48,528:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:53:48,708:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.759
2018-11-05 17:53:48,709:INFO: Epoch 547/596
2018-11-05 17:53:54,813:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:53:54,988:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:53:54,989:INFO: Epoch 548/596
2018-11-05 17:54:01,992:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:54:02,176:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:54:02,177:INFO: Epoch 549/596
2018-11-05 17:54:08,373:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.863
2018-11-05 17:54:08,556:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.778
2018-11-05 17:54:08,557:INFO: Epoch 550/596
2018-11-05 17:54:14,730:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.863
2018-11-05 17:54:14,905:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:54:14,906:INFO: Epoch 551/596
2018-11-05 17:54:21,116:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:54:21,294:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:54:21,295:INFO: Epoch 552/596
2018-11-05 17:54:27,370:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:54:27,555:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.752
2018-11-05 17:54:27,556:INFO: Epoch 553/596
2018-11-05 17:54:34,731:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:54:34,899:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:54:34,900:INFO: Epoch 554/596
2018-11-05 17:54:41,254:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:54:41,444:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.772
2018-11-05 17:54:41,445:INFO: Epoch 555/596
2018-11-05 17:54:47,640:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:54:47,814:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.779
2018-11-05 17:54:47,815:INFO: Epoch 556/596
2018-11-05 17:54:54,007:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.863
2018-11-05 17:54:54,195:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:54:54,196:INFO: Epoch 557/596
2018-11-05 17:55:00,567:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:55:00,740:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.768
2018-11-05 17:55:00,741:INFO: Epoch 558/596
2018-11-05 17:55:06,727:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:55:06,901:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.764
2018-11-05 17:55:06,902:INFO: Epoch 559/596
2018-11-05 17:55:13,007:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:55:13,180:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.775
2018-11-05 17:55:13,181:INFO: Epoch 560/596
2018-11-05 17:55:19,113:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.863
2018-11-05 17:55:19,289:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:55:19,290:INFO: Epoch 561/596
2018-11-05 17:55:25,377:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:55:25,563:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:55:25,563:INFO: Epoch 562/596
2018-11-05 17:55:31,644:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.859
2018-11-05 17:55:31,813:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.762
2018-11-05 17:55:31,814:INFO: Epoch 563/596
2018-11-05 17:55:37,930:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:55:38,117:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.773
2018-11-05 17:55:38,118:INFO: Epoch 564/596
2018-11-05 17:55:44,173:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.863
2018-11-05 17:55:44,364:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.777
2018-11-05 17:55:44,365:INFO: Epoch 565/596
2018-11-05 17:55:50,361:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:55:50,531:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.769
2018-11-05 17:55:50,532:INFO: Epoch 566/596
2018-11-05 17:55:56,548:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.858
2018-11-05 17:55:56,711:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:55:56,712:INFO: Epoch 567/596
2018-11-05 17:56:02,769:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:56:02,943:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.771
2018-11-05 17:56:02,944:INFO: Epoch 568/596
2018-11-05 17:56:09,046:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.863
2018-11-05 17:56:09,231:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.776
2018-11-05 17:56:09,232:INFO: Epoch 569/596
2018-11-05 17:56:15,381:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:56:15,563:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.767
2018-11-05 17:56:15,564:INFO: Epoch 570/596
2018-11-05 17:56:21,613:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:56:21,787:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:56:21,789:INFO: Epoch 571/596
2018-11-05 17:56:27,828:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.863
2018-11-05 17:56:28,006:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:56:28,006:INFO: Epoch 572/596
2018-11-05 17:56:34,046:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:56:34,227:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.774
2018-11-05 17:56:34,228:INFO: Epoch 573/596
2018-11-05 17:56:40,528:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:56:40,697:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:56:40,698:INFO: Epoch 574/596
2018-11-05 17:56:47,090:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.861
2018-11-05 17:56:47,265:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:56:47,266:INFO: Epoch 575/596
2018-11-05 17:56:53,412:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.862
2018-11-05 17:56:53,597:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.770
2018-11-05 17:56:53,599:INFO: Epoch 576/596
2018-11-05 17:56:59,691:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.860
2018-11-05 17:56:59,859:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.766
2018-11-05 17:56:59,859:INFO: Epoch 577/596
2018-11-05 17:57:06,426:INFO: Creating the datasets...
2018-11-05 17:57:09,255:INFO: - done.
2018-11-05 17:57:09,255:INFO: Creating the model...
2018-11-05 17:58:34,722:INFO: Creating the datasets...
2018-11-05 17:58:37,360:INFO: - done.
2018-11-05 17:58:37,360:INFO: Creating the model...
2018-11-05 17:58:37,845:INFO: - done.
2018-11-05 17:58:37,845:INFO: Starting training for 300 epoch(s)
2018-11-05 17:58:37,967:INFO: Restoring parameters from experiments/best_weights
2018-11-05 17:58:37,969:INFO: Restoring parameters from experiments/best_weights/after-epoch-519
2018-11-05 17:59:33,071:INFO: Creating the datasets...
2018-11-05 17:59:35,642:INFO: - done.
2018-11-05 17:59:35,642:INFO: Creating the model...
2018-11-05 17:59:36,130:INFO: - done.
2018-11-05 17:59:36,130:INFO: Starting training for 300 epoch(s)
2018-11-05 17:59:36,240:INFO: Restoring parameters from experiments/best_weights
2018-11-05 17:59:36,242:INFO: Restoring parameters from experiments/best_weights/after-epoch-519
2018-11-05 18:00:31,956:INFO: Creating the datasets...
2018-11-05 18:00:34,600:INFO: - done.
2018-11-05 18:00:34,600:INFO: Creating the model...
2018-11-05 18:00:35,099:INFO: - done.
2018-11-05 18:00:35,100:INFO: Starting training for 300 epoch(s)
2018-11-05 18:01:03,881:INFO: Creating the datasets...
2018-11-05 18:01:06,548:INFO: - done.
2018-11-05 18:01:06,548:INFO: Creating the model...
2018-11-05 18:01:07,031:INFO: - done.
2018-11-05 18:01:07,031:INFO: Starting training for 300 epoch(s)
2018-11-05 18:01:07,424:INFO: Epoch 1/300
2018-11-05 18:01:22,224:INFO: - Train metrics: accuracy: 0.437 ; loss: 0.001
2018-11-05 18:01:22,545:INFO: - Eval metrics: accuracy: 0.377 ; loss: 0.001
2018-11-05 18:01:22,624:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 18:01:22,626:INFO: Epoch 2/300
2018-11-05 18:01:37,037:INFO: - Train metrics: accuracy: 0.525 ; loss: 0.001
2018-11-05 18:01:37,264:INFO: - Eval metrics: accuracy: 0.442 ; loss: 0.001
2018-11-05 18:01:37,338:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 18:01:37,339:INFO: Epoch 3/300
2018-11-05 18:01:51,742:INFO: - Train metrics: accuracy: 0.580 ; loss: 0.000
2018-11-05 18:01:51,982:INFO: - Eval metrics: accuracy: 0.478 ; loss: 0.000
2018-11-05 18:01:52,055:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 18:01:52,056:INFO: Epoch 4/300
2018-11-05 18:02:06,601:INFO: - Train metrics: accuracy: 0.613 ; loss: 0.000
2018-11-05 18:02:06,831:INFO: - Eval metrics: accuracy: 0.525 ; loss: 0.000
2018-11-05 18:02:06,907:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 18:02:06,908:INFO: Epoch 5/300
2018-11-05 18:02:21,970:INFO: - Train metrics: accuracy: 0.635 ; loss: 0.000
2018-11-05 18:02:22,203:INFO: - Eval metrics: accuracy: 0.547 ; loss: 0.000
2018-11-05 18:02:22,280:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 18:02:22,281:INFO: Epoch 6/300
2018-11-05 18:02:36,811:INFO: - Train metrics: accuracy: 0.652 ; loss: 0.000
2018-11-05 18:02:37,077:INFO: - Eval metrics: accuracy: 0.567 ; loss: 0.000
2018-11-05 18:02:37,162:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-05 18:02:37,164:INFO: Epoch 7/300
2018-11-05 18:02:51,582:INFO: - Train metrics: accuracy: 0.666 ; loss: 0.000
2018-11-05 18:02:51,811:INFO: - Eval metrics: accuracy: 0.584 ; loss: 0.000
2018-11-05 18:02:51,885:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-05 18:02:51,886:INFO: Epoch 8/300
2018-11-05 18:03:06,592:INFO: - Train metrics: accuracy: 0.679 ; loss: 0.000
2018-11-05 18:03:06,846:INFO: - Eval metrics: accuracy: 0.599 ; loss: 0.000
2018-11-05 18:03:06,925:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-05 18:03:06,926:INFO: Epoch 9/300
2018-11-05 18:03:21,438:INFO: - Train metrics: accuracy: 0.690 ; loss: 0.000
2018-11-05 18:03:21,707:INFO: - Eval metrics: accuracy: 0.612 ; loss: 0.000
2018-11-05 18:03:21,790:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-05 18:03:21,792:INFO: Epoch 10/300
2018-11-05 18:03:36,583:INFO: - Train metrics: accuracy: 0.699 ; loss: 0.000
2018-11-05 18:03:36,819:INFO: - Eval metrics: accuracy: 0.622 ; loss: 0.000
2018-11-05 18:03:36,901:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-05 18:03:36,902:INFO: Epoch 11/300
2018-11-05 18:03:51,597:INFO: - Train metrics: accuracy: 0.706 ; loss: 0.000
2018-11-05 18:03:51,908:INFO: - Eval metrics: accuracy: 0.630 ; loss: 0.000
2018-11-05 18:03:51,985:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-05 18:03:51,986:INFO: Epoch 12/300
2018-11-05 18:04:06,636:INFO: - Train metrics: accuracy: 0.713 ; loss: 0.000
2018-11-05 18:04:06,857:INFO: - Eval metrics: accuracy: 0.636 ; loss: 0.000
2018-11-05 18:04:06,930:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-05 18:04:06,931:INFO: Epoch 13/300
2018-11-05 18:04:21,772:INFO: - Train metrics: accuracy: 0.720 ; loss: 0.000
2018-11-05 18:04:22,005:INFO: - Eval metrics: accuracy: 0.643 ; loss: 0.000
2018-11-05 18:04:22,082:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-05 18:04:22,083:INFO: Epoch 14/300
2018-11-05 18:04:36,553:INFO: - Train metrics: accuracy: 0.727 ; loss: 0.000
2018-11-05 18:04:36,796:INFO: - Eval metrics: accuracy: 0.648 ; loss: 0.000
2018-11-05 18:04:36,873:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-05 18:04:36,875:INFO: Epoch 15/300
2018-11-05 18:04:51,800:INFO: - Train metrics: accuracy: 0.733 ; loss: 0.000
2018-11-05 18:04:52,029:INFO: - Eval metrics: accuracy: 0.655 ; loss: 0.000
2018-11-05 18:04:52,107:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-05 18:04:52,108:INFO: Epoch 16/300
2018-11-05 18:05:06,650:INFO: - Train metrics: accuracy: 0.739 ; loss: 0.000
2018-11-05 18:05:06,887:INFO: - Eval metrics: accuracy: 0.661 ; loss: 0.000
2018-11-05 18:05:06,967:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-05 18:05:06,969:INFO: Epoch 17/300
2018-11-05 18:05:21,513:INFO: - Train metrics: accuracy: 0.745 ; loss: 0.000
2018-11-05 18:05:21,748:INFO: - Eval metrics: accuracy: 0.667 ; loss: 0.000
2018-11-05 18:05:21,824:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-05 18:05:21,826:INFO: Epoch 18/300
2018-11-05 18:05:36,827:INFO: - Train metrics: accuracy: 0.751 ; loss: 0.000
2018-11-05 18:05:37,068:INFO: - Eval metrics: accuracy: 0.671 ; loss: 0.000
2018-11-05 18:05:37,166:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-05 18:05:37,170:INFO: Epoch 19/300
2018-11-05 18:05:52,088:INFO: - Train metrics: accuracy: 0.756 ; loss: 0.000
2018-11-05 18:05:52,339:INFO: - Eval metrics: accuracy: 0.674 ; loss: 0.000
2018-11-05 18:05:52,414:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-05 18:05:52,415:INFO: Epoch 20/300
2018-11-05 18:06:07,014:INFO: - Train metrics: accuracy: 0.761 ; loss: 0.000
2018-11-05 18:06:07,245:INFO: - Eval metrics: accuracy: 0.674 ; loss: 0.000
2018-11-05 18:06:07,246:INFO: Epoch 21/300
2018-11-05 18:06:21,872:INFO: - Train metrics: accuracy: 0.764 ; loss: 0.000
2018-11-05 18:06:22,112:INFO: - Eval metrics: accuracy: 0.647 ; loss: 0.000
2018-11-05 18:06:22,113:INFO: Epoch 22/300
2018-11-05 18:06:36,895:INFO: - Train metrics: accuracy: 0.767 ; loss: 0.000
2018-11-05 18:06:37,132:INFO: - Eval metrics: accuracy: 0.673 ; loss: 0.000
2018-11-05 18:06:37,133:INFO: Epoch 23/300
2018-11-05 18:06:51,332:INFO: - Train metrics: accuracy: 0.773 ; loss: 0.000
2018-11-05 18:06:51,579:INFO: - Eval metrics: accuracy: 0.675 ; loss: 0.000
2018-11-05 18:06:51,656:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-05 18:06:51,657:INFO: Epoch 24/300
2018-11-05 18:07:05,886:INFO: - Train metrics: accuracy: 0.776 ; loss: 0.000
2018-11-05 18:07:06,126:INFO: - Eval metrics: accuracy: 0.681 ; loss: 0.000
2018-11-05 18:07:06,203:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-05 18:07:06,204:INFO: Epoch 25/300
2018-11-05 18:07:20,426:INFO: - Train metrics: accuracy: 0.781 ; loss: 0.000
2018-11-05 18:07:20,651:INFO: - Eval metrics: accuracy: 0.687 ; loss: 0.000
2018-11-05 18:07:20,730:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-05 18:07:20,731:INFO: Epoch 26/300
2018-11-05 18:07:35,059:INFO: - Train metrics: accuracy: 0.786 ; loss: 0.000
2018-11-05 18:07:35,285:INFO: - Eval metrics: accuracy: 0.691 ; loss: 0.000
2018-11-05 18:07:35,362:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-05 18:07:35,363:INFO: Epoch 27/300
2018-11-05 18:07:49,659:INFO: - Train metrics: accuracy: 0.789 ; loss: 0.000
2018-11-05 18:07:49,884:INFO: - Eval metrics: accuracy: 0.690 ; loss: 0.000
2018-11-05 18:07:49,885:INFO: Epoch 28/300
2018-11-05 18:08:05,095:INFO: - Train metrics: accuracy: 0.792 ; loss: 0.000
2018-11-05 18:08:05,326:INFO: - Eval metrics: accuracy: 0.696 ; loss: 0.000
2018-11-05 18:08:05,404:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-05 18:08:05,406:INFO: Epoch 29/300
2018-11-05 18:08:20,173:INFO: - Train metrics: accuracy: 0.796 ; loss: 0.000
2018-11-05 18:08:20,410:INFO: - Eval metrics: accuracy: 0.694 ; loss: 0.000
2018-11-05 18:08:20,411:INFO: Epoch 30/300
2018-11-05 18:08:34,817:INFO: - Train metrics: accuracy: 0.799 ; loss: 0.000
2018-11-05 18:08:35,055:INFO: - Eval metrics: accuracy: 0.690 ; loss: 0.000
2018-11-05 18:08:35,056:INFO: Epoch 31/300
2018-11-05 18:08:49,648:INFO: - Train metrics: accuracy: 0.801 ; loss: 0.000
2018-11-05 18:08:49,907:INFO: - Eval metrics: accuracy: 0.673 ; loss: 0.000
2018-11-05 18:08:49,908:INFO: Epoch 32/300
2018-11-05 18:09:04,631:INFO: - Train metrics: accuracy: 0.802 ; loss: 0.000
2018-11-05 18:09:04,872:INFO: - Eval metrics: accuracy: 0.696 ; loss: 0.000
2018-11-05 18:09:04,951:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-05 18:09:04,952:INFO: Epoch 33/300
2018-11-05 18:09:19,401:INFO: - Train metrics: accuracy: 0.806 ; loss: 0.000
2018-11-05 18:09:19,651:INFO: - Eval metrics: accuracy: 0.695 ; loss: 0.000
2018-11-05 18:09:19,652:INFO: Epoch 34/300
2018-11-05 18:09:34,265:INFO: - Train metrics: accuracy: 0.807 ; loss: 0.000
2018-11-05 18:09:34,495:INFO: - Eval metrics: accuracy: 0.693 ; loss: 0.000
2018-11-05 18:09:34,496:INFO: Epoch 35/300
2018-11-05 18:09:38,912:INFO: Creating the datasets...
2018-11-05 18:09:41,807:INFO: - done.
2018-11-05 18:09:41,807:INFO: Creating the model...
2018-11-05 18:10:20,502:INFO: Creating the datasets...
2018-11-05 18:10:23,161:INFO: - done.
2018-11-05 18:10:23,161:INFO: Creating the model...
2018-11-05 18:10:23,648:INFO: - done.
2018-11-05 18:10:23,648:INFO: Starting training for 300 epoch(s)
2018-11-05 18:10:23,986:INFO: Epoch 1/300
2018-11-05 18:10:30,876:INFO: - Train metrics: accuracy: 0.364 ; loss: 0.002
2018-11-05 18:10:31,143:INFO: - Eval metrics: accuracy: 0.274 ; loss: 0.001
2018-11-05 18:10:31,223:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 18:10:31,223:INFO: Epoch 2/300
2018-11-05 18:10:37,765:INFO: - Train metrics: accuracy: 0.456 ; loss: 0.001
2018-11-05 18:10:37,936:INFO: - Eval metrics: accuracy: 0.323 ; loss: 0.001
2018-11-05 18:10:38,006:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 18:10:38,006:INFO: Epoch 3/300
2018-11-05 18:10:44,712:INFO: - Train metrics: accuracy: 0.495 ; loss: 0.001
2018-11-05 18:10:44,893:INFO: - Eval metrics: accuracy: 0.350 ; loss: 0.001
2018-11-05 18:10:44,965:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 18:10:44,965:INFO: Epoch 4/300
2018-11-05 18:10:51,605:INFO: - Train metrics: accuracy: 0.523 ; loss: 0.001
2018-11-05 18:10:51,770:INFO: - Eval metrics: accuracy: 0.385 ; loss: 0.001
2018-11-05 18:10:51,867:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 18:10:51,867:INFO: Epoch 5/300
2018-11-05 18:10:58,508:INFO: - Train metrics: accuracy: 0.546 ; loss: 0.000
2018-11-05 18:10:58,690:INFO: - Eval metrics: accuracy: 0.411 ; loss: 0.001
2018-11-05 18:10:58,765:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 18:10:58,766:INFO: Epoch 6/300
2018-11-05 18:11:05,409:INFO: - Train metrics: accuracy: 0.564 ; loss: 0.000
2018-11-05 18:11:05,582:INFO: - Eval metrics: accuracy: 0.431 ; loss: 0.000
2018-11-05 18:11:05,657:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-05 18:11:05,657:INFO: Epoch 7/300
2018-11-05 18:11:12,311:INFO: - Train metrics: accuracy: 0.578 ; loss: 0.000
2018-11-05 18:11:12,484:INFO: - Eval metrics: accuracy: 0.449 ; loss: 0.000
2018-11-05 18:11:12,551:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-05 18:11:12,551:INFO: Epoch 8/300
2018-11-05 18:11:19,262:INFO: - Train metrics: accuracy: 0.590 ; loss: 0.000
2018-11-05 18:11:19,447:INFO: - Eval metrics: accuracy: 0.467 ; loss: 0.000
2018-11-05 18:11:19,518:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-05 18:11:19,519:INFO: Epoch 9/300
2018-11-05 18:11:26,261:INFO: - Train metrics: accuracy: 0.601 ; loss: 0.000
2018-11-05 18:11:26,439:INFO: - Eval metrics: accuracy: 0.484 ; loss: 0.000
2018-11-05 18:11:26,509:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-05 18:11:26,510:INFO: Epoch 10/300
2018-11-05 18:11:33,165:INFO: - Train metrics: accuracy: 0.611 ; loss: 0.000
2018-11-05 18:11:33,336:INFO: - Eval metrics: accuracy: 0.497 ; loss: 0.000
2018-11-05 18:11:33,402:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-05 18:11:33,403:INFO: Epoch 11/300
2018-11-05 18:11:40,197:INFO: - Train metrics: accuracy: 0.621 ; loss: 0.000
2018-11-05 18:11:40,382:INFO: - Eval metrics: accuracy: 0.507 ; loss: 0.000
2018-11-05 18:11:40,451:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-05 18:11:40,452:INFO: Epoch 12/300
2018-11-05 18:11:49,064:INFO: Creating the datasets...
2018-11-05 18:11:51,722:INFO: - done.
2018-11-05 18:11:51,722:INFO: Creating the model...
2018-11-05 18:11:52,203:INFO: - done.
2018-11-05 18:11:52,203:INFO: Starting training for 300 epoch(s)
2018-11-05 18:11:52,547:INFO: Epoch 1/300
2018-11-05 18:11:59,139:INFO: - Train metrics: loss: 0.002 ; accuracy: 0.363
2018-11-05 18:11:59,401:INFO: - Eval metrics: loss: 0.001 ; accuracy: 0.276
2018-11-05 18:11:59,470:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 18:11:59,474:INFO: Epoch 2/300
2018-11-05 18:12:05,818:INFO: - Train metrics: loss: 0.001 ; accuracy: 0.454
2018-11-05 18:12:05,994:INFO: - Eval metrics: loss: 0.001 ; accuracy: 0.311
2018-11-05 18:12:06,061:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 18:12:06,065:INFO: Epoch 3/300
2018-11-05 18:12:12,522:INFO: - Train metrics: loss: 0.001 ; accuracy: 0.495
2018-11-05 18:12:12,707:INFO: - Eval metrics: loss: 0.001 ; accuracy: 0.350
2018-11-05 18:12:12,772:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 18:12:12,776:INFO: Epoch 4/300
2018-11-05 18:12:19,208:INFO: - Train metrics: loss: 0.001 ; accuracy: 0.523
2018-11-05 18:12:19,385:INFO: - Eval metrics: loss: 0.001 ; accuracy: 0.386
2018-11-05 18:12:19,449:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 18:12:19,452:INFO: Epoch 5/300
2018-11-05 18:12:26,096:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.548
2018-11-05 18:12:26,285:INFO: - Eval metrics: loss: 0.001 ; accuracy: 0.402
2018-11-05 18:12:26,355:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 18:12:26,359:INFO: Epoch 6/300
2018-11-05 18:12:32,847:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.565
2018-11-05 18:12:33,030:INFO: - Eval metrics: loss: 0.001 ; accuracy: 0.419
2018-11-05 18:12:33,093:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-05 18:12:33,096:INFO: Epoch 7/300
2018-11-05 18:12:39,493:INFO: - Train metrics: loss: 0.000 ; accuracy: 0.577
2018-11-05 18:12:39,656:INFO: - Eval metrics: loss: 0.000 ; accuracy: 0.435
2018-11-05 18:12:39,721:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-05 18:12:39,725:INFO: Epoch 8/300
2018-11-05 18:12:53,809:INFO: Creating the datasets...
2018-11-05 18:12:56,391:INFO: - done.
2018-11-05 18:12:56,391:INFO: Creating the model...
2018-11-05 18:12:56,865:INFO: - done.
2018-11-05 18:12:56,866:INFO: Starting training for 300 epoch(s)
2018-11-05 18:12:57,203:INFO: Epoch 1/300
2018-11-05 18:13:03,077:INFO: - Train metrics: accuracy: 0.337 ; loss: 0.003
2018-11-05 18:13:03,335:INFO: - Eval metrics: accuracy: 0.204 ; loss: 0.003
2018-11-05 18:13:03,408:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-05 18:13:03,408:INFO: Epoch 2/300
2018-11-05 18:13:08,823:INFO: - Train metrics: accuracy: 0.393 ; loss: 0.002
2018-11-05 18:13:08,970:INFO: - Eval metrics: accuracy: 0.224 ; loss: 0.003
2018-11-05 18:13:09,036:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-05 18:13:09,036:INFO: Epoch 3/300
2018-11-05 18:13:14,390:INFO: - Train metrics: accuracy: 0.412 ; loss: 0.002
2018-11-05 18:13:14,551:INFO: - Eval metrics: accuracy: 0.256 ; loss: 0.002
2018-11-05 18:13:14,617:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-05 18:13:14,618:INFO: Epoch 4/300
2018-11-05 18:13:20,015:INFO: - Train metrics: accuracy: 0.446 ; loss: 0.002
2018-11-05 18:13:20,178:INFO: - Eval metrics: accuracy: 0.305 ; loss: 0.002
2018-11-05 18:13:20,242:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-05 18:13:20,243:INFO: Epoch 5/300
2018-11-05 18:13:25,756:INFO: - Train metrics: accuracy: 0.481 ; loss: 0.001
2018-11-05 18:13:25,904:INFO: - Eval metrics: accuracy: 0.356 ; loss: 0.002
2018-11-05 18:13:25,971:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-05 18:13:25,971:INFO: Epoch 6/300
2018-11-05 18:13:31,374:INFO: - Train metrics: accuracy: 0.501 ; loss: 0.001
2018-11-05 18:13:31,521:INFO: - Eval metrics: accuracy: 0.385 ; loss: 0.002
2018-11-05 18:13:31,587:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-05 18:13:31,588:INFO: Epoch 7/300
2018-11-05 18:13:37,147:INFO: - Train metrics: accuracy: 0.511 ; loss: 0.001
2018-11-05 18:13:37,320:INFO: - Eval metrics: accuracy: 0.379 ; loss: 0.001
2018-11-05 18:13:37,321:INFO: Epoch 8/300
2018-11-05 18:13:42,823:INFO: - Train metrics: accuracy: 0.516 ; loss: 0.001
2018-11-05 18:13:43,016:INFO: - Eval metrics: accuracy: 0.378 ; loss: 0.001
2018-11-05 18:13:43,017:INFO: Epoch 9/300
2018-11-05 18:13:48,630:INFO: - Train metrics: accuracy: 0.519 ; loss: 0.001
2018-11-05 18:13:48,819:INFO: - Eval metrics: accuracy: 0.369 ; loss: 0.001
2018-11-05 18:13:48,820:INFO: Epoch 10/300
2018-11-05 18:13:54,723:INFO: - Train metrics: accuracy: 0.520 ; loss: 0.001
2018-11-05 18:13:54,896:INFO: - Eval metrics: accuracy: 0.363 ; loss: 0.001
2018-11-05 18:13:54,896:INFO: Epoch 11/300
2018-11-05 18:14:00,443:INFO: - Train metrics: accuracy: 0.520 ; loss: 0.001
2018-11-05 18:14:00,607:INFO: - Eval metrics: accuracy: 0.355 ; loss: 0.001
2018-11-05 18:14:00,608:INFO: Epoch 12/300
2018-11-05 18:14:06,328:INFO: - Train metrics: accuracy: 0.520 ; loss: 0.001
2018-11-05 18:14:06,515:INFO: - Eval metrics: accuracy: 0.350 ; loss: 0.001
2018-11-05 18:14:06,516:INFO: Epoch 13/300
2018-11-05 18:14:12,271:INFO: - Train metrics: accuracy: 0.519 ; loss: 0.001
2018-11-05 18:14:12,436:INFO: - Eval metrics: accuracy: 0.344 ; loss: 0.001
2018-11-05 18:14:12,437:INFO: Epoch 14/300
2018-11-05 18:14:18,067:INFO: - Train metrics: accuracy: 0.518 ; loss: 0.001
2018-11-05 18:14:18,243:INFO: - Eval metrics: accuracy: 0.338 ; loss: 0.001
2018-11-05 18:14:18,244:INFO: Epoch 15/300
2018-11-05 18:14:23,773:INFO: - Train metrics: accuracy: 0.517 ; loss: 0.001
2018-11-05 18:14:23,946:INFO: - Eval metrics: accuracy: 0.334 ; loss: 0.001
2018-11-05 18:14:23,947:INFO: Epoch 16/300
2018-11-06 16:45:04,761:INFO: Creating the datasets...
2018-11-06 16:46:17,986:INFO: Creating the datasets...
2018-11-06 16:46:34,950:INFO: Creating the datasets...
2018-11-06 16:46:43,397:INFO: - done.
2018-11-06 16:46:43,397:INFO: Creating the model...
2018-11-06 16:51:11,881:INFO: Creating the datasets...
2018-11-06 16:51:18,913:INFO: - done.
2018-11-06 16:51:18,913:INFO: Creating the model...
2018-11-06 16:54:10,145:INFO: Creating the datasets...
2018-11-06 16:54:16,998:INFO: - done.
2018-11-06 16:54:16,999:INFO: Creating the model...
2018-11-06 16:54:18,646:INFO: - done.
2018-11-06 16:54:18,647:INFO: Starting training for 10000 epoch(s)
2018-11-06 17:44:18,447:INFO: Epoch 1/10000
2018-11-06 18:45:32,368:INFO: Creating the datasets...
2018-11-06 18:45:45,497:INFO: - done.
2018-11-06 18:45:45,498:INFO: Creating the model...
2018-11-06 18:45:48,414:INFO: - done.
2018-11-06 18:45:48,415:INFO: Starting training for 10000 epoch(s)
2018-11-07 10:46:52,585:INFO: Creating the datasets...
2018-11-07 10:47:17,942:INFO: Creating the datasets...
2018-11-07 10:48:30,197:INFO: Creating the datasets...
2018-11-07 10:49:30,300:INFO: Creating the datasets...
2018-11-07 11:10:26,334:INFO: Creating the datasets...
2018-11-07 11:10:34,137:INFO: - done.
2018-11-07 11:10:34,138:INFO: Creating the model...
2018-11-07 11:11:33,339:INFO: Creating the datasets...
2018-11-07 11:18:45,584:INFO: Creating the datasets...
2018-11-07 11:18:51,970:INFO: - done.
2018-11-07 11:18:51,970:INFO: Creating the model...
2018-11-07 11:18:53,787:INFO: - done.
2018-11-07 11:18:53,787:INFO: Starting training for 10000 epoch(s)
2018-11-07 11:18:55,983:INFO: Epoch 1/10000
2018-11-07 11:38:37,822:INFO: Creating the datasets...
2018-11-07 11:38:45,209:INFO: - done.
2018-11-07 11:38:45,210:INFO: Creating the model...
2018-11-07 11:38:47,028:INFO: - done.
2018-11-07 11:38:47,029:INFO: Starting training for 10000 epoch(s)
2018-11-07 11:38:48,374:INFO: Epoch 1/10000
2018-11-07 11:44:33,856:INFO: - Train metrics: accuracy: 0.607 ; loss: 191.893
2018-11-07 11:45:38,346:INFO: - Eval metrics: accuracy: 0.656 ; loss: 103.025
2018-11-07 11:50:27,142:INFO: Creating the datasets...
2018-11-07 11:50:33,845:INFO: - done.
2018-11-07 11:50:33,845:INFO: Creating the model...
2018-11-07 11:50:35,370:INFO: - done.
2018-11-07 11:50:35,371:INFO: Starting training for 10000 epoch(s)
2018-11-07 11:50:36,642:INFO: Epoch 1/10000
2018-11-07 11:56:47,769:INFO: - Train metrics: accuracy: 0.607 ; loss: 191.893
2018-11-07 11:57:52,217:INFO: - Eval metrics: accuracy: 0.656 ; loss: 103.025
2018-11-07 11:57:52,949:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-07 11:57:52,950:INFO: Epoch 2/10000
2018-11-07 12:23:13,083:INFO: - Train metrics: accuracy: 0.672 ; loss: 70.260
2018-11-07 12:24:30,125:INFO: - Eval metrics: accuracy: 0.665 ; loss: 88.495
2018-11-07 12:24:30,680:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-07 12:24:30,682:INFO: Epoch 3/10000
2018-11-07 12:25:00,716:INFO: Creating the datasets...
2018-11-07 12:25:08,353:INFO: - done.
2018-11-07 12:25:08,353:INFO: Creating the model...
2018-11-07 12:25:10,177:INFO: - done.
2018-11-07 12:25:10,178:INFO: Starting training for 10000 epoch(s)
2018-11-07 12:25:10,432:INFO: Restoring parameters from experiments/best_weights
2018-11-07 12:25:10,439:INFO: Restoring parameters from experiments/best_weights/after-epoch-2
2018-11-07 12:25:11,443:INFO: Epoch 3/10002
2018-11-07 12:25:54,462:INFO: - Train metrics: accuracy: 0.639 ; loss: 119.591
2018-11-07 12:26:01,655:INFO: - Eval metrics: accuracy: 0.672 ; loss: 112.614
2018-11-07 12:26:02,374:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-07 12:26:02,376:INFO: Epoch 4/10002
2018-11-07 12:26:46,010:INFO: - Train metrics: accuracy: 0.646 ; loss: 108.254
2018-11-07 12:26:54,146:INFO: - Eval metrics: accuracy: 0.678 ; loss: 104.442
2018-11-07 12:26:54,676:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-07 12:26:54,679:INFO: Epoch 5/10002
2018-11-08 09:20:04,723:INFO: Creating the datasets...
2018-11-08 09:20:14,835:INFO: - done.
2018-11-08 09:20:14,835:INFO: Creating the model...
2018-11-08 09:20:16,612:INFO: - done.
2018-11-08 09:20:16,612:INFO: Starting training for 10000 epoch(s)
2018-11-08 09:20:17,480:INFO: Epoch 1/10000
2018-11-08 09:20:35,789:INFO: - Train metrics: loss: 1361.316 ; accuracy: 0.359
2018-11-08 09:20:39,382:INFO: - Eval metrics: loss: 587.500 ; accuracy: 0.585
2018-11-08 09:20:39,778:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 09:20:39,779:INFO: Epoch 2/10000
2018-11-08 09:20:57,462:INFO: - Train metrics: loss: 321.190 ; accuracy: 0.659
2018-11-08 09:21:00,844:INFO: - Eval metrics: loss: 276.426 ; accuracy: 0.715
2018-11-08 09:21:01,141:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 09:21:01,141:INFO: Epoch 3/10000
2018-11-08 09:21:18,939:INFO: - Train metrics: loss: 253.632 ; accuracy: 0.696
2018-11-08 09:21:22,339:INFO: - Eval metrics: loss: 247.462 ; accuracy: 0.725
2018-11-08 09:21:22,638:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 09:21:22,639:INFO: Epoch 4/10000
2018-11-08 09:21:40,318:INFO: - Train metrics: loss: 235.389 ; accuracy: 0.702
2018-11-08 09:21:43,752:INFO: - Eval metrics: loss: 240.676 ; accuracy: 0.728
2018-11-08 09:21:44,057:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-08 09:21:44,057:INFO: Epoch 5/10000
2018-11-08 09:22:01,483:INFO: - Train metrics: loss: 222.293 ; accuracy: 0.706
2018-11-08 09:22:04,862:INFO: - Eval metrics: loss: 231.000 ; accuracy: 0.735
2018-11-08 09:22:05,160:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-08 09:22:05,161:INFO: Epoch 6/10000
2018-11-08 09:22:23,013:INFO: - Train metrics: loss: 210.056 ; accuracy: 0.709
2018-11-08 09:22:26,403:INFO: - Eval metrics: loss: 217.457 ; accuracy: 0.717
2018-11-08 09:22:26,489:INFO: Epoch 7/10000
2018-11-08 09:22:44,393:INFO: - Train metrics: loss: 201.928 ; accuracy: 0.712
2018-11-08 09:22:47,753:INFO: - Eval metrics: loss: 213.008 ; accuracy: 0.739
2018-11-08 09:22:48,054:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-08 09:22:48,054:INFO: Epoch 8/10000
2018-11-08 09:23:05,835:INFO: - Train metrics: loss: 193.439 ; accuracy: 0.715
2018-11-08 09:23:09,224:INFO: - Eval metrics: loss: 197.883 ; accuracy: 0.733
2018-11-08 09:23:09,302:INFO: Epoch 9/10000
2018-11-08 09:23:27,028:INFO: - Train metrics: loss: 187.143 ; accuracy: 0.720
2018-11-08 09:23:30,382:INFO: - Eval metrics: loss: 192.415 ; accuracy: 0.738
2018-11-08 09:23:30,463:INFO: Epoch 10/10000
2018-11-08 09:23:48,354:INFO: - Train metrics: loss: 181.075 ; accuracy: 0.722
2018-11-08 09:23:51,696:INFO: - Eval metrics: loss: 183.583 ; accuracy: 0.728
2018-11-08 09:23:51,775:INFO: Epoch 11/10000
2018-11-08 09:24:09,559:INFO: - Train metrics: loss: 175.268 ; accuracy: 0.724
2018-11-08 09:24:12,932:INFO: - Eval metrics: loss: 177.851 ; accuracy: 0.731
2018-11-08 09:24:13,007:INFO: Epoch 12/10000
2018-11-08 09:24:30,711:INFO: - Train metrics: loss: 169.658 ; accuracy: 0.727
2018-11-08 09:24:34,094:INFO: - Eval metrics: loss: 170.583 ; accuracy: 0.743
2018-11-08 09:24:34,384:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-08 09:24:34,385:INFO: Epoch 13/10000
2018-11-08 09:24:52,025:INFO: - Train metrics: loss: 165.078 ; accuracy: 0.728
2018-11-08 09:24:55,396:INFO: - Eval metrics: loss: 163.596 ; accuracy: 0.743
2018-11-08 09:24:55,485:INFO: Epoch 14/10000
2018-11-08 09:25:13,079:INFO: - Train metrics: loss: 159.301 ; accuracy: 0.730
2018-11-08 09:25:16,459:INFO: - Eval metrics: loss: 158.307 ; accuracy: 0.742
2018-11-08 09:25:16,552:INFO: Epoch 15/10000
2018-11-08 09:25:34,121:INFO: - Train metrics: loss: 154.654 ; accuracy: 0.731
2018-11-08 09:25:37,459:INFO: - Eval metrics: loss: 159.476 ; accuracy: 0.748
2018-11-08 09:25:37,750:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-08 09:25:37,750:INFO: Epoch 16/10000
2018-11-08 09:25:55,388:INFO: - Train metrics: loss: 150.997 ; accuracy: 0.732
2018-11-08 09:25:58,725:INFO: - Eval metrics: loss: 152.872 ; accuracy: 0.746
2018-11-08 09:25:58,808:INFO: Epoch 17/10000
2018-11-08 09:26:16,347:INFO: - Train metrics: loss: 146.440 ; accuracy: 0.733
2018-11-08 09:26:19,697:INFO: - Eval metrics: loss: 151.817 ; accuracy: 0.747
2018-11-08 09:26:19,780:INFO: Epoch 18/10000
2018-11-08 09:26:37,383:INFO: - Train metrics: loss: 141.517 ; accuracy: 0.735
2018-11-08 09:26:40,772:INFO: - Eval metrics: loss: 143.135 ; accuracy: 0.749
2018-11-08 09:26:41,057:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-08 09:26:41,057:INFO: Epoch 19/10000
2018-11-08 09:26:58,791:INFO: - Train metrics: loss: 136.976 ; accuracy: 0.736
2018-11-08 09:27:02,104:INFO: - Eval metrics: loss: 145.431 ; accuracy: 0.752
2018-11-08 09:27:02,395:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-08 09:27:02,395:INFO: Epoch 20/10000
2018-11-08 09:27:20,069:INFO: - Train metrics: loss: 133.349 ; accuracy: 0.738
2018-11-08 09:27:23,435:INFO: - Eval metrics: loss: 139.717 ; accuracy: 0.755
2018-11-08 09:27:23,730:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-20
2018-11-08 09:27:23,731:INFO: Epoch 21/10000
2018-11-08 09:27:41,307:INFO: - Train metrics: loss: 129.348 ; accuracy: 0.740
2018-11-08 09:27:44,690:INFO: - Eval metrics: loss: 135.058 ; accuracy: 0.757
2018-11-08 09:27:44,983:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-08 09:27:44,984:INFO: Epoch 22/10000
2018-11-08 09:28:02,501:INFO: - Train metrics: loss: 124.995 ; accuracy: 0.741
2018-11-08 09:28:05,846:INFO: - Eval metrics: loss: 132.340 ; accuracy: 0.761
2018-11-08 09:28:06,147:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-08 09:28:06,147:INFO: Epoch 23/10000
2018-11-08 09:28:24,014:INFO: - Train metrics: loss: 120.698 ; accuracy: 0.743
2018-11-08 09:28:27,411:INFO: - Eval metrics: loss: 128.100 ; accuracy: 0.758
2018-11-08 09:28:27,494:INFO: Epoch 24/10000
2018-11-08 09:28:45,163:INFO: - Train metrics: loss: 116.394 ; accuracy: 0.744
2018-11-08 09:28:48,549:INFO: - Eval metrics: loss: 124.360 ; accuracy: 0.761
2018-11-08 09:28:48,630:INFO: Epoch 25/10000
2018-11-08 09:29:06,316:INFO: - Train metrics: loss: 115.056 ; accuracy: 0.745
2018-11-08 09:29:09,646:INFO: - Eval metrics: loss: 124.735 ; accuracy: 0.764
2018-11-08 09:29:09,936:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-08 09:29:09,936:INFO: Epoch 26/10000
2018-11-08 09:29:27,688:INFO: - Train metrics: loss: 111.343 ; accuracy: 0.746
2018-11-08 09:29:31,103:INFO: - Eval metrics: loss: 123.406 ; accuracy: 0.761
2018-11-08 09:29:31,184:INFO: Epoch 27/10000
2018-11-08 09:29:49,060:INFO: - Train metrics: loss: 108.914 ; accuracy: 0.747
2018-11-08 09:29:52,448:INFO: - Eval metrics: loss: 119.623 ; accuracy: 0.762
2018-11-08 09:29:52,529:INFO: Epoch 28/10000
2018-11-08 09:30:10,167:INFO: - Train metrics: loss: 106.156 ; accuracy: 0.748
2018-11-08 09:30:13,551:INFO: - Eval metrics: loss: 117.585 ; accuracy: 0.758
2018-11-08 09:30:13,626:INFO: Epoch 29/10000
2018-11-08 09:30:31,313:INFO: - Train metrics: loss: 105.173 ; accuracy: 0.748
2018-11-08 09:30:34,737:INFO: - Eval metrics: loss: 115.034 ; accuracy: 0.755
2018-11-08 09:30:34,815:INFO: Epoch 30/10000
2018-11-08 09:30:52,407:INFO: - Train metrics: loss: 101.663 ; accuracy: 0.749
2018-11-08 09:30:55,737:INFO: - Eval metrics: loss: 111.203 ; accuracy: 0.769
2018-11-08 09:30:56,027:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-30
2018-11-08 09:30:56,028:INFO: Epoch 31/10000
2018-11-08 09:31:13,794:INFO: - Train metrics: loss: 97.964 ; accuracy: 0.752
2018-11-08 09:31:17,154:INFO: - Eval metrics: loss: 109.286 ; accuracy: 0.760
2018-11-08 09:31:17,243:INFO: Epoch 32/10000
2018-11-08 09:31:34,923:INFO: - Train metrics: loss: 96.157 ; accuracy: 0.753
2018-11-08 09:31:38,301:INFO: - Eval metrics: loss: 106.975 ; accuracy: 0.770
2018-11-08 09:31:38,592:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-08 09:31:38,592:INFO: Epoch 33/10000
2018-11-08 09:31:56,066:INFO: - Train metrics: loss: 94.282 ; accuracy: 0.754
2018-11-08 09:31:59,462:INFO: - Eval metrics: loss: 103.409 ; accuracy: 0.763
2018-11-08 09:31:59,541:INFO: Epoch 34/10000
2018-11-08 09:32:17,297:INFO: - Train metrics: loss: 92.519 ; accuracy: 0.755
2018-11-08 09:32:20,664:INFO: - Eval metrics: loss: 102.714 ; accuracy: 0.766
2018-11-08 09:32:20,748:INFO: Epoch 35/10000
2018-11-08 09:32:38,293:INFO: - Train metrics: loss: 91.113 ; accuracy: 0.755
2018-11-08 09:32:41,610:INFO: - Eval metrics: loss: 99.576 ; accuracy: 0.771
2018-11-08 09:32:41,908:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-35
2018-11-08 09:32:41,909:INFO: Epoch 36/10000
2018-11-08 09:32:59,900:INFO: - Train metrics: loss: 89.183 ; accuracy: 0.757
2018-11-08 09:33:03,271:INFO: - Eval metrics: loss: 98.355 ; accuracy: 0.765
2018-11-08 09:33:03,362:INFO: Epoch 37/10000
2018-11-08 09:33:20,990:INFO: - Train metrics: loss: 87.065 ; accuracy: 0.757
2018-11-08 09:33:24,376:INFO: - Eval metrics: loss: 95.266 ; accuracy: 0.771
2018-11-08 09:33:24,660:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-37
2018-11-08 09:33:24,660:INFO: Epoch 38/10000
2018-11-08 09:33:42,523:INFO: - Train metrics: loss: 85.316 ; accuracy: 0.759
2018-11-08 09:33:45,905:INFO: - Eval metrics: loss: 93.005 ; accuracy: 0.772
2018-11-08 09:33:46,201:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-38
2018-11-08 09:33:46,202:INFO: Epoch 39/10000
2018-11-08 09:34:04,167:INFO: - Train metrics: loss: 83.997 ; accuracy: 0.760
2018-11-08 09:34:07,443:INFO: - Eval metrics: loss: 92.826 ; accuracy: 0.777
2018-11-08 09:34:07,732:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-39
2018-11-08 09:34:07,733:INFO: Epoch 40/10000
2018-11-08 09:34:25,456:INFO: - Train metrics: loss: 81.771 ; accuracy: 0.761
2018-11-08 09:34:28,800:INFO: - Eval metrics: loss: 89.336 ; accuracy: 0.766
2018-11-08 09:34:28,879:INFO: Epoch 41/10000
2018-11-08 09:34:46,662:INFO: - Train metrics: loss: 80.479 ; accuracy: 0.762
2018-11-08 09:34:50,032:INFO: - Eval metrics: loss: 86.605 ; accuracy: 0.773
2018-11-08 09:34:50,116:INFO: Epoch 42/10000
2018-11-08 09:35:08,057:INFO: - Train metrics: loss: 78.552 ; accuracy: 0.764
2018-11-08 09:35:11,458:INFO: - Eval metrics: loss: 87.936 ; accuracy: 0.778
2018-11-08 09:35:11,745:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-42
2018-11-08 09:35:11,746:INFO: Epoch 43/10000
2018-11-08 09:35:29,298:INFO: - Train metrics: loss: 77.971 ; accuracy: 0.764
2018-11-08 09:35:32,676:INFO: - Eval metrics: loss: 83.246 ; accuracy: 0.775
2018-11-08 09:35:32,766:INFO: Epoch 44/10000
2018-11-08 09:35:50,395:INFO: - Train metrics: loss: 75.781 ; accuracy: 0.765
2018-11-08 09:35:53,761:INFO: - Eval metrics: loss: 81.454 ; accuracy: 0.774
2018-11-08 09:35:53,846:INFO: Epoch 45/10000
2018-11-08 09:36:11,385:INFO: - Train metrics: loss: 74.312 ; accuracy: 0.766
2018-11-08 09:36:14,788:INFO: - Eval metrics: loss: 79.469 ; accuracy: 0.778
2018-11-08 09:36:14,878:INFO: Epoch 46/10000
2018-11-08 09:36:32,597:INFO: - Train metrics: loss: 73.063 ; accuracy: 0.767
2018-11-08 09:36:35,942:INFO: - Eval metrics: loss: 75.500 ; accuracy: 0.776
2018-11-08 09:36:36,025:INFO: Epoch 47/10000
2018-11-08 09:36:53,802:INFO: - Train metrics: loss: 71.312 ; accuracy: 0.769
2018-11-08 09:36:57,208:INFO: - Eval metrics: loss: 75.052 ; accuracy: 0.777
2018-11-08 09:36:57,289:INFO: Epoch 48/10000
2018-11-08 09:37:14,358:INFO: - Train metrics: loss: 70.266 ; accuracy: 0.770
2018-11-08 09:37:17,108:INFO: - Eval metrics: loss: 72.872 ; accuracy: 0.777
2018-11-08 09:37:17,181:INFO: Epoch 49/10000
2018-11-08 09:37:33,204:INFO: - Train metrics: loss: 68.777 ; accuracy: 0.770
2018-11-08 09:37:36,297:INFO: - Eval metrics: loss: 71.091 ; accuracy: 0.781
2018-11-08 09:37:36,599:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-49
2018-11-08 09:37:36,600:INFO: Epoch 50/10000
2018-11-08 09:37:53,926:INFO: - Train metrics: loss: 66.754 ; accuracy: 0.772
2018-11-08 09:37:57,307:INFO: - Eval metrics: loss: 74.499 ; accuracy: 0.781
2018-11-08 09:37:57,388:INFO: Epoch 51/10000
2018-11-08 09:38:13,797:INFO: - Train metrics: loss: 65.957 ; accuracy: 0.773
2018-11-08 09:38:16,877:INFO: - Eval metrics: loss: 67.623 ; accuracy: 0.788
2018-11-08 09:38:17,183:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-51
2018-11-08 09:38:17,184:INFO: Epoch 52/10000
2018-11-08 09:38:34,627:INFO: - Train metrics: loss: 64.195 ; accuracy: 0.774
2018-11-08 09:38:37,872:INFO: - Eval metrics: loss: 66.254 ; accuracy: 0.787
2018-11-08 09:38:37,962:INFO: Epoch 53/10000
2018-11-08 09:38:54,532:INFO: - Train metrics: loss: 63.554 ; accuracy: 0.775
2018-11-08 09:38:57,967:INFO: - Eval metrics: loss: 67.014 ; accuracy: 0.786
2018-11-08 09:38:58,057:INFO: Epoch 54/10000
2018-11-08 09:39:15,771:INFO: - Train metrics: loss: 62.578 ; accuracy: 0.776
2018-11-08 09:39:19,168:INFO: - Eval metrics: loss: 65.299 ; accuracy: 0.785
2018-11-08 09:39:19,235:INFO: Epoch 55/10000
2018-11-08 09:39:37,041:INFO: - Train metrics: loss: 61.038 ; accuracy: 0.777
2018-11-08 09:39:40,458:INFO: - Eval metrics: loss: 63.150 ; accuracy: 0.790
2018-11-08 09:39:40,753:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-55
2018-11-08 09:39:40,753:INFO: Epoch 56/10000
2018-11-08 09:39:58,363:INFO: - Train metrics: loss: 60.350 ; accuracy: 0.778
2018-11-08 09:40:01,770:INFO: - Eval metrics: loss: 61.384 ; accuracy: 0.789
2018-11-08 09:40:01,859:INFO: Epoch 57/10000
2018-11-08 09:40:19,760:INFO: - Train metrics: loss: 59.059 ; accuracy: 0.778
2018-11-08 09:40:23,154:INFO: - Eval metrics: loss: 60.764 ; accuracy: 0.790
2018-11-08 09:40:23,474:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-57
2018-11-08 09:40:23,475:INFO: Epoch 58/10000
2018-11-08 09:40:39,584:INFO: - Train metrics: loss: 57.912 ; accuracy: 0.781
2018-11-08 09:40:42,310:INFO: - Eval metrics: loss: 59.192 ; accuracy: 0.786
2018-11-08 09:40:42,436:INFO: Epoch 59/10000
2018-11-08 09:40:57,054:INFO: - Train metrics: loss: 57.470 ; accuracy: 0.781
2018-11-08 09:40:59,765:INFO: - Eval metrics: loss: 58.953 ; accuracy: 0.793
2018-11-08 09:41:00,039:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-59
2018-11-08 09:41:00,040:INFO: Epoch 60/10000
2018-11-08 09:41:14,198:INFO: - Train metrics: loss: 56.294 ; accuracy: 0.782
2018-11-08 09:41:17,188:INFO: - Eval metrics: loss: 57.137 ; accuracy: 0.794
2018-11-08 09:41:17,524:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-60
2018-11-08 09:41:17,524:INFO: Epoch 61/10000
2018-11-08 09:41:32,446:INFO: - Train metrics: loss: 55.153 ; accuracy: 0.782
2018-11-08 09:41:35,426:INFO: - Eval metrics: loss: 56.466 ; accuracy: 0.790
2018-11-08 09:41:35,507:INFO: Epoch 62/10000
2018-11-08 09:41:50,323:INFO: - Train metrics: loss: 54.407 ; accuracy: 0.784
2018-11-08 09:41:53,282:INFO: - Eval metrics: loss: 54.919 ; accuracy: 0.793
2018-11-08 09:41:53,350:INFO: Epoch 63/10000
2018-11-08 09:42:08,469:INFO: - Train metrics: loss: 53.458 ; accuracy: 0.785
2018-11-08 09:42:11,345:INFO: - Eval metrics: loss: 53.442 ; accuracy: 0.794
2018-11-08 09:42:11,622:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-63
2018-11-08 09:42:11,622:INFO: Epoch 64/10000
2018-11-08 09:42:26,675:INFO: - Train metrics: loss: 52.586 ; accuracy: 0.786
2018-11-08 09:42:29,536:INFO: - Eval metrics: loss: 51.801 ; accuracy: 0.798
2018-11-08 09:42:29,818:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-64
2018-11-08 09:42:29,818:INFO: Epoch 65/10000
2018-11-08 09:42:44,796:INFO: - Train metrics: loss: 51.479 ; accuracy: 0.787
2018-11-08 09:42:47,684:INFO: - Eval metrics: loss: 51.902 ; accuracy: 0.802
2018-11-08 09:42:48,043:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-65
2018-11-08 09:42:48,044:INFO: Epoch 66/10000
2018-11-08 09:43:02,550:INFO: - Train metrics: loss: 50.648 ; accuracy: 0.788
2018-11-08 09:43:05,330:INFO: - Eval metrics: loss: 52.190 ; accuracy: 0.801
2018-11-08 09:43:05,411:INFO: Epoch 67/10000
2018-11-08 09:43:20,228:INFO: - Train metrics: loss: 50.374 ; accuracy: 0.789
2018-11-08 09:43:23,035:INFO: - Eval metrics: loss: 50.354 ; accuracy: 0.798
2018-11-08 09:43:23,111:INFO: Epoch 68/10000
2018-11-08 09:43:37,984:INFO: - Train metrics: loss: 49.129 ; accuracy: 0.790
2018-11-08 09:43:40,808:INFO: - Eval metrics: loss: 48.962 ; accuracy: 0.803
2018-11-08 09:43:41,106:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-68
2018-11-08 09:43:41,107:INFO: Epoch 69/10000
2018-11-08 09:43:55,931:INFO: - Train metrics: loss: 48.868 ; accuracy: 0.791
2018-11-08 09:43:59,175:INFO: - Eval metrics: loss: 49.955 ; accuracy: 0.805
2018-11-08 09:43:59,459:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-69
2018-11-08 09:43:59,460:INFO: Epoch 70/10000
2018-11-08 09:44:17,357:INFO: - Train metrics: loss: 48.229 ; accuracy: 0.792
2018-11-08 09:44:20,742:INFO: - Eval metrics: loss: 48.315 ; accuracy: 0.806
2018-11-08 09:44:21,040:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-70
2018-11-08 09:44:21,041:INFO: Epoch 71/10000
2018-11-08 09:44:38,849:INFO: - Train metrics: loss: 47.568 ; accuracy: 0.792
2018-11-08 09:44:42,222:INFO: - Eval metrics: loss: 47.744 ; accuracy: 0.804
2018-11-08 09:44:42,308:INFO: Epoch 72/10000
2018-11-08 09:44:59,801:INFO: - Train metrics: loss: 46.749 ; accuracy: 0.794
2018-11-08 09:45:03,264:INFO: - Eval metrics: loss: 47.174 ; accuracy: 0.802
2018-11-08 09:45:03,350:INFO: Epoch 73/10000
2018-11-08 09:45:20,968:INFO: - Train metrics: loss: 45.972 ; accuracy: 0.795
2018-11-08 09:45:24,197:INFO: - Eval metrics: loss: 46.415 ; accuracy: 0.805
2018-11-08 09:45:24,278:INFO: Epoch 74/10000
2018-11-08 09:45:41,289:INFO: - Train metrics: loss: 45.152 ; accuracy: 0.796
2018-11-08 09:45:44,680:INFO: - Eval metrics: loss: 45.555 ; accuracy: 0.803
2018-11-08 09:45:44,762:INFO: Epoch 75/10000
2018-11-08 09:46:01,606:INFO: - Train metrics: loss: 44.833 ; accuracy: 0.797
2018-11-08 09:46:04,890:INFO: - Eval metrics: loss: 45.002 ; accuracy: 0.803
2018-11-08 09:46:04,977:INFO: Epoch 76/10000
2018-11-08 09:46:22,112:INFO: - Train metrics: loss: 44.103 ; accuracy: 0.797
2018-11-08 09:46:25,412:INFO: - Eval metrics: loss: 43.419 ; accuracy: 0.809
2018-11-08 09:46:25,733:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-76
2018-11-08 09:46:25,734:INFO: Epoch 77/10000
2018-11-08 09:46:43,375:INFO: - Train metrics: loss: 43.450 ; accuracy: 0.798
2018-11-08 09:46:46,765:INFO: - Eval metrics: loss: 42.837 ; accuracy: 0.810
2018-11-08 09:46:47,069:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-77
2018-11-08 09:46:47,069:INFO: Epoch 78/10000
2018-11-08 09:47:04,804:INFO: - Train metrics: loss: 42.659 ; accuracy: 0.799
2018-11-08 09:47:08,251:INFO: - Eval metrics: loss: 42.461 ; accuracy: 0.809
2018-11-08 09:47:08,332:INFO: Epoch 79/10000
2018-11-08 09:47:26,094:INFO: - Train metrics: loss: 41.933 ; accuracy: 0.800
2018-11-08 09:47:29,471:INFO: - Eval metrics: loss: 43.356 ; accuracy: 0.805
2018-11-08 09:47:29,551:INFO: Epoch 80/10000
2018-11-08 09:47:47,472:INFO: - Train metrics: loss: 41.755 ; accuracy: 0.800
2018-11-08 09:47:50,850:INFO: - Eval metrics: loss: 42.336 ; accuracy: 0.812
2018-11-08 09:47:51,150:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-80
2018-11-08 09:47:51,151:INFO: Epoch 81/10000
2018-11-08 09:48:09,111:INFO: - Train metrics: loss: 40.990 ; accuracy: 0.801
2018-11-08 09:48:12,616:INFO: - Eval metrics: loss: 40.056 ; accuracy: 0.811
2018-11-08 09:48:12,698:INFO: Epoch 82/10000
2018-11-08 09:48:30,449:INFO: - Train metrics: loss: 40.694 ; accuracy: 0.802
2018-11-08 09:48:33,861:INFO: - Eval metrics: loss: 41.858 ; accuracy: 0.812
2018-11-08 09:48:34,151:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-82
2018-11-08 09:48:34,152:INFO: Epoch 83/10000
2018-11-08 09:48:52,336:INFO: - Train metrics: loss: 39.840 ; accuracy: 0.803
2018-11-08 09:48:55,777:INFO: - Eval metrics: loss: 41.632 ; accuracy: 0.810
2018-11-08 09:48:55,871:INFO: Epoch 84/10000
2018-11-08 09:49:13,466:INFO: - Train metrics: loss: 39.372 ; accuracy: 0.804
2018-11-08 09:49:16,835:INFO: - Eval metrics: loss: 39.149 ; accuracy: 0.809
2018-11-08 09:49:16,908:INFO: Epoch 85/10000
2018-11-08 09:49:34,858:INFO: - Train metrics: loss: 38.538 ; accuracy: 0.805
2018-11-08 09:49:38,270:INFO: - Eval metrics: loss: 39.147 ; accuracy: 0.808
2018-11-08 09:49:38,356:INFO: Epoch 86/10000
2018-11-08 09:49:56,246:INFO: - Train metrics: loss: 38.013 ; accuracy: 0.805
2018-11-08 09:49:59,653:INFO: - Eval metrics: loss: 39.450 ; accuracy: 0.808
2018-11-08 09:49:59,734:INFO: Epoch 87/10000
2018-11-08 09:50:17,666:INFO: - Train metrics: loss: 37.599 ; accuracy: 0.807
2018-11-08 09:50:21,040:INFO: - Eval metrics: loss: 37.164 ; accuracy: 0.816
2018-11-08 09:50:21,327:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-87
2018-11-08 09:50:21,328:INFO: Epoch 88/10000
2018-11-08 09:50:39,075:INFO: - Train metrics: loss: 37.074 ; accuracy: 0.807
2018-11-08 09:50:42,462:INFO: - Eval metrics: loss: 36.396 ; accuracy: 0.815
2018-11-08 09:50:42,540:INFO: Epoch 89/10000
2018-11-08 09:51:00,520:INFO: - Train metrics: loss: 36.530 ; accuracy: 0.808
2018-11-08 09:51:03,894:INFO: - Eval metrics: loss: 37.301 ; accuracy: 0.815
2018-11-08 09:51:03,974:INFO: Epoch 90/10000
2018-11-08 09:51:22,075:INFO: - Train metrics: loss: 36.269 ; accuracy: 0.809
2018-11-08 09:51:25,505:INFO: - Eval metrics: loss: 36.468 ; accuracy: 0.815
2018-11-08 09:51:25,588:INFO: Epoch 91/10000
2018-11-08 09:51:43,508:INFO: - Train metrics: loss: 35.781 ; accuracy: 0.809
2018-11-08 09:51:46,902:INFO: - Eval metrics: loss: 35.461 ; accuracy: 0.814
2018-11-08 09:51:47,004:INFO: Epoch 92/10000
2018-11-08 09:52:04,870:INFO: - Train metrics: loss: 35.363 ; accuracy: 0.810
2018-11-08 09:52:08,234:INFO: - Eval metrics: loss: 34.747 ; accuracy: 0.812
2018-11-08 09:52:08,319:INFO: Epoch 93/10000
2018-11-08 09:52:26,237:INFO: - Train metrics: loss: 35.191 ; accuracy: 0.810
2018-11-08 09:52:29,588:INFO: - Eval metrics: loss: 35.900 ; accuracy: 0.821
2018-11-08 09:52:29,878:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-93
2018-11-08 09:52:29,879:INFO: Epoch 94/10000
2018-11-08 09:52:47,695:INFO: - Train metrics: loss: 34.384 ; accuracy: 0.811
2018-11-08 09:52:51,095:INFO: - Eval metrics: loss: 34.330 ; accuracy: 0.819
2018-11-08 09:52:51,182:INFO: Epoch 95/10000
2018-11-08 09:53:09,069:INFO: - Train metrics: loss: 33.881 ; accuracy: 0.812
2018-11-08 09:53:12,483:INFO: - Eval metrics: loss: 33.715 ; accuracy: 0.821
2018-11-08 09:53:12,776:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-95
2018-11-08 09:53:12,777:INFO: Epoch 96/10000
2018-11-08 09:53:30,787:INFO: - Train metrics: loss: 33.723 ; accuracy: 0.813
2018-11-08 09:53:34,222:INFO: - Eval metrics: loss: 33.753 ; accuracy: 0.819
2018-11-08 09:53:34,312:INFO: Epoch 97/10000
2018-11-08 09:53:52,316:INFO: - Train metrics: loss: 33.018 ; accuracy: 0.813
2018-11-08 09:53:55,739:INFO: - Eval metrics: loss: 33.038 ; accuracy: 0.822
2018-11-08 09:53:56,044:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-97
2018-11-08 09:53:56,044:INFO: Epoch 98/10000
2018-11-08 09:54:14,148:INFO: - Train metrics: loss: 32.606 ; accuracy: 0.814
2018-11-08 09:54:17,543:INFO: - Eval metrics: loss: 32.566 ; accuracy: 0.823
2018-11-08 09:54:17,837:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-98
2018-11-08 09:54:17,837:INFO: Epoch 99/10000
2018-11-08 09:54:34,947:INFO: - Train metrics: loss: 32.449 ; accuracy: 0.814
2018-11-08 09:54:38,348:INFO: - Eval metrics: loss: 32.030 ; accuracy: 0.822
2018-11-08 09:54:38,422:INFO: Epoch 100/10000
2018-11-08 09:54:56,274:INFO: - Train metrics: loss: 31.916 ; accuracy: 0.815
2018-11-08 09:54:59,770:INFO: - Eval metrics: loss: 31.681 ; accuracy: 0.823
2018-11-08 09:55:00,057:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-100
2018-11-08 09:55:00,058:INFO: Epoch 101/10000
2018-11-08 09:55:17,851:INFO: - Train metrics: loss: 31.505 ; accuracy: 0.816
2018-11-08 09:55:21,276:INFO: - Eval metrics: loss: 31.631 ; accuracy: 0.823
2018-11-08 09:55:21,564:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-101
2018-11-08 09:55:21,565:INFO: Epoch 102/10000
2018-11-08 09:55:39,411:INFO: - Train metrics: loss: 31.180 ; accuracy: 0.817
2018-11-08 09:55:42,764:INFO: - Eval metrics: loss: 30.722 ; accuracy: 0.825
2018-11-08 09:55:43,054:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-102
2018-11-08 09:55:43,054:INFO: Epoch 103/10000
2018-11-08 09:56:00,904:INFO: - Train metrics: loss: 30.952 ; accuracy: 0.817
2018-11-08 09:56:04,302:INFO: - Eval metrics: loss: 31.254 ; accuracy: 0.825
2018-11-08 09:56:04,389:INFO: Epoch 104/10000
2018-11-08 09:56:22,343:INFO: - Train metrics: loss: 30.799 ; accuracy: 0.818
2018-11-08 09:56:25,753:INFO: - Eval metrics: loss: 31.741 ; accuracy: 0.824
2018-11-08 09:56:25,837:INFO: Epoch 105/10000
2018-11-08 09:56:43,764:INFO: - Train metrics: loss: 30.316 ; accuracy: 0.819
2018-11-08 09:56:47,150:INFO: - Eval metrics: loss: 29.767 ; accuracy: 0.828
2018-11-08 09:56:47,433:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-105
2018-11-08 09:56:47,433:INFO: Epoch 106/10000
2018-11-08 09:57:05,285:INFO: - Train metrics: loss: 29.999 ; accuracy: 0.819
2018-11-08 09:57:08,652:INFO: - Eval metrics: loss: 30.134 ; accuracy: 0.825
2018-11-08 09:57:08,737:INFO: Epoch 107/10000
2018-11-08 09:57:26,789:INFO: - Train metrics: loss: 29.388 ; accuracy: 0.820
2018-11-08 09:57:30,149:INFO: - Eval metrics: loss: 29.715 ; accuracy: 0.825
2018-11-08 09:57:30,229:INFO: Epoch 108/10000
2018-11-08 09:57:48,033:INFO: - Train metrics: loss: 29.201 ; accuracy: 0.820
2018-11-08 09:57:51,366:INFO: - Eval metrics: loss: 29.106 ; accuracy: 0.829
2018-11-08 09:57:51,656:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-108
2018-11-08 09:57:51,657:INFO: Epoch 109/10000
2018-11-08 09:58:09,659:INFO: - Train metrics: loss: 28.722 ; accuracy: 0.822
2018-11-08 09:58:13,088:INFO: - Eval metrics: loss: 28.420 ; accuracy: 0.831
2018-11-08 09:58:13,388:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-109
2018-11-08 09:58:13,389:INFO: Epoch 110/10000
2018-11-08 09:58:31,568:INFO: - Train metrics: loss: 28.430 ; accuracy: 0.822
2018-11-08 09:58:34,978:INFO: - Eval metrics: loss: 29.227 ; accuracy: 0.830
2018-11-08 09:58:35,055:INFO: Epoch 111/10000
2018-11-08 09:58:52,786:INFO: - Train metrics: loss: 28.433 ; accuracy: 0.822
2018-11-08 09:58:56,198:INFO: - Eval metrics: loss: 28.639 ; accuracy: 0.828
2018-11-08 09:58:56,277:INFO: Epoch 112/10000
2018-11-08 09:59:13,352:INFO: - Train metrics: loss: 28.031 ; accuracy: 0.823
2018-11-08 09:59:16,329:INFO: - Eval metrics: loss: 28.043 ; accuracy: 0.832
2018-11-08 09:59:16,618:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-112
2018-11-08 09:59:16,619:INFO: Epoch 113/10000
2018-11-08 09:59:33,570:INFO: - Train metrics: loss: 27.838 ; accuracy: 0.824
2018-11-08 09:59:36,511:INFO: - Eval metrics: loss: 28.059 ; accuracy: 0.832
2018-11-08 09:59:36,589:INFO: Epoch 114/10000
2018-11-08 09:59:53,345:INFO: - Train metrics: loss: 27.348 ; accuracy: 0.824
2018-11-08 09:59:56,644:INFO: - Eval metrics: loss: 28.374 ; accuracy: 0.827
2018-11-08 09:59:56,728:INFO: Epoch 115/10000
2018-11-08 10:00:13,867:INFO: - Train metrics: loss: 27.389 ; accuracy: 0.824
2018-11-08 10:00:16,716:INFO: - Eval metrics: loss: 27.011 ; accuracy: 0.829
2018-11-08 10:00:16,793:INFO: Epoch 116/10000
2018-11-08 10:00:34,244:INFO: - Train metrics: loss: 26.915 ; accuracy: 0.825
2018-11-08 10:00:37,499:INFO: - Eval metrics: loss: 27.246 ; accuracy: 0.829
2018-11-08 10:00:37,582:INFO: Epoch 117/10000
2018-11-08 10:00:54,457:INFO: - Train metrics: loss: 26.642 ; accuracy: 0.826
2018-11-08 10:00:57,664:INFO: - Eval metrics: loss: 27.124 ; accuracy: 0.835
2018-11-08 10:00:57,975:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-117
2018-11-08 10:00:57,975:INFO: Epoch 118/10000
2018-11-08 10:01:15,057:INFO: - Train metrics: loss: 26.603 ; accuracy: 0.826
2018-11-08 10:01:18,391:INFO: - Eval metrics: loss: 27.479 ; accuracy: 0.831
2018-11-08 10:01:18,471:INFO: Epoch 119/10000
2018-11-08 10:01:35,068:INFO: - Train metrics: loss: 26.143 ; accuracy: 0.827
2018-11-08 10:01:38,448:INFO: - Eval metrics: loss: 26.826 ; accuracy: 0.830
2018-11-08 10:01:38,529:INFO: Epoch 120/10000
2018-11-08 10:01:55,448:INFO: - Train metrics: loss: 26.055 ; accuracy: 0.827
2018-11-08 10:01:58,713:INFO: - Eval metrics: loss: 28.015 ; accuracy: 0.831
2018-11-08 10:01:58,798:INFO: Epoch 121/10000
2018-11-08 10:02:16,337:INFO: - Train metrics: loss: 25.672 ; accuracy: 0.828
2018-11-08 10:02:19,709:INFO: - Eval metrics: loss: 26.066 ; accuracy: 0.833
2018-11-08 10:02:19,791:INFO: Epoch 122/10000
2018-11-08 10:02:37,561:INFO: - Train metrics: loss: 25.566 ; accuracy: 0.829
2018-11-08 10:02:41,027:INFO: - Eval metrics: loss: 26.507 ; accuracy: 0.834
2018-11-08 10:02:41,121:INFO: Epoch 123/10000
2018-11-08 10:02:58,101:INFO: - Train metrics: loss: 25.112 ; accuracy: 0.829
2018-11-08 10:03:01,035:INFO: - Eval metrics: loss: 26.233 ; accuracy: 0.832
2018-11-08 10:03:01,114:INFO: Epoch 124/10000
2018-11-08 10:03:18,367:INFO: - Train metrics: loss: 25.005 ; accuracy: 0.830
2018-11-08 10:03:21,816:INFO: - Eval metrics: loss: 25.732 ; accuracy: 0.837
2018-11-08 10:03:22,138:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-124
2018-11-08 10:03:22,139:INFO: Epoch 125/10000
2018-11-08 10:03:39,546:INFO: - Train metrics: loss: 24.676 ; accuracy: 0.830
2018-11-08 10:03:42,974:INFO: - Eval metrics: loss: 25.584 ; accuracy: 0.835
2018-11-08 10:03:43,062:INFO: Epoch 126/10000
2018-11-08 10:04:00,179:INFO: - Train metrics: loss: 24.329 ; accuracy: 0.831
2018-11-08 10:04:03,516:INFO: - Eval metrics: loss: 24.754 ; accuracy: 0.837
2018-11-08 10:04:03,598:INFO: Epoch 127/10000
2018-11-08 10:04:21,242:INFO: - Train metrics: loss: 24.189 ; accuracy: 0.832
2018-11-08 10:04:24,739:INFO: - Eval metrics: loss: 24.487 ; accuracy: 0.836
2018-11-08 10:04:24,828:INFO: Epoch 128/10000
2018-11-08 10:04:42,998:INFO: - Train metrics: loss: 24.025 ; accuracy: 0.832
2018-11-08 10:04:46,420:INFO: - Eval metrics: loss: 25.437 ; accuracy: 0.836
2018-11-08 10:04:46,500:INFO: Epoch 129/10000
2018-11-08 10:05:04,803:INFO: - Train metrics: loss: 23.995 ; accuracy: 0.832
2018-11-08 10:05:08,193:INFO: - Eval metrics: loss: 24.400 ; accuracy: 0.836
2018-11-08 10:05:08,269:INFO: Epoch 130/10000
2018-11-08 10:05:25,928:INFO: - Train metrics: loss: 23.633 ; accuracy: 0.833
2018-11-08 10:05:29,029:INFO: - Eval metrics: loss: 24.161 ; accuracy: 0.841
2018-11-08 10:05:29,323:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-130
2018-11-08 10:05:29,323:INFO: Epoch 131/10000
2018-11-08 10:05:46,944:INFO: - Train metrics: loss: 23.480 ; accuracy: 0.833
2018-11-08 10:05:50,073:INFO: - Eval metrics: loss: 24.256 ; accuracy: 0.832
2018-11-08 10:05:50,153:INFO: Epoch 132/10000
2018-11-08 10:06:06,963:INFO: - Train metrics: loss: 23.248 ; accuracy: 0.833
2018-11-08 10:06:10,137:INFO: - Eval metrics: loss: 24.564 ; accuracy: 0.834
2018-11-08 10:06:10,212:INFO: Epoch 133/10000
2018-11-08 10:06:27,961:INFO: - Train metrics: loss: 23.029 ; accuracy: 0.834
2018-11-08 10:06:30,905:INFO: - Eval metrics: loss: 23.619 ; accuracy: 0.843
2018-11-08 10:06:31,196:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-133
2018-11-08 10:06:31,197:INFO: Epoch 134/10000
2018-11-08 10:06:47,693:INFO: - Train metrics: loss: 22.866 ; accuracy: 0.835
2018-11-08 10:06:50,982:INFO: - Eval metrics: loss: 23.542 ; accuracy: 0.842
2018-11-08 10:06:51,065:INFO: Epoch 135/10000
2018-11-08 10:07:08,113:INFO: - Train metrics: loss: 22.571 ; accuracy: 0.836
2018-11-08 10:07:11,179:INFO: - Eval metrics: loss: 23.038 ; accuracy: 0.840
2018-11-08 10:07:11,248:INFO: Epoch 136/10000
2018-11-08 10:07:28,524:INFO: - Train metrics: loss: 22.393 ; accuracy: 0.836
2018-11-08 10:07:31,680:INFO: - Eval metrics: loss: 23.270 ; accuracy: 0.837
2018-11-08 10:07:31,758:INFO: Epoch 137/10000
2018-11-08 10:07:49,516:INFO: - Train metrics: loss: 22.171 ; accuracy: 0.837
2018-11-08 10:07:52,819:INFO: - Eval metrics: loss: 23.044 ; accuracy: 0.840
2018-11-08 10:07:52,907:INFO: Epoch 138/10000
2018-11-08 10:08:09,732:INFO: - Train metrics: loss: 22.119 ; accuracy: 0.837
2018-11-08 10:08:13,101:INFO: - Eval metrics: loss: 22.940 ; accuracy: 0.839
2018-11-08 10:08:13,178:INFO: Epoch 139/10000
2018-11-08 10:08:30,154:INFO: - Train metrics: loss: 21.856 ; accuracy: 0.838
2018-11-08 10:08:33,236:INFO: - Eval metrics: loss: 22.419 ; accuracy: 0.840
2018-11-08 10:08:33,307:INFO: Epoch 140/10000
2018-11-08 10:08:50,871:INFO: - Train metrics: loss: 21.760 ; accuracy: 0.838
2018-11-08 10:08:54,177:INFO: - Eval metrics: loss: 22.413 ; accuracy: 0.842
2018-11-08 10:08:54,252:INFO: Epoch 141/10000
2018-11-08 10:09:12,255:INFO: - Train metrics: loss: 21.480 ; accuracy: 0.839
2018-11-08 10:09:15,558:INFO: - Eval metrics: loss: 22.095 ; accuracy: 0.844
2018-11-08 10:09:15,842:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-141
2018-11-08 10:09:15,842:INFO: Epoch 142/10000
2018-11-08 10:09:33,826:INFO: - Train metrics: loss: 21.267 ; accuracy: 0.839
2018-11-08 10:09:37,259:INFO: - Eval metrics: loss: 21.996 ; accuracy: 0.845
2018-11-08 10:09:37,547:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-142
2018-11-08 10:09:37,548:INFO: Epoch 143/10000
2018-11-08 10:09:55,289:INFO: - Train metrics: loss: 21.098 ; accuracy: 0.840
2018-11-08 10:09:58,665:INFO: - Eval metrics: loss: 21.685 ; accuracy: 0.844
2018-11-08 10:09:58,741:INFO: Epoch 144/10000
2018-11-08 10:10:16,480:INFO: - Train metrics: loss: 21.009 ; accuracy: 0.840
2018-11-08 10:10:19,904:INFO: - Eval metrics: loss: 21.486 ; accuracy: 0.845
2018-11-08 10:10:20,195:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-144
2018-11-08 10:10:20,196:INFO: Epoch 145/10000
2018-11-08 10:10:37,394:INFO: - Train metrics: loss: 21.029 ; accuracy: 0.841
2018-11-08 10:10:40,499:INFO: - Eval metrics: loss: 21.795 ; accuracy: 0.847
2018-11-08 10:10:40,826:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-145
2018-11-08 10:10:40,826:INFO: Epoch 146/10000
2018-11-08 10:10:57,218:INFO: - Train metrics: loss: 21.014 ; accuracy: 0.841
2018-11-08 10:11:00,412:INFO: - Eval metrics: loss: 21.641 ; accuracy: 0.846
2018-11-08 10:11:00,497:INFO: Epoch 147/10000
2018-11-08 10:11:18,592:INFO: - Train metrics: loss: 20.591 ; accuracy: 0.842
2018-11-08 10:11:21,946:INFO: - Eval metrics: loss: 21.108 ; accuracy: 0.847
2018-11-08 10:11:22,032:INFO: Epoch 148/10000
2018-11-08 10:11:39,536:INFO: - Train metrics: loss: 20.477 ; accuracy: 0.841
2018-11-08 10:11:42,914:INFO: - Eval metrics: loss: 21.405 ; accuracy: 0.847
2018-11-08 10:11:43,200:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-148
2018-11-08 10:11:43,201:INFO: Epoch 149/10000
2018-11-08 10:12:00,698:INFO: - Train metrics: loss: 20.348 ; accuracy: 0.842
2018-11-08 10:12:03,833:INFO: - Eval metrics: loss: 21.873 ; accuracy: 0.842
2018-11-08 10:12:03,907:INFO: Epoch 150/10000
2018-11-08 10:12:21,345:INFO: - Train metrics: loss: 20.107 ; accuracy: 0.843
2018-11-08 10:12:24,393:INFO: - Eval metrics: loss: 20.779 ; accuracy: 0.847
2018-11-08 10:12:24,463:INFO: Epoch 151/10000
2018-11-08 10:12:41,570:INFO: - Train metrics: loss: 19.862 ; accuracy: 0.844
2018-11-08 10:12:44,908:INFO: - Eval metrics: loss: 20.769 ; accuracy: 0.846
2018-11-08 10:12:44,996:INFO: Epoch 152/10000
2018-11-08 10:13:02,235:INFO: - Train metrics: loss: 19.701 ; accuracy: 0.844
2018-11-08 10:13:05,595:INFO: - Eval metrics: loss: 20.460 ; accuracy: 0.850
2018-11-08 10:13:05,893:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-152
2018-11-08 10:13:05,893:INFO: Epoch 153/10000
2018-11-08 10:13:23,838:INFO: - Train metrics: loss: 19.575 ; accuracy: 0.844
2018-11-08 10:13:27,273:INFO: - Eval metrics: loss: 20.391 ; accuracy: 0.845
2018-11-08 10:13:27,362:INFO: Epoch 154/10000
2018-11-08 10:13:45,345:INFO: - Train metrics: loss: 19.412 ; accuracy: 0.845
2018-11-08 10:13:48,749:INFO: - Eval metrics: loss: 20.429 ; accuracy: 0.848
2018-11-08 10:13:48,831:INFO: Epoch 155/10000
2018-11-08 10:14:06,834:INFO: - Train metrics: loss: 19.231 ; accuracy: 0.845
2018-11-08 10:14:10,145:INFO: - Eval metrics: loss: 19.970 ; accuracy: 0.849
2018-11-08 10:14:10,214:INFO: Epoch 156/10000
2018-11-08 10:14:27,485:INFO: - Train metrics: loss: 19.244 ; accuracy: 0.846
2018-11-08 10:14:30,836:INFO: - Eval metrics: loss: 20.134 ; accuracy: 0.847
2018-11-08 10:14:30,919:INFO: Epoch 157/10000
2018-11-08 10:14:48,966:INFO: - Train metrics: loss: 18.994 ; accuracy: 0.846
2018-11-08 10:14:52,079:INFO: - Eval metrics: loss: 20.058 ; accuracy: 0.849
2018-11-08 10:14:52,164:INFO: Epoch 158/10000
2018-11-08 10:15:09,842:INFO: - Train metrics: loss: 18.908 ; accuracy: 0.847
2018-11-08 10:15:13,225:INFO: - Eval metrics: loss: 20.589 ; accuracy: 0.851
2018-11-08 10:15:13,514:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-158
2018-11-08 10:15:13,514:INFO: Epoch 159/10000
2018-11-08 10:15:31,636:INFO: - Train metrics: loss: 18.795 ; accuracy: 0.847
2018-11-08 10:15:35,003:INFO: - Eval metrics: loss: 19.759 ; accuracy: 0.850
2018-11-08 10:15:35,087:INFO: Epoch 160/10000
2018-11-08 10:15:51,647:INFO: - Train metrics: loss: 18.650 ; accuracy: 0.847
2018-11-08 10:15:54,851:INFO: - Eval metrics: loss: 20.927 ; accuracy: 0.852
2018-11-08 10:15:55,145:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-160
2018-11-08 10:15:55,146:INFO: Epoch 161/10000
2018-11-08 10:16:12,761:INFO: - Train metrics: loss: 18.543 ; accuracy: 0.848
2018-11-08 10:16:15,762:INFO: - Eval metrics: loss: 19.724 ; accuracy: 0.850
2018-11-08 10:16:15,832:INFO: Epoch 162/10000
2018-11-08 10:16:33,104:INFO: - Train metrics: loss: 18.427 ; accuracy: 0.848
2018-11-08 10:16:37,116:INFO: - Eval metrics: loss: 20.219 ; accuracy: 0.852
2018-11-08 10:16:37,191:INFO: Epoch 163/10000
2018-11-08 10:16:53,156:INFO: - Train metrics: loss: 18.379 ; accuracy: 0.848
2018-11-08 10:16:56,374:INFO: - Eval metrics: loss: 19.838 ; accuracy: 0.852
2018-11-08 10:16:56,747:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-163
2018-11-08 10:16:56,747:INFO: Epoch 164/10000
2018-11-08 10:17:14,050:INFO: - Train metrics: loss: 18.175 ; accuracy: 0.849
2018-11-08 10:17:17,385:INFO: - Eval metrics: loss: 19.299 ; accuracy: 0.852
2018-11-08 10:17:17,720:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-164
2018-11-08 10:17:17,720:INFO: Epoch 165/10000
2018-11-08 10:17:35,343:INFO: - Train metrics: loss: 18.051 ; accuracy: 0.849
2018-11-08 10:17:38,532:INFO: - Eval metrics: loss: 19.728 ; accuracy: 0.853
2018-11-08 10:17:38,829:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-165
2018-11-08 10:17:38,830:INFO: Epoch 166/10000
2018-11-08 10:17:55,218:INFO: - Train metrics: loss: 17.856 ; accuracy: 0.850
2018-11-08 10:17:58,202:INFO: - Eval metrics: loss: 19.065 ; accuracy: 0.854
2018-11-08 10:17:58,508:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-166
2018-11-08 10:17:58,508:INFO: Epoch 167/10000
2018-11-08 10:18:14,252:INFO: - Train metrics: loss: 17.713 ; accuracy: 0.851
2018-11-08 10:18:17,714:INFO: - Eval metrics: loss: 18.906 ; accuracy: 0.854
2018-11-08 10:18:18,142:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-167
2018-11-08 10:18:18,143:INFO: Epoch 168/10000
2018-11-08 10:18:36,122:INFO: - Train metrics: loss: 17.621 ; accuracy: 0.851
2018-11-08 10:18:39,519:INFO: - Eval metrics: loss: 18.846 ; accuracy: 0.853
2018-11-08 10:18:39,603:INFO: Epoch 169/10000
2018-11-08 10:18:57,382:INFO: - Train metrics: loss: 17.468 ; accuracy: 0.851
2018-11-08 10:19:00,741:INFO: - Eval metrics: loss: 18.828 ; accuracy: 0.855
2018-11-08 10:19:01,033:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-169
2018-11-08 10:19:01,034:INFO: Epoch 170/10000
2018-11-08 10:19:18,151:INFO: - Train metrics: loss: 17.375 ; accuracy: 0.852
2018-11-08 10:19:21,139:INFO: - Eval metrics: loss: 18.832 ; accuracy: 0.855
2018-11-08 10:19:21,478:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-170
2018-11-08 10:19:21,479:INFO: Epoch 171/10000
2018-11-08 10:19:38,281:INFO: - Train metrics: loss: 17.209 ; accuracy: 0.853
2018-11-08 10:19:41,207:INFO: - Eval metrics: loss: 18.723 ; accuracy: 0.856
2018-11-08 10:19:41,511:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-171
2018-11-08 10:19:41,512:INFO: Epoch 172/10000
2018-11-08 10:19:59,618:INFO: - Train metrics: loss: 17.159 ; accuracy: 0.852
2018-11-08 10:20:02,742:INFO: - Eval metrics: loss: 18.701 ; accuracy: 0.856
2018-11-08 10:20:03,068:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-172
2018-11-08 10:20:03,068:INFO: Epoch 173/10000
2018-11-08 10:20:20,998:INFO: - Train metrics: loss: 17.022 ; accuracy: 0.853
2018-11-08 10:20:24,404:INFO: - Eval metrics: loss: 18.635 ; accuracy: 0.857
2018-11-08 10:20:24,692:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-173
2018-11-08 10:20:24,692:INFO: Epoch 174/10000
2018-11-08 10:20:41,801:INFO: - Train metrics: loss: 17.003 ; accuracy: 0.853
2018-11-08 10:20:45,214:INFO: - Eval metrics: loss: 19.075 ; accuracy: 0.856
2018-11-08 10:20:45,302:INFO: Epoch 175/10000
2018-11-08 10:21:03,364:INFO: - Train metrics: loss: 16.840 ; accuracy: 0.854
2018-11-08 10:21:06,728:INFO: - Eval metrics: loss: 18.658 ; accuracy: 0.855
2018-11-08 10:21:06,810:INFO: Epoch 176/10000
2018-11-08 10:21:24,749:INFO: - Train metrics: loss: 16.806 ; accuracy: 0.853
2018-11-08 10:21:28,175:INFO: - Eval metrics: loss: 19.090 ; accuracy: 0.857
2018-11-08 10:21:28,464:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-176
2018-11-08 10:21:28,465:INFO: Epoch 177/10000
2018-11-08 10:21:46,527:INFO: - Train metrics: loss: 16.626 ; accuracy: 0.854
2018-11-08 10:21:49,547:INFO: - Eval metrics: loss: 18.165 ; accuracy: 0.858
2018-11-08 10:21:49,832:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-177
2018-11-08 10:21:49,833:INFO: Epoch 178/10000
2018-11-08 10:22:07,837:INFO: - Train metrics: loss: 16.518 ; accuracy: 0.855
2018-11-08 10:22:11,272:INFO: - Eval metrics: loss: 18.286 ; accuracy: 0.857
2018-11-08 10:22:11,360:INFO: Epoch 179/10000
2018-11-08 10:22:29,295:INFO: - Train metrics: loss: 16.485 ; accuracy: 0.855
2018-11-08 10:22:32,812:INFO: - Eval metrics: loss: 18.441 ; accuracy: 0.859
2018-11-08 10:22:33,107:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-179
2018-11-08 10:22:33,108:INFO: Epoch 180/10000
2018-11-08 10:22:50,849:INFO: - Train metrics: loss: 16.311 ; accuracy: 0.856
2018-11-08 10:22:53,967:INFO: - Eval metrics: loss: 18.142 ; accuracy: 0.857
2018-11-08 10:22:54,053:INFO: Epoch 181/10000
2018-11-08 10:23:11,476:INFO: - Train metrics: loss: 16.156 ; accuracy: 0.856
2018-11-08 10:23:14,892:INFO: - Eval metrics: loss: 17.936 ; accuracy: 0.858
2018-11-08 10:23:14,972:INFO: Epoch 182/10000
2018-11-08 10:23:33,117:INFO: - Train metrics: loss: 16.076 ; accuracy: 0.856
2018-11-08 10:23:36,262:INFO: - Eval metrics: loss: 17.509 ; accuracy: 0.860
2018-11-08 10:23:36,550:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-182
2018-11-08 10:23:36,551:INFO: Epoch 183/10000
2018-11-08 10:23:53,572:INFO: - Train metrics: loss: 16.072 ; accuracy: 0.856
2018-11-08 10:23:56,984:INFO: - Eval metrics: loss: 18.004 ; accuracy: 0.857
2018-11-08 10:23:57,057:INFO: Epoch 184/10000
2018-11-08 10:24:14,751:INFO: - Train metrics: loss: 15.914 ; accuracy: 0.857
2018-11-08 10:24:18,185:INFO: - Eval metrics: loss: 17.573 ; accuracy: 0.861
2018-11-08 10:24:18,939:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-184
2018-11-08 10:24:18,940:INFO: Epoch 185/10000
2018-11-08 10:24:36,582:INFO: - Train metrics: loss: 15.804 ; accuracy: 0.857
2018-11-08 10:24:39,972:INFO: - Eval metrics: loss: 18.064 ; accuracy: 0.857
2018-11-08 10:24:40,065:INFO: Epoch 186/10000
2018-11-08 10:24:57,022:INFO: - Train metrics: loss: 15.772 ; accuracy: 0.858
2018-11-08 10:24:59,905:INFO: - Eval metrics: loss: 17.469 ; accuracy: 0.859
2018-11-08 10:24:59,979:INFO: Epoch 187/10000
2018-11-08 10:25:15,994:INFO: - Train metrics: loss: 15.687 ; accuracy: 0.858
2018-11-08 10:25:19,156:INFO: - Eval metrics: loss: 17.455 ; accuracy: 0.859
2018-11-08 10:25:19,231:INFO: Epoch 188/10000
2018-11-08 10:25:36,115:INFO: - Train metrics: loss: 15.546 ; accuracy: 0.858
2018-11-08 10:25:39,313:INFO: - Eval metrics: loss: 17.381 ; accuracy: 0.863
2018-11-08 10:25:39,646:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-188
2018-11-08 10:25:39,647:INFO: Epoch 189/10000
2018-11-08 10:25:55,877:INFO: - Train metrics: loss: 15.431 ; accuracy: 0.859
2018-11-08 10:25:59,024:INFO: - Eval metrics: loss: 17.317 ; accuracy: 0.861
2018-11-08 10:25:59,109:INFO: Epoch 190/10000
2018-11-08 10:26:16,472:INFO: - Train metrics: loss: 15.420 ; accuracy: 0.859
2018-11-08 10:26:19,482:INFO: - Eval metrics: loss: 17.089 ; accuracy: 0.862
2018-11-08 10:26:19,551:INFO: Epoch 191/10000
2018-11-08 10:26:36,669:INFO: - Train metrics: loss: 15.299 ; accuracy: 0.859
2018-11-08 10:26:39,888:INFO: - Eval metrics: loss: 17.258 ; accuracy: 0.863
2018-11-08 10:26:40,379:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-191
2018-11-08 10:26:40,379:INFO: Epoch 192/10000
2018-11-08 10:26:56,663:INFO: - Train metrics: loss: 15.389 ; accuracy: 0.859
2018-11-08 10:26:59,958:INFO: - Eval metrics: loss: 17.002 ; accuracy: 0.862
2018-11-08 10:27:00,034:INFO: Epoch 193/10000
2018-11-08 10:27:17,666:INFO: - Train metrics: loss: 15.179 ; accuracy: 0.860
2018-11-08 10:27:20,835:INFO: - Eval metrics: loss: 16.740 ; accuracy: 0.863
2018-11-08 10:27:20,909:INFO: Epoch 194/10000
2018-11-08 10:27:38,794:INFO: - Train metrics: loss: 15.125 ; accuracy: 0.860
2018-11-08 10:27:42,207:INFO: - Eval metrics: loss: 17.121 ; accuracy: 0.862
2018-11-08 10:27:42,294:INFO: Epoch 195/10000
2018-11-08 10:27:59,024:INFO: - Train metrics: loss: 14.989 ; accuracy: 0.861
2018-11-08 10:28:02,046:INFO: - Eval metrics: loss: 16.909 ; accuracy: 0.865
2018-11-08 10:28:02,364:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-195
2018-11-08 10:28:02,364:INFO: Epoch 196/10000
2018-11-08 10:28:19,618:INFO: - Train metrics: loss: 14.821 ; accuracy: 0.861
2018-11-08 10:28:22,864:INFO: - Eval metrics: loss: 16.505 ; accuracy: 0.865
2018-11-08 10:28:22,940:INFO: Epoch 197/10000
2018-11-08 10:28:39,655:INFO: - Train metrics: loss: 14.746 ; accuracy: 0.861
2018-11-08 10:28:42,907:INFO: - Eval metrics: loss: 16.589 ; accuracy: 0.864
2018-11-08 10:28:43,003:INFO: Epoch 198/10000
2018-11-08 10:28:59,721:INFO: - Train metrics: loss: 14.694 ; accuracy: 0.861
2018-11-08 10:29:03,082:INFO: - Eval metrics: loss: 16.679 ; accuracy: 0.864
2018-11-08 10:29:03,169:INFO: Epoch 199/10000
2018-11-08 10:29:20,717:INFO: - Train metrics: loss: 14.537 ; accuracy: 0.862
2018-11-08 10:29:23,783:INFO: - Eval metrics: loss: 16.820 ; accuracy: 0.864
2018-11-08 10:29:23,860:INFO: Epoch 200/10000
2018-11-08 10:29:40,617:INFO: - Train metrics: loss: 14.523 ; accuracy: 0.862
2018-11-08 10:29:43,942:INFO: - Eval metrics: loss: 17.607 ; accuracy: 0.865
2018-11-08 10:29:44,021:INFO: Epoch 201/10000
2018-11-08 10:29:59,570:INFO: - Train metrics: loss: 14.524 ; accuracy: 0.863
2018-11-08 10:30:05,295:INFO: - Eval metrics: loss: 16.277 ; accuracy: 0.866
2018-11-08 10:30:05,611:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-201
2018-11-08 10:30:05,611:INFO: Epoch 202/10000
2018-11-08 10:30:23,059:INFO: - Train metrics: loss: 14.403 ; accuracy: 0.863
2018-11-08 10:30:26,478:INFO: - Eval metrics: loss: 16.148 ; accuracy: 0.866
2018-11-08 10:30:26,772:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-202
2018-11-08 10:30:26,773:INFO: Epoch 203/10000
2018-11-08 10:30:43,784:INFO: - Train metrics: loss: 14.332 ; accuracy: 0.863
2018-11-08 10:30:47,114:INFO: - Eval metrics: loss: 16.242 ; accuracy: 0.867
2018-11-08 10:30:47,410:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-203
2018-11-08 10:30:47,410:INFO: Epoch 204/10000
2018-11-08 10:31:05,250:INFO: - Train metrics: loss: 14.181 ; accuracy: 0.864
2018-11-08 10:31:08,637:INFO: - Eval metrics: loss: 16.103 ; accuracy: 0.868
2018-11-08 10:31:08,930:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-204
2018-11-08 10:31:08,931:INFO: Epoch 205/10000
2018-11-08 10:31:26,889:INFO: - Train metrics: loss: 14.162 ; accuracy: 0.864
2018-11-08 10:31:30,318:INFO: - Eval metrics: loss: 15.937 ; accuracy: 0.868
2018-11-08 10:31:30,402:INFO: Epoch 206/10000
2018-11-08 10:31:47,725:INFO: - Train metrics: loss: 14.052 ; accuracy: 0.864
2018-11-08 10:31:50,894:INFO: - Eval metrics: loss: 16.037 ; accuracy: 0.867
2018-11-08 10:31:50,977:INFO: Epoch 207/10000
2018-11-08 10:32:08,741:INFO: - Train metrics: loss: 13.968 ; accuracy: 0.864
2018-11-08 10:32:12,169:INFO: - Eval metrics: loss: 16.603 ; accuracy: 0.867
2018-11-08 10:32:12,249:INFO: Epoch 208/10000
2018-11-08 10:32:30,181:INFO: - Train metrics: loss: 13.993 ; accuracy: 0.865
2018-11-08 10:32:33,556:INFO: - Eval metrics: loss: 16.187 ; accuracy: 0.866
2018-11-08 10:32:33,638:INFO: Epoch 209/10000
2018-11-08 10:32:51,518:INFO: - Train metrics: loss: 13.832 ; accuracy: 0.865
2018-11-08 10:32:54,872:INFO: - Eval metrics: loss: 15.960 ; accuracy: 0.868
2018-11-08 10:32:55,164:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-209
2018-11-08 10:32:55,164:INFO: Epoch 210/10000
2018-11-08 10:33:12,697:INFO: - Train metrics: loss: 13.741 ; accuracy: 0.866
2018-11-08 10:33:16,152:INFO: - Eval metrics: loss: 15.560 ; accuracy: 0.869
2018-11-08 10:33:16,451:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-210
2018-11-08 10:33:16,452:INFO: Epoch 211/10000
2018-11-08 10:33:34,431:INFO: - Train metrics: loss: 13.806 ; accuracy: 0.865
2018-11-08 10:33:37,862:INFO: - Eval metrics: loss: 15.800 ; accuracy: 0.869
2018-11-08 10:33:38,151:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-211
2018-11-08 10:33:38,152:INFO: Epoch 212/10000
2018-11-08 10:33:55,997:INFO: - Train metrics: loss: 13.602 ; accuracy: 0.866
2018-11-08 10:33:59,423:INFO: - Eval metrics: loss: 15.823 ; accuracy: 0.868
2018-11-08 10:33:59,508:INFO: Epoch 213/10000
2018-11-08 10:34:17,250:INFO: - Train metrics: loss: 13.549 ; accuracy: 0.866
2018-11-08 10:34:20,567:INFO: - Eval metrics: loss: 15.736 ; accuracy: 0.865
2018-11-08 10:34:20,645:INFO: Epoch 214/10000
2018-11-08 10:34:38,016:INFO: - Train metrics: loss: 13.548 ; accuracy: 0.866
2018-11-08 10:34:41,221:INFO: - Eval metrics: loss: 15.061 ; accuracy: 0.870
2018-11-08 10:34:41,553:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-214
2018-11-08 10:34:41,553:INFO: Epoch 215/10000
2018-11-08 10:34:59,275:INFO: - Train metrics: loss: 13.373 ; accuracy: 0.867
2018-11-08 10:35:02,744:INFO: - Eval metrics: loss: 15.541 ; accuracy: 0.867
2018-11-08 10:35:02,820:INFO: Epoch 216/10000
2018-11-08 10:35:20,698:INFO: - Train metrics: loss: 13.501 ; accuracy: 0.866
2018-11-08 10:35:24,154:INFO: - Eval metrics: loss: 15.321 ; accuracy: 0.871
2018-11-08 10:35:24,456:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-216
2018-11-08 10:35:24,456:INFO: Epoch 217/10000
2018-11-08 10:35:41,915:INFO: - Train metrics: loss: 13.349 ; accuracy: 0.867
2018-11-08 10:35:45,279:INFO: - Eval metrics: loss: 14.951 ; accuracy: 0.871
2018-11-08 10:35:45,599:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-217
2018-11-08 10:35:45,599:INFO: Epoch 218/10000
2018-11-08 10:36:03,152:INFO: - Train metrics: loss: 13.253 ; accuracy: 0.867
2018-11-08 10:36:06,441:INFO: - Eval metrics: loss: 15.121 ; accuracy: 0.870
2018-11-08 10:36:06,521:INFO: Epoch 219/10000
2018-11-08 10:36:23,701:INFO: - Train metrics: loss: 13.149 ; accuracy: 0.868
2018-11-08 10:36:27,017:INFO: - Eval metrics: loss: 15.150 ; accuracy: 0.870
2018-11-08 10:36:27,098:INFO: Epoch 220/10000
2018-11-08 10:36:45,130:INFO: - Train metrics: loss: 13.083 ; accuracy: 0.868
2018-11-08 10:36:48,338:INFO: - Eval metrics: loss: 14.780 ; accuracy: 0.873
2018-11-08 10:36:48,643:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-220
2018-11-08 10:36:48,644:INFO: Epoch 221/10000
2018-11-08 10:37:06,013:INFO: - Train metrics: loss: 12.972 ; accuracy: 0.869
2018-11-08 10:37:09,474:INFO: - Eval metrics: loss: 14.731 ; accuracy: 0.871
2018-11-08 10:37:09,560:INFO: Epoch 222/10000
2018-11-08 10:37:26,672:INFO: - Train metrics: loss: 12.990 ; accuracy: 0.868
2018-11-08 10:37:30,143:INFO: - Eval metrics: loss: 14.782 ; accuracy: 0.873
2018-11-08 10:37:30,454:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-222
2018-11-08 10:37:30,455:INFO: Epoch 223/10000
2018-11-08 10:37:48,384:INFO: - Train metrics: loss: 12.861 ; accuracy: 0.869
2018-11-08 10:37:51,604:INFO: - Eval metrics: loss: 14.783 ; accuracy: 0.871
2018-11-08 10:37:51,693:INFO: Epoch 224/10000
2018-11-08 10:38:08,669:INFO: - Train metrics: loss: 13.033 ; accuracy: 0.868
2018-11-08 10:38:12,207:INFO: - Eval metrics: loss: 15.475 ; accuracy: 0.873
2018-11-08 10:38:12,511:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-224
2018-11-08 10:38:12,512:INFO: Epoch 225/10000
2018-11-08 10:38:30,515:INFO: - Train metrics: loss: 12.861 ; accuracy: 0.868
2018-11-08 10:38:33,961:INFO: - Eval metrics: loss: 15.535 ; accuracy: 0.870
2018-11-08 10:38:34,042:INFO: Epoch 226/10000
2018-11-08 10:38:51,772:INFO: - Train metrics: loss: 12.822 ; accuracy: 0.869
2018-11-08 10:38:55,316:INFO: - Eval metrics: loss: 14.774 ; accuracy: 0.873
2018-11-08 10:38:55,400:INFO: Epoch 227/10000
2018-11-08 10:39:13,257:INFO: - Train metrics: loss: 12.627 ; accuracy: 0.870
2018-11-08 10:39:16,797:INFO: - Eval metrics: loss: 15.284 ; accuracy: 0.870
2018-11-08 10:39:16,883:INFO: Epoch 228/10000
2018-11-08 10:39:35,452:INFO: - Train metrics: loss: 12.659 ; accuracy: 0.870
2018-11-08 10:39:39,003:INFO: - Eval metrics: loss: 14.961 ; accuracy: 0.871
2018-11-08 10:39:39,090:INFO: Epoch 229/10000
2018-11-08 10:39:56,635:INFO: - Train metrics: loss: 12.604 ; accuracy: 0.870
2018-11-08 10:40:00,267:INFO: - Eval metrics: loss: 14.889 ; accuracy: 0.873
2018-11-08 10:40:00,350:INFO: Epoch 230/10000
2018-11-08 10:40:19,053:INFO: - Train metrics: loss: 12.501 ; accuracy: 0.870
2018-11-08 10:40:22,606:INFO: - Eval metrics: loss: 14.460 ; accuracy: 0.872
2018-11-08 10:40:22,692:INFO: Epoch 231/10000
2018-11-08 10:40:40,054:INFO: - Train metrics: loss: 12.428 ; accuracy: 0.871
2018-11-08 10:40:43,312:INFO: - Eval metrics: loss: 14.141 ; accuracy: 0.875
2018-11-08 10:40:43,616:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-231
2018-11-08 10:40:43,616:INFO: Epoch 232/10000
2018-11-08 10:41:01,752:INFO: - Train metrics: loss: 12.490 ; accuracy: 0.871
2018-11-08 10:41:05,068:INFO: - Eval metrics: loss: 14.683 ; accuracy: 0.873
2018-11-08 10:41:05,149:INFO: Epoch 233/10000
2018-11-08 10:41:23,795:INFO: - Train metrics: loss: 12.350 ; accuracy: 0.871
2018-11-08 10:41:27,347:INFO: - Eval metrics: loss: 13.949 ; accuracy: 0.875
2018-11-08 10:41:27,659:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-233
2018-11-08 10:41:27,660:INFO: Epoch 234/10000
2018-11-08 10:41:46,112:INFO: - Train metrics: loss: 12.235 ; accuracy: 0.872
2018-11-08 10:41:49,097:INFO: - Eval metrics: loss: 14.371 ; accuracy: 0.872
2018-11-08 10:41:49,177:INFO: Epoch 235/10000
2018-11-08 10:42:06,473:INFO: - Train metrics: loss: 12.247 ; accuracy: 0.871
2018-11-08 10:42:09,916:INFO: - Eval metrics: loss: 14.762 ; accuracy: 0.875
2018-11-08 10:42:09,995:INFO: Epoch 236/10000
2018-11-08 10:42:27,930:INFO: - Train metrics: loss: 12.121 ; accuracy: 0.872
2018-11-08 10:42:31,278:INFO: - Eval metrics: loss: 14.079 ; accuracy: 0.873
2018-11-08 10:42:31,368:INFO: Epoch 237/10000
2018-11-08 10:42:49,016:INFO: - Train metrics: loss: 12.189 ; accuracy: 0.872
2018-11-08 10:42:52,279:INFO: - Eval metrics: loss: 14.757 ; accuracy: 0.875
2018-11-08 10:42:52,362:INFO: Epoch 238/10000
2018-11-08 10:43:09,952:INFO: - Train metrics: loss: 12.184 ; accuracy: 0.872
2018-11-08 10:43:13,459:INFO: - Eval metrics: loss: 14.365 ; accuracy: 0.876
2018-11-08 10:43:13,776:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-238
2018-11-08 10:43:13,777:INFO: Epoch 239/10000
2018-11-08 10:43:30,268:INFO: - Train metrics: loss: 11.967 ; accuracy: 0.873
2018-11-08 10:43:32,996:INFO: - Eval metrics: loss: 13.786 ; accuracy: 0.874
2018-11-08 10:43:33,063:INFO: Epoch 240/10000
2018-11-08 10:43:49,965:INFO: - Train metrics: loss: 11.926 ; accuracy: 0.873
2018-11-08 10:43:53,206:INFO: - Eval metrics: loss: 14.063 ; accuracy: 0.876
2018-11-08 10:43:53,510:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-240
2018-11-08 10:43:53,511:INFO: Epoch 241/10000
2018-11-08 10:44:11,574:INFO: - Train metrics: loss: 11.944 ; accuracy: 0.872
2018-11-08 10:44:15,082:INFO: - Eval metrics: loss: 13.835 ; accuracy: 0.875
2018-11-08 10:44:15,158:INFO: Epoch 242/10000
2018-11-08 10:44:33,219:INFO: - Train metrics: loss: 11.829 ; accuracy: 0.873
2018-11-08 10:44:36,634:INFO: - Eval metrics: loss: 13.999 ; accuracy: 0.875
2018-11-08 10:44:36,713:INFO: Epoch 243/10000
2018-11-08 10:44:54,410:INFO: - Train metrics: loss: 11.772 ; accuracy: 0.874
2018-11-08 10:44:57,792:INFO: - Eval metrics: loss: 13.825 ; accuracy: 0.875
2018-11-08 10:44:57,874:INFO: Epoch 244/10000
2018-11-08 10:45:15,975:INFO: - Train metrics: loss: 11.718 ; accuracy: 0.874
2018-11-08 10:45:19,439:INFO: - Eval metrics: loss: 13.683 ; accuracy: 0.877
2018-11-08 10:45:19,773:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-244
2018-11-08 10:45:19,774:INFO: Epoch 245/10000
2018-11-08 10:45:36,535:INFO: - Train metrics: loss: 11.701 ; accuracy: 0.874
2018-11-08 10:45:39,554:INFO: - Eval metrics: loss: 14.480 ; accuracy: 0.874
2018-11-08 10:45:39,630:INFO: Epoch 246/10000
2018-11-08 10:45:58,347:INFO: - Train metrics: loss: 11.643 ; accuracy: 0.874
2018-11-08 10:46:01,953:INFO: - Eval metrics: loss: 13.590 ; accuracy: 0.875
2018-11-08 10:46:02,039:INFO: Epoch 247/10000
2018-11-08 10:46:20,877:INFO: - Train metrics: loss: 11.557 ; accuracy: 0.874
2018-11-08 10:46:24,449:INFO: - Eval metrics: loss: 13.927 ; accuracy: 0.878
2018-11-08 10:46:24,758:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-247
2018-11-08 10:46:24,758:INFO: Epoch 248/10000
2018-11-08 10:46:43,232:INFO: - Train metrics: loss: 11.571 ; accuracy: 0.874
2018-11-08 10:46:46,699:INFO: - Eval metrics: loss: 13.841 ; accuracy: 0.878
2018-11-08 10:46:47,007:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-248
2018-11-08 10:46:47,007:INFO: Epoch 249/10000
2018-11-08 10:47:05,721:INFO: - Train metrics: loss: 11.445 ; accuracy: 0.875
2018-11-08 10:47:09,399:INFO: - Eval metrics: loss: 13.382 ; accuracy: 0.878
2018-11-08 10:47:09,479:INFO: Epoch 250/10000
2018-11-08 10:47:28,081:INFO: - Train metrics: loss: 11.436 ; accuracy: 0.875
2018-11-08 10:47:31,638:INFO: - Eval metrics: loss: 13.945 ; accuracy: 0.878
2018-11-08 10:47:31,731:INFO: Epoch 251/10000
2018-11-08 10:47:50,159:INFO: - Train metrics: loss: 11.420 ; accuracy: 0.875
2018-11-08 10:47:53,611:INFO: - Eval metrics: loss: 13.430 ; accuracy: 0.878
2018-11-08 10:47:53,693:INFO: Epoch 252/10000
2018-11-08 10:48:12,482:INFO: - Train metrics: loss: 11.383 ; accuracy: 0.875
2018-11-08 10:48:16,024:INFO: - Eval metrics: loss: 13.876 ; accuracy: 0.879
2018-11-08 10:48:16,341:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-252
2018-11-08 10:48:16,342:INFO: Epoch 253/10000
2018-11-08 10:48:35,214:INFO: - Train metrics: loss: 11.364 ; accuracy: 0.875
2018-11-08 10:48:38,825:INFO: - Eval metrics: loss: 13.725 ; accuracy: 0.875
2018-11-08 10:48:38,910:INFO: Epoch 254/10000
2018-11-08 10:48:57,777:INFO: - Train metrics: loss: 11.270 ; accuracy: 0.876
2018-11-08 10:49:01,167:INFO: - Eval metrics: loss: 13.313 ; accuracy: 0.879
2018-11-08 10:49:01,494:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-254
2018-11-08 10:49:01,495:INFO: Epoch 255/10000
2018-11-08 10:49:20,432:INFO: - Train metrics: loss: 11.182 ; accuracy: 0.876
2018-11-08 10:49:24,051:INFO: - Eval metrics: loss: 13.326 ; accuracy: 0.878
2018-11-08 10:49:24,142:INFO: Epoch 256/10000
2018-11-08 10:49:43,181:INFO: - Train metrics: loss: 11.149 ; accuracy: 0.876
2018-11-08 10:49:46,764:INFO: - Eval metrics: loss: 13.263 ; accuracy: 0.880
2018-11-08 10:49:47,084:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-256
2018-11-08 10:49:47,085:INFO: Epoch 257/10000
2018-11-08 10:50:05,135:INFO: - Train metrics: loss: 11.176 ; accuracy: 0.876
2018-11-08 10:50:08,419:INFO: - Eval metrics: loss: 13.123 ; accuracy: 0.880
2018-11-08 10:50:08,761:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-257
2018-11-08 10:50:08,762:INFO: Epoch 258/10000
2018-11-08 10:50:27,029:INFO: - Train metrics: loss: 11.053 ; accuracy: 0.877
2018-11-08 10:50:30,433:INFO: - Eval metrics: loss: 13.019 ; accuracy: 0.881
2018-11-08 10:50:30,805:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-258
2018-11-08 10:50:30,806:INFO: Epoch 259/10000
2018-11-08 10:50:49,137:INFO: - Train metrics: loss: 11.035 ; accuracy: 0.877
2018-11-08 10:50:52,693:INFO: - Eval metrics: loss: 13.113 ; accuracy: 0.880
2018-11-08 10:50:52,776:INFO: Epoch 260/10000
2018-11-08 10:51:11,588:INFO: - Train metrics: loss: 10.959 ; accuracy: 0.877
2018-11-08 10:51:15,148:INFO: - Eval metrics: loss: 13.047 ; accuracy: 0.879
2018-11-08 10:51:15,233:INFO: Epoch 261/10000
2018-11-08 10:51:34,054:INFO: - Train metrics: loss: 10.922 ; accuracy: 0.877
2018-11-08 10:51:37,600:INFO: - Eval metrics: loss: 13.074 ; accuracy: 0.880
2018-11-08 10:51:37,698:INFO: Epoch 262/10000
2018-11-08 10:51:56,437:INFO: - Train metrics: loss: 10.907 ; accuracy: 0.877
2018-11-08 10:52:00,020:INFO: - Eval metrics: loss: 13.225 ; accuracy: 0.879
2018-11-08 10:52:00,104:INFO: Epoch 263/10000
2018-11-08 10:52:19,235:INFO: - Train metrics: loss: 10.997 ; accuracy: 0.877
2018-11-08 10:52:22,804:INFO: - Eval metrics: loss: 12.990 ; accuracy: 0.880
2018-11-08 10:52:22,898:INFO: Epoch 264/10000
2018-11-08 10:52:41,744:INFO: - Train metrics: loss: 10.864 ; accuracy: 0.877
2018-11-08 10:52:45,028:INFO: - Eval metrics: loss: 13.324 ; accuracy: 0.877
2018-11-08 10:52:45,098:INFO: Epoch 265/10000
2018-11-08 10:53:03,032:INFO: - Train metrics: loss: 10.750 ; accuracy: 0.878
2018-11-08 10:53:06,616:INFO: - Eval metrics: loss: 12.785 ; accuracy: 0.881
2018-11-08 10:53:06,938:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-265
2018-11-08 10:53:06,939:INFO: Epoch 266/10000
2018-11-08 10:53:25,757:INFO: - Train metrics: loss: 10.783 ; accuracy: 0.878
2018-11-08 10:53:29,236:INFO: - Eval metrics: loss: 12.971 ; accuracy: 0.880
2018-11-08 10:53:29,326:INFO: Epoch 267/10000
2018-11-08 10:53:47,851:INFO: - Train metrics: loss: 10.692 ; accuracy: 0.878
2018-11-08 10:53:51,243:INFO: - Eval metrics: loss: 12.725 ; accuracy: 0.882
2018-11-08 10:53:51,555:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-267
2018-11-08 10:53:51,556:INFO: Epoch 268/10000
2018-11-08 10:54:09,485:INFO: - Train metrics: loss: 10.711 ; accuracy: 0.878
2018-11-08 10:54:12,820:INFO: - Eval metrics: loss: 12.884 ; accuracy: 0.882
2018-11-08 10:54:13,117:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-268
2018-11-08 10:54:13,117:INFO: Epoch 269/10000
2018-11-08 10:54:29,105:INFO: - Train metrics: loss: 10.653 ; accuracy: 0.878
2018-11-08 10:54:32,576:INFO: - Eval metrics: loss: 13.057 ; accuracy: 0.881
2018-11-08 10:54:32,660:INFO: Epoch 270/10000
2018-11-08 10:54:50,537:INFO: - Train metrics: loss: 10.532 ; accuracy: 0.879
2018-11-08 10:54:53,824:INFO: - Eval metrics: loss: 12.863 ; accuracy: 0.882
2018-11-08 10:54:53,904:INFO: Epoch 271/10000
2018-11-08 10:55:10,548:INFO: - Train metrics: loss: 10.489 ; accuracy: 0.880
2018-11-08 10:55:13,975:INFO: - Eval metrics: loss: 12.766 ; accuracy: 0.882
2018-11-08 10:55:14,051:INFO: Epoch 272/10000
2018-11-08 10:55:30,387:INFO: - Train metrics: loss: 10.451 ; accuracy: 0.880
2018-11-08 10:55:33,851:INFO: - Eval metrics: loss: 12.755 ; accuracy: 0.882
2018-11-08 10:55:33,940:INFO: Epoch 273/10000
2018-11-08 10:55:51,553:INFO: - Train metrics: loss: 10.455 ; accuracy: 0.880
2018-11-08 10:55:54,941:INFO: - Eval metrics: loss: 12.564 ; accuracy: 0.883
2018-11-08 10:55:55,273:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-273
2018-11-08 10:55:55,274:INFO: Epoch 274/10000
2018-11-08 10:56:12,300:INFO: - Train metrics: loss: 10.451 ; accuracy: 0.879
2018-11-08 10:56:15,546:INFO: - Eval metrics: loss: 12.451 ; accuracy: 0.884
2018-11-08 10:56:15,843:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-274
2018-11-08 10:56:15,844:INFO: Epoch 275/10000
2018-11-08 10:56:30,243:INFO: - Train metrics: loss: 10.414 ; accuracy: 0.880
2018-11-08 10:56:33,459:INFO: - Eval metrics: loss: 12.405 ; accuracy: 0.883
2018-11-08 10:56:33,525:INFO: Epoch 276/10000
2018-11-08 10:57:05,036:INFO: Creating the datasets...
2018-11-08 10:57:15,183:INFO: - done.
2018-11-08 10:57:15,183:INFO: Creating the model...
2018-11-08 10:57:16,846:INFO: - done.
2018-11-08 10:57:16,846:INFO: Starting training for 10000 epoch(s)
2018-11-08 10:57:17,725:INFO: Epoch 1/10000
2018-11-08 10:57:36,239:INFO: - Train metrics: loss: 1362.325 ; accuracy: 0.364
2018-11-08 10:57:39,792:INFO: - Eval metrics: loss: 566.806 ; accuracy: 0.607
2018-11-08 10:57:40,172:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 10:57:40,173:INFO: Epoch 2/10000
2018-11-08 10:57:57,675:INFO: - Train metrics: loss: 311.566 ; accuracy: 0.672
2018-11-08 10:58:01,100:INFO: - Eval metrics: loss: 272.407 ; accuracy: 0.697
2018-11-08 10:58:01,395:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 10:58:01,395:INFO: Epoch 3/10000
2018-11-08 10:58:19,161:INFO: - Train metrics: loss: 248.738 ; accuracy: 0.698
2018-11-08 10:58:22,552:INFO: - Eval metrics: loss: 244.714 ; accuracy: 0.719
2018-11-08 10:58:22,845:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 10:58:22,845:INFO: Epoch 4/10000
2018-11-08 10:58:40,769:INFO: - Train metrics: loss: 231.479 ; accuracy: 0.703
2018-11-08 10:58:44,170:INFO: - Eval metrics: loss: 232.719 ; accuracy: 0.711
2018-11-08 10:58:44,260:INFO: Epoch 5/10000
2018-11-08 10:59:01,959:INFO: - Train metrics: loss: 212.784 ; accuracy: 0.708
2018-11-08 10:59:05,274:INFO: - Eval metrics: loss: 222.099 ; accuracy: 0.722
2018-11-08 10:59:05,567:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-08 10:59:05,568:INFO: Epoch 6/10000
2018-11-08 10:59:23,564:INFO: - Train metrics: loss: 201.240 ; accuracy: 0.712
2018-11-08 10:59:26,929:INFO: - Eval metrics: loss: 209.781 ; accuracy: 0.723
2018-11-08 10:59:27,231:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-08 10:59:27,231:INFO: Epoch 7/10000
2018-11-08 10:59:44,900:INFO: - Train metrics: loss: 192.324 ; accuracy: 0.716
2018-11-08 10:59:48,080:INFO: - Eval metrics: loss: 198.737 ; accuracy: 0.727
2018-11-08 10:59:48,385:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-08 10:59:48,386:INFO: Epoch 8/10000
2018-11-08 11:00:03,192:INFO: - Train metrics: loss: 185.368 ; accuracy: 0.720
2018-11-08 11:00:05,705:INFO: - Eval metrics: loss: 192.549 ; accuracy: 0.729
2018-11-08 11:00:05,979:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-08 11:00:05,979:INFO: Epoch 9/10000
2018-11-08 11:00:20,917:INFO: - Train metrics: loss: 180.593 ; accuracy: 0.722
2018-11-08 11:00:23,961:INFO: - Eval metrics: loss: 184.708 ; accuracy: 0.733
2018-11-08 11:00:24,253:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-08 11:00:24,253:INFO: Epoch 10/10000
2018-11-08 11:00:42,091:INFO: - Train metrics: loss: 173.730 ; accuracy: 0.725
2018-11-08 11:00:45,498:INFO: - Eval metrics: loss: 173.587 ; accuracy: 0.741
2018-11-08 11:00:45,792:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-08 11:00:45,793:INFO: Epoch 11/10000
2018-11-08 11:01:03,044:INFO: - Train metrics: loss: 167.054 ; accuracy: 0.726
2018-11-08 11:01:06,240:INFO: - Eval metrics: loss: 167.269 ; accuracy: 0.734
2018-11-08 11:01:06,323:INFO: Epoch 12/10000
2018-11-08 11:01:23,690:INFO: - Train metrics: loss: 161.822 ; accuracy: 0.730
2018-11-08 11:01:26,908:INFO: - Eval metrics: loss: 159.610 ; accuracy: 0.742
2018-11-08 11:01:27,214:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-08 11:01:27,214:INFO: Epoch 13/10000
2018-11-08 11:01:44,412:INFO: - Train metrics: loss: 157.837 ; accuracy: 0.730
2018-11-08 11:01:47,664:INFO: - Eval metrics: loss: 157.105 ; accuracy: 0.745
2018-11-08 11:01:47,960:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-08 11:01:47,961:INFO: Epoch 14/10000
2018-11-08 11:02:05,764:INFO: - Train metrics: loss: 152.347 ; accuracy: 0.732
2018-11-08 11:02:09,153:INFO: - Eval metrics: loss: 150.194 ; accuracy: 0.747
2018-11-08 11:02:09,443:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-08 11:02:09,443:INFO: Epoch 15/10000
2018-11-08 11:02:27,072:INFO: - Train metrics: loss: 147.929 ; accuracy: 0.734
2018-11-08 11:02:30,366:INFO: - Eval metrics: loss: 151.844 ; accuracy: 0.750
2018-11-08 11:02:30,663:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-08 11:02:30,663:INFO: Epoch 16/10000
2018-11-08 11:02:47,359:INFO: - Train metrics: loss: 142.185 ; accuracy: 0.736
2018-11-08 11:02:50,641:INFO: - Eval metrics: loss: 145.785 ; accuracy: 0.742
2018-11-08 11:02:50,741:INFO: Epoch 17/10000
2018-11-08 11:03:08,038:INFO: - Train metrics: loss: 138.529 ; accuracy: 0.737
2018-11-08 11:03:11,452:INFO: - Eval metrics: loss: 141.077 ; accuracy: 0.748
2018-11-08 11:03:11,538:INFO: Epoch 18/10000
2018-11-08 11:03:29,273:INFO: - Train metrics: loss: 134.430 ; accuracy: 0.738
2018-11-08 11:03:32,481:INFO: - Eval metrics: loss: 138.083 ; accuracy: 0.742
2018-11-08 11:03:32,555:INFO: Epoch 19/10000
2018-11-08 11:03:48,890:INFO: - Train metrics: loss: 131.106 ; accuracy: 0.739
2018-11-08 11:03:51,682:INFO: - Eval metrics: loss: 134.643 ; accuracy: 0.752
2018-11-08 11:03:51,963:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-08 11:03:51,964:INFO: Epoch 20/10000
2018-11-08 11:04:08,402:INFO: - Train metrics: loss: 128.807 ; accuracy: 0.741
2018-11-08 11:04:11,706:INFO: - Eval metrics: loss: 130.540 ; accuracy: 0.755
2018-11-08 11:04:11,992:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-20
2018-11-08 11:04:11,992:INFO: Epoch 21/10000
2018-11-08 11:04:28,888:INFO: - Train metrics: loss: 124.709 ; accuracy: 0.742
2018-11-08 11:04:32,298:INFO: - Eval metrics: loss: 128.498 ; accuracy: 0.758
2018-11-08 11:04:32,594:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-08 11:04:32,594:INFO: Epoch 22/10000
2018-11-08 11:04:49,865:INFO: - Train metrics: loss: 122.458 ; accuracy: 0.743
2018-11-08 11:04:52,778:INFO: - Eval metrics: loss: 127.401 ; accuracy: 0.758
2018-11-08 11:04:52,856:INFO: Epoch 23/10000
2018-11-08 11:05:10,063:INFO: - Train metrics: loss: 119.980 ; accuracy: 0.744
2018-11-08 11:05:13,398:INFO: - Eval metrics: loss: 121.981 ; accuracy: 0.760
2018-11-08 11:05:13,694:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-08 11:05:13,694:INFO: Epoch 24/10000
2018-11-08 11:05:30,726:INFO: - Train metrics: loss: 116.803 ; accuracy: 0.745
2018-11-08 11:05:33,994:INFO: - Eval metrics: loss: 121.045 ; accuracy: 0.761
2018-11-08 11:05:34,288:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-08 11:05:34,288:INFO: Epoch 25/10000
2018-11-08 11:05:51,850:INFO: - Train metrics: loss: 113.181 ; accuracy: 0.747
2018-11-08 11:05:55,220:INFO: - Eval metrics: loss: 117.677 ; accuracy: 0.764
2018-11-08 11:05:55,508:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-08 11:05:55,508:INFO: Epoch 26/10000
2018-11-08 11:06:13,122:INFO: - Train metrics: loss: 111.465 ; accuracy: 0.748
2018-11-08 11:06:16,439:INFO: - Eval metrics: loss: 117.523 ; accuracy: 0.766
2018-11-08 11:06:16,743:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-08 11:06:16,744:INFO: Epoch 27/10000
2018-11-08 11:06:34,543:INFO: - Train metrics: loss: 107.308 ; accuracy: 0.749
2018-11-08 11:06:37,856:INFO: - Eval metrics: loss: 114.098 ; accuracy: 0.766
2018-11-08 11:06:37,942:INFO: Epoch 28/10000
2018-11-08 11:06:55,492:INFO: - Train metrics: loss: 105.367 ; accuracy: 0.750
2018-11-08 11:06:58,892:INFO: - Eval metrics: loss: 114.241 ; accuracy: 0.766
2018-11-08 11:06:58,977:INFO: Epoch 29/10000
2018-11-08 11:07:16,734:INFO: - Train metrics: loss: 102.320 ; accuracy: 0.751
2018-11-08 11:07:19,986:INFO: - Eval metrics: loss: 109.671 ; accuracy: 0.766
2018-11-08 11:07:20,074:INFO: Epoch 30/10000
2018-11-08 11:07:37,961:INFO: - Train metrics: loss: 100.152 ; accuracy: 0.752
2018-11-08 11:07:41,338:INFO: - Eval metrics: loss: 107.174 ; accuracy: 0.763
2018-11-08 11:07:41,424:INFO: Epoch 31/10000
2018-11-08 11:07:59,316:INFO: - Train metrics: loss: 98.445 ; accuracy: 0.753
2018-11-08 11:08:02,696:INFO: - Eval metrics: loss: 104.111 ; accuracy: 0.759
2018-11-08 11:08:02,771:INFO: Epoch 32/10000
2018-11-08 11:08:17,444:INFO: Creating the datasets...
2018-11-08 11:08:22,890:INFO: - done.
2018-11-08 11:08:22,891:INFO: Creating the model...
2018-11-08 11:08:24,479:INFO: - done.
2018-11-08 11:08:24,479:INFO: Starting training for 10000 epoch(s)
2018-11-08 11:08:25,285:INFO: Epoch 1/10000
2018-11-08 11:09:02,296:INFO: - Train metrics: accuracy: 0.419 ; loss: 1056.526
2018-11-08 11:09:09,073:INFO: - Eval metrics: accuracy: 0.608 ; loss: 373.265
2018-11-08 11:09:09,517:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 11:09:09,518:INFO: Epoch 2/10000
2018-11-08 11:09:45,611:INFO: - Train metrics: accuracy: 0.672 ; loss: 284.739
2018-11-08 11:09:53,310:INFO: Creating the datasets...
2018-11-08 11:09:56,519:INFO: - done.
2018-11-08 11:09:56,519:INFO: Creating the model...
2018-11-08 11:09:58,220:INFO: - done.
2018-11-08 11:09:58,221:INFO: Starting training for 10000 epoch(s)
2018-11-08 11:09:59,022:INFO: Epoch 1/10000
2018-11-08 11:10:46,864:INFO: - Train metrics: loss: 806.260 ; accuracy: 0.446
2018-11-08 11:10:54,501:INFO: - Eval metrics: loss: 263.439 ; accuracy: 0.646
2018-11-08 11:10:54,942:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 11:10:54,943:INFO: Epoch 2/10000
2018-11-08 11:11:41,038:INFO: - Train metrics: loss: 181.958 ; accuracy: 0.689
2018-11-08 11:11:48,271:INFO: - Eval metrics: loss: 186.065 ; accuracy: 0.689
2018-11-08 11:11:48,663:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 11:11:48,667:INFO: Epoch 3/10000
2018-11-08 11:12:34,771:INFO: - Train metrics: loss: 140.292 ; accuracy: 0.718
2018-11-08 11:12:42,274:INFO: - Eval metrics: loss: 169.568 ; accuracy: 0.692
2018-11-08 11:12:42,668:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 11:12:42,668:INFO: Epoch 4/10000
2018-11-08 11:13:28,656:INFO: - Train metrics: loss: 123.663 ; accuracy: 0.726
2018-11-08 11:13:36,073:INFO: - Eval metrics: loss: 164.463 ; accuracy: 0.708
2018-11-08 11:13:36,431:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-08 11:13:36,432:INFO: Epoch 5/10000
2018-11-08 11:14:26,693:INFO: - Train metrics: loss: 113.397 ; accuracy: 0.730
2018-11-08 11:14:34,107:INFO: - Eval metrics: loss: 145.070 ; accuracy: 0.716
2018-11-08 11:14:34,464:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-08 11:14:34,464:INFO: Epoch 6/10000
2018-11-08 11:15:24,236:INFO: - Train metrics: loss: 104.411 ; accuracy: 0.740
2018-11-08 11:15:31,649:INFO: - Eval metrics: loss: 145.154 ; accuracy: 0.705
2018-11-08 11:15:31,802:INFO: Epoch 7/10000
2018-11-08 11:16:17,868:INFO: - Train metrics: loss: 96.675 ; accuracy: 0.740
2018-11-08 11:16:25,318:INFO: - Eval metrics: loss: 144.467 ; accuracy: 0.728
2018-11-08 11:16:25,670:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-08 11:16:25,671:INFO: Epoch 8/10000
2018-11-08 11:17:11,556:INFO: - Train metrics: loss: 92.451 ; accuracy: 0.745
2018-11-08 11:17:19,018:INFO: - Eval metrics: loss: 136.862 ; accuracy: 0.729
2018-11-08 11:17:19,369:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-08 11:17:19,370:INFO: Epoch 9/10000
2018-11-08 11:18:09,572:INFO: - Train metrics: loss: 89.515 ; accuracy: 0.748
2018-11-08 11:18:17,018:INFO: - Eval metrics: loss: 145.922 ; accuracy: 0.733
2018-11-08 11:18:17,403:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-08 11:18:17,403:INFO: Epoch 10/10000
2018-11-08 11:19:03,043:INFO: - Train metrics: loss: 85.802 ; accuracy: 0.748
2018-11-08 11:19:10,399:INFO: - Eval metrics: loss: 143.474 ; accuracy: 0.732
2018-11-08 11:19:10,550:INFO: Epoch 11/10000
2018-11-08 11:19:56,525:INFO: - Train metrics: loss: 82.686 ; accuracy: 0.752
2018-11-08 11:20:03,975:INFO: - Eval metrics: loss: 131.780 ; accuracy: 0.729
2018-11-08 11:20:04,123:INFO: Epoch 12/10000
2018-11-08 11:20:50,086:INFO: - Train metrics: loss: 81.769 ; accuracy: 0.750
2018-11-08 11:20:57,501:INFO: - Eval metrics: loss: 130.360 ; accuracy: 0.732
2018-11-08 11:20:57,646:INFO: Epoch 13/10000
2018-11-08 11:21:43,364:INFO: - Train metrics: loss: 77.541 ; accuracy: 0.755
2018-11-08 11:21:50,739:INFO: - Eval metrics: loss: 132.171 ; accuracy: 0.738
2018-11-08 11:21:51,098:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-08 11:21:51,099:INFO: Epoch 14/10000
2018-11-08 11:22:36,862:INFO: - Train metrics: loss: 75.816 ; accuracy: 0.756
2018-11-08 11:22:44,294:INFO: - Eval metrics: loss: 132.006 ; accuracy: 0.733
2018-11-08 11:22:44,440:INFO: Epoch 15/10000
2018-11-08 11:23:28,231:INFO: - Train metrics: loss: 74.745 ; accuracy: 0.758
2018-11-08 11:23:35,685:INFO: - Eval metrics: loss: 129.582 ; accuracy: 0.742
2018-11-08 11:23:36,031:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-08 11:23:36,032:INFO: Epoch 16/10000
2018-11-08 11:24:22,238:INFO: - Train metrics: loss: 72.462 ; accuracy: 0.764
2018-11-08 11:24:29,391:INFO: - Eval metrics: loss: 124.685 ; accuracy: 0.742
2018-11-08 11:24:29,523:INFO: Epoch 17/10000
2018-11-08 11:25:14,696:INFO: - Train metrics: loss: 70.205 ; accuracy: 0.766
2018-11-08 11:25:21,381:INFO: - Eval metrics: loss: 124.013 ; accuracy: 0.747
2018-11-08 11:25:21,763:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-08 11:25:21,763:INFO: Epoch 18/10000
2018-11-08 11:26:06,433:INFO: - Train metrics: loss: 70.437 ; accuracy: 0.766
2018-11-08 11:26:13,262:INFO: - Eval metrics: loss: 121.564 ; accuracy: 0.747
2018-11-08 11:26:13,631:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-08 11:26:13,632:INFO: Epoch 19/10000
2018-11-08 11:26:59,306:INFO: - Train metrics: loss: 113.936 ; accuracy: 0.742
2018-11-08 11:27:09,152:INFO: - Eval metrics: loss: 155.781 ; accuracy: 0.714
2018-11-08 11:27:09,861:INFO: Epoch 20/10000
2018-11-08 11:27:55,706:INFO: - Train metrics: loss: 114.891 ; accuracy: 0.740
2018-11-08 11:28:03,074:INFO: - Eval metrics: loss: 152.993 ; accuracy: 0.727
2018-11-08 11:28:03,224:INFO: Epoch 21/10000
2018-11-08 11:28:48,685:INFO: Creating the datasets...
2018-11-08 11:28:58,788:INFO: - done.
2018-11-08 11:28:58,788:INFO: Creating the model...
2018-11-08 11:29:00,462:INFO: - done.
2018-11-08 11:29:00,462:INFO: Starting training for 10000 epoch(s)
2018-11-08 11:29:01,478:INFO: Epoch 1/10000
2018-11-08 11:29:48,266:INFO: - Train metrics: loss: 807.178 ; accuracy: 0.443
2018-11-08 11:29:55,647:INFO: - Eval metrics: loss: 281.632 ; accuracy: 0.611
2018-11-08 11:29:56,126:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 11:29:56,127:INFO: Epoch 2/10000
2018-11-08 11:30:41,050:INFO: - Train metrics: loss: 185.880 ; accuracy: 0.689
2018-11-08 11:30:48,544:INFO: - Eval metrics: loss: 191.435 ; accuracy: 0.680
2018-11-08 11:30:48,924:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 11:30:48,925:INFO: Epoch 3/10000
2018-11-08 11:31:36,106:INFO: - Train metrics: loss: 145.359 ; accuracy: 0.718
2018-11-08 11:31:43,661:INFO: - Eval metrics: loss: 174.057 ; accuracy: 0.689
2018-11-08 11:31:44,027:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 11:31:44,028:INFO: Epoch 4/10000
2018-11-08 11:32:34,482:INFO: - Train metrics: loss: 136.034 ; accuracy: 0.727
2018-11-08 11:32:41,895:INFO: - Eval metrics: loss: 164.532 ; accuracy: 0.717
2018-11-08 11:32:42,256:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-08 11:32:42,257:INFO: Epoch 5/10000
2018-11-08 11:33:29,198:INFO: - Train metrics: loss: 127.466 ; accuracy: 0.731
2018-11-08 11:33:36,724:INFO: - Eval metrics: loss: 156.114 ; accuracy: 0.711
2018-11-08 11:33:36,868:INFO: Epoch 6/10000
2018-11-08 11:34:22,331:INFO: - Train metrics: loss: 122.050 ; accuracy: 0.737
2018-11-08 11:34:29,711:INFO: - Eval metrics: loss: 157.322 ; accuracy: 0.720
2018-11-08 11:34:30,067:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-08 11:34:30,068:INFO: Epoch 7/10000
2018-11-08 11:35:15,735:INFO: - Train metrics: loss: 120.862 ; accuracy: 0.735
2018-11-08 11:35:23,095:INFO: - Eval metrics: loss: 152.628 ; accuracy: 0.721
2018-11-08 11:35:23,474:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-08 11:35:23,474:INFO: Epoch 8/10000
2018-11-08 11:36:09,600:INFO: - Train metrics: loss: 118.307 ; accuracy: 0.737
2018-11-08 11:36:16,962:INFO: - Eval metrics: loss: 176.130 ; accuracy: 0.724
2018-11-08 11:36:17,322:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-08 11:36:17,323:INFO: Epoch 9/10000
2018-11-08 11:37:02,928:INFO: - Train metrics: loss: 115.494 ; accuracy: 0.741
2018-11-08 11:37:10,302:INFO: - Eval metrics: loss: 156.180 ; accuracy: 0.725
2018-11-08 11:37:10,663:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-08 11:37:10,664:INFO: Epoch 10/10000
2018-11-08 11:37:56,848:INFO: - Train metrics: loss: 114.776 ; accuracy: 0.739
2018-11-08 11:38:04,169:INFO: - Eval metrics: loss: 154.258 ; accuracy: 0.723
2018-11-08 11:38:04,316:INFO: Epoch 11/10000
2018-11-08 11:38:53,893:INFO: - Train metrics: loss: 113.640 ; accuracy: 0.741
2018-11-08 11:39:01,176:INFO: - Eval metrics: loss: 148.598 ; accuracy: 0.716
2018-11-08 11:39:01,324:INFO: Epoch 12/10000
2018-11-08 11:39:45,627:INFO: - Train metrics: loss: 111.335 ; accuracy: 0.743
2018-11-08 11:39:52,944:INFO: - Eval metrics: loss: 148.036 ; accuracy: 0.718
2018-11-08 11:39:53,089:INFO: Epoch 13/10000
2018-11-08 11:40:38,694:INFO: - Train metrics: loss: 110.591 ; accuracy: 0.743
2018-11-08 11:40:46,049:INFO: - Eval metrics: loss: 146.877 ; accuracy: 0.721
2018-11-08 11:40:46,193:INFO: Epoch 14/10000
2018-11-08 11:41:32,212:INFO: - Train metrics: loss: 108.885 ; accuracy: 0.745
2018-11-08 11:41:39,678:INFO: - Eval metrics: loss: 146.568 ; accuracy: 0.727
2018-11-08 11:41:40,030:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-08 11:41:40,031:INFO: Epoch 15/10000
2018-11-08 11:42:26,032:INFO: - Train metrics: loss: 109.197 ; accuracy: 0.743
2018-11-08 11:42:33,417:INFO: - Eval metrics: loss: 145.005 ; accuracy: 0.728
2018-11-08 11:42:33,772:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-08 11:42:33,772:INFO: Epoch 16/10000
2018-11-08 11:43:20,105:INFO: - Train metrics: loss: 107.130 ; accuracy: 0.745
2018-11-08 11:43:27,411:INFO: - Eval metrics: loss: 143.455 ; accuracy: 0.729
2018-11-08 11:43:27,763:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-08 11:43:27,764:INFO: Epoch 17/10000
2018-11-08 11:44:13,149:INFO: - Train metrics: loss: 105.679 ; accuracy: 0.745
2018-11-08 11:44:20,543:INFO: - Eval metrics: loss: 142.203 ; accuracy: 0.727
2018-11-08 11:44:20,686:INFO: Epoch 18/10000
2018-11-08 11:45:06,614:INFO: - Train metrics: loss: 103.865 ; accuracy: 0.744
2018-11-08 11:45:13,947:INFO: - Eval metrics: loss: 140.168 ; accuracy: 0.729
2018-11-08 11:45:14,298:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-08 11:45:14,298:INFO: Epoch 19/10000
2018-11-08 11:46:00,072:INFO: - Train metrics: loss: 103.294 ; accuracy: 0.747
2018-11-08 11:46:07,440:INFO: - Eval metrics: loss: 141.317 ; accuracy: 0.730
2018-11-08 11:46:07,804:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-08 11:46:07,804:INFO: Epoch 20/10000
2018-11-08 11:46:57,663:INFO: - Train metrics: loss: 101.944 ; accuracy: 0.746
2018-11-08 11:47:05,057:INFO: - Eval metrics: loss: 138.892 ; accuracy: 0.730
2018-11-08 11:47:05,191:INFO: Epoch 21/10000
2018-11-08 11:47:51,251:INFO: - Train metrics: loss: 101.057 ; accuracy: 0.747
2018-11-08 11:47:58,714:INFO: - Eval metrics: loss: 141.882 ; accuracy: 0.730
2018-11-08 11:47:59,102:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-08 11:47:59,103:INFO: Epoch 22/10000
2018-11-08 11:48:42,566:INFO: - Train metrics: loss: 101.123 ; accuracy: 0.746
2018-11-08 11:48:49,849:INFO: - Eval metrics: loss: 136.621 ; accuracy: 0.729
2018-11-08 11:48:50,007:INFO: Epoch 23/10000
2018-11-08 11:49:38,366:INFO: - Train metrics: loss: 100.485 ; accuracy: 0.747
2018-11-08 11:49:46,431:INFO: - Eval metrics: loss: 134.709 ; accuracy: 0.723
2018-11-08 11:49:46,594:INFO: Epoch 24/10000
2018-11-08 11:50:38,310:INFO: - Train metrics: loss: 98.029 ; accuracy: 0.748
2018-11-08 11:50:46,804:INFO: - Eval metrics: loss: 133.912 ; accuracy: 0.726
2018-11-08 11:50:46,971:INFO: Epoch 25/10000
2018-11-08 11:51:32,540:INFO: - Train metrics: loss: 98.429 ; accuracy: 0.749
2018-11-08 11:51:44,647:INFO: - Eval metrics: loss: 132.546 ; accuracy: 0.728
2018-11-08 11:51:46,124:INFO: Epoch 26/10000
2018-11-08 11:56:15,174:INFO: Creating the datasets...
2018-11-08 11:56:25,394:INFO: - done.
2018-11-08 11:56:25,394:INFO: Creating the model...
2018-11-08 11:56:27,264:INFO: - done.
2018-11-08 11:56:27,264:INFO: Starting training for 10000 epoch(s)
2018-11-08 11:56:28,225:INFO: Epoch 1/10000
2018-11-08 11:57:14,337:INFO: - Train metrics: accuracy: 0.462 ; loss: 813.315
2018-11-08 11:57:21,921:INFO: - Eval metrics: accuracy: 0.700 ; loss: 126.210
2018-11-08 11:57:22,399:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 11:57:22,399:INFO: Epoch 2/10000
2018-11-08 11:58:07,856:INFO: - Train metrics: accuracy: 0.697 ; loss: 180.294
2018-11-08 11:58:15,264:INFO: - Eval metrics: accuracy: 0.735 ; loss: 85.944
2018-11-08 11:58:15,615:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 11:58:15,616:INFO: Epoch 3/10000
2018-11-08 11:58:31,097:INFO: Creating the datasets...
2018-11-08 11:58:33,952:INFO: - done.
2018-11-08 11:58:33,952:INFO: Creating the model...
2018-11-08 11:58:35,600:INFO: - done.
2018-11-08 11:58:35,600:INFO: Starting training for 10000 epoch(s)
2018-11-08 11:58:36,399:INFO: Epoch 1/10000
2018-11-08 12:00:40,975:INFO: Creating the datasets...
2018-11-08 12:00:43,768:INFO: - done.
2018-11-08 12:00:43,768:INFO: Creating the model...
2018-11-08 12:00:45,437:INFO: - done.
2018-11-08 12:00:45,437:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:00:46,234:INFO: Epoch 1/10000
2018-11-08 12:01:31,234:INFO: Creating the datasets...
2018-11-08 12:01:34,191:INFO: - done.
2018-11-08 12:01:34,192:INFO: Creating the model...
2018-11-08 12:01:35,852:INFO: - done.
2018-11-08 12:01:35,852:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:01:36,623:INFO: Epoch 1/10000
2018-11-08 12:02:16,214:INFO: Creating the datasets...
2018-11-08 12:02:18,988:INFO: - done.
2018-11-08 12:02:18,988:INFO: Creating the model...
2018-11-08 12:02:20,567:INFO: - done.
2018-11-08 12:02:20,567:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:02:21,359:INFO: Epoch 1/10000
2018-11-08 12:03:29,936:INFO: Creating the datasets...
2018-11-08 12:03:32,706:INFO: - done.
2018-11-08 12:03:32,706:INFO: Creating the model...
2018-11-08 12:03:34,570:INFO: - done.
2018-11-08 12:03:34,570:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:03:35,409:INFO: Epoch 1/10000
2018-11-08 12:03:56,649:INFO: - Train metrics: loss: 1385.509 ; accuracy: 0.323
2018-11-08 12:04:00,005:INFO: - Eval metrics: loss: 670.575 ; accuracy: 0.447
2018-11-08 12:04:00,390:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 12:04:00,391:INFO: Epoch 2/10000
2018-11-08 12:07:29,413:INFO: Creating the datasets...
2018-11-08 12:07:32,212:INFO: - done.
2018-11-08 12:07:32,213:INFO: Creating the model...
2018-11-08 12:07:33,798:INFO: - done.
2018-11-08 12:07:33,798:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:07:34,581:INFO: Epoch 1/10000
2018-11-08 12:07:54,779:INFO: - Train metrics: loss: 1385.509 ; accuracy: 0.323
2018-11-08 12:07:58,071:INFO: - Eval metrics: loss: 670.575 ; accuracy: 0.447
2018-11-08 12:07:58,502:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 12:07:58,502:INFO: Epoch 2/10000
2018-11-08 12:08:18,191:INFO: - Train metrics: loss: 410.881 ; accuracy: 0.530
2018-11-08 12:08:21,342:INFO: - Eval metrics: loss: 139.134 ; accuracy: 0.647
2018-11-08 12:08:21,686:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 12:08:21,687:INFO: Epoch 3/10000
2018-11-08 12:08:41,375:INFO: - Train metrics: loss: 199.404 ; accuracy: 0.691
2018-11-08 12:08:44,536:INFO: - Eval metrics: loss: 99.435 ; accuracy: 0.721
2018-11-08 12:08:44,890:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 12:08:44,890:INFO: Epoch 4/10000
2018-11-08 12:09:04,501:INFO: - Train metrics: loss: 161.810 ; accuracy: 0.717
2018-11-08 12:09:07,806:INFO: - Eval metrics: loss: 78.642 ; accuracy: 0.746
2018-11-08 12:09:08,166:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-08 12:09:08,166:INFO: Epoch 5/10000
2018-11-08 12:09:28,033:INFO: - Train metrics: loss: 150.365 ; accuracy: 0.725
2018-11-08 12:09:31,269:INFO: - Eval metrics: loss: 72.990 ; accuracy: 0.750
2018-11-08 12:09:31,618:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-08 12:09:31,618:INFO: Epoch 6/10000
2018-11-08 12:09:50,669:INFO: - Train metrics: loss: 146.042 ; accuracy: 0.726
2018-11-08 12:09:54,007:INFO: - Eval metrics: loss: 76.287 ; accuracy: 0.741
2018-11-08 12:09:54,136:INFO: Epoch 7/10000
2018-11-08 12:10:13,573:INFO: - Train metrics: loss: 140.523 ; accuracy: 0.731
2018-11-08 12:10:16,669:INFO: - Eval metrics: loss: 68.927 ; accuracy: 0.750
2018-11-08 12:10:16,805:INFO: Epoch 8/10000
2018-11-08 12:10:36,379:INFO: - Train metrics: loss: 137.325 ; accuracy: 0.731
2018-11-08 12:10:39,503:INFO: - Eval metrics: loss: 70.233 ; accuracy: 0.749
2018-11-08 12:10:39,626:INFO: Epoch 9/10000
2018-11-08 12:11:02,628:INFO: - Train metrics: loss: 135.032 ; accuracy: 0.734
2018-11-08 12:11:05,849:INFO: - Eval metrics: loss: 63.019 ; accuracy: 0.758
2018-11-08 12:11:06,196:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-08 12:11:06,197:INFO: Epoch 10/10000
2018-11-08 12:11:25,844:INFO: - Train metrics: loss: 132.762 ; accuracy: 0.735
2018-11-08 12:11:29,059:INFO: - Eval metrics: loss: 61.246 ; accuracy: 0.753
2018-11-08 12:11:29,189:INFO: Epoch 11/10000
2018-11-08 12:11:51,566:INFO: - Train metrics: loss: 130.991 ; accuracy: 0.736
2018-11-08 12:11:54,707:INFO: - Eval metrics: loss: 66.824 ; accuracy: 0.747
2018-11-08 12:11:54,826:INFO: Epoch 12/10000
2018-11-08 12:12:18,434:INFO: - Train metrics: loss: 133.708 ; accuracy: 0.732
2018-11-08 12:12:21,628:INFO: - Eval metrics: loss: 60.164 ; accuracy: 0.752
2018-11-08 12:12:21,751:INFO: Epoch 13/10000
2018-11-08 12:12:41,151:INFO: - Train metrics: loss: 129.644 ; accuracy: 0.734
2018-11-08 12:12:44,299:INFO: - Eval metrics: loss: 63.125 ; accuracy: 0.754
2018-11-08 12:12:44,436:INFO: Epoch 14/10000
2018-11-08 12:13:07,638:INFO: - Train metrics: loss: 129.447 ; accuracy: 0.734
2018-11-08 12:13:10,881:INFO: - Eval metrics: loss: 59.254 ; accuracy: 0.750
2018-11-08 12:13:11,007:INFO: Epoch 15/10000
2018-11-08 12:13:33,947:INFO: - Train metrics: loss: 126.315 ; accuracy: 0.737
2018-11-08 12:13:37,307:INFO: - Eval metrics: loss: 60.763 ; accuracy: 0.757
2018-11-08 12:13:37,424:INFO: Epoch 16/10000
2018-11-08 12:13:57,510:INFO: - Train metrics: loss: 126.582 ; accuracy: 0.737
2018-11-08 12:14:00,692:INFO: - Eval metrics: loss: 60.841 ; accuracy: 0.753
2018-11-08 12:14:00,841:INFO: Epoch 17/10000
2018-11-08 12:14:20,836:INFO: - Train metrics: loss: 124.603 ; accuracy: 0.738
2018-11-08 12:14:23,997:INFO: - Eval metrics: loss: 57.277 ; accuracy: 0.759
2018-11-08 12:14:24,338:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-08 12:14:24,338:INFO: Epoch 18/10000
2018-11-08 12:14:44,353:INFO: - Train metrics: loss: 124.212 ; accuracy: 0.737
2018-11-08 12:14:47,538:INFO: - Eval metrics: loss: 57.889 ; accuracy: 0.764
2018-11-08 12:14:47,882:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-08 12:14:47,883:INFO: Epoch 19/10000
2018-11-08 12:15:07,485:INFO: - Train metrics: loss: 123.797 ; accuracy: 0.738
2018-11-08 12:15:10,641:INFO: - Eval metrics: loss: 60.845 ; accuracy: 0.764
2018-11-08 12:15:10,758:INFO: Epoch 20/10000
2018-11-08 12:15:33,977:INFO: - Train metrics: loss: 123.204 ; accuracy: 0.737
2018-11-08 12:15:37,150:INFO: - Eval metrics: loss: 57.170 ; accuracy: 0.759
2018-11-08 12:15:37,279:INFO: Epoch 21/10000
2018-11-08 12:15:56,842:INFO: - Train metrics: loss: 121.650 ; accuracy: 0.739
2018-11-08 12:16:00,018:INFO: - Eval metrics: loss: 60.109 ; accuracy: 0.760
2018-11-08 12:16:00,144:INFO: Epoch 22/10000
2018-11-08 12:16:19,829:INFO: - Train metrics: loss: 120.839 ; accuracy: 0.740
2018-11-08 12:16:23,091:INFO: - Eval metrics: loss: 57.121 ; accuracy: 0.760
2018-11-08 12:16:23,225:INFO: Epoch 23/10000
2018-11-08 12:16:42,906:INFO: - Train metrics: loss: 119.319 ; accuracy: 0.739
2018-11-08 12:16:46,114:INFO: - Eval metrics: loss: 56.272 ; accuracy: 0.761
2018-11-08 12:16:46,238:INFO: Epoch 24/10000
2018-11-08 12:17:05,733:INFO: - Train metrics: loss: 118.517 ; accuracy: 0.740
2018-11-08 12:17:08,925:INFO: - Eval metrics: loss: 55.714 ; accuracy: 0.764
2018-11-08 12:17:09,047:INFO: Epoch 25/10000
2018-11-08 12:17:29,008:INFO: - Train metrics: loss: 118.539 ; accuracy: 0.740
2018-11-08 12:17:32,223:INFO: - Eval metrics: loss: 54.567 ; accuracy: 0.764
2018-11-08 12:17:32,567:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-08 12:17:32,568:INFO: Epoch 26/10000
2018-11-08 12:17:52,271:INFO: - Train metrics: loss: 116.078 ; accuracy: 0.741
2018-11-08 12:17:55,452:INFO: - Eval metrics: loss: 56.464 ; accuracy: 0.757
2018-11-08 12:17:55,585:INFO: Epoch 27/10000
2018-11-08 12:18:15,593:INFO: - Train metrics: loss: 116.259 ; accuracy: 0.740
2018-11-08 12:18:18,783:INFO: - Eval metrics: loss: 55.784 ; accuracy: 0.763
2018-11-08 12:18:18,905:INFO: Epoch 28/10000
2018-11-08 12:18:38,721:INFO: - Train metrics: loss: 113.798 ; accuracy: 0.741
2018-11-08 12:18:42,003:INFO: - Eval metrics: loss: 54.969 ; accuracy: 0.766
2018-11-08 12:18:42,339:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-08 12:18:42,340:INFO: Epoch 29/10000
2018-11-08 12:19:04,900:INFO: - Train metrics: loss: 113.248 ; accuracy: 0.742
2018-11-08 12:19:08,089:INFO: - Eval metrics: loss: 55.462 ; accuracy: 0.760
2018-11-08 12:19:08,215:INFO: Epoch 30/10000
2018-11-08 12:19:27,266:INFO: - Train metrics: loss: 113.061 ; accuracy: 0.743
2018-11-08 12:19:29,852:INFO: - Eval metrics: loss: 54.705 ; accuracy: 0.765
2018-11-08 12:19:29,960:INFO: Epoch 31/10000
2018-11-08 12:19:48,499:INFO: - Train metrics: loss: 113.124 ; accuracy: 0.740
2018-11-08 12:19:51,194:INFO: - Eval metrics: loss: 55.260 ; accuracy: 0.764
2018-11-08 12:19:51,304:INFO: Epoch 32/10000
2018-11-08 12:20:10,438:INFO: - Train metrics: loss: 111.247 ; accuracy: 0.743
2018-11-08 12:20:13,658:INFO: - Eval metrics: loss: 55.627 ; accuracy: 0.768
2018-11-08 12:20:14,049:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-08 12:20:14,050:INFO: Epoch 33/10000
2018-11-08 12:20:33,820:INFO: - Train metrics: loss: 109.395 ; accuracy: 0.742
2018-11-08 12:20:37,004:INFO: - Eval metrics: loss: 57.654 ; accuracy: 0.758
2018-11-08 12:20:37,141:INFO: Epoch 34/10000
2018-11-08 12:20:57,299:INFO: - Train metrics: loss: 111.372 ; accuracy: 0.742
2018-11-08 12:21:00,480:INFO: - Eval metrics: loss: 55.943 ; accuracy: 0.763
2018-11-08 12:21:00,611:INFO: Epoch 35/10000
2018-11-08 12:21:20,195:INFO: - Train metrics: loss: 107.222 ; accuracy: 0.743
2018-11-08 12:21:23,325:INFO: - Eval metrics: loss: 57.159 ; accuracy: 0.757
2018-11-08 12:21:23,454:INFO: Epoch 36/10000
2018-11-08 12:21:46,151:INFO: - Train metrics: loss: 107.626 ; accuracy: 0.744
2018-11-08 12:21:49,304:INFO: - Eval metrics: loss: 55.342 ; accuracy: 0.764
2018-11-08 12:21:49,422:INFO: Epoch 37/10000
2018-11-08 12:22:12,284:INFO: - Train metrics: loss: 106.937 ; accuracy: 0.745
2018-11-08 12:22:15,549:INFO: - Eval metrics: loss: 55.866 ; accuracy: 0.767
2018-11-08 12:22:15,684:INFO: Epoch 38/10000
2018-11-08 12:22:30,411:INFO: Creating the datasets...
2018-11-08 12:22:33,219:INFO: - done.
2018-11-08 12:22:33,219:INFO: Creating the model...
2018-11-08 12:22:34,764:INFO: - done.
2018-11-08 12:22:34,764:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:22:35,605:INFO: Epoch 1/10000
2018-11-08 12:22:55,629:INFO: - Train metrics: loss: 1385.509 ; accuracy: 0.323
2018-11-08 12:22:58,892:INFO: - Eval metrics: loss: 670.575 ; accuracy: 0.447
2018-11-08 12:22:59,328:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 12:22:59,328:INFO: Epoch 2/10000
2018-11-08 12:23:18,500:INFO: - Train metrics: loss: 410.881 ; accuracy: 0.530
2018-11-08 12:23:21,634:INFO: - Eval metrics: loss: 139.134 ; accuracy: 0.647
2018-11-08 12:23:21,983:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 12:23:21,983:INFO: Epoch 3/10000
2018-11-08 12:23:41,590:INFO: - Train metrics: loss: 199.404 ; accuracy: 0.691
2018-11-08 12:23:44,715:INFO: - Eval metrics: loss: 99.435 ; accuracy: 0.721
2018-11-08 12:23:45,068:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 12:23:45,068:INFO: Epoch 4/10000
2018-11-08 12:24:04,417:INFO: - Train metrics: loss: 161.810 ; accuracy: 0.717
2018-11-08 12:24:07,559:INFO: - Eval metrics: loss: 78.642 ; accuracy: 0.746
2018-11-08 12:24:07,905:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-08 12:24:07,905:INFO: Epoch 5/10000
2018-11-08 12:24:27,441:INFO: - Train metrics: loss: 150.365 ; accuracy: 0.725
2018-11-08 12:24:30,598:INFO: - Eval metrics: loss: 72.990 ; accuracy: 0.750
2018-11-08 12:24:30,932:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-08 12:24:30,933:INFO: Epoch 6/10000
2018-11-08 12:24:54,104:INFO: - Train metrics: loss: 146.042 ; accuracy: 0.726
2018-11-08 12:24:57,251:INFO: - Eval metrics: loss: 76.287 ; accuracy: 0.741
2018-11-08 12:24:57,393:INFO: Epoch 7/10000
2018-11-08 12:25:16,970:INFO: - Train metrics: loss: 140.523 ; accuracy: 0.731
2018-11-08 12:25:20,183:INFO: - Eval metrics: loss: 68.927 ; accuracy: 0.750
2018-11-08 12:25:20,322:INFO: Epoch 8/10000
2018-11-08 12:25:40,037:INFO: - Train metrics: loss: 137.325 ; accuracy: 0.731
2018-11-08 12:25:43,197:INFO: - Eval metrics: loss: 70.233 ; accuracy: 0.749
2018-11-08 12:25:43,336:INFO: Epoch 9/10000
2018-11-08 12:26:02,913:INFO: - Train metrics: loss: 135.032 ; accuracy: 0.734
2018-11-08 12:26:06,044:INFO: - Eval metrics: loss: 63.019 ; accuracy: 0.758
2018-11-08 12:26:06,383:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-08 12:26:06,383:INFO: Epoch 10/10000
2018-11-08 12:26:25,642:INFO: - Train metrics: loss: 132.762 ; accuracy: 0.735
2018-11-08 12:26:28,859:INFO: - Eval metrics: loss: 61.246 ; accuracy: 0.753
2018-11-08 12:26:28,997:INFO: Epoch 11/10000
2018-11-08 12:26:48,715:INFO: - Train metrics: loss: 130.991 ; accuracy: 0.736
2018-11-08 12:26:51,931:INFO: - Eval metrics: loss: 66.824 ; accuracy: 0.747
2018-11-08 12:26:52,064:INFO: Epoch 12/10000
2018-11-08 12:27:11,837:INFO: - Train metrics: loss: 133.708 ; accuracy: 0.732
2018-11-08 12:27:14,977:INFO: - Eval metrics: loss: 60.164 ; accuracy: 0.752
2018-11-08 12:27:15,116:INFO: Epoch 13/10000
2018-11-08 12:27:31,159:INFO: Creating the datasets...
2018-11-08 12:27:33,998:INFO: - done.
2018-11-08 12:27:33,998:INFO: Creating the model...
2018-11-08 12:27:35,632:INFO: - done.
2018-11-08 12:27:35,632:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:27:36,464:INFO: Epoch 1/10000
2018-11-08 12:27:56,364:INFO: - Train metrics: loss: 1385.509 ; accuracy: 0.323
2018-11-08 12:27:59,615:INFO: - Eval metrics: loss: 670.575 ; accuracy: 0.447
2018-11-08 12:28:00,010:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 12:28:00,011:INFO: Epoch 2/10000
2018-11-08 12:28:19,608:INFO: - Train metrics: loss: 410.881 ; accuracy: 0.530
2018-11-08 12:28:22,772:INFO: - Eval metrics: loss: 139.134 ; accuracy: 0.647
2018-11-08 12:28:23,123:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 12:28:23,124:INFO: Epoch 3/10000
2018-11-08 12:28:42,541:INFO: - Train metrics: loss: 199.404 ; accuracy: 0.691
2018-11-08 12:28:45,777:INFO: - Eval metrics: loss: 99.435 ; accuracy: 0.721
2018-11-08 12:28:46,160:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 12:28:46,160:INFO: Epoch 4/10000
2018-11-08 12:29:00,059:INFO: Creating the datasets...
2018-11-08 12:29:02,880:INFO: - done.
2018-11-08 12:29:02,880:INFO: Creating the model...
2018-11-08 12:29:04,366:INFO: - done.
2018-11-08 12:29:04,366:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:29:05,201:INFO: Epoch 1/10000
2018-11-08 12:29:25,604:INFO: - Train metrics: accuracy: 0.323 ; loss: 1385.509
2018-11-08 12:29:28,965:INFO: - Eval metrics: accuracy: 0.447 ; loss: 670.575
2018-11-08 12:29:29,781:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 12:29:29,781:INFO: Epoch 2/10000
2018-11-08 12:29:49,861:INFO: - Train metrics: accuracy: 0.530 ; loss: 410.881
2018-11-08 12:30:03,181:INFO: Creating the datasets...
2018-11-08 12:30:06,305:INFO: - done.
2018-11-08 12:30:06,305:INFO: Creating the model...
2018-11-08 12:30:07,778:INFO: - done.
2018-11-08 12:30:07,779:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:30:08,599:INFO: Epoch 1/10000
2018-11-08 12:30:28,615:INFO: - Train metrics: accuracy: 0.323 ; loss: 1385.509
2018-11-08 12:30:31,943:INFO: - Eval metrics: accuracy: 0.447 ; loss: 670.575
2018-11-08 12:30:32,339:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 12:30:32,340:INFO: Epoch 2/10000
2018-11-08 12:32:49,185:INFO: Creating the datasets...
2018-11-08 12:32:51,964:INFO: - done.
2018-11-08 12:32:51,965:INFO: Creating the model...
2018-11-08 12:32:53,584:INFO: - done.
2018-11-08 12:32:53,584:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:32:54,406:INFO: Epoch 1/10000
2018-11-08 12:33:14,167:INFO: - Train metrics: loss: 1385.509 ; accuracy: 0.323
2018-11-08 12:33:17,491:INFO: - Eval metrics: loss: 670.575 ; accuracy: 0.447
2018-11-08 12:33:18,367:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 12:33:18,367:INFO: Epoch 2/10000
2018-11-08 12:33:37,992:INFO: Creating the datasets...
2018-11-08 12:33:40,861:INFO: - done.
2018-11-08 12:33:40,862:INFO: Creating the model...
2018-11-08 12:33:42,380:INFO: - done.
2018-11-08 12:33:42,380:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:33:43,224:INFO: Epoch 1/10000
2018-11-08 12:34:03,146:INFO: - Train metrics: accuracy: 0.323 ; loss: 1385.509
2018-11-08 12:34:06,458:INFO: - Eval metrics: accuracy: 0.447 ; loss: 670.575
2018-11-08 12:34:06,858:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 12:34:06,858:INFO: Epoch 2/10000
2018-11-08 12:34:26,293:INFO: - Train metrics: accuracy: 0.530 ; loss: 410.881
2018-11-08 12:34:29,473:INFO: - Eval metrics: accuracy: 0.647 ; loss: 139.134
2018-11-08 12:34:29,811:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 12:34:29,812:INFO: Epoch 3/10000
2018-11-08 12:34:49,497:INFO: - Train metrics: accuracy: 0.691 ; loss: 199.404
2018-11-08 12:34:52,694:INFO: - Eval metrics: accuracy: 0.721 ; loss: 99.435
2018-11-08 12:34:53,028:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 12:34:53,028:INFO: Epoch 4/10000
2018-11-08 12:35:12,978:INFO: - Train metrics: accuracy: 0.717 ; loss: 161.810
2018-11-08 12:35:16,128:INFO: - Eval metrics: accuracy: 0.746 ; loss: 78.642
2018-11-08 12:35:16,474:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-08 12:35:16,475:INFO: Epoch 5/10000
2018-11-08 12:35:36,172:INFO: - Train metrics: accuracy: 0.725 ; loss: 150.365
2018-11-08 12:35:39,502:INFO: - Eval metrics: accuracy: 0.750 ; loss: 72.990
2018-11-08 12:35:39,839:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-08 12:35:39,839:INFO: Epoch 6/10000
2018-11-08 12:35:59,645:INFO: - Train metrics: accuracy: 0.726 ; loss: 146.042
2018-11-08 12:36:02,823:INFO: - Eval metrics: accuracy: 0.741 ; loss: 76.287
2018-11-08 12:36:02,957:INFO: Epoch 7/10000
2018-11-08 12:36:16,977:INFO: Creating the datasets...
2018-11-08 12:36:19,810:INFO: - done.
2018-11-08 12:36:19,810:INFO: Creating the model...
2018-11-08 12:36:21,285:INFO: - done.
2018-11-08 12:36:21,286:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:36:22,137:INFO: Epoch 1/10000
2018-11-08 12:36:41,781:INFO: - Train metrics: accuracy: 0.323 ; loss: 1385.509
2018-11-08 12:36:45,079:INFO: - Eval metrics: accuracy: 0.447 ; loss: 670.575
2018-11-08 12:36:45,482:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 12:36:45,483:INFO: Epoch 2/10000
2018-11-08 12:37:04,930:INFO: - Train metrics: accuracy: 0.530 ; loss: 410.881
2018-11-08 12:37:08,061:INFO: - Eval metrics: accuracy: 0.647 ; loss: 139.134
2018-11-08 12:37:08,394:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 12:37:08,394:INFO: Epoch 3/10000
2018-11-08 12:37:27,891:INFO: - Train metrics: accuracy: 0.691 ; loss: 199.404
2018-11-08 12:37:31,044:INFO: - Eval metrics: accuracy: 0.721 ; loss: 99.435
2018-11-08 12:37:31,371:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 12:37:31,371:INFO: Epoch 4/10000
2018-11-08 12:37:50,676:INFO: - Train metrics: accuracy: 0.717 ; loss: 161.810
2018-11-08 12:37:53,819:INFO: - Eval metrics: accuracy: 0.746 ; loss: 78.642
2018-11-08 12:37:54,167:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-08 12:37:54,167:INFO: Epoch 5/10000
2018-11-08 12:38:13,610:INFO: - Train metrics: accuracy: 0.725 ; loss: 150.365
2018-11-08 12:38:16,805:INFO: - Eval metrics: accuracy: 0.750 ; loss: 72.990
2018-11-08 12:38:17,153:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-08 12:38:17,154:INFO: Epoch 6/10000
2018-11-08 12:38:36,764:INFO: - Train metrics: accuracy: 0.726 ; loss: 146.042
2018-11-08 12:38:40,047:INFO: - Eval metrics: accuracy: 0.741 ; loss: 76.287
2018-11-08 12:38:40,197:INFO: Epoch 7/10000
2018-11-08 12:38:59,698:INFO: - Train metrics: accuracy: 0.731 ; loss: 140.523
2018-11-08 12:39:02,833:INFO: - Eval metrics: accuracy: 0.750 ; loss: 68.927
2018-11-08 12:39:02,971:INFO: Epoch 8/10000
2018-11-08 12:39:22,542:INFO: - Train metrics: accuracy: 0.731 ; loss: 137.325
2018-11-08 12:39:25,767:INFO: - Eval metrics: accuracy: 0.749 ; loss: 70.233
2018-11-08 12:39:25,900:INFO: Epoch 9/10000
2018-11-08 12:39:48,848:INFO: - Train metrics: accuracy: 0.734 ; loss: 135.032
2018-11-08 12:39:51,999:INFO: - Eval metrics: accuracy: 0.758 ; loss: 63.019
2018-11-08 12:39:52,346:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-08 12:39:52,347:INFO: Epoch 10/10000
2018-11-08 12:40:11,946:INFO: - Train metrics: accuracy: 0.735 ; loss: 132.762
2018-11-08 12:40:15,077:INFO: - Eval metrics: accuracy: 0.753 ; loss: 61.246
2018-11-08 12:40:15,212:INFO: Epoch 11/10000
2018-11-08 12:40:34,685:INFO: - Train metrics: accuracy: 0.736 ; loss: 130.991
2018-11-08 12:40:37,876:INFO: - Eval metrics: accuracy: 0.747 ; loss: 66.824
2018-11-08 12:40:38,018:INFO: Epoch 12/10000
2018-11-08 12:40:57,653:INFO: - Train metrics: accuracy: 0.732 ; loss: 133.708
2018-11-08 12:41:00,837:INFO: - Eval metrics: accuracy: 0.752 ; loss: 60.164
2018-11-08 12:41:00,969:INFO: Epoch 13/10000
2018-11-08 12:41:20,414:INFO: - Train metrics: accuracy: 0.734 ; loss: 129.644
2018-11-08 12:41:23,716:INFO: - Eval metrics: accuracy: 0.754 ; loss: 63.125
2018-11-08 12:41:23,856:INFO: Epoch 14/10000
2018-11-08 12:41:43,460:INFO: - Train metrics: accuracy: 0.734 ; loss: 129.447
2018-11-08 12:41:46,593:INFO: - Eval metrics: accuracy: 0.750 ; loss: 59.254
2018-11-08 12:41:46,735:INFO: Epoch 15/10000
2018-11-08 12:42:06,067:INFO: - Train metrics: accuracy: 0.737 ; loss: 126.315
2018-11-08 12:42:09,188:INFO: - Eval metrics: accuracy: 0.757 ; loss: 60.763
2018-11-08 12:42:09,336:INFO: Epoch 16/10000
2018-11-08 12:42:28,900:INFO: - Train metrics: accuracy: 0.737 ; loss: 126.582
2018-11-08 12:42:32,044:INFO: - Eval metrics: accuracy: 0.753 ; loss: 60.841
2018-11-08 12:42:32,175:INFO: Epoch 17/10000
2018-11-08 12:42:54,405:INFO: - Train metrics: accuracy: 0.738 ; loss: 124.603
2018-11-08 12:42:57,534:INFO: - Eval metrics: accuracy: 0.759 ; loss: 57.277
2018-11-08 12:42:57,879:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-08 12:42:57,880:INFO: Epoch 18/10000
2018-11-08 12:43:17,392:INFO: - Train metrics: accuracy: 0.737 ; loss: 124.212
2018-11-08 12:43:20,482:INFO: - Eval metrics: accuracy: 0.764 ; loss: 57.889
2018-11-08 12:43:20,825:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-08 12:43:20,826:INFO: Epoch 19/10000
2018-11-08 12:43:43,422:INFO: Creating the datasets...
2018-11-08 12:43:46,295:INFO: - done.
2018-11-08 12:43:46,295:INFO: Creating the model...
2018-11-08 12:43:47,810:INFO: - done.
2018-11-08 12:43:47,811:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:43:48,643:INFO: Epoch 1/10000
2018-11-08 12:44:39,029:INFO: Creating the datasets...
2018-11-08 12:44:41,779:INFO: - done.
2018-11-08 12:44:41,779:INFO: Creating the model...
2018-11-08 12:44:49,506:INFO: Creating the datasets...
2018-11-08 12:44:52,331:INFO: - done.
2018-11-08 12:44:52,331:INFO: Creating the model...
2018-11-08 12:44:53,933:INFO: - done.
2018-11-08 12:44:53,933:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:44:54,774:INFO: Epoch 1/10000
2018-11-08 12:45:27,711:INFO: - Train metrics: loss: 743.937 ; accuracy: 0.485
2018-11-08 12:45:43,680:INFO: Creating the datasets...
2018-11-08 12:45:46,424:INFO: - done.
2018-11-08 12:45:46,424:INFO: Creating the model...
2018-11-08 12:45:47,903:INFO: - done.
2018-11-08 12:45:47,903:INFO: Starting training for 10000 epoch(s)
2018-11-08 12:45:48,726:INFO: Epoch 1/10000
2018-11-08 12:46:24,263:INFO: - Train metrics: loss: 680.835 ; accuracy: 0.511
2018-11-08 12:46:32,500:INFO: - Eval metrics: loss: 118.592 ; accuracy: 0.715
2018-11-08 12:46:32,887:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 12:46:32,888:INFO: Epoch 2/10000
2018-11-08 12:47:07,729:INFO: - Train metrics: loss: 157.495 ; accuracy: 0.721
2018-11-08 12:47:15,907:INFO: - Eval metrics: loss: 75.879 ; accuracy: 0.748
2018-11-08 12:47:16,247:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 12:47:16,248:INFO: Epoch 3/10000
2018-11-08 12:47:51,567:INFO: - Train metrics: loss: 140.127 ; accuracy: 0.730
2018-11-08 12:47:59,847:INFO: - Eval metrics: loss: 65.350 ; accuracy: 0.760
2018-11-08 12:48:00,181:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 12:48:00,182:INFO: Epoch 4/10000
2018-11-08 12:48:35,088:INFO: - Train metrics: loss: 132.300 ; accuracy: 0.734
2018-11-08 12:48:43,637:INFO: - Eval metrics: loss: 64.044 ; accuracy: 0.755
2018-11-08 12:48:43,767:INFO: Epoch 5/10000
2018-11-08 12:49:18,801:INFO: - Train metrics: loss: 128.058 ; accuracy: 0.735
2018-11-08 12:49:26,984:INFO: - Eval metrics: loss: 60.309 ; accuracy: 0.759
2018-11-08 12:49:27,126:INFO: Epoch 6/10000
2018-11-08 12:50:01,954:INFO: - Train metrics: loss: 125.390 ; accuracy: 0.736
2018-11-08 12:50:10,605:INFO: - Eval metrics: loss: 58.026 ; accuracy: 0.764
2018-11-08 12:50:10,944:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-08 12:50:10,944:INFO: Epoch 7/10000
2018-11-08 12:50:44,309:INFO: - Train metrics: loss: 122.520 ; accuracy: 0.739
2018-11-08 12:50:52,440:INFO: - Eval metrics: loss: 57.497 ; accuracy: 0.753
2018-11-08 12:50:52,604:INFO: Epoch 8/10000
2018-11-08 12:51:26,422:INFO: - Train metrics: loss: 118.476 ; accuracy: 0.740
2018-11-08 12:51:34,673:INFO: - Eval metrics: loss: 57.312 ; accuracy: 0.759
2018-11-08 12:51:34,809:INFO: Epoch 9/10000
2018-11-08 12:52:09,273:INFO: - Train metrics: loss: 115.314 ; accuracy: 0.741
2018-11-08 12:52:17,530:INFO: - Eval metrics: loss: 60.802 ; accuracy: 0.760
2018-11-08 12:52:17,673:INFO: Epoch 10/10000
2018-11-08 12:52:52,727:INFO: - Train metrics: loss: 112.408 ; accuracy: 0.741
2018-11-08 12:53:01,458:INFO: - Eval metrics: loss: 56.281 ; accuracy: 0.762
2018-11-08 12:53:01,597:INFO: Epoch 11/10000
2018-11-08 12:53:36,438:INFO: - Train metrics: loss: 109.709 ; accuracy: 0.742
2018-11-08 12:53:44,268:INFO: - Eval metrics: loss: 56.607 ; accuracy: 0.763
2018-11-08 12:53:44,400:INFO: Epoch 12/10000
2018-11-08 12:54:20,014:INFO: - Train metrics: loss: 107.340 ; accuracy: 0.744
2018-11-08 12:54:27,871:INFO: - Eval metrics: loss: 55.500 ; accuracy: 0.766
2018-11-08 12:54:28,215:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-08 12:54:28,215:INFO: Epoch 13/10000
2018-11-08 12:55:03,594:INFO: - Train metrics: loss: 105.715 ; accuracy: 0.744
2018-11-08 12:55:12,198:INFO: - Eval metrics: loss: 56.598 ; accuracy: 0.765
2018-11-08 12:55:12,349:INFO: Epoch 14/10000
2018-11-08 12:55:47,780:INFO: - Train metrics: loss: 104.658 ; accuracy: 0.745
2018-11-08 12:55:55,986:INFO: - Eval metrics: loss: 57.495 ; accuracy: 0.765
2018-11-08 12:55:56,123:INFO: Epoch 15/10000
2018-11-08 12:56:35,240:INFO: - Train metrics: loss: 103.114 ; accuracy: 0.746
2018-11-08 12:56:43,499:INFO: - Eval metrics: loss: 55.381 ; accuracy: 0.766
2018-11-08 12:56:43,829:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-08 12:56:43,830:INFO: Epoch 16/10000
2018-11-08 12:57:18,851:INFO: - Train metrics: loss: 101.751 ; accuracy: 0.746
2018-11-08 12:57:27,120:INFO: - Eval metrics: loss: 55.820 ; accuracy: 0.767
2018-11-08 12:57:27,463:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-08 12:57:27,464:INFO: Epoch 17/10000
2018-11-08 12:58:02,615:INFO: - Train metrics: loss: 100.162 ; accuracy: 0.747
2018-11-08 12:58:10,859:INFO: - Eval metrics: loss: 56.966 ; accuracy: 0.763
2018-11-08 12:58:10,995:INFO: Epoch 18/10000
2018-11-08 12:58:48,713:INFO: - Train metrics: loss: 99.646 ; accuracy: 0.746
2018-11-08 12:58:57,000:INFO: - Eval metrics: loss: 55.439 ; accuracy: 0.766
2018-11-08 12:58:57,127:INFO: Epoch 19/10000
2018-11-08 12:59:32,011:INFO: - Train metrics: loss: 98.174 ; accuracy: 0.746
2018-11-08 12:59:40,207:INFO: - Eval metrics: loss: 55.327 ; accuracy: 0.764
2018-11-08 12:59:40,340:INFO: Epoch 20/10000
2018-11-08 13:00:15,178:INFO: - Train metrics: loss: 98.252 ; accuracy: 0.747
2018-11-08 13:00:23,421:INFO: - Eval metrics: loss: 54.898 ; accuracy: 0.761
2018-11-08 13:00:23,551:INFO: Epoch 21/10000
2018-11-08 13:00:58,864:INFO: - Train metrics: loss: 96.745 ; accuracy: 0.747
2018-11-08 13:01:07,296:INFO: - Eval metrics: loss: 54.545 ; accuracy: 0.768
2018-11-08 13:01:07,627:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-08 13:01:07,628:INFO: Epoch 22/10000
2018-11-08 13:01:42,759:INFO: - Train metrics: loss: 94.737 ; accuracy: 0.748
2018-11-08 13:01:50,941:INFO: - Eval metrics: loss: 54.053 ; accuracy: 0.761
2018-11-08 13:01:51,074:INFO: Epoch 23/10000
2018-11-08 13:02:26,325:INFO: - Train metrics: loss: 93.934 ; accuracy: 0.748
2018-11-08 13:02:34,556:INFO: - Eval metrics: loss: 54.800 ; accuracy: 0.763
2018-11-08 13:02:34,692:INFO: Epoch 24/10000
2018-11-08 13:03:08,325:INFO: - Train metrics: loss: 93.679 ; accuracy: 0.748
2018-11-08 13:03:16,692:INFO: - Eval metrics: loss: 54.459 ; accuracy: 0.764
2018-11-08 13:03:16,818:INFO: Epoch 25/10000
2018-11-08 13:03:51,998:INFO: - Train metrics: loss: 92.706 ; accuracy: 0.749
2018-11-08 13:04:00,207:INFO: - Eval metrics: loss: 53.702 ; accuracy: 0.766
2018-11-08 13:04:00,336:INFO: Epoch 26/10000
2018-11-08 13:04:39,157:INFO: - Train metrics: loss: 91.677 ; accuracy: 0.749
2018-11-08 13:04:47,364:INFO: - Eval metrics: loss: 55.487 ; accuracy: 0.762
2018-11-08 13:04:47,499:INFO: Epoch 27/10000
2018-11-08 13:05:22,630:INFO: - Train metrics: loss: 88.629 ; accuracy: 0.749
2018-11-08 13:05:30,904:INFO: - Eval metrics: loss: 54.431 ; accuracy: 0.765
2018-11-08 13:05:31,048:INFO: Epoch 28/10000
2018-11-08 13:06:05,988:INFO: - Train metrics: loss: 89.717 ; accuracy: 0.750
2018-11-08 13:06:14,174:INFO: - Eval metrics: loss: 54.180 ; accuracy: 0.773
2018-11-08 13:06:14,504:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-08 13:06:14,504:INFO: Epoch 29/10000
2018-11-08 13:06:49,679:INFO: - Train metrics: loss: 89.842 ; accuracy: 0.750
2018-11-08 13:06:57,909:INFO: - Eval metrics: loss: 53.148 ; accuracy: 0.766
2018-11-08 13:06:58,034:INFO: Epoch 30/10000
2018-11-08 13:07:33,181:INFO: - Train metrics: loss: 86.899 ; accuracy: 0.750
2018-11-08 13:07:41,465:INFO: - Eval metrics: loss: 53.834 ; accuracy: 0.764
2018-11-08 13:07:41,602:INFO: Epoch 31/10000
2018-11-08 13:08:16,714:INFO: - Train metrics: loss: 87.294 ; accuracy: 0.750
2018-11-08 13:08:24,375:INFO: - Eval metrics: loss: 53.707 ; accuracy: 0.764
2018-11-08 13:08:24,516:INFO: Epoch 32/10000
2018-11-08 13:08:59,902:INFO: - Train metrics: loss: 85.763 ; accuracy: 0.751
2018-11-08 13:09:08,106:INFO: - Eval metrics: loss: 53.171 ; accuracy: 0.767
2018-11-08 13:09:08,240:INFO: Epoch 33/10000
2018-11-08 13:09:43,141:INFO: - Train metrics: loss: 85.561 ; accuracy: 0.751
2018-11-08 13:09:51,449:INFO: - Eval metrics: loss: 53.541 ; accuracy: 0.767
2018-11-08 13:09:51,580:INFO: Epoch 34/10000
2018-11-08 13:10:26,678:INFO: - Train metrics: loss: 83.461 ; accuracy: 0.751
2018-11-08 13:10:34,937:INFO: - Eval metrics: loss: 53.006 ; accuracy: 0.771
2018-11-08 13:10:35,077:INFO: Epoch 35/10000
2018-11-08 13:11:09,952:INFO: - Train metrics: loss: 81.731 ; accuracy: 0.752
2018-11-08 13:11:18,230:INFO: - Eval metrics: loss: 53.306 ; accuracy: 0.766
2018-11-08 13:11:18,372:INFO: Epoch 36/10000
2018-11-08 13:11:50,536:INFO: - Train metrics: loss: 81.074 ; accuracy: 0.752
2018-11-08 13:11:58,572:INFO: - Eval metrics: loss: 54.449 ; accuracy: 0.763
2018-11-08 13:11:58,693:INFO: Epoch 37/10000
2018-11-08 13:12:36,037:INFO: - Train metrics: loss: 79.722 ; accuracy: 0.752
2018-11-08 13:12:44,294:INFO: - Eval metrics: loss: 54.654 ; accuracy: 0.768
2018-11-08 13:12:44,427:INFO: Epoch 38/10000
2018-11-08 13:13:18,993:INFO: - Train metrics: loss: 78.949 ; accuracy: 0.753
2018-11-08 13:13:27,171:INFO: - Eval metrics: loss: 52.847 ; accuracy: 0.770
2018-11-08 13:13:27,306:INFO: Epoch 39/10000
2018-11-08 13:14:02,366:INFO: - Train metrics: loss: 79.666 ; accuracy: 0.753
2018-11-08 13:14:10,659:INFO: - Eval metrics: loss: 55.479 ; accuracy: 0.766
2018-11-08 13:14:10,789:INFO: Epoch 40/10000
2018-11-08 13:14:45,854:INFO: - Train metrics: loss: 77.110 ; accuracy: 0.754
2018-11-08 13:14:54,281:INFO: - Eval metrics: loss: 52.613 ; accuracy: 0.768
2018-11-08 13:14:54,423:INFO: Epoch 41/10000
2018-11-08 13:15:29,800:INFO: - Train metrics: loss: 80.105 ; accuracy: 0.754
2018-11-08 13:15:38,032:INFO: - Eval metrics: loss: 53.610 ; accuracy: 0.769
2018-11-08 13:15:38,174:INFO: Epoch 42/10000
2018-11-08 13:16:12,156:INFO: - Train metrics: loss: 77.744 ; accuracy: 0.754
2018-11-08 13:16:20,386:INFO: - Eval metrics: loss: 52.548 ; accuracy: 0.767
2018-11-08 13:16:20,517:INFO: Epoch 43/10000
2018-11-08 13:16:56,048:INFO: - Train metrics: loss: 78.309 ; accuracy: 0.754
2018-11-08 13:17:04,506:INFO: - Eval metrics: loss: 52.533 ; accuracy: 0.768
2018-11-08 13:17:04,651:INFO: Epoch 44/10000
2018-11-08 13:17:39,594:INFO: - Train metrics: loss: 74.671 ; accuracy: 0.755
2018-11-08 13:17:47,725:INFO: - Eval metrics: loss: 53.265 ; accuracy: 0.769
2018-11-08 13:17:47,859:INFO: Epoch 45/10000
2018-11-08 13:18:26,527:INFO: - Train metrics: loss: 73.268 ; accuracy: 0.755
2018-11-08 13:18:34,636:INFO: - Eval metrics: loss: 53.994 ; accuracy: 0.770
2018-11-08 13:18:34,772:INFO: Epoch 46/10000
2018-11-08 13:19:07,402:INFO: - Train metrics: loss: 72.071 ; accuracy: 0.755
2018-11-08 13:19:15,818:INFO: - Eval metrics: loss: 53.182 ; accuracy: 0.767
2018-11-08 13:19:15,954:INFO: Epoch 47/10000
2018-11-08 13:19:51,079:INFO: - Train metrics: loss: 72.670 ; accuracy: 0.755
2018-11-08 13:19:59,262:INFO: - Eval metrics: loss: 52.973 ; accuracy: 0.769
2018-11-08 13:19:59,395:INFO: Epoch 48/10000
2018-11-08 13:20:42,580:INFO: Creating the datasets...
2018-11-08 13:20:52,022:INFO: - done.
2018-11-08 13:20:52,022:INFO: Creating the model...
2018-11-08 13:20:53,524:INFO: - done.
2018-11-08 13:20:53,524:INFO: Starting training for 10000 epoch(s)
2018-11-08 13:20:54,398:INFO: Epoch 1/10000
2018-11-08 13:21:24,707:INFO: - Train metrics: accuracy: 0.510 ; loss: 684.620
2018-11-08 13:21:33,015:INFO: - Eval metrics: accuracy: 0.739 ; loss: 105.853
2018-11-08 13:21:33,422:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 13:21:33,422:INFO: Epoch 2/10000
2018-11-08 13:22:02,968:INFO: - Train metrics: accuracy: 0.728 ; loss: 138.885
2018-11-08 13:22:11,274:INFO: - Eval metrics: accuracy: 0.755 ; loss: 62.790
2018-11-08 13:22:11,617:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 13:22:11,618:INFO: Epoch 3/10000
2018-11-08 13:22:41,384:INFO: - Train metrics: accuracy: 0.746 ; loss: 96.632
2018-11-08 13:22:49,690:INFO: - Eval metrics: accuracy: 0.775 ; loss: 47.981
2018-11-08 13:22:50,019:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 13:22:50,020:INFO: Epoch 4/10000
2018-11-08 13:23:19,937:INFO: - Train metrics: accuracy: 0.760 ; loss: 72.277
2018-11-08 13:23:28,712:INFO: - Eval metrics: accuracy: 0.782 ; loss: 41.551
2018-11-08 13:23:29,063:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-08 13:23:29,064:INFO: Epoch 5/10000
2018-11-08 13:23:58,894:INFO: - Train metrics: accuracy: 0.773 ; loss: 56.816
2018-11-08 13:24:07,176:INFO: - Eval metrics: accuracy: 0.784 ; loss: 36.172
2018-11-08 13:24:07,497:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-08 13:24:07,498:INFO: Epoch 6/10000
2018-11-08 13:24:37,368:INFO: - Train metrics: accuracy: 0.780 ; loss: 50.891
2018-11-08 13:24:46,141:INFO: - Eval metrics: accuracy: 0.807 ; loss: 32.109
2018-11-08 13:24:46,485:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-08 13:24:46,485:INFO: Epoch 7/10000
2018-11-08 13:25:17,880:INFO: - Train metrics: accuracy: 0.787 ; loss: 44.968
2018-11-08 13:25:26,209:INFO: - Eval metrics: accuracy: 0.796 ; loss: 29.661
2018-11-08 13:25:26,349:INFO: Epoch 8/10000
2018-11-08 13:25:56,206:INFO: - Train metrics: accuracy: 0.795 ; loss: 39.538
2018-11-08 13:26:04,965:INFO: - Eval metrics: accuracy: 0.821 ; loss: 23.221
2018-11-08 13:26:05,300:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-08 13:26:05,301:INFO: Epoch 9/10000
2018-11-08 13:26:34,942:INFO: - Train metrics: accuracy: 0.810 ; loss: 31.826
2018-11-08 13:26:43,297:INFO: - Eval metrics: accuracy: 0.827 ; loss: 19.563
2018-11-08 13:26:43,636:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-08 13:26:43,636:INFO: Epoch 10/10000
2018-11-08 13:27:13,479:INFO: - Train metrics: accuracy: 0.818 ; loss: 27.514
2018-11-08 13:27:22,313:INFO: - Eval metrics: accuracy: 0.849 ; loss: 16.004
2018-11-08 13:27:22,658:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-08 13:27:22,659:INFO: Epoch 11/10000
2018-11-08 13:27:53,817:INFO: - Train metrics: accuracy: 0.833 ; loss: 21.997
2018-11-08 13:28:02,319:INFO: - Eval metrics: accuracy: 0.854 ; loss: 15.669
2018-11-08 13:28:02,659:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-08 13:28:02,660:INFO: Epoch 12/10000
2018-11-08 13:28:32,598:INFO: - Train metrics: accuracy: 0.844 ; loss: 18.008
2018-11-08 13:28:41,337:INFO: - Eval metrics: accuracy: 0.862 ; loss: 12.014
2018-11-08 13:28:41,684:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-08 13:28:41,684:INFO: Epoch 13/10000
2018-11-08 13:29:11,318:INFO: - Train metrics: accuracy: 0.854 ; loss: 14.767
2018-11-08 13:29:19,631:INFO: - Eval metrics: accuracy: 0.878 ; loss: 10.711
2018-11-08 13:29:19,963:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-08 13:29:19,964:INFO: Epoch 14/10000
2018-11-08 13:29:49,824:INFO: - Train metrics: accuracy: 0.867 ; loss: 12.435
2018-11-08 13:29:58,203:INFO: - Eval metrics: accuracy: 0.885 ; loss: 8.553
2018-11-08 13:29:58,553:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-08 13:29:58,554:INFO: Epoch 15/10000
2018-11-08 13:30:28,363:INFO: - Train metrics: accuracy: 0.878 ; loss: 9.728
2018-11-08 13:30:36,843:INFO: - Eval metrics: accuracy: 0.887 ; loss: 6.525
2018-11-08 13:30:37,189:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-08 13:30:37,189:INFO: Epoch 16/10000
2018-11-08 13:31:06,892:INFO: - Train metrics: accuracy: 0.892 ; loss: 7.609
2018-11-08 13:31:15,213:INFO: - Eval metrics: accuracy: 0.920 ; loss: 5.028
2018-11-08 13:31:15,554:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-08 13:31:15,555:INFO: Epoch 17/10000
2018-11-08 13:31:44,892:INFO: - Train metrics: accuracy: 0.905 ; loss: 6.160
2018-11-08 13:31:53,217:INFO: - Eval metrics: accuracy: 0.921 ; loss: 3.785
2018-11-08 13:31:53,573:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-08 13:31:53,573:INFO: Epoch 18/10000
2018-11-08 13:32:23,298:INFO: - Train metrics: accuracy: 0.905 ; loss: 5.896
2018-11-08 13:32:31,583:INFO: - Eval metrics: accuracy: 0.934 ; loss: 3.481
2018-11-08 13:32:31,922:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-08 13:32:31,923:INFO: Epoch 19/10000
2018-11-08 13:33:03,711:INFO: - Train metrics: accuracy: 0.913 ; loss: 5.115
2018-11-08 13:33:12,072:INFO: - Eval metrics: accuracy: 0.932 ; loss: 3.549
2018-11-08 13:33:12,205:INFO: Epoch 20/10000
2018-11-08 13:33:41,959:INFO: - Train metrics: accuracy: 0.913 ; loss: 4.744
2018-11-08 13:33:50,255:INFO: - Eval metrics: accuracy: 0.926 ; loss: 3.385
2018-11-08 13:33:50,391:INFO: Epoch 21/10000
2018-11-08 13:34:22,250:INFO: - Train metrics: accuracy: 0.922 ; loss: 4.270
2018-11-08 13:34:30,583:INFO: - Eval metrics: accuracy: 0.909 ; loss: 4.342
2018-11-08 13:34:30,722:INFO: Epoch 22/10000
2018-11-08 13:35:00,292:INFO: - Train metrics: accuracy: 0.924 ; loss: 4.026
2018-11-08 13:35:08,643:INFO: - Eval metrics: accuracy: 0.948 ; loss: 2.621
2018-11-08 13:35:08,984:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-08 13:35:08,984:INFO: Epoch 23/10000
2018-11-08 13:35:38,727:INFO: - Train metrics: accuracy: 0.922 ; loss: 3.881
2018-11-08 13:35:47,116:INFO: - Eval metrics: accuracy: 0.943 ; loss: 2.700
2018-11-08 13:35:47,254:INFO: Epoch 24/10000
2018-11-08 13:36:18,854:INFO: - Train metrics: accuracy: 0.928 ; loss: 3.528
2018-11-08 13:36:27,136:INFO: - Eval metrics: accuracy: 0.942 ; loss: 2.313
2018-11-08 13:36:27,265:INFO: Epoch 25/10000
2018-11-08 13:36:56,982:INFO: - Train metrics: accuracy: 0.930 ; loss: 3.331
2018-11-08 13:37:05,322:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1.857
2018-11-08 13:37:05,668:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-08 13:37:05,668:INFO: Epoch 26/10000
2018-11-08 13:37:37,684:INFO: - Train metrics: accuracy: 0.926 ; loss: 3.136
2018-11-08 13:37:45,966:INFO: - Eval metrics: accuracy: 0.952 ; loss: 2.127
2018-11-08 13:37:46,107:INFO: Epoch 27/10000
2018-11-08 13:38:16,185:INFO: - Train metrics: accuracy: 0.929 ; loss: 2.961
2018-11-08 13:38:24,518:INFO: - Eval metrics: accuracy: 0.951 ; loss: 2.067
2018-11-08 13:38:24,654:INFO: Epoch 28/10000
2018-11-08 13:38:56,158:INFO: - Train metrics: accuracy: 0.933 ; loss: 2.809
2018-11-08 13:39:04,486:INFO: - Eval metrics: accuracy: 0.954 ; loss: 2.081
2018-11-08 13:39:04,832:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-08 13:39:04,833:INFO: Epoch 29/10000
2018-11-08 13:39:34,737:INFO: - Train metrics: accuracy: 0.927 ; loss: 2.743
2018-11-08 13:39:43,017:INFO: - Eval metrics: accuracy: 0.957 ; loss: 1.698
2018-11-08 13:39:43,354:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-08 13:39:43,354:INFO: Epoch 30/10000
2018-11-08 13:40:13,335:INFO: - Train metrics: accuracy: 0.934 ; loss: 2.543
2018-11-08 13:40:21,620:INFO: - Eval metrics: accuracy: 0.955 ; loss: 1.516
2018-11-08 13:40:21,751:INFO: Epoch 31/10000
2018-11-08 13:40:53,205:INFO: - Train metrics: accuracy: 0.932 ; loss: 2.522
2018-11-08 13:41:01,606:INFO: - Eval metrics: accuracy: 0.941 ; loss: 1.544
2018-11-08 13:41:01,741:INFO: Epoch 32/10000
2018-11-08 13:41:31,518:INFO: - Train metrics: accuracy: 0.932 ; loss: 2.446
2018-11-08 13:41:39,838:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1.556
2018-11-08 13:41:39,976:INFO: Epoch 33/10000
2018-11-08 13:42:09,893:INFO: - Train metrics: accuracy: 0.937 ; loss: 2.164
2018-11-08 13:42:18,199:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1.593
2018-11-08 13:42:18,326:INFO: Epoch 34/10000
2018-11-08 13:42:47,142:INFO: - Train metrics: accuracy: 0.937 ; loss: 1.941
2018-11-08 13:42:55,756:INFO: - Eval metrics: accuracy: 0.945 ; loss: 1.640
2018-11-08 13:42:55,921:INFO: Epoch 35/10000
2018-11-08 13:43:26,925:INFO: - Train metrics: accuracy: 0.934 ; loss: 1.960
2018-11-08 13:43:35,687:INFO: - Eval metrics: accuracy: 0.961 ; loss: 1.246
2018-11-08 13:43:36,049:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-35
2018-11-08 13:43:36,049:INFO: Epoch 36/10000
2018-11-08 13:44:07,521:INFO: - Train metrics: accuracy: 0.938 ; loss: 1.847
2018-11-08 13:44:15,978:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1.483
2018-11-08 13:44:16,116:INFO: Epoch 37/10000
2018-11-08 13:44:45,985:INFO: - Train metrics: accuracy: 0.941 ; loss: 1.652
2018-11-08 13:44:54,312:INFO: - Eval metrics: accuracy: 0.965 ; loss: 0.991
2018-11-08 13:44:54,652:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-37
2018-11-08 13:44:54,666:INFO: Epoch 38/10000
2018-11-08 13:45:24,644:INFO: - Train metrics: accuracy: 0.938 ; loss: 1.661
2018-11-08 13:45:33,070:INFO: - Eval metrics: accuracy: 0.963 ; loss: 1.102
2018-11-08 13:45:33,206:INFO: Epoch 39/10000
2018-11-08 13:46:04,500:INFO: - Train metrics: accuracy: 0.940 ; loss: 1.457
2018-11-08 13:46:12,853:INFO: - Eval metrics: accuracy: 0.956 ; loss: 1.211
2018-11-08 13:46:12,987:INFO: Epoch 40/10000
2018-11-08 13:46:42,689:INFO: - Train metrics: accuracy: 0.942 ; loss: 1.418
2018-11-08 13:46:51,079:INFO: - Eval metrics: accuracy: 0.965 ; loss: 1.066
2018-11-08 13:46:51,218:INFO: Epoch 41/10000
2018-11-08 13:47:21,854:INFO: - Train metrics: accuracy: 0.946 ; loss: 1.220
2018-11-08 13:47:30,303:INFO: - Eval metrics: accuracy: 0.959 ; loss: 1.464
2018-11-08 13:47:30,443:INFO: Epoch 42/10000
2018-11-08 13:48:00,469:INFO: - Train metrics: accuracy: 0.942 ; loss: 1.217
2018-11-08 13:48:09,058:INFO: - Eval metrics: accuracy: 0.966 ; loss: 0.685
2018-11-08 13:48:09,449:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-42
2018-11-08 13:48:09,449:INFO: Epoch 43/10000
2018-11-08 13:48:39,845:INFO: - Train metrics: accuracy: 0.948 ; loss: 1.000
2018-11-08 13:48:48,212:INFO: - Eval metrics: accuracy: 0.964 ; loss: 0.864
2018-11-08 13:48:48,351:INFO: Epoch 44/10000
2018-11-08 13:49:19,527:INFO: - Train metrics: accuracy: 0.948 ; loss: 0.995
2018-11-08 13:49:27,872:INFO: - Eval metrics: accuracy: 0.968 ; loss: 0.734
2018-11-08 13:49:28,229:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-44
2018-11-08 13:49:28,229:INFO: Epoch 45/10000
2018-11-08 13:49:58,062:INFO: - Train metrics: accuracy: 0.944 ; loss: 1.091
2018-11-08 13:50:06,574:INFO: - Eval metrics: accuracy: 0.967 ; loss: 0.735
2018-11-08 13:50:06,712:INFO: Epoch 46/10000
2018-11-08 13:50:37,053:INFO: - Train metrics: accuracy: 0.950 ; loss: 0.822
2018-11-08 13:50:45,436:INFO: - Eval metrics: accuracy: 0.970 ; loss: 0.487
2018-11-08 13:50:45,783:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-46
2018-11-08 13:50:45,784:INFO: Epoch 47/10000
2018-11-08 13:51:17,509:INFO: - Train metrics: accuracy: 0.945 ; loss: 0.849
2018-11-08 13:51:25,843:INFO: - Eval metrics: accuracy: 0.965 ; loss: 0.573
2018-11-08 13:51:25,984:INFO: Epoch 48/10000
2018-11-08 13:51:55,785:INFO: - Train metrics: accuracy: 0.949 ; loss: 0.790
2018-11-08 13:52:04,173:INFO: - Eval metrics: accuracy: 0.966 ; loss: 0.713
2018-11-08 13:52:04,310:INFO: Epoch 49/10000
2018-11-08 13:52:34,308:INFO: - Train metrics: accuracy: 0.940 ; loss: 1.064
2018-11-08 13:52:42,712:INFO: - Eval metrics: accuracy: 0.963 ; loss: 0.628
2018-11-08 13:52:42,844:INFO: Epoch 50/10000
2018-11-08 13:53:12,698:INFO: - Train metrics: accuracy: 0.946 ; loss: 0.758
2018-11-08 13:53:21,119:INFO: - Eval metrics: accuracy: 0.959 ; loss: 1.077
2018-11-08 13:53:21,254:INFO: Epoch 51/10000
2018-11-08 13:53:51,281:INFO: - Train metrics: accuracy: 0.947 ; loss: 0.777
2018-11-08 13:53:59,659:INFO: - Eval metrics: accuracy: 0.971 ; loss: 0.613
2018-11-08 13:54:00,030:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-51
2018-11-08 13:54:00,031:INFO: Epoch 52/10000
2018-11-08 13:54:29,193:INFO: - Train metrics: accuracy: 0.951 ; loss: 0.629
2018-11-08 13:54:37,606:INFO: - Eval metrics: accuracy: 0.974 ; loss: 0.326
2018-11-08 13:54:37,947:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-52
2018-11-08 13:54:37,948:INFO: Epoch 53/10000
2018-11-08 13:55:06,583:INFO: - Train metrics: accuracy: 0.947 ; loss: 0.682
2018-11-08 13:55:14,929:INFO: - Eval metrics: accuracy: 0.967 ; loss: 0.450
2018-11-08 13:55:15,058:INFO: Epoch 54/10000
2018-11-08 13:55:45,967:INFO: - Train metrics: accuracy: 0.953 ; loss: 0.611
2018-11-08 13:55:54,400:INFO: - Eval metrics: accuracy: 0.963 ; loss: 0.609
2018-11-08 13:55:54,539:INFO: Epoch 55/10000
2018-11-08 13:56:24,998:INFO: - Train metrics: accuracy: 0.949 ; loss: 0.603
2018-11-08 13:56:33,429:INFO: - Eval metrics: accuracy: 0.973 ; loss: 0.445
2018-11-08 13:56:33,564:INFO: Epoch 56/10000
2018-11-08 13:57:03,881:INFO: - Train metrics: accuracy: 0.954 ; loss: 0.515
2018-11-08 13:57:12,398:INFO: - Eval metrics: accuracy: 0.968 ; loss: 0.284
2018-11-08 13:57:12,544:INFO: Epoch 57/10000
2018-11-08 13:57:44,234:INFO: - Train metrics: accuracy: 0.952 ; loss: 0.508
2018-11-08 13:57:52,544:INFO: - Eval metrics: accuracy: 0.973 ; loss: 0.558
2018-11-08 13:57:52,673:INFO: Epoch 58/10000
2018-11-08 13:58:22,491:INFO: - Train metrics: accuracy: 0.952 ; loss: 0.599
2018-11-08 13:58:30,930:INFO: - Eval metrics: accuracy: 0.942 ; loss: 0.706
2018-11-08 13:58:31,064:INFO: Epoch 59/10000
2018-11-08 13:59:01,318:INFO: - Train metrics: accuracy: 0.954 ; loss: 0.482
2018-11-08 13:59:09,623:INFO: - Eval metrics: accuracy: 0.957 ; loss: 1.126
2018-11-08 13:59:09,761:INFO: Epoch 60/10000
2018-11-08 13:59:40,265:INFO: - Train metrics: accuracy: 0.950 ; loss: 0.564
2018-11-08 13:59:48,594:INFO: - Eval metrics: accuracy: 0.977 ; loss: 0.169
2018-11-08 13:59:48,970:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-60
2018-11-08 13:59:48,970:INFO: Epoch 61/10000
2018-11-08 14:00:18,918:INFO: - Train metrics: accuracy: 0.951 ; loss: 0.483
2018-11-08 14:00:27,347:INFO: - Eval metrics: accuracy: 0.959 ; loss: 0.417
2018-11-08 14:00:27,478:INFO: Epoch 62/10000
2018-11-08 14:00:57,511:INFO: - Train metrics: accuracy: 0.953 ; loss: 0.415
2018-11-08 14:01:05,966:INFO: - Eval metrics: accuracy: 0.970 ; loss: 0.393
2018-11-08 14:01:06,095:INFO: Epoch 63/10000
2018-11-08 14:01:36,063:INFO: - Train metrics: accuracy: 0.952 ; loss: 0.541
2018-11-08 14:01:44,352:INFO: - Eval metrics: accuracy: 0.976 ; loss: 0.225
2018-11-08 14:01:44,491:INFO: Epoch 64/10000
2018-11-08 14:02:13,648:INFO: - Train metrics: accuracy: 0.958 ; loss: 0.350
2018-11-08 14:02:22,018:INFO: - Eval metrics: accuracy: 0.965 ; loss: 0.446
2018-11-08 14:02:22,168:INFO: Epoch 65/10000
2018-11-08 14:02:52,433:INFO: - Train metrics: accuracy: 0.948 ; loss: 0.644
2018-11-08 14:03:00,997:INFO: - Eval metrics: accuracy: 0.965 ; loss: 1.287
2018-11-08 14:03:01,137:INFO: Epoch 66/10000
2018-11-08 14:03:31,120:INFO: - Train metrics: accuracy: 0.955 ; loss: 0.497
2018-11-08 14:03:39,507:INFO: - Eval metrics: accuracy: 0.973 ; loss: 0.548
2018-11-08 14:03:39,649:INFO: Epoch 67/10000
2018-11-08 14:04:11,078:INFO: - Train metrics: accuracy: 0.959 ; loss: 0.312
2018-11-08 14:04:19,424:INFO: - Eval metrics: accuracy: 0.955 ; loss: 1.109
2018-11-08 14:04:19,561:INFO: Epoch 68/10000
2018-11-08 14:04:49,813:INFO: - Train metrics: accuracy: 0.953 ; loss: 0.509
2018-11-08 14:04:58,090:INFO: - Eval metrics: accuracy: 0.971 ; loss: 0.638
2018-11-08 14:04:58,227:INFO: Epoch 69/10000
2018-11-08 14:05:29,558:INFO: - Train metrics: accuracy: 0.955 ; loss: 0.359
2018-11-08 14:05:37,880:INFO: - Eval metrics: accuracy: 0.970 ; loss: 0.315
2018-11-08 14:05:38,029:INFO: Epoch 70/10000
2018-11-08 14:06:07,949:INFO: - Train metrics: accuracy: 0.954 ; loss: 0.359
2018-11-08 14:06:16,303:INFO: - Eval metrics: accuracy: 0.977 ; loss: 0.363
2018-11-08 14:06:16,422:INFO: Epoch 71/10000
2018-11-08 14:06:46,573:INFO: - Train metrics: accuracy: 0.957 ; loss: 0.363
2018-11-08 14:06:54,538:INFO: - Eval metrics: accuracy: 0.977 ; loss: 0.350
2018-11-08 14:06:54,669:INFO: Epoch 72/10000
2018-11-08 14:07:24,667:INFO: - Train metrics: accuracy: 0.954 ; loss: 0.388
2018-11-08 14:07:32,980:INFO: - Eval metrics: accuracy: 0.978 ; loss: 0.145
2018-11-08 14:07:33,350:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-72
2018-11-08 14:07:33,351:INFO: Epoch 73/10000
2018-11-08 14:08:04,352:INFO: - Train metrics: accuracy: 0.949 ; loss: 0.630
2018-11-08 14:08:12,044:INFO: - Eval metrics: accuracy: 0.970 ; loss: 0.271
2018-11-08 14:08:12,164:INFO: Epoch 74/10000
2018-11-08 14:08:39,010:INFO: - Train metrics: accuracy: 0.955 ; loss: 0.460
2018-11-08 14:08:46,876:INFO: - Eval metrics: accuracy: 0.976 ; loss: 0.244
2018-11-08 14:08:47,106:INFO: Epoch 75/10000
2018-11-08 14:09:20,107:INFO: - Train metrics: accuracy: 0.958 ; loss: 0.360
2018-11-08 14:09:29,065:INFO: - Eval metrics: accuracy: 0.971 ; loss: 0.225
2018-11-08 14:09:29,375:INFO: Epoch 76/10000
2018-11-08 14:10:00,326:INFO: - Train metrics: accuracy: 0.954 ; loss: 0.455
2018-11-08 14:10:08,754:INFO: - Eval metrics: accuracy: 0.968 ; loss: 0.456
2018-11-08 14:10:08,927:INFO: Epoch 77/10000
2018-11-08 14:10:39,063:INFO: - Train metrics: accuracy: 0.954 ; loss: 0.389
2018-11-08 14:10:47,419:INFO: - Eval metrics: accuracy: 0.960 ; loss: 0.881
2018-11-08 14:10:47,564:INFO: Epoch 78/10000
2018-11-08 14:11:17,508:INFO: - Train metrics: accuracy: 0.955 ; loss: 0.441
2018-11-08 14:11:25,872:INFO: - Eval metrics: accuracy: 0.955 ; loss: 1.110
2018-11-08 14:11:26,010:INFO: Epoch 79/10000
2018-11-08 14:11:54,753:INFO: - Train metrics: accuracy: 0.953 ; loss: 0.482
2018-11-08 14:12:03,060:INFO: - Eval metrics: accuracy: 0.967 ; loss: 0.298
2018-11-08 14:12:03,200:INFO: Epoch 80/10000
2018-11-08 14:12:34,324:INFO: - Train metrics: accuracy: 0.960 ; loss: 0.291
2018-11-08 14:12:42,639:INFO: - Eval metrics: accuracy: 0.975 ; loss: 0.259
2018-11-08 14:12:42,775:INFO: Epoch 81/10000
2018-11-08 14:13:12,508:INFO: - Train metrics: accuracy: 0.959 ; loss: 0.266
2018-11-08 14:13:20,833:INFO: - Eval metrics: accuracy: 0.979 ; loss: 0.338
2018-11-08 14:13:21,200:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-81
2018-11-08 14:13:21,200:INFO: Epoch 82/10000
2018-11-08 14:13:51,256:INFO: - Train metrics: accuracy: 0.960 ; loss: 0.252
2018-11-08 14:13:59,526:INFO: - Eval metrics: accuracy: 0.972 ; loss: 0.440
2018-11-08 14:13:59,666:INFO: Epoch 83/10000
2018-11-08 14:14:29,808:INFO: - Train metrics: accuracy: 0.958 ; loss: 0.288
2018-11-08 14:14:38,189:INFO: - Eval metrics: accuracy: 0.975 ; loss: 0.191
2018-11-08 14:14:38,328:INFO: Epoch 84/10000
2018-11-08 14:15:08,360:INFO: - Train metrics: accuracy: 0.954 ; loss: 0.328
2018-11-08 14:15:16,643:INFO: - Eval metrics: accuracy: 0.963 ; loss: 1.217
2018-11-08 14:15:16,786:INFO: Epoch 85/10000
2018-11-08 14:15:46,983:INFO: - Train metrics: accuracy: 0.956 ; loss: 0.452
2018-11-08 14:15:55,402:INFO: - Eval metrics: accuracy: 0.972 ; loss: 0.370
2018-11-08 14:15:55,546:INFO: Epoch 86/10000
2018-11-08 14:16:25,587:INFO: - Train metrics: accuracy: 0.957 ; loss: 0.381
2018-11-08 14:16:33,767:INFO: - Eval metrics: accuracy: 0.955 ; loss: 0.606
2018-11-08 14:16:33,900:INFO: Epoch 87/10000
2018-11-08 14:17:03,347:INFO: - Train metrics: accuracy: 0.956 ; loss: 0.347
2018-11-08 14:17:11,731:INFO: - Eval metrics: accuracy: 0.971 ; loss: 0.329
2018-11-08 14:17:11,873:INFO: Epoch 88/10000
2018-11-08 14:17:41,907:INFO: - Train metrics: accuracy: 0.956 ; loss: 0.327
2018-11-08 14:17:50,295:INFO: - Eval metrics: accuracy: 0.966 ; loss: 0.253
2018-11-08 14:17:50,438:INFO: Epoch 89/10000
2018-11-08 14:18:20,361:INFO: - Train metrics: accuracy: 0.958 ; loss: 0.294
2018-11-08 14:18:28,571:INFO: - Eval metrics: accuracy: 0.976 ; loss: 0.253
2018-11-08 14:18:28,699:INFO: Epoch 90/10000
2018-11-08 14:18:58,551:INFO: - Train metrics: accuracy: 0.960 ; loss: 0.326
2018-11-08 14:19:06,933:INFO: - Eval metrics: accuracy: 0.976 ; loss: 0.187
2018-11-08 14:19:07,086:INFO: Epoch 91/10000
2018-11-08 14:19:36,413:INFO: - Train metrics: accuracy: 0.960 ; loss: 0.316
2018-11-08 14:19:44,988:INFO: - Eval metrics: accuracy: 0.944 ; loss: 3.075
2018-11-08 14:19:45,119:INFO: Epoch 92/10000
2018-11-08 14:20:15,106:INFO: - Train metrics: accuracy: 0.958 ; loss: 0.424
2018-11-08 14:20:23,481:INFO: - Eval metrics: accuracy: 0.981 ; loss: 0.099
2018-11-08 14:20:23,835:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-92
2018-11-08 14:20:23,835:INFO: Epoch 93/10000
2018-11-08 14:20:55,082:INFO: - Train metrics: accuracy: 0.958 ; loss: 0.272
2018-11-08 14:21:03,463:INFO: - Eval metrics: accuracy: 0.976 ; loss: 0.195
2018-11-08 14:21:03,595:INFO: Epoch 94/10000
2018-11-08 14:21:35,541:INFO: - Train metrics: accuracy: 0.960 ; loss: 0.295
2018-11-08 14:21:43,926:INFO: - Eval metrics: accuracy: 0.977 ; loss: 0.150
2018-11-08 14:21:44,066:INFO: Epoch 95/10000
2018-11-08 14:22:14,087:INFO: - Train metrics: accuracy: 0.957 ; loss: 0.320
2018-11-08 14:22:22,637:INFO: - Eval metrics: accuracy: 0.973 ; loss: 0.238
2018-11-08 14:22:22,777:INFO: Epoch 96/10000
2018-11-08 14:22:53,155:INFO: - Train metrics: accuracy: 0.957 ; loss: 0.347
2018-11-08 14:23:01,303:INFO: - Eval metrics: accuracy: 0.978 ; loss: 0.160
2018-11-08 14:23:01,446:INFO: Epoch 97/10000
2018-11-08 14:23:27,758:INFO: - Train metrics: accuracy: 0.959 ; loss: 0.239
2018-11-08 14:23:36,226:INFO: - Eval metrics: accuracy: 0.979 ; loss: 0.132
2018-11-08 14:23:36,357:INFO: Epoch 98/10000
2018-11-08 14:25:07,303:INFO: Creating the datasets...
2018-11-08 14:25:17,947:INFO: - done.
2018-11-08 14:25:17,947:INFO: Creating the model...
2018-11-08 14:25:19,800:INFO: - done.
2018-11-08 14:25:19,800:INFO: Starting training for 10000 epoch(s)
2018-11-08 14:25:20,771:INFO: Epoch 1/10000
2018-11-08 14:25:53,333:INFO: - Train metrics: loss: 640.576 ; accuracy: 0.551
2018-11-08 14:26:02,039:INFO: - Eval metrics: loss: 82.281 ; accuracy: 0.750
2018-11-08 14:26:02,485:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 14:26:02,486:INFO: Epoch 2/10000
2018-11-08 14:26:34,332:INFO: - Train metrics: loss: 136.316 ; accuracy: 0.728
2018-11-08 14:26:42,752:INFO: - Eval metrics: loss: 63.182 ; accuracy: 0.757
2018-11-08 14:26:43,118:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 14:26:43,118:INFO: Epoch 3/10000
2018-11-08 14:27:14,741:INFO: - Train metrics: loss: 99.474 ; accuracy: 0.746
2018-11-08 14:27:23,161:INFO: - Eval metrics: loss: 48.631 ; accuracy: 0.775
2018-11-08 14:27:23,555:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 14:27:23,555:INFO: Epoch 4/10000
2018-11-08 14:27:54,374:INFO: - Train metrics: loss: 73.149 ; accuracy: 0.760
2018-11-08 14:28:02,728:INFO: - Eval metrics: loss: 40.938 ; accuracy: 0.789
2018-11-08 14:28:03,105:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-08 14:28:03,105:INFO: Epoch 5/10000
2018-11-08 14:28:33,481:INFO: - Train metrics: loss: 57.939 ; accuracy: 0.774
2018-11-08 14:28:40,277:INFO: - Eval metrics: loss: 39.924 ; accuracy: 0.786
2018-11-08 14:28:40,394:INFO: Epoch 6/10000
2018-11-08 14:29:11,291:INFO: - Train metrics: loss: 49.149 ; accuracy: 0.782
2018-11-08 14:29:20,149:INFO: - Eval metrics: loss: 32.361 ; accuracy: 0.811
2018-11-08 14:29:20,526:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-08 14:29:20,526:INFO: Epoch 7/10000
2018-11-08 14:29:52,144:INFO: - Train metrics: loss: 43.890 ; accuracy: 0.791
2018-11-08 14:30:00,615:INFO: - Eval metrics: loss: 26.279 ; accuracy: 0.817
2018-11-08 14:30:01,021:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-08 14:30:01,022:INFO: Epoch 8/10000
2018-11-08 14:30:34,773:INFO: - Train metrics: loss: 35.389 ; accuracy: 0.805
2018-11-08 14:30:43,437:INFO: - Eval metrics: loss: 23.040 ; accuracy: 0.822
2018-11-08 14:30:43,777:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-08 14:30:43,777:INFO: Epoch 9/10000
2018-11-08 14:31:14,508:INFO: - Train metrics: loss: 29.526 ; accuracy: 0.818
2018-11-08 14:31:34,856:INFO: Creating the datasets...
2018-11-08 14:31:44,652:INFO: Creating the datasets...
2018-11-08 14:31:52,260:INFO: - done.
2018-11-08 14:31:52,260:INFO: Creating the model...
2018-11-08 14:31:54,076:INFO: - done.
2018-11-08 14:31:54,076:INFO: Starting training for 10000 epoch(s)
2018-11-08 14:31:55,030:INFO: Epoch 1/10000
2018-11-08 14:32:28,897:INFO: - Train metrics: loss: 728.371 ; accuracy: 0.509
2018-11-08 14:32:37,437:INFO: - Eval metrics: loss: 109.030 ; accuracy: 0.721
2018-11-08 14:32:37,868:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 14:32:37,869:INFO: Epoch 2/10000
2018-11-08 14:33:10,700:INFO: - Train metrics: loss: 145.046 ; accuracy: 0.725
2018-11-08 14:33:18,978:INFO: - Eval metrics: loss: 65.212 ; accuracy: 0.762
2018-11-08 14:33:19,330:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 14:33:19,331:INFO: Epoch 3/10000
2018-11-08 14:33:52,234:INFO: - Train metrics: loss: 104.075 ; accuracy: 0.744
2018-11-08 14:34:00,588:INFO: - Eval metrics: loss: 70.097 ; accuracy: 0.751
2018-11-08 14:34:00,740:INFO: Epoch 4/10000
2018-11-08 14:34:33,458:INFO: - Train metrics: loss: 77.273 ; accuracy: 0.759
2018-11-08 14:34:42,230:INFO: - Eval metrics: loss: 41.450 ; accuracy: 0.786
2018-11-08 14:34:42,597:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-08 14:34:42,598:INFO: Epoch 5/10000
2018-11-08 14:35:15,652:INFO: - Train metrics: loss: 60.094 ; accuracy: 0.772
2018-11-08 14:35:24,050:INFO: - Eval metrics: loss: 32.718 ; accuracy: 0.799
2018-11-08 14:35:24,411:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-08 14:35:24,412:INFO: Epoch 6/10000
2018-11-08 14:35:56,997:INFO: - Train metrics: loss: 44.765 ; accuracy: 0.790
2018-11-08 14:36:05,740:INFO: - Eval metrics: loss: 25.362 ; accuracy: 0.795
2018-11-08 14:36:05,894:INFO: Epoch 7/10000
2018-11-08 14:36:40,156:INFO: - Train metrics: loss: 36.104 ; accuracy: 0.804
2018-11-08 14:36:48,482:INFO: - Eval metrics: loss: 19.747 ; accuracy: 0.831
2018-11-08 14:36:48,838:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-08 14:36:48,839:INFO: Epoch 8/10000
2018-11-08 14:37:22,393:INFO: - Train metrics: loss: 30.385 ; accuracy: 0.817
2018-11-08 14:37:30,811:INFO: - Eval metrics: loss: 24.521 ; accuracy: 0.831
2018-11-08 14:37:30,943:INFO: Epoch 9/10000
2018-11-08 14:37:46,432:INFO: Creating the datasets...
2018-11-08 14:37:52,875:INFO: - done.
2018-11-08 14:37:52,875:INFO: Creating the model...
2018-11-08 14:37:54,661:INFO: - done.
2018-11-08 14:37:54,662:INFO: Starting training for 10000 epoch(s)
2018-11-08 14:37:54,772:INFO: Restoring parameters from experiments/best_weights
2018-11-08 14:37:54,815:INFO: Restoring parameters from experiments/best_weights/after-epoch-7
2018-11-08 14:37:55,634:INFO: Epoch 8/10007
2018-11-08 14:38:29,466:INFO: - Train metrics: accuracy: 0.820 ; loss: 29.440
2018-11-08 14:38:37,865:INFO: - Eval metrics: accuracy: 0.844 ; loss: 16.206
2018-11-08 14:38:38,280:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-08 14:38:38,281:INFO: Epoch 9/10007
2018-11-08 14:39:10,485:INFO: - Train metrics: accuracy: 0.832 ; loss: 24.734
2018-11-08 14:39:18,920:INFO: - Eval metrics: accuracy: 0.847 ; loss: 15.307
2018-11-08 14:39:19,280:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-08 14:39:19,281:INFO: Epoch 10/10007
2018-11-08 14:39:52,092:INFO: - Train metrics: accuracy: 0.841 ; loss: 21.165
2018-11-08 14:40:00,553:INFO: - Eval metrics: accuracy: 0.867 ; loss: 12.047
2018-11-08 14:40:00,931:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-08 14:40:00,932:INFO: Epoch 11/10007
2018-11-08 14:40:34,314:INFO: - Train metrics: accuracy: 0.850 ; loss: 17.688
2018-11-08 14:40:43,016:INFO: - Eval metrics: accuracy: 0.872 ; loss: 10.187
2018-11-08 14:40:43,377:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-08 14:40:43,377:INFO: Epoch 12/10007
2018-11-08 14:41:01,907:INFO: Creating the datasets...
2018-11-08 14:41:07,227:INFO: - done.
2018-11-08 14:41:07,228:INFO: Creating the model...
2018-11-08 14:41:09,089:INFO: - done.
2018-11-08 14:41:09,090:INFO: Starting training for 10000 epoch(s)
2018-11-08 14:41:09,932:INFO: Epoch 1/10000
2018-11-08 14:41:44,053:INFO: - Train metrics: loss: 725.457 ; accuracy: 0.517
2018-11-08 14:41:52,431:INFO: - Eval metrics: loss: 102.659 ; accuracy: 0.736
2018-11-08 14:41:52,859:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 14:41:52,860:INFO: Epoch 2/10000
2018-11-08 14:42:26,031:INFO: - Train metrics: loss: 139.144 ; accuracy: 0.728
2018-11-08 14:42:34,451:INFO: - Eval metrics: loss: 64.351 ; accuracy: 0.766
2018-11-08 14:42:34,802:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 14:42:34,802:INFO: Epoch 3/10000
2018-11-08 14:43:07,672:INFO: - Train metrics: loss: 101.851 ; accuracy: 0.744
2018-11-08 14:43:16,144:INFO: - Eval metrics: loss: 50.541 ; accuracy: 0.773
2018-11-08 14:43:16,515:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 14:43:16,515:INFO: Epoch 4/10000
2018-11-08 14:43:49,757:INFO: - Train metrics: loss: 70.451 ; accuracy: 0.763
2018-11-08 14:43:57,962:INFO: - Eval metrics: loss: 44.095 ; accuracy: 0.791
2018-11-08 14:43:58,372:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-08 14:43:58,373:INFO: Epoch 5/10000
2018-11-08 14:44:33,200:INFO: - Train metrics: loss: 59.612 ; accuracy: 0.773
2018-11-08 14:44:41,662:INFO: - Eval metrics: loss: 40.017 ; accuracy: 0.781
2018-11-08 14:44:41,811:INFO: Epoch 6/10000
2018-11-08 14:45:15,521:INFO: - Train metrics: loss: 49.498 ; accuracy: 0.785
2018-11-08 14:45:24,416:INFO: - Eval metrics: loss: 35.248 ; accuracy: 0.803
2018-11-08 14:45:24,782:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-08 14:45:24,793:INFO: Epoch 7/10000
2018-11-08 14:45:58,974:INFO: - Train metrics: loss: 39.485 ; accuracy: 0.799
2018-11-08 14:46:07,427:INFO: - Eval metrics: loss: 21.222 ; accuracy: 0.829
2018-11-08 14:46:07,786:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-08 14:46:07,786:INFO: Epoch 8/10000
2018-11-08 14:46:42,271:INFO: - Train metrics: loss: 31.161 ; accuracy: 0.814
2018-11-08 14:46:50,672:INFO: - Eval metrics: loss: 21.745 ; accuracy: 0.828
2018-11-08 14:46:50,786:INFO: Epoch 9/10000
2018-11-08 14:47:24,689:INFO: - Train metrics: loss: 26.373 ; accuracy: 0.826
2018-11-08 14:47:33,132:INFO: - Eval metrics: loss: 15.576 ; accuracy: 0.840
2018-11-08 14:47:33,492:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-08 14:47:33,492:INFO: Epoch 10/10000
2018-11-08 14:48:06,823:INFO: - Train metrics: loss: 22.138 ; accuracy: 0.835
2018-11-08 14:48:15,690:INFO: - Eval metrics: loss: 12.749 ; accuracy: 0.862
2018-11-08 14:48:16,058:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-08 14:48:16,058:INFO: Epoch 11/10000
2018-11-08 14:48:50,179:INFO: - Train metrics: loss: 18.532 ; accuracy: 0.845
2018-11-08 14:48:58,699:INFO: - Eval metrics: loss: 10.867 ; accuracy: 0.870
2018-11-08 14:48:59,065:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-08 14:48:59,066:INFO: Epoch 12/10000
2018-11-08 14:49:32,656:INFO: - Train metrics: loss: 15.600 ; accuracy: 0.852
2018-11-08 14:49:41,603:INFO: - Eval metrics: loss: 8.839 ; accuracy: 0.871
2018-11-08 14:49:41,967:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-08 14:49:41,967:INFO: Epoch 13/10000
2018-11-08 14:50:17,292:INFO: - Train metrics: loss: 12.442 ; accuracy: 0.867
2018-11-08 14:50:25,739:INFO: - Eval metrics: loss: 8.123 ; accuracy: 0.875
2018-11-08 14:50:26,086:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-08 14:50:26,087:INFO: Epoch 14/10000
2018-11-08 14:50:59,495:INFO: - Train metrics: loss: 10.149 ; accuracy: 0.876
2018-11-08 14:51:08,136:INFO: - Eval metrics: loss: 5.907 ; accuracy: 0.904
2018-11-08 14:51:08,493:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-08 14:51:08,493:INFO: Epoch 15/10000
2018-11-08 14:51:42,334:INFO: - Train metrics: loss: 8.772 ; accuracy: 0.882
2018-11-08 14:51:50,802:INFO: - Eval metrics: loss: 11.206 ; accuracy: 0.866
2018-11-08 14:51:50,926:INFO: Epoch 16/10000
2018-11-08 14:52:24,113:INFO: - Train metrics: loss: 7.482 ; accuracy: 0.894
2018-11-08 14:52:32,523:INFO: - Eval metrics: loss: 4.438 ; accuracy: 0.918
2018-11-08 14:52:32,884:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-08 14:52:32,884:INFO: Epoch 17/10000
2018-11-08 14:53:06,019:INFO: - Train metrics: loss: 6.508 ; accuracy: 0.897
2018-11-08 14:53:14,022:INFO: - Eval metrics: loss: 4.575 ; accuracy: 0.905
2018-11-08 14:53:14,167:INFO: Epoch 18/10000
2018-11-08 14:54:13,732:INFO: Creating the datasets...
2018-11-08 14:54:48,713:INFO: - done.
2018-11-08 14:54:48,713:INFO: Creating the model...
2018-11-08 14:58:01,670:INFO: Creating the datasets...
2018-11-08 14:58:04,597:INFO: - done.
2018-11-08 14:58:04,597:INFO: Creating the model...
2018-11-08 14:58:43,923:INFO: Creating the datasets...
2018-11-08 14:58:46,766:INFO: - done.
2018-11-08 14:58:46,766:INFO: Creating the model...
2018-11-08 14:59:53,161:INFO: Creating the datasets...
2018-11-08 14:59:55,971:INFO: - done.
2018-11-08 14:59:55,971:INFO: Creating the model...
2018-11-08 15:00:07,433:INFO: Creating the datasets...
2018-11-08 15:00:10,204:INFO: - done.
2018-11-08 15:00:10,204:INFO: Creating the model...
2018-11-08 15:00:36,302:INFO: Creating the datasets...
2018-11-08 15:00:39,138:INFO: - done.
2018-11-08 15:00:39,138:INFO: Creating the model...
2018-11-08 15:02:15,392:INFO: Creating the datasets...
2018-11-08 15:02:18,165:INFO: - done.
2018-11-08 15:02:18,165:INFO: Creating the model...
2018-11-08 15:02:19,757:INFO: - done.
2018-11-08 15:02:19,757:INFO: Starting training for 10000 epoch(s)
2018-11-08 15:02:23,845:INFO: Epoch 1/10000
2018-11-08 15:03:00,788:INFO: - Train metrics: accuracy: 0.521 ; loss: 709.375
2018-11-08 15:03:09,542:INFO: - Eval metrics: accuracy: 0.749 ; loss: 95.623
2018-11-08 15:03:10,107:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 15:03:10,117:INFO: Epoch 2/10000
2018-11-08 15:03:40,199:INFO: - Train metrics: accuracy: 0.729 ; loss: 136.401
2018-11-08 15:03:48,650:INFO: - Eval metrics: accuracy: 0.750 ; loss: 74.395
2018-11-08 15:03:49,000:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 15:03:49,000:INFO: Epoch 3/10000
2018-11-08 15:04:18,975:INFO: - Train metrics: accuracy: 0.746 ; loss: 96.147
2018-11-08 15:04:27,563:INFO: - Eval metrics: accuracy: 0.773 ; loss: 50.331
2018-11-08 15:04:27,948:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 15:04:27,949:INFO: Epoch 4/10000
2018-11-08 15:17:08,949:INFO: Creating the datasets...
2018-11-08 15:17:21,131:INFO: - done.
2018-11-08 15:17:21,132:INFO: Creating the model...
2018-11-08 15:17:24,282:INFO: - done.
2018-11-08 15:17:24,282:INFO: Starting training for 10000 epoch(s)
2018-11-08 15:17:25,501:INFO: Epoch 1/10000
2018-11-08 15:21:31,943:INFO: - Train metrics: accuracy: 0.759 ; loss: 121.291
2018-11-08 15:22:13,127:INFO: - Eval metrics: accuracy: 0.845 ; loss: 17.325
2018-11-08 15:22:13,645:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 15:22:13,659:INFO: Epoch 2/10000
2018-11-08 15:26:16,749:INFO: - Train metrics: accuracy: 0.873 ; loss: 11.999
2018-11-08 15:26:58,156:INFO: - Eval metrics: accuracy: 0.932 ; loss: 3.119
2018-11-08 15:26:58,497:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 15:26:58,498:INFO: Epoch 3/10000
2018-11-08 15:31:07,954:INFO: - Train metrics: accuracy: 0.923 ; loss: 3.765
2018-11-08 15:31:48,842:INFO: - Eval metrics: accuracy: 0.956 ; loss: 1.847
2018-11-08 15:31:49,174:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-08 15:31:49,175:INFO: Epoch 4/10000
2018-11-08 15:36:00,725:INFO: - Train metrics: accuracy: 0.935 ; loss: 2.166
2018-11-08 15:36:42,515:INFO: - Eval metrics: accuracy: 0.956 ; loss: 1.623
2018-11-08 15:36:42,604:INFO: Epoch 5/10000
2018-11-08 15:40:51,097:INFO: - Train metrics: accuracy: 0.942 ; loss: 1.363
2018-11-08 15:41:33,372:INFO: - Eval metrics: accuracy: 0.964 ; loss: 1.052
2018-11-08 15:41:33,707:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-08 15:41:33,708:INFO: Epoch 6/10000
2018-11-08 15:45:45,915:INFO: - Train metrics: accuracy: 0.950 ; loss: 0.730
2018-11-08 15:46:26,553:INFO: - Eval metrics: accuracy: 0.972 ; loss: 0.390
2018-11-08 15:46:27,136:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-08 15:46:27,137:INFO: Epoch 7/10000
2018-11-08 15:50:55,250:INFO: Creating the datasets...
2018-11-08 15:51:29,516:INFO: - done.
2018-11-08 15:51:29,516:INFO: Creating the model...
2018-11-08 15:51:31,558:INFO: - done.
2018-11-08 15:51:31,558:INFO: Starting training for 10000 epoch(s)
2018-11-08 15:51:32,751:INFO: Epoch 1/10000
2018-11-08 15:55:07,092:INFO: - Train metrics: accuracy: 0.717 ; loss: 181.885
2018-11-08 15:55:51,138:INFO: - Eval metrics: accuracy: 0.756 ; loss: 58.732
2018-11-08 15:55:51,928:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-08 15:55:51,928:INFO: Epoch 2/10000
2018-11-08 15:59:18,733:INFO: - Train metrics: accuracy: 0.743 ; loss: 106.582
2018-11-08 16:00:04,008:INFO: - Eval metrics: accuracy: 0.770 ; loss: 55.044
2018-11-08 16:00:04,325:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-08 16:00:04,326:INFO: Epoch 3/10000
2018-11-08 16:04:16,231:INFO: - Train metrics: accuracy: 0.747 ; loss: 95.807
2018-11-08 16:05:07,035:INFO: - Eval metrics: accuracy: 0.769 ; loss: 55.443
2018-11-08 16:05:07,146:INFO: Epoch 4/10000
2018-11-08 16:09:17,895:INFO: - Train metrics: accuracy: 0.751 ; loss: 86.383
2018-11-08 16:10:08,403:INFO: - Eval metrics: accuracy: 0.772 ; loss: 53.873
2018-11-08 16:10:08,716:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-08 16:10:08,716:INFO: Epoch 5/10000
2018-11-08 16:14:18,549:INFO: - Train metrics: accuracy: 0.753 ; loss: 80.652
2018-11-08 16:15:09,389:INFO: - Eval metrics: accuracy: 0.769 ; loss: 53.483
2018-11-08 16:15:09,490:INFO: Epoch 6/10000
2018-11-08 16:19:19,923:INFO: - Train metrics: accuracy: 0.756 ; loss: 76.135
2018-11-08 16:20:10,277:INFO: - Eval metrics: accuracy: 0.771 ; loss: 54.409
2018-11-08 16:20:10,373:INFO: Epoch 7/10000
2018-11-08 16:24:21,958:INFO: - Train metrics: accuracy: 0.758 ; loss: 72.215
2018-11-08 16:25:12,826:INFO: - Eval metrics: accuracy: 0.770 ; loss: 55.676
2018-11-08 16:25:12,925:INFO: Epoch 8/10000
2018-11-08 16:29:24,001:INFO: - Train metrics: accuracy: 0.760 ; loss: 65.472
2018-11-08 16:30:14,698:INFO: - Eval metrics: accuracy: 0.768 ; loss: 58.147
2018-11-08 16:30:14,802:INFO: Epoch 9/10000
2018-11-08 16:34:25,047:INFO: - Train metrics: accuracy: 0.763 ; loss: 61.771
2018-11-08 16:35:15,920:INFO: - Eval metrics: accuracy: 0.768 ; loss: 59.545
2018-11-08 16:35:16,022:INFO: Epoch 10/10000
2018-11-08 16:39:26,943:INFO: - Train metrics: accuracy: 0.765 ; loss: 56.292
2018-11-08 16:40:18,140:INFO: - Eval metrics: accuracy: 0.767 ; loss: 61.113
2018-11-08 16:40:18,238:INFO: Epoch 11/10000
2018-11-08 16:44:29,349:INFO: - Train metrics: accuracy: 0.768 ; loss: 52.498
2018-11-08 16:45:20,161:INFO: - Eval metrics: accuracy: 0.765 ; loss: 63.396
2018-11-08 16:45:20,263:INFO: Epoch 12/10000
2018-11-08 16:49:31,585:INFO: - Train metrics: accuracy: 0.770 ; loss: 49.335
2018-11-08 16:50:22,265:INFO: - Eval metrics: accuracy: 0.762 ; loss: 64.815
2018-11-08 16:50:22,367:INFO: Epoch 13/10000
2018-11-08 16:54:33,626:INFO: - Train metrics: accuracy: 0.773 ; loss: 45.873
2018-11-08 16:55:24,639:INFO: - Eval metrics: accuracy: 0.761 ; loss: 65.870
2018-11-08 16:55:24,739:INFO: Epoch 14/10000
2018-11-08 16:59:36,666:INFO: - Train metrics: accuracy: 0.775 ; loss: 42.836
2018-11-08 17:00:27,472:INFO: - Eval metrics: accuracy: 0.759 ; loss: 67.623
2018-11-08 17:00:27,583:INFO: Epoch 15/10000
2018-11-08 17:04:38,846:INFO: - Train metrics: accuracy: 0.778 ; loss: 40.858
2018-11-08 17:05:29,463:INFO: - Eval metrics: accuracy: 0.758 ; loss: 68.661
2018-11-08 17:05:29,567:INFO: Epoch 16/10000
2018-11-08 17:09:40,745:INFO: - Train metrics: accuracy: 0.780 ; loss: 38.697
2018-11-08 17:10:32,031:INFO: - Eval metrics: accuracy: 0.758 ; loss: 69.309
2018-11-08 17:10:32,127:INFO: Epoch 17/10000
2018-11-08 17:14:41,496:INFO: - Train metrics: accuracy: 0.782 ; loss: 37.238
2018-11-08 17:15:32,974:INFO: - Eval metrics: accuracy: 0.756 ; loss: 71.021
2018-11-08 17:15:33,071:INFO: Epoch 18/10000
2018-11-08 17:19:47,588:INFO: - Train metrics: accuracy: 0.785 ; loss: 35.323
2018-11-08 17:20:38,704:INFO: - Eval metrics: accuracy: 0.755 ; loss: 72.068
2018-11-08 17:20:38,803:INFO: Epoch 19/10000
2018-11-08 17:24:51,654:INFO: - Train metrics: accuracy: 0.787 ; loss: 34.024
2018-11-08 17:25:42,984:INFO: - Eval metrics: accuracy: 0.754 ; loss: 73.311
2018-11-08 17:25:43,076:INFO: Epoch 20/10000
2018-11-08 17:29:53,858:INFO: - Train metrics: accuracy: 0.788 ; loss: 32.842
2018-11-08 17:30:44,742:INFO: - Eval metrics: accuracy: 0.753 ; loss: 73.996
2018-11-08 17:30:44,842:INFO: Epoch 21/10000
2018-11-08 17:34:56,152:INFO: - Train metrics: accuracy: 0.790 ; loss: 31.719
2018-11-08 17:35:47,200:INFO: - Eval metrics: accuracy: 0.753 ; loss: 74.660
2018-11-08 17:35:47,309:INFO: Epoch 22/10000
2018-11-08 17:39:57,486:INFO: - Train metrics: accuracy: 0.792 ; loss: 30.492
2018-11-08 17:40:48,025:INFO: - Eval metrics: accuracy: 0.752 ; loss: 75.045
2018-11-08 17:40:48,130:INFO: Epoch 23/10000
2018-11-08 17:45:00,525:INFO: - Train metrics: accuracy: 0.793 ; loss: 29.612
2018-11-08 17:45:51,373:INFO: - Eval metrics: accuracy: 0.750 ; loss: 75.781
2018-11-08 17:45:51,478:INFO: Epoch 24/10000
2018-11-08 17:50:02,333:INFO: - Train metrics: accuracy: 0.795 ; loss: 28.925
2018-11-08 17:50:53,351:INFO: - Eval metrics: accuracy: 0.750 ; loss: 76.488
2018-11-08 17:50:53,450:INFO: Epoch 25/10000
2018-11-08 17:55:04,310:INFO: - Train metrics: accuracy: 0.796 ; loss: 28.094
2018-11-08 17:55:55,345:INFO: - Eval metrics: accuracy: 0.749 ; loss: 77.082
2018-11-08 17:55:55,446:INFO: Epoch 26/10000
2018-11-08 18:00:06,392:INFO: - Train metrics: accuracy: 0.797 ; loss: 27.366
2018-11-08 18:00:57,483:INFO: - Eval metrics: accuracy: 0.748 ; loss: 77.437
2018-11-08 18:00:57,582:INFO: Epoch 27/10000
2018-11-08 18:05:07,924:INFO: - Train metrics: accuracy: 0.798 ; loss: 26.667
2018-11-08 18:05:59,011:INFO: - Eval metrics: accuracy: 0.748 ; loss: 77.720
2018-11-08 18:05:59,109:INFO: Epoch 28/10000
2018-11-08 18:10:10,950:INFO: - Train metrics: accuracy: 0.800 ; loss: 26.107
2018-11-08 18:11:01,738:INFO: - Eval metrics: accuracy: 0.747 ; loss: 78.135
2018-11-08 18:11:01,831:INFO: Epoch 29/10000
2018-11-08 18:15:11,765:INFO: - Train metrics: accuracy: 0.801 ; loss: 25.621
2018-11-08 18:16:02,930:INFO: - Eval metrics: accuracy: 0.747 ; loss: 78.763
2018-11-08 18:16:03,027:INFO: Epoch 30/10000
2018-11-08 18:20:15,884:INFO: - Train metrics: accuracy: 0.802 ; loss: 24.992
2018-11-08 18:21:07,103:INFO: - Eval metrics: accuracy: 0.746 ; loss: 79.126
2018-11-08 18:21:07,203:INFO: Epoch 31/10000
2018-11-08 18:25:20,067:INFO: - Train metrics: accuracy: 0.803 ; loss: 24.662
2018-11-08 18:26:10,928:INFO: - Eval metrics: accuracy: 0.745 ; loss: 79.604
2018-11-08 18:26:11,027:INFO: Epoch 32/10000
2018-11-08 18:30:24,598:INFO: - Train metrics: accuracy: 0.804 ; loss: 24.141
2018-11-08 18:31:15,662:INFO: - Eval metrics: accuracy: 0.745 ; loss: 79.970
2018-11-08 18:31:15,763:INFO: Epoch 33/10000
2018-11-08 18:35:25,905:INFO: - Train metrics: accuracy: 0.804 ; loss: 23.854
2018-11-08 18:36:16,867:INFO: - Eval metrics: accuracy: 0.744 ; loss: 80.569
2018-11-08 18:36:16,963:INFO: Epoch 34/10000
2018-11-08 18:40:28,325:INFO: - Train metrics: accuracy: 0.805 ; loss: 23.480
2018-11-08 18:41:19,254:INFO: - Eval metrics: accuracy: 0.743 ; loss: 81.072
2018-11-08 18:41:19,350:INFO: Epoch 35/10000
2018-11-08 18:45:30,940:INFO: - Train metrics: accuracy: 0.806 ; loss: 23.017
2018-11-08 18:46:21,717:INFO: - Eval metrics: accuracy: 0.743 ; loss: 81.010
2018-11-08 18:46:21,816:INFO: Epoch 36/10000
2018-11-08 18:50:34,243:INFO: - Train metrics: accuracy: 0.807 ; loss: 22.611
2018-11-08 18:51:25,416:INFO: - Eval metrics: accuracy: 0.743 ; loss: 80.853
2018-11-08 18:51:25,519:INFO: Epoch 37/10000
2018-11-08 18:55:37,311:INFO: - Train metrics: accuracy: 0.808 ; loss: 22.440
2018-11-08 18:56:28,630:INFO: - Eval metrics: accuracy: 0.742 ; loss: 81.618
2018-11-08 18:56:28,737:INFO: Epoch 38/10000
2018-11-08 19:00:41,641:INFO: - Train metrics: accuracy: 0.808 ; loss: 22.238
2018-11-08 19:01:32,772:INFO: - Eval metrics: accuracy: 0.741 ; loss: 82.029
2018-11-08 19:01:32,875:INFO: Epoch 39/10000
2018-11-08 19:05:43,781:INFO: - Train metrics: accuracy: 0.809 ; loss: 21.861
2018-11-08 19:06:34,597:INFO: - Eval metrics: accuracy: 0.742 ; loss: 81.722
2018-11-08 19:06:34,686:INFO: Epoch 40/10000
2018-11-08 19:10:46,636:INFO: - Train metrics: accuracy: 0.810 ; loss: 21.593
2018-11-08 19:11:37,877:INFO: - Eval metrics: accuracy: 0.741 ; loss: 82.201
2018-11-08 19:11:37,980:INFO: Epoch 41/10000
2018-11-08 19:15:47,890:INFO: - Train metrics: accuracy: 0.810 ; loss: 21.246
2018-11-08 19:16:37,607:INFO: - Eval metrics: accuracy: 0.741 ; loss: 82.046
2018-11-08 19:16:37,711:INFO: Epoch 42/10000
2018-11-08 19:20:44,603:INFO: - Train metrics: accuracy: 0.811 ; loss: 21.088
2018-11-08 19:21:35,917:INFO: - Eval metrics: accuracy: 0.741 ; loss: 82.250
2018-11-08 19:21:36,018:INFO: Epoch 43/10000
2018-11-08 19:25:49,781:INFO: - Train metrics: accuracy: 0.812 ; loss: 20.825
2018-11-08 19:26:40,822:INFO: - Eval metrics: accuracy: 0.740 ; loss: 82.498
2018-11-08 19:26:40,930:INFO: Epoch 44/10000
2018-11-08 19:30:54,019:INFO: - Train metrics: accuracy: 0.812 ; loss: 20.612
2018-11-08 19:31:44,956:INFO: - Eval metrics: accuracy: 0.740 ; loss: 82.372
2018-11-08 19:31:45,056:INFO: Epoch 45/10000
2018-11-08 19:35:56,219:INFO: - Train metrics: accuracy: 0.813 ; loss: 20.422
2018-11-08 19:36:47,332:INFO: - Eval metrics: accuracy: 0.740 ; loss: 82.658
2018-11-08 19:36:47,436:INFO: Epoch 46/10000
2018-11-08 19:40:59,923:INFO: - Train metrics: accuracy: 0.813 ; loss: 20.197
2018-11-08 19:41:51,192:INFO: - Eval metrics: accuracy: 0.739 ; loss: 83.163
2018-11-08 19:41:51,294:INFO: Epoch 47/10000
2018-11-08 19:46:05,219:INFO: - Train metrics: accuracy: 0.814 ; loss: 20.011
2018-11-08 19:46:55,754:INFO: - Eval metrics: accuracy: 0.738 ; loss: 83.230
2018-11-08 19:46:55,847:INFO: Epoch 48/10000
2018-11-08 19:51:07,702:INFO: - Train metrics: accuracy: 0.814 ; loss: 19.933
2018-11-08 19:51:58,814:INFO: - Eval metrics: accuracy: 0.738 ; loss: 83.428
2018-11-08 19:51:58,912:INFO: Epoch 49/10000
2018-11-08 19:56:10,729:INFO: - Train metrics: accuracy: 0.815 ; loss: 19.612
2018-11-08 19:57:01,554:INFO: - Eval metrics: accuracy: 0.737 ; loss: 83.506
2018-11-08 19:57:01,646:INFO: Epoch 50/10000
2018-11-08 20:01:12,508:INFO: - Train metrics: accuracy: 0.815 ; loss: 19.492
2018-11-08 20:02:03,299:INFO: - Eval metrics: accuracy: 0.736 ; loss: 83.657
2018-11-08 20:02:03,400:INFO: Epoch 51/10000
2018-11-08 20:06:15,327:INFO: - Train metrics: accuracy: 0.816 ; loss: 19.415
2018-11-08 20:07:06,183:INFO: - Eval metrics: accuracy: 0.736 ; loss: 83.917
2018-11-08 20:07:06,288:INFO: Epoch 52/10000
2018-11-08 20:11:17,238:INFO: - Train metrics: accuracy: 0.816 ; loss: 19.138
2018-11-08 20:12:07,157:INFO: - Eval metrics: accuracy: 0.735 ; loss: 83.939
2018-11-08 20:12:07,254:INFO: Epoch 53/10000
2018-11-08 20:16:17,378:INFO: - Train metrics: accuracy: 0.817 ; loss: 18.985
2018-11-08 20:17:08,322:INFO: - Eval metrics: accuracy: 0.735 ; loss: 84.237
2018-11-08 20:17:08,423:INFO: Epoch 54/10000
2018-11-08 20:21:21,082:INFO: - Train metrics: accuracy: 0.817 ; loss: 18.811
2018-11-08 20:22:12,158:INFO: - Eval metrics: accuracy: 0.734 ; loss: 84.406
2018-11-08 20:22:12,248:INFO: Epoch 55/10000
2018-11-08 20:26:23,957:INFO: - Train metrics: accuracy: 0.817 ; loss: 18.703
2018-11-08 20:27:14,676:INFO: - Eval metrics: accuracy: 0.734 ; loss: 84.884
2018-11-08 20:27:14,778:INFO: Epoch 56/10000
2018-11-08 20:31:26,335:INFO: - Train metrics: accuracy: 0.818 ; loss: 18.545
2018-11-08 20:32:17,246:INFO: - Eval metrics: accuracy: 0.734 ; loss: 84.836
2018-11-08 20:32:17,339:INFO: Epoch 57/10000
2018-11-08 20:36:27,969:INFO: - Train metrics: accuracy: 0.818 ; loss: 18.415
2018-11-08 20:37:18,934:INFO: - Eval metrics: accuracy: 0.734 ; loss: 85.173
2018-11-08 20:37:19,032:INFO: Epoch 58/10000
2018-11-08 20:41:28,122:INFO: - Train metrics: accuracy: 0.819 ; loss: 18.309
2018-11-08 20:42:19,559:INFO: - Eval metrics: accuracy: 0.733 ; loss: 85.395
2018-11-08 20:42:19,661:INFO: Epoch 59/10000
2018-11-08 20:46:31,513:INFO: - Train metrics: accuracy: 0.819 ; loss: 18.209
2018-11-08 20:47:22,506:INFO: - Eval metrics: accuracy: 0.733 ; loss: 85.439
2018-11-08 20:47:22,603:INFO: Epoch 60/10000
2018-11-08 20:51:34,656:INFO: - Train metrics: accuracy: 0.819 ; loss: 18.077
2018-11-08 20:52:25,801:INFO: - Eval metrics: accuracy: 0.732 ; loss: 85.754
2018-11-08 20:52:25,901:INFO: Epoch 61/10000
2018-11-08 20:56:36,061:INFO: - Train metrics: accuracy: 0.820 ; loss: 17.995
2018-11-08 20:57:26,869:INFO: - Eval metrics: accuracy: 0.732 ; loss: 85.876
2018-11-08 20:57:26,972:INFO: Epoch 62/10000
2018-11-08 21:01:38,132:INFO: - Train metrics: accuracy: 0.820 ; loss: 17.813
2018-11-08 21:02:29,122:INFO: - Eval metrics: accuracy: 0.731 ; loss: 85.857
2018-11-08 21:02:29,237:INFO: Epoch 63/10000
2018-11-08 21:06:40,493:INFO: - Train metrics: accuracy: 0.821 ; loss: 17.742
2018-11-08 21:07:31,410:INFO: - Eval metrics: accuracy: 0.731 ; loss: 85.996
2018-11-08 21:07:31,505:INFO: Epoch 64/10000
2018-11-08 21:11:42,449:INFO: - Train metrics: accuracy: 0.821 ; loss: 17.622
2018-11-08 21:12:32,712:INFO: - Eval metrics: accuracy: 0.731 ; loss: 86.181
2018-11-08 21:12:32,814:INFO: Epoch 65/10000
2018-11-08 21:16:43,919:INFO: - Train metrics: accuracy: 0.821 ; loss: 17.522
2018-11-08 21:17:34,943:INFO: - Eval metrics: accuracy: 0.731 ; loss: 86.080
2018-11-08 21:17:35,049:INFO: Epoch 66/10000
2018-11-08 21:21:47,622:INFO: - Train metrics: accuracy: 0.821 ; loss: 17.462
2018-11-08 21:22:38,628:INFO: - Eval metrics: accuracy: 0.731 ; loss: 86.300
2018-11-08 21:22:38,731:INFO: Epoch 67/10000
2018-11-08 21:26:49,228:INFO: - Train metrics: accuracy: 0.822 ; loss: 17.336
2018-11-08 21:27:40,327:INFO: - Eval metrics: accuracy: 0.730 ; loss: 86.493
2018-11-08 21:27:40,426:INFO: Epoch 68/10000
2018-11-08 21:31:52,267:INFO: - Train metrics: accuracy: 0.822 ; loss: 17.232
2018-11-08 21:32:43,359:INFO: - Eval metrics: accuracy: 0.730 ; loss: 86.737
2018-11-08 21:32:43,448:INFO: Epoch 69/10000
2018-11-08 21:36:57,046:INFO: - Train metrics: accuracy: 0.822 ; loss: 17.195
2018-11-08 21:37:48,190:INFO: - Eval metrics: accuracy: 0.730 ; loss: 86.798
2018-11-08 21:37:48,288:INFO: Epoch 70/10000
2018-11-08 21:42:01,823:INFO: - Train metrics: accuracy: 0.823 ; loss: 17.077
2018-11-08 21:42:52,808:INFO: - Eval metrics: accuracy: 0.730 ; loss: 87.089
2018-11-08 21:42:52,902:INFO: Epoch 71/10000
2018-11-08 21:47:05,298:INFO: - Train metrics: accuracy: 0.823 ; loss: 16.999
2018-11-08 21:47:56,401:INFO: - Eval metrics: accuracy: 0.730 ; loss: 86.920
2018-11-08 21:47:56,504:INFO: Epoch 72/10000
2018-11-08 21:52:07,533:INFO: - Train metrics: accuracy: 0.823 ; loss: 16.906
2018-11-08 21:52:58,310:INFO: - Eval metrics: accuracy: 0.729 ; loss: 87.179
2018-11-08 21:52:58,411:INFO: Epoch 73/10000
2018-11-08 21:57:08,822:INFO: - Train metrics: accuracy: 0.824 ; loss: 16.781
2018-11-08 21:58:00,060:INFO: - Eval metrics: accuracy: 0.729 ; loss: 87.456
2018-11-08 21:58:00,163:INFO: Epoch 74/10000
2018-11-08 22:02:10,455:INFO: - Train metrics: accuracy: 0.824 ; loss: 16.719
2018-11-08 22:03:01,431:INFO: - Eval metrics: accuracy: 0.730 ; loss: 87.168
2018-11-08 22:03:01,536:INFO: Epoch 75/10000
2018-11-08 22:07:13,309:INFO: - Train metrics: accuracy: 0.824 ; loss: 16.669
2018-11-08 22:08:04,131:INFO: - Eval metrics: accuracy: 0.730 ; loss: 87.250
2018-11-08 22:08:04,231:INFO: Epoch 76/10000
2018-11-08 22:12:14,047:INFO: - Train metrics: accuracy: 0.824 ; loss: 16.587
2018-11-08 22:13:04,731:INFO: - Eval metrics: accuracy: 0.730 ; loss: 87.337
2018-11-08 22:13:04,821:INFO: Epoch 77/10000
2018-11-08 22:17:14,735:INFO: - Train metrics: accuracy: 0.825 ; loss: 16.507
2018-11-08 22:18:05,713:INFO: - Eval metrics: accuracy: 0.730 ; loss: 87.377
2018-11-08 22:18:05,816:INFO: Epoch 78/10000
2018-11-08 22:22:18,610:INFO: - Train metrics: accuracy: 0.825 ; loss: 16.456
2018-11-08 22:23:09,297:INFO: - Eval metrics: accuracy: 0.729 ; loss: 87.498
2018-11-08 22:23:09,396:INFO: Epoch 79/10000
2018-11-08 22:27:21,626:INFO: - Train metrics: accuracy: 0.825 ; loss: 16.343
2018-11-08 22:28:12,520:INFO: - Eval metrics: accuracy: 0.729 ; loss: 87.701
2018-11-08 22:28:12,625:INFO: Epoch 80/10000
2018-11-08 22:32:23,414:INFO: - Train metrics: accuracy: 0.825 ; loss: 16.312
2018-11-08 22:33:13,969:INFO: - Eval metrics: accuracy: 0.729 ; loss: 87.681
2018-11-08 22:33:14,071:INFO: Epoch 81/10000
2018-11-08 22:37:23,244:INFO: - Train metrics: accuracy: 0.826 ; loss: 16.223
2018-11-08 22:38:14,187:INFO: - Eval metrics: accuracy: 0.729 ; loss: 87.742
2018-11-08 22:38:14,287:INFO: Epoch 82/10000
2018-11-08 22:42:25,054:INFO: - Train metrics: accuracy: 0.826 ; loss: 16.117
2018-11-08 22:43:15,612:INFO: - Eval metrics: accuracy: 0.729 ; loss: 87.704
2018-11-08 22:43:15,713:INFO: Epoch 83/10000
2018-11-08 22:47:28,032:INFO: - Train metrics: accuracy: 0.826 ; loss: 16.084
2018-11-08 22:48:19,220:INFO: - Eval metrics: accuracy: 0.729 ; loss: 87.820
2018-11-08 22:48:19,324:INFO: Epoch 84/10000
2018-11-08 22:52:32,278:INFO: - Train metrics: accuracy: 0.826 ; loss: 16.031
2018-11-08 22:53:23,058:INFO: - Eval metrics: accuracy: 0.729 ; loss: 87.765
2018-11-08 22:53:23,154:INFO: Epoch 85/10000
2018-11-08 22:57:35,886:INFO: - Train metrics: accuracy: 0.827 ; loss: 15.989
2018-11-08 22:58:26,978:INFO: - Eval metrics: accuracy: 0.729 ; loss: 87.756
2018-11-08 22:58:27,079:INFO: Epoch 86/10000
2018-11-08 23:02:38,783:INFO: - Train metrics: accuracy: 0.827 ; loss: 15.900
2018-11-08 23:03:29,648:INFO: - Eval metrics: accuracy: 0.729 ; loss: 87.904
2018-11-08 23:03:29,746:INFO: Epoch 87/10000
2018-11-08 23:07:41,918:INFO: - Train metrics: accuracy: 0.827 ; loss: 15.850
2018-11-08 23:08:33,481:INFO: - Eval metrics: accuracy: 0.728 ; loss: 88.317
2018-11-08 23:08:33,582:INFO: Epoch 88/10000
2018-11-08 23:12:43,741:INFO: - Train metrics: accuracy: 0.827 ; loss: 15.751
2018-11-08 23:13:34,628:INFO: - Eval metrics: accuracy: 0.729 ; loss: 88.376
2018-11-08 23:13:34,732:INFO: Epoch 89/10000
2018-11-08 23:17:46,368:INFO: - Train metrics: accuracy: 0.828 ; loss: 15.728
2018-11-08 23:18:36,964:INFO: - Eval metrics: accuracy: 0.729 ; loss: 88.560
2018-11-08 23:18:37,068:INFO: Epoch 90/10000
2018-11-08 23:22:50,101:INFO: - Train metrics: accuracy: 0.828 ; loss: 15.636
2018-11-08 23:23:40,992:INFO: - Eval metrics: accuracy: 0.728 ; loss: 88.487
2018-11-08 23:23:41,083:INFO: Epoch 91/10000
2018-11-08 23:27:51,300:INFO: - Train metrics: accuracy: 0.828 ; loss: 15.576
2018-11-08 23:28:42,431:INFO: - Eval metrics: accuracy: 0.728 ; loss: 88.580
2018-11-08 23:28:42,525:INFO: Epoch 92/10000
2018-11-08 23:32:53,216:INFO: - Train metrics: accuracy: 0.828 ; loss: 15.572
2018-11-08 23:33:44,252:INFO: - Eval metrics: accuracy: 0.727 ; loss: 88.604
2018-11-08 23:33:44,349:INFO: Epoch 93/10000
2018-11-08 23:37:55,186:INFO: - Train metrics: accuracy: 0.828 ; loss: 15.499
2018-11-08 23:38:46,292:INFO: - Eval metrics: accuracy: 0.727 ; loss: 88.680
2018-11-08 23:38:46,400:INFO: Epoch 94/10000
2018-11-08 23:42:56,615:INFO: - Train metrics: accuracy: 0.829 ; loss: 15.409
2018-11-08 23:43:47,498:INFO: - Eval metrics: accuracy: 0.727 ; loss: 88.588
2018-11-08 23:43:47,597:INFO: Epoch 95/10000
2018-11-08 23:47:57,475:INFO: - Train metrics: accuracy: 0.829 ; loss: 15.377
2018-11-08 23:48:48,650:INFO: - Eval metrics: accuracy: 0.727 ; loss: 88.624
2018-11-08 23:48:48,753:INFO: Epoch 96/10000
2018-11-08 23:52:58,999:INFO: - Train metrics: accuracy: 0.829 ; loss: 15.350
2018-11-08 23:53:49,923:INFO: - Eval metrics: accuracy: 0.727 ; loss: 88.644
2018-11-08 23:53:50,023:INFO: Epoch 97/10000
2018-11-08 23:58:00,264:INFO: - Train metrics: accuracy: 0.829 ; loss: 15.286
2018-11-08 23:58:51,190:INFO: - Eval metrics: accuracy: 0.727 ; loss: 88.684
2018-11-08 23:58:51,289:INFO: Epoch 98/10000
2018-11-09 00:03:00,902:INFO: - Train metrics: accuracy: 0.829 ; loss: 15.230
2018-11-09 00:03:51,931:INFO: - Eval metrics: accuracy: 0.727 ; loss: 88.718
2018-11-09 00:03:52,015:INFO: Epoch 99/10000
2018-11-09 00:08:04,139:INFO: - Train metrics: accuracy: 0.830 ; loss: 15.170
2018-11-09 00:08:55,225:INFO: - Eval metrics: accuracy: 0.727 ; loss: 88.863
2018-11-09 00:08:55,334:INFO: Epoch 100/10000
2018-11-09 00:13:04,684:INFO: - Train metrics: accuracy: 0.830 ; loss: 15.169
2018-11-09 00:13:55,705:INFO: - Eval metrics: accuracy: 0.727 ; loss: 88.785
2018-11-09 00:13:55,808:INFO: Epoch 101/10000
2018-11-09 00:18:07,789:INFO: - Train metrics: accuracy: 0.830 ; loss: 15.094
2018-11-09 00:18:58,768:INFO: - Eval metrics: accuracy: 0.726 ; loss: 88.788
2018-11-09 00:18:58,867:INFO: Epoch 102/10000
2018-11-09 00:23:10,783:INFO: - Train metrics: accuracy: 0.830 ; loss: 15.025
2018-11-09 00:24:02,055:INFO: - Eval metrics: accuracy: 0.727 ; loss: 88.890
2018-11-09 00:24:02,151:INFO: Epoch 103/10000
2018-11-09 00:28:13,926:INFO: - Train metrics: accuracy: 0.830 ; loss: 15.022
2018-11-09 00:29:05,125:INFO: - Eval metrics: accuracy: 0.726 ; loss: 88.899
2018-11-09 00:29:05,226:INFO: Epoch 104/10000
2018-11-09 00:33:17,676:INFO: - Train metrics: accuracy: 0.830 ; loss: 14.930
2018-11-09 00:34:08,779:INFO: - Eval metrics: accuracy: 0.726 ; loss: 88.909
2018-11-09 00:34:08,867:INFO: Epoch 105/10000
2018-11-09 00:38:20,156:INFO: - Train metrics: accuracy: 0.831 ; loss: 14.920
2018-11-09 00:39:09,954:INFO: - Eval metrics: accuracy: 0.726 ; loss: 88.995
2018-11-09 00:39:10,054:INFO: Epoch 106/10000
2018-11-09 00:43:18,688:INFO: - Train metrics: accuracy: 0.831 ; loss: 14.839
2018-11-09 00:44:09,542:INFO: - Eval metrics: accuracy: 0.726 ; loss: 89.277
2018-11-09 00:44:09,644:INFO: Epoch 107/10000
2018-11-09 00:48:22,262:INFO: - Train metrics: accuracy: 0.831 ; loss: 14.814
2018-11-09 00:49:13,316:INFO: - Eval metrics: accuracy: 0.727 ; loss: 89.198
2018-11-09 00:49:13,410:INFO: Epoch 108/10000
2018-11-09 00:53:25,662:INFO: - Train metrics: accuracy: 0.831 ; loss: 14.761
2018-11-09 00:54:16,550:INFO: - Eval metrics: accuracy: 0.726 ; loss: 89.293
2018-11-09 00:54:16,650:INFO: Epoch 109/10000
2018-11-09 00:58:30,410:INFO: - Train metrics: accuracy: 0.831 ; loss: 14.726
2018-11-09 00:59:21,233:INFO: - Eval metrics: accuracy: 0.726 ; loss: 89.333
2018-11-09 00:59:21,333:INFO: Epoch 110/10000
2018-11-09 01:03:33,291:INFO: - Train metrics: accuracy: 0.831 ; loss: 14.686
2018-11-09 01:04:24,638:INFO: - Eval metrics: accuracy: 0.726 ; loss: 89.419
2018-11-09 01:04:24,723:INFO: Epoch 111/10000
2018-11-09 01:08:39,188:INFO: - Train metrics: accuracy: 0.832 ; loss: 14.649
2018-11-09 01:09:30,486:INFO: - Eval metrics: accuracy: 0.726 ; loss: 89.495
2018-11-09 01:09:30,593:INFO: Epoch 112/10000
2018-11-09 01:13:42,240:INFO: - Train metrics: accuracy: 0.832 ; loss: 14.606
2018-11-09 01:14:33,196:INFO: - Eval metrics: accuracy: 0.726 ; loss: 89.669
2018-11-09 01:14:33,319:INFO: Epoch 113/10000
2018-11-09 01:18:44,695:INFO: - Train metrics: accuracy: 0.832 ; loss: 14.574
2018-11-09 01:19:36,220:INFO: - Eval metrics: accuracy: 0.726 ; loss: 89.659
2018-11-09 01:19:36,315:INFO: Epoch 114/10000
2018-11-09 01:23:50,201:INFO: - Train metrics: accuracy: 0.832 ; loss: 14.529
2018-11-09 01:24:41,378:INFO: - Eval metrics: accuracy: 0.725 ; loss: 89.915
2018-11-09 01:24:41,481:INFO: Epoch 115/10000
2018-11-09 01:28:53,318:INFO: - Train metrics: accuracy: 0.832 ; loss: 14.473
2018-11-09 01:29:44,419:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.007
2018-11-09 01:29:44,514:INFO: Epoch 116/10000
2018-11-09 01:33:55,926:INFO: - Train metrics: accuracy: 0.832 ; loss: 14.452
2018-11-09 01:34:46,947:INFO: - Eval metrics: accuracy: 0.726 ; loss: 90.007
2018-11-09 01:34:47,033:INFO: Epoch 117/10000
2018-11-09 01:38:58,902:INFO: - Train metrics: accuracy: 0.833 ; loss: 14.401
2018-11-09 01:39:49,882:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.274
2018-11-09 01:39:49,986:INFO: Epoch 118/10000
2018-11-09 01:44:01,536:INFO: - Train metrics: accuracy: 0.833 ; loss: 14.406
2018-11-09 01:44:52,601:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.306
2018-11-09 01:44:52,698:INFO: Epoch 119/10000
2018-11-09 01:49:04,462:INFO: - Train metrics: accuracy: 0.833 ; loss: 14.359
2018-11-09 01:49:55,286:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.341
2018-11-09 01:49:55,389:INFO: Epoch 120/10000
2018-11-09 01:54:06,181:INFO: - Train metrics: accuracy: 0.833 ; loss: 14.287
2018-11-09 01:54:57,076:INFO: - Eval metrics: accuracy: 0.727 ; loss: 90.082
2018-11-09 01:54:57,179:INFO: Epoch 121/10000
2018-11-09 01:59:10,203:INFO: - Train metrics: accuracy: 0.833 ; loss: 14.248
2018-11-09 02:00:01,048:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.634
2018-11-09 02:00:01,149:INFO: Epoch 122/10000
2018-11-09 02:04:12,771:INFO: - Train metrics: accuracy: 0.833 ; loss: 14.210
2018-11-09 02:05:03,572:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.589
2018-11-09 02:05:03,678:INFO: Epoch 123/10000
2018-11-09 02:09:15,067:INFO: - Train metrics: accuracy: 0.833 ; loss: 14.197
2018-11-09 02:10:06,017:INFO: - Eval metrics: accuracy: 0.726 ; loss: 90.597
2018-11-09 02:10:06,111:INFO: Epoch 124/10000
2018-11-09 02:14:17,339:INFO: - Train metrics: accuracy: 0.834 ; loss: 14.152
2018-11-09 02:15:08,168:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.711
2018-11-09 02:15:08,265:INFO: Epoch 125/10000
2018-11-09 02:19:21,021:INFO: - Train metrics: accuracy: 0.834 ; loss: 14.130
2018-11-09 02:20:12,157:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.815
2018-11-09 02:20:12,269:INFO: Epoch 126/10000
2018-11-09 02:24:24,771:INFO: - Train metrics: accuracy: 0.834 ; loss: 14.093
2018-11-09 02:25:15,779:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.694
2018-11-09 02:25:15,874:INFO: Epoch 127/10000
2018-11-09 02:29:27,677:INFO: - Train metrics: accuracy: 0.834 ; loss: 14.078
2018-11-09 02:30:18,758:INFO: - Eval metrics: accuracy: 0.726 ; loss: 90.805
2018-11-09 02:30:18,859:INFO: Epoch 128/10000
2018-11-09 02:34:32,898:INFO: - Train metrics: accuracy: 0.834 ; loss: 14.094
2018-11-09 02:35:24,176:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.961
2018-11-09 02:35:24,271:INFO: Epoch 129/10000
2018-11-09 02:39:37,719:INFO: - Train metrics: accuracy: 0.834 ; loss: 14.020
2018-11-09 02:40:28,810:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.994
2018-11-09 02:40:28,913:INFO: Epoch 130/10000
2018-11-09 02:44:41,946:INFO: - Train metrics: accuracy: 0.834 ; loss: 13.965
2018-11-09 02:45:32,994:INFO: - Eval metrics: accuracy: 0.725 ; loss: 91.066
2018-11-09 02:45:33,090:INFO: Epoch 131/10000
2018-11-09 02:49:46,009:INFO: - Train metrics: accuracy: 0.835 ; loss: 13.935
2018-11-09 02:50:36,904:INFO: - Eval metrics: accuracy: 0.726 ; loss: 90.610
2018-11-09 02:50:36,999:INFO: Epoch 132/10000
2018-11-09 02:54:49,174:INFO: - Train metrics: accuracy: 0.835 ; loss: 13.893
2018-11-09 02:55:40,764:INFO: - Eval metrics: accuracy: 0.725 ; loss: 91.078
2018-11-09 02:55:40,868:INFO: Epoch 133/10000
2018-11-09 02:59:53,474:INFO: - Train metrics: accuracy: 0.835 ; loss: 13.878
2018-11-09 03:00:45,172:INFO: - Eval metrics: accuracy: 0.725 ; loss: 91.206
2018-11-09 03:00:45,272:INFO: Epoch 134/10000
2018-11-09 03:04:57,167:INFO: - Train metrics: accuracy: 0.835 ; loss: 13.831
2018-11-09 03:05:48,494:INFO: - Eval metrics: accuracy: 0.725 ; loss: 91.123
2018-11-09 03:05:48,593:INFO: Epoch 135/10000
2018-11-09 03:09:59,822:INFO: - Train metrics: accuracy: 0.835 ; loss: 13.815
2018-11-09 03:10:50,213:INFO: - Eval metrics: accuracy: 0.724 ; loss: 91.177
2018-11-09 03:10:50,310:INFO: Epoch 136/10000
2018-11-09 03:14:59,370:INFO: - Train metrics: accuracy: 0.835 ; loss: 13.845
2018-11-09 03:15:50,665:INFO: - Eval metrics: accuracy: 0.725 ; loss: 91.123
2018-11-09 03:15:50,768:INFO: Epoch 137/10000
2018-11-09 03:20:01,765:INFO: - Train metrics: accuracy: 0.835 ; loss: 13.787
2018-11-09 03:20:52,841:INFO: - Eval metrics: accuracy: 0.725 ; loss: 91.138
2018-11-09 03:20:52,940:INFO: Epoch 138/10000
2018-11-09 03:25:05,160:INFO: - Train metrics: accuracy: 0.836 ; loss: 13.732
2018-11-09 03:25:56,190:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.746
2018-11-09 03:25:56,292:INFO: Epoch 139/10000
2018-11-09 03:30:07,185:INFO: - Train metrics: accuracy: 0.836 ; loss: 13.691
2018-11-09 03:30:58,155:INFO: - Eval metrics: accuracy: 0.724 ; loss: 91.293
2018-11-09 03:30:58,247:INFO: Epoch 140/10000
2018-11-09 03:35:08,142:INFO: - Train metrics: accuracy: 0.836 ; loss: 13.673
2018-11-09 03:35:59,037:INFO: - Eval metrics: accuracy: 0.726 ; loss: 90.702
2018-11-09 03:35:59,140:INFO: Epoch 141/10000
2018-11-09 03:40:11,477:INFO: - Train metrics: accuracy: 0.836 ; loss: 13.656
2018-11-09 03:41:02,103:INFO: - Eval metrics: accuracy: 0.725 ; loss: 90.893
2018-11-09 03:41:02,210:INFO: Epoch 142/10000
2018-11-09 03:45:14,068:INFO: - Train metrics: accuracy: 0.836 ; loss: 13.617
2018-11-09 03:46:04,800:INFO: - Eval metrics: accuracy: 0.725 ; loss: 91.234
2018-11-09 03:46:04,900:INFO: Epoch 143/10000
2018-11-09 03:50:15,541:INFO: - Train metrics: accuracy: 0.836 ; loss: 13.599
2018-11-09 03:51:06,846:INFO: - Eval metrics: accuracy: 0.724 ; loss: 91.334
2018-11-09 03:51:06,946:INFO: Epoch 144/10000
2018-11-09 03:55:18,375:INFO: - Train metrics: accuracy: 0.836 ; loss: 13.643
2018-11-09 03:56:09,256:INFO: - Eval metrics: accuracy: 0.724 ; loss: 91.326
2018-11-09 03:56:09,348:INFO: Epoch 145/10000
2018-11-09 04:00:20,300:INFO: - Train metrics: accuracy: 0.836 ; loss: 13.527
2018-11-09 04:01:11,456:INFO: - Eval metrics: accuracy: 0.725 ; loss: 91.112
2018-11-09 04:01:11,548:INFO: Epoch 146/10000
2018-11-09 04:05:22,364:INFO: - Train metrics: accuracy: 0.837 ; loss: 13.502
2018-11-09 04:06:13,422:INFO: - Eval metrics: accuracy: 0.725 ; loss: 91.043
2018-11-09 04:06:13,534:INFO: Epoch 147/10000
2018-11-09 04:10:25,221:INFO: - Train metrics: accuracy: 0.837 ; loss: 13.493
2018-11-09 04:11:16,164:INFO: - Eval metrics: accuracy: 0.724 ; loss: 91.579
2018-11-09 04:11:16,271:INFO: Epoch 148/10000
2018-11-09 04:15:25,417:INFO: - Train metrics: accuracy: 0.837 ; loss: 13.475
2018-11-09 04:16:17,723:INFO: - Eval metrics: accuracy: 0.725 ; loss: 91.530
2018-11-09 04:16:18,089:INFO: Epoch 149/10000
2018-11-09 04:20:27,446:INFO: - Train metrics: accuracy: 0.837 ; loss: 13.425
2018-11-09 04:21:18,602:INFO: - Eval metrics: accuracy: 0.725 ; loss: 91.515
2018-11-09 04:21:18,702:INFO: Epoch 150/10000
2018-11-09 04:25:28,906:INFO: - Train metrics: accuracy: 0.837 ; loss: 13.409
2018-11-09 04:26:19,789:INFO: - Eval metrics: accuracy: 0.725 ; loss: 91.593
2018-11-09 04:26:19,892:INFO: Epoch 151/10000
2018-11-09 04:30:31,735:INFO: - Train metrics: accuracy: 0.837 ; loss: 13.374
2018-11-09 04:31:22,763:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.069
2018-11-09 04:31:22,860:INFO: Epoch 152/10000
2018-11-09 04:35:34,078:INFO: - Train metrics: accuracy: 0.837 ; loss: 13.347
2018-11-09 04:36:25,001:INFO: - Eval metrics: accuracy: 0.724 ; loss: 91.851
2018-11-09 04:36:25,106:INFO: Epoch 153/10000
2018-11-09 04:40:38,087:INFO: - Train metrics: accuracy: 0.837 ; loss: 13.335
2018-11-09 04:41:28,958:INFO: - Eval metrics: accuracy: 0.724 ; loss: 91.900
2018-11-09 04:41:29,057:INFO: Epoch 154/10000
2018-11-09 04:45:38,770:INFO: - Train metrics: accuracy: 0.837 ; loss: 13.282
2018-11-09 04:46:29,804:INFO: - Eval metrics: accuracy: 0.724 ; loss: 91.980
2018-11-09 04:46:29,897:INFO: Epoch 155/10000
2018-11-09 04:50:41,422:INFO: - Train metrics: accuracy: 0.837 ; loss: 13.275
2018-11-09 04:51:32,147:INFO: - Eval metrics: accuracy: 0.724 ; loss: 91.984
2018-11-09 04:51:32,250:INFO: Epoch 156/10000
2018-11-09 04:55:43,032:INFO: - Train metrics: accuracy: 0.838 ; loss: 13.224
2018-11-09 04:56:34,014:INFO: - Eval metrics: accuracy: 0.724 ; loss: 92.062
2018-11-09 04:56:34,114:INFO: Epoch 157/10000
2018-11-09 05:00:46,265:INFO: - Train metrics: accuracy: 0.838 ; loss: 13.220
2018-11-09 05:01:37,300:INFO: - Eval metrics: accuracy: 0.724 ; loss: 92.069
2018-11-09 05:01:37,396:INFO: Epoch 158/10000
2018-11-09 05:05:47,811:INFO: - Train metrics: accuracy: 0.838 ; loss: 13.176
2018-11-09 05:06:39,008:INFO: - Eval metrics: accuracy: 0.724 ; loss: 92.060
2018-11-09 05:06:39,114:INFO: Epoch 159/10000
2018-11-09 05:10:49,628:INFO: - Train metrics: accuracy: 0.838 ; loss: 13.157
2018-11-09 05:11:40,814:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.167
2018-11-09 05:11:40,908:INFO: Epoch 160/10000
2018-11-09 05:15:50,598:INFO: - Train metrics: accuracy: 0.838 ; loss: 13.161
2018-11-09 05:16:42,295:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.183
2018-11-09 05:16:42,440:INFO: Epoch 161/10000
2018-11-09 05:20:53,959:INFO: - Train metrics: accuracy: 0.838 ; loss: 13.111
2018-11-09 05:21:45,431:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.231
2018-11-09 05:21:45,531:INFO: Epoch 162/10000
2018-11-09 05:25:56,724:INFO: - Train metrics: accuracy: 0.838 ; loss: 13.106
2018-11-09 05:26:47,790:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.295
2018-11-09 05:26:47,889:INFO: Epoch 163/10000
2018-11-09 05:30:59,289:INFO: - Train metrics: accuracy: 0.838 ; loss: 13.073
2018-11-09 05:31:50,151:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.409
2018-11-09 05:31:50,253:INFO: Epoch 164/10000
2018-11-09 05:36:02,126:INFO: - Train metrics: accuracy: 0.838 ; loss: 13.053
2018-11-09 05:36:52,944:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.405
2018-11-09 05:36:53,056:INFO: Epoch 165/10000
2018-11-09 05:41:02,759:INFO: - Train metrics: accuracy: 0.839 ; loss: 13.014
2018-11-09 05:41:53,896:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.391
2018-11-09 05:41:53,998:INFO: Epoch 166/10000
2018-11-09 05:46:04,249:INFO: - Train metrics: accuracy: 0.839 ; loss: 12.996
2018-11-09 05:46:55,658:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.385
2018-11-09 05:46:55,759:INFO: Epoch 167/10000
2018-11-09 05:51:07,620:INFO: - Train metrics: accuracy: 0.839 ; loss: 12.975
2018-11-09 05:51:58,753:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.463
2018-11-09 05:51:58,853:INFO: Epoch 168/10000
2018-11-09 05:56:10,543:INFO: - Train metrics: accuracy: 0.839 ; loss: 12.947
2018-11-09 05:57:01,590:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.516
2018-11-09 05:57:01,679:INFO: Epoch 169/10000
2018-11-09 06:01:12,250:INFO: - Train metrics: accuracy: 0.839 ; loss: 12.942
2018-11-09 06:02:02,968:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.431
2018-11-09 06:02:03,071:INFO: Epoch 170/10000
2018-11-09 06:06:13,980:INFO: - Train metrics: accuracy: 0.839 ; loss: 12.904
2018-11-09 06:07:05,204:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.405
2018-11-09 06:07:05,311:INFO: Epoch 171/10000
2018-11-09 06:11:17,065:INFO: - Train metrics: accuracy: 0.839 ; loss: 12.942
2018-11-09 06:12:07,338:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.586
2018-11-09 06:12:07,444:INFO: Epoch 172/10000
2018-11-09 06:16:19,120:INFO: - Train metrics: accuracy: 0.839 ; loss: 12.895
2018-11-09 06:17:09,978:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.505
2018-11-09 06:17:10,083:INFO: Epoch 173/10000
2018-11-09 06:21:20,941:INFO: - Train metrics: accuracy: 0.839 ; loss: 12.864
2018-11-09 06:22:11,765:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.533
2018-11-09 06:22:11,864:INFO: Epoch 174/10000
2018-11-09 06:26:22,147:INFO: - Train metrics: accuracy: 0.839 ; loss: 12.845
2018-11-09 06:27:12,724:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.316
2018-11-09 06:27:12,827:INFO: Epoch 175/10000
2018-11-09 06:31:23,583:INFO: - Train metrics: accuracy: 0.839 ; loss: 12.851
2018-11-09 06:32:14,677:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.646
2018-11-09 06:32:14,779:INFO: Epoch 176/10000
2018-11-09 06:36:25,291:INFO: - Train metrics: accuracy: 0.840 ; loss: 12.825
2018-11-09 06:37:16,500:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.628
2018-11-09 06:37:16,601:INFO: Epoch 177/10000
2018-11-09 06:41:26,614:INFO: - Train metrics: accuracy: 0.840 ; loss: 12.784
2018-11-09 06:42:17,509:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.411
2018-11-09 06:42:17,609:INFO: Epoch 178/10000
2018-11-09 06:46:29,679:INFO: - Train metrics: accuracy: 0.840 ; loss: 12.757
2018-11-09 06:47:20,694:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.627
2018-11-09 06:47:20,790:INFO: Epoch 179/10000
2018-11-09 06:51:32,063:INFO: - Train metrics: accuracy: 0.840 ; loss: 12.735
2018-11-09 06:52:23,252:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.644
2018-11-09 06:52:23,349:INFO: Epoch 180/10000
2018-11-09 06:56:35,960:INFO: - Train metrics: accuracy: 0.840 ; loss: 12.721
2018-11-09 06:57:27,087:INFO: - Eval metrics: accuracy: 0.723 ; loss: 92.478
2018-11-09 06:57:27,185:INFO: Epoch 181/10000
2018-11-09 07:01:39,597:INFO: - Train metrics: accuracy: 0.840 ; loss: 12.734
2018-11-09 07:02:30,522:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.706
2018-11-09 07:02:30,623:INFO: Epoch 182/10000
2018-11-09 07:06:41,611:INFO: - Train metrics: accuracy: 0.840 ; loss: 12.683
2018-11-09 07:07:32,058:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.749
2018-11-09 07:07:32,162:INFO: Epoch 183/10000
2018-11-09 07:11:43,162:INFO: - Train metrics: accuracy: 0.840 ; loss: 12.655
2018-11-09 07:12:33,135:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.841
2018-11-09 07:12:33,233:INFO: Epoch 184/10000
2018-11-09 07:16:44,257:INFO: - Train metrics: accuracy: 0.840 ; loss: 12.647
2018-11-09 07:17:35,404:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.843
2018-11-09 07:17:35,500:INFO: Epoch 185/10000
2018-11-09 07:21:46,854:INFO: - Train metrics: accuracy: 0.840 ; loss: 12.638
2018-11-09 07:22:37,655:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.867
2018-11-09 07:22:37,758:INFO: Epoch 186/10000
2018-11-09 07:26:49,269:INFO: - Train metrics: accuracy: 0.840 ; loss: 12.641
2018-11-09 07:27:40,618:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.849
2018-11-09 07:27:40,720:INFO: Epoch 187/10000
2018-11-09 07:31:52,708:INFO: - Train metrics: accuracy: 0.841 ; loss: 12.576
2018-11-09 07:32:43,661:INFO: - Eval metrics: accuracy: 0.722 ; loss: 93.041
2018-11-09 07:32:43,756:INFO: Epoch 188/10000
2018-11-09 07:36:54,515:INFO: - Train metrics: accuracy: 0.841 ; loss: 12.576
2018-11-09 07:37:45,619:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.031
2018-11-09 07:37:45,720:INFO: Epoch 189/10000
2018-11-09 07:41:55,845:INFO: - Train metrics: accuracy: 0.841 ; loss: 12.579
2018-11-09 07:42:46,756:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.970
2018-11-09 07:42:46,845:INFO: Epoch 190/10000
2018-11-09 07:46:58,159:INFO: - Train metrics: accuracy: 0.841 ; loss: 12.543
2018-11-09 07:47:49,315:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.942
2018-11-09 07:47:49,416:INFO: Epoch 191/10000
2018-11-09 07:51:41,741:INFO: - Train metrics: accuracy: 0.841 ; loss: 12.524
2018-11-09 07:52:24,241:INFO: - Eval metrics: accuracy: 0.721 ; loss: 92.924
2018-11-09 07:52:25,048:INFO: Epoch 192/10000
2018-11-09 07:56:08,594:INFO: - Train metrics: accuracy: 0.841 ; loss: 12.498
2018-11-09 07:56:59,976:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.277
2018-11-09 07:57:00,351:INFO: Epoch 193/10000
2018-11-09 08:01:11,780:INFO: - Train metrics: accuracy: 0.841 ; loss: 12.478
2018-11-09 08:02:02,860:INFO: - Eval metrics: accuracy: 0.722 ; loss: 93.232
2018-11-09 08:02:02,962:INFO: Epoch 194/10000
2018-11-09 08:06:14,401:INFO: - Train metrics: accuracy: 0.841 ; loss: 12.485
2018-11-09 08:07:05,758:INFO: - Eval metrics: accuracy: 0.722 ; loss: 93.079
2018-11-09 08:07:05,860:INFO: Epoch 195/10000
2018-11-09 08:11:16,626:INFO: - Train metrics: accuracy: 0.841 ; loss: 12.460
2018-11-09 08:12:06,334:INFO: - Eval metrics: accuracy: 0.721 ; loss: 92.903
2018-11-09 08:12:06,420:INFO: Epoch 196/10000
2018-11-09 08:16:19,149:INFO: - Train metrics: accuracy: 0.841 ; loss: 12.425
2018-11-09 08:17:10,013:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.951
2018-11-09 08:17:10,112:INFO: Epoch 197/10000
2018-11-09 08:21:22,684:INFO: - Train metrics: accuracy: 0.841 ; loss: 12.422
2018-11-09 08:22:13,782:INFO: - Eval metrics: accuracy: 0.722 ; loss: 92.946
2018-11-09 08:22:13,876:INFO: Epoch 198/10000
2018-11-09 08:26:27,548:INFO: - Train metrics: accuracy: 0.841 ; loss: 12.410
2018-11-09 08:27:18,701:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.262
2018-11-09 08:27:18,816:INFO: Epoch 199/10000
2018-11-09 08:31:31,934:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.374
2018-11-09 08:32:22,441:INFO: - Eval metrics: accuracy: 0.722 ; loss: 93.278
2018-11-09 08:32:22,542:INFO: Epoch 200/10000
2018-11-09 08:36:34,630:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.363
2018-11-09 08:37:25,862:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.271
2018-11-09 08:37:25,961:INFO: Epoch 201/10000
2018-11-09 08:41:36,994:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.365
2018-11-09 08:42:27,687:INFO: - Eval metrics: accuracy: 0.722 ; loss: 93.086
2018-11-09 08:42:27,784:INFO: Epoch 202/10000
2018-11-09 08:46:38,307:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.331
2018-11-09 08:47:29,246:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.273
2018-11-09 08:47:29,349:INFO: Epoch 203/10000
2018-11-09 08:51:41,669:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.313
2018-11-09 08:52:32,645:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.434
2018-11-09 08:52:32,743:INFO: Epoch 204/10000
2018-11-09 08:56:44,004:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.283
2018-11-09 08:57:35,071:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.476
2018-11-09 08:57:35,176:INFO: Epoch 205/10000
2018-11-09 09:01:45,790:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.279
2018-11-09 09:02:36,719:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.513
2018-11-09 09:02:36,823:INFO: Epoch 206/10000
2018-11-09 09:06:47,962:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.256
2018-11-09 09:07:39,257:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.531
2018-11-09 09:07:39,361:INFO: Epoch 207/10000
2018-11-09 09:11:50,824:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.246
2018-11-09 09:12:40,992:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.592
2018-11-09 09:12:41,088:INFO: Epoch 208/10000
2018-11-09 09:16:50,624:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.231
2018-11-09 09:17:41,607:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.654
2018-11-09 09:17:41,708:INFO: Epoch 209/10000
2018-11-09 09:21:51,327:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.210
2018-11-09 09:22:42,058:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.744
2018-11-09 09:22:42,161:INFO: Epoch 210/10000
2018-11-09 09:26:52,365:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.191
2018-11-09 09:27:43,372:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.798
2018-11-09 09:27:43,471:INFO: Epoch 211/10000
2018-11-09 09:31:51,852:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.177
2018-11-09 09:32:42,594:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.832
2018-11-09 09:32:42,693:INFO: Epoch 212/10000
2018-11-09 09:36:52,637:INFO: - Train metrics: accuracy: 0.842 ; loss: 12.181
2018-11-09 09:37:43,286:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.779
2018-11-09 09:37:43,382:INFO: Epoch 213/10000
2018-11-09 09:41:53,756:INFO: - Train metrics: accuracy: 0.843 ; loss: 12.147
2018-11-09 09:42:44,470:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.933
2018-11-09 09:42:44,564:INFO: Epoch 214/10000
2018-11-09 09:46:54,595:INFO: - Train metrics: accuracy: 0.843 ; loss: 12.131
2018-11-09 09:47:45,430:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.898
2018-11-09 09:47:45,531:INFO: Epoch 215/10000
2018-11-09 09:51:56,053:INFO: - Train metrics: accuracy: 0.843 ; loss: 12.114
2018-11-09 09:52:46,768:INFO: - Eval metrics: accuracy: 0.721 ; loss: 94.129
2018-11-09 09:52:46,858:INFO: Epoch 216/10000
2018-11-09 09:56:57,985:INFO: - Train metrics: accuracy: 0.843 ; loss: 12.100
2018-11-09 09:57:48,557:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.939
2018-11-09 09:57:48,656:INFO: Epoch 217/10000
2018-11-09 10:01:59,768:INFO: - Train metrics: accuracy: 0.843 ; loss: 12.093
2018-11-09 10:02:50,658:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.786
2018-11-09 10:02:50,755:INFO: Epoch 218/10000
2018-11-09 10:07:00,050:INFO: - Train metrics: accuracy: 0.843 ; loss: 12.080
2018-11-09 10:07:50,649:INFO: - Eval metrics: accuracy: 0.721 ; loss: 94.088
2018-11-09 10:07:50,749:INFO: Epoch 219/10000
2018-11-09 10:12:00,073:INFO: - Train metrics: accuracy: 0.843 ; loss: 12.056
2018-11-09 10:12:50,895:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.151
2018-11-09 10:12:50,995:INFO: Epoch 220/10000
2018-11-09 10:17:03,469:INFO: - Train metrics: accuracy: 0.843 ; loss: 12.058
2018-11-09 10:17:54,184:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.807
2018-11-09 10:17:54,283:INFO: Epoch 221/10000
2018-11-09 10:22:05,469:INFO: - Train metrics: accuracy: 0.843 ; loss: 12.036
2018-11-09 10:22:56,476:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.903
2018-11-09 10:22:56,576:INFO: Epoch 222/10000
2018-11-09 10:27:08,141:INFO: - Train metrics: accuracy: 0.843 ; loss: 12.018
2018-11-09 10:27:58,731:INFO: - Eval metrics: accuracy: 0.721 ; loss: 93.903
2018-11-09 10:27:58,832:INFO: Epoch 223/10000
2018-11-09 10:32:08,980:INFO: - Train metrics: accuracy: 0.843 ; loss: 12.004
2018-11-09 10:32:59,983:INFO: - Eval metrics: accuracy: 0.720 ; loss: 93.969
2018-11-09 10:33:00,076:INFO: Epoch 224/10000
2018-11-09 10:37:11,605:INFO: - Train metrics: accuracy: 0.843 ; loss: 11.986
2018-11-09 10:38:02,380:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.220
2018-11-09 10:38:02,478:INFO: Epoch 225/10000
2018-11-09 10:42:13,990:INFO: - Train metrics: accuracy: 0.843 ; loss: 11.989
2018-11-09 10:43:04,770:INFO: - Eval metrics: accuracy: 0.721 ; loss: 94.339
2018-11-09 10:43:04,870:INFO: Epoch 226/10000
2018-11-09 10:47:16,718:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.952
2018-11-09 10:48:07,330:INFO: - Eval metrics: accuracy: 0.721 ; loss: 94.009
2018-11-09 10:48:07,425:INFO: Epoch 227/10000
2018-11-09 10:52:19,928:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.937
2018-11-09 10:53:08,521:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.220
2018-11-09 10:53:08,604:INFO: Epoch 228/10000
2018-11-09 10:57:10,037:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.915
2018-11-09 10:57:57,851:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.120
2018-11-09 10:57:58,484:INFO: Epoch 229/10000
2018-11-09 11:02:01,724:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.901
2018-11-09 11:02:50,295:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.349
2018-11-09 11:02:50,805:INFO: Epoch 230/10000
2018-11-09 11:06:54,612:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.893
2018-11-09 11:07:48,234:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.293
2018-11-09 11:07:48,629:INFO: Epoch 231/10000
2018-11-09 11:11:51,301:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.873
2018-11-09 11:12:41,512:INFO: - Eval metrics: accuracy: 0.721 ; loss: 94.210
2018-11-09 11:12:41,850:INFO: Epoch 232/10000
2018-11-09 11:16:48,917:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.868
2018-11-09 11:17:40,148:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.309
2018-11-09 11:17:40,311:INFO: Epoch 233/10000
2018-11-09 11:21:40,361:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.857
2018-11-09 11:22:31,887:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.436
2018-11-09 11:22:32,174:INFO: Epoch 234/10000
2018-11-09 11:26:42,251:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.834
2018-11-09 11:27:33,004:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.356
2018-11-09 11:27:33,150:INFO: Epoch 235/10000
2018-11-09 11:31:42,162:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.809
2018-11-09 11:32:30,002:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.298
2018-11-09 11:32:30,093:INFO: Epoch 236/10000
2018-11-09 11:36:39,972:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.810
2018-11-09 11:37:30,797:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.303
2018-11-09 11:37:30,903:INFO: Epoch 237/10000
2018-11-09 11:41:40,386:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.803
2018-11-09 11:42:30,983:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.506
2018-11-09 11:42:31,096:INFO: Epoch 238/10000
2018-11-09 11:46:40,086:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.782
2018-11-09 11:47:30,899:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.615
2018-11-09 11:47:31,017:INFO: Epoch 239/10000
2018-11-09 11:51:41,442:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.758
2018-11-09 11:52:32,453:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.524
2018-11-09 11:52:32,549:INFO: Epoch 240/10000
2018-11-09 11:56:40,401:INFO: - Train metrics: accuracy: 0.844 ; loss: 11.767
2018-11-09 11:57:31,173:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.554
2018-11-09 11:57:31,266:INFO: Epoch 241/10000
2018-11-09 12:01:40,942:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.735
2018-11-09 12:02:31,559:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.497
2018-11-09 12:02:31,673:INFO: Epoch 242/10000
2018-11-09 12:06:41,097:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.723
2018-11-09 12:07:31,912:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.537
2018-11-09 12:07:32,013:INFO: Epoch 243/10000
2018-11-09 12:11:43,624:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.700
2018-11-09 12:12:33,892:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.595
2018-11-09 12:12:33,998:INFO: Epoch 244/10000
2018-11-09 12:16:45,186:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.692
2018-11-09 12:17:35,903:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.673
2018-11-09 12:17:36,019:INFO: Epoch 245/10000
2018-11-09 12:21:48,106:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.680
2018-11-09 12:22:38,651:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.554
2018-11-09 12:22:38,752:INFO: Epoch 246/10000
2018-11-09 12:26:50,884:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.666
2018-11-09 12:27:41,640:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.517
2018-11-09 12:27:41,741:INFO: Epoch 247/10000
2018-11-09 12:31:53,022:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.661
2018-11-09 12:32:44,391:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.770
2018-11-09 12:32:44,483:INFO: Epoch 248/10000
2018-11-09 12:36:53,247:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.646
2018-11-09 12:37:43,948:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.822
2018-11-09 12:37:44,040:INFO: Epoch 249/10000
2018-11-09 12:41:53,710:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.639
2018-11-09 12:42:43,305:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.835
2018-11-09 12:42:43,403:INFO: Epoch 250/10000
2018-11-09 12:46:31,200:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.646
2018-11-09 12:47:21,824:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.837
2018-11-09 12:47:21,950:INFO: Epoch 251/10000
2018-11-09 12:51:31,784:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.646
2018-11-09 12:52:22,443:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.637
2018-11-09 12:52:22,546:INFO: Epoch 252/10000
2018-11-09 12:56:33,541:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.612
2018-11-09 12:57:24,616:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.637
2018-11-09 12:57:24,719:INFO: Epoch 253/10000
2018-11-09 13:01:29,783:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.595
2018-11-09 13:02:20,211:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.841
2018-11-09 13:02:20,306:INFO: Epoch 254/10000
2018-11-09 13:06:31,219:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.596
2018-11-09 13:07:22,387:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.873
2018-11-09 13:07:22,493:INFO: Epoch 255/10000
2018-11-09 13:11:32,020:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.564
2018-11-09 13:12:21,835:INFO: - Eval metrics: accuracy: 0.720 ; loss: 94.882
2018-11-09 13:12:21,931:INFO: Epoch 256/10000
2018-11-09 13:16:30,064:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.558
2018-11-09 13:17:19,666:INFO: - Eval metrics: accuracy: 0.720 ; loss: 95.137
2018-11-09 13:17:19,765:INFO: Epoch 257/10000
2018-11-09 13:21:24,979:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.547
2018-11-09 13:22:16,001:INFO: - Eval metrics: accuracy: 0.719 ; loss: 94.913
2018-11-09 13:22:16,097:INFO: Epoch 258/10000
2018-11-09 13:26:22,729:INFO: - Train metrics: accuracy: 0.845 ; loss: 11.523
2018-11-09 13:27:13,110:INFO: - Eval metrics: accuracy: 0.719 ; loss: 94.962
2018-11-09 13:27:13,194:INFO: Epoch 259/10000
2018-11-09 13:31:20,988:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.527
2018-11-09 13:32:11,601:INFO: - Eval metrics: accuracy: 0.719 ; loss: 94.953
2018-11-09 13:32:11,737:INFO: Epoch 260/10000
2018-11-09 13:36:17,508:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.514
2018-11-09 13:37:08,143:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.028
2018-11-09 13:37:08,246:INFO: Epoch 261/10000
2018-11-09 13:41:13,807:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.586
2018-11-09 13:42:04,564:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.078
2018-11-09 13:42:04,662:INFO: Epoch 262/10000
2018-11-09 13:46:11,886:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.493
2018-11-09 13:47:03,042:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.022
2018-11-09 13:47:03,141:INFO: Epoch 263/10000
2018-11-09 13:51:11,128:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.473
2018-11-09 13:52:01,764:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.087
2018-11-09 13:52:01,866:INFO: Epoch 264/10000
2018-11-09 13:56:14,087:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.459
2018-11-09 13:57:04,971:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.200
2018-11-09 13:57:05,081:INFO: Epoch 265/10000
2018-11-09 14:01:18,176:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.456
2018-11-09 14:02:08,681:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.176
2018-11-09 14:02:08,781:INFO: Epoch 266/10000
2018-11-09 14:06:20,750:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.436
2018-11-09 14:07:11,570:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.323
2018-11-09 14:07:11,667:INFO: Epoch 267/10000
2018-11-09 14:11:21,948:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.421
2018-11-09 14:12:11,930:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.285
2018-11-09 14:12:12,060:INFO: Epoch 268/10000
2018-11-09 14:16:23,115:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.551
2018-11-09 14:17:13,986:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.337
2018-11-09 14:17:14,083:INFO: Epoch 269/10000
2018-11-09 14:21:24,141:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.441
2018-11-09 14:22:14,888:INFO: - Eval metrics: accuracy: 0.720 ; loss: 95.418
2018-11-09 14:22:14,986:INFO: Epoch 270/10000
2018-11-09 14:26:25,549:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.418
2018-11-09 14:27:16,263:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.301
2018-11-09 14:27:16,355:INFO: Epoch 271/10000
2018-11-09 14:31:28,193:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.409
2018-11-09 14:32:18,853:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.406
2018-11-09 14:32:18,948:INFO: Epoch 272/10000
2018-11-09 14:36:30,243:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.379
2018-11-09 14:37:21,395:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.325
2018-11-09 14:37:21,502:INFO: Epoch 273/10000
2018-11-09 14:41:33,997:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.370
2018-11-09 14:42:24,508:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.425
2018-11-09 14:42:24,611:INFO: Epoch 274/10000
2018-11-09 14:46:36,047:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.355
2018-11-09 14:47:26,633:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.436
2018-11-09 14:47:26,729:INFO: Epoch 275/10000
2018-11-09 14:51:37,822:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.348
2018-11-09 14:52:28,757:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.423
2018-11-09 14:52:28,843:INFO: Epoch 276/10000
2018-11-09 14:56:40,249:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.339
2018-11-09 14:57:30,847:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.524
2018-11-09 14:57:30,959:INFO: Epoch 277/10000
2018-11-09 15:01:42,725:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.337
2018-11-09 15:02:33,480:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.550
2018-11-09 15:02:33,579:INFO: Epoch 278/10000
2018-11-09 15:06:44,259:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.314
2018-11-09 15:07:35,296:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.540
2018-11-09 15:07:35,394:INFO: Epoch 279/10000
2018-11-09 15:11:45,862:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.310
2018-11-09 15:12:35,796:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.605
2018-11-09 15:12:35,894:INFO: Epoch 280/10000
2018-11-09 15:16:46,749:INFO: - Train metrics: accuracy: 0.846 ; loss: 11.326
2018-11-09 15:17:43,019:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.509
2018-11-09 15:17:43,098:INFO: Epoch 281/10000
2018-11-09 15:21:02,790:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.290
2018-11-09 15:21:53,416:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.736
2018-11-09 15:21:53,516:INFO: Epoch 282/10000
2018-11-09 15:26:03,807:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.278
2018-11-09 15:26:54,471:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.597
2018-11-09 15:26:54,569:INFO: Epoch 283/10000
2018-11-09 15:31:04,012:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.280
2018-11-09 15:31:54,603:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.699
2018-11-09 15:31:54,704:INFO: Epoch 284/10000
2018-11-09 15:36:05,199:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.258
2018-11-09 15:36:55,860:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.842
2018-11-09 15:36:55,963:INFO: Epoch 285/10000
2018-11-09 15:41:06,061:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.242
2018-11-09 15:41:56,800:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.814
2018-11-09 15:41:56,888:INFO: Epoch 286/10000
2018-11-09 15:46:06,789:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.237
2018-11-09 15:46:57,386:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.873
2018-11-09 15:46:57,479:INFO: Epoch 287/10000
2018-11-09 15:51:09,184:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.254
2018-11-09 15:51:59,740:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.836
2018-11-09 15:51:59,833:INFO: Epoch 288/10000
2018-11-09 15:56:10,572:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.227
2018-11-09 15:57:01,292:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.963
2018-11-09 15:57:01,384:INFO: Epoch 289/10000
2018-11-09 16:01:12,398:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.227
2018-11-09 16:02:03,059:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.967
2018-11-09 16:02:03,163:INFO: Epoch 290/10000
2018-11-09 16:06:13,608:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.207
2018-11-09 16:07:04,268:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.975
2018-11-09 16:07:04,363:INFO: Epoch 291/10000
2018-11-09 16:11:14,940:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.190
2018-11-09 16:12:05,053:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.981
2018-11-09 16:12:05,158:INFO: Epoch 292/10000
2018-11-09 16:16:17,157:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.180
2018-11-09 16:17:07,783:INFO: - Eval metrics: accuracy: 0.719 ; loss: 95.986
2018-11-09 16:17:07,882:INFO: Epoch 293/10000
2018-11-09 16:21:12,303:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.201
2018-11-09 16:22:02,816:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.325
2018-11-09 16:22:02,912:INFO: Epoch 294/10000
2018-11-09 16:26:09,159:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.177
2018-11-09 16:27:00,120:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.287
2018-11-09 16:27:00,223:INFO: Epoch 295/10000
2018-11-09 16:31:06,785:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.146
2018-11-09 16:31:57,313:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.359
2018-11-09 16:31:57,432:INFO: Epoch 296/10000
2018-11-09 16:36:04,678:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.141
2018-11-09 16:36:55,450:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.421
2018-11-09 16:36:55,557:INFO: Epoch 297/10000
2018-11-09 16:41:03,576:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.130
2018-11-09 16:41:54,191:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.546
2018-11-09 16:41:54,291:INFO: Epoch 298/10000
2018-11-09 16:46:04,290:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.124
2018-11-09 16:46:55,076:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.476
2018-11-09 16:46:55,190:INFO: Epoch 299/10000
2018-11-09 16:51:04,617:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.127
2018-11-09 16:51:55,440:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.418
2018-11-09 16:51:55,533:INFO: Epoch 300/10000
2018-11-09 16:56:05,053:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.114
2018-11-09 16:56:55,775:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.693
2018-11-09 16:56:55,877:INFO: Epoch 301/10000
2018-11-09 17:01:06,840:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.092
2018-11-09 17:01:57,540:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.654
2018-11-09 17:01:57,642:INFO: Epoch 302/10000
2018-11-09 17:06:06,921:INFO: - Train metrics: accuracy: 0.847 ; loss: 11.158
2018-11-09 17:06:57,980:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.603
2018-11-09 17:06:58,088:INFO: Epoch 303/10000
2018-11-09 17:11:08,249:INFO: - Train metrics: accuracy: 0.848 ; loss: 11.084
2018-11-09 17:11:58,502:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.751
2018-11-09 17:11:58,588:INFO: Epoch 304/10000
2018-11-09 17:16:07,884:INFO: - Train metrics: accuracy: 0.848 ; loss: 11.070
2018-11-09 17:16:58,717:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.707
2018-11-09 17:16:58,816:INFO: Epoch 305/10000
2018-11-09 17:21:08,385:INFO: - Train metrics: accuracy: 0.848 ; loss: 11.071
2018-11-09 17:21:58,949:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.757
2018-11-09 17:21:59,047:INFO: Epoch 306/10000
2018-11-09 17:26:08,305:INFO: - Train metrics: accuracy: 0.848 ; loss: 11.061
2018-11-09 17:26:59,105:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.804
2018-11-09 17:26:59,205:INFO: Epoch 307/10000
2018-11-09 17:31:09,293:INFO: - Train metrics: accuracy: 0.848 ; loss: 11.053
2018-11-09 17:32:00,036:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.804
2018-11-09 17:32:00,140:INFO: Epoch 308/10000
2018-11-09 17:36:10,290:INFO: - Train metrics: accuracy: 0.848 ; loss: 11.049
2018-11-09 17:37:01,200:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.748
2018-11-09 17:37:01,307:INFO: Epoch 309/10000
2018-11-09 17:41:12,447:INFO: - Train metrics: accuracy: 0.848 ; loss: 11.037
2018-11-09 17:42:03,520:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.737
2018-11-09 17:42:03,607:INFO: Epoch 310/10000
2018-11-09 17:46:09,436:INFO: - Train metrics: accuracy: 0.848 ; loss: 11.025
2018-11-09 17:46:58,545:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.793
2018-11-09 17:46:58,637:INFO: Epoch 311/10000
2018-11-09 17:51:09,509:INFO: - Train metrics: accuracy: 0.848 ; loss: 11.025
2018-11-09 17:52:00,966:INFO: - Eval metrics: accuracy: 0.718 ; loss: 96.804
2018-11-09 17:52:01,069:INFO: Epoch 312/10000
2018-11-09 17:56:13,616:INFO: - Train metrics: accuracy: 0.848 ; loss: 11.007
2018-11-09 17:57:05,305:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.758
2018-11-09 17:57:05,407:INFO: Epoch 313/10000
2018-11-09 18:01:17,880:INFO: - Train metrics: accuracy: 0.848 ; loss: 11.004
2018-11-09 18:02:09,624:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.830
2018-11-09 18:02:09,727:INFO: Epoch 314/10000
2018-11-09 18:06:23,106:INFO: - Train metrics: accuracy: 0.848 ; loss: 11.029
2018-11-09 18:07:15,112:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.892
2018-11-09 18:07:15,226:INFO: Epoch 315/10000
2018-11-09 18:11:28,371:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.984
2018-11-09 18:12:19,177:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.817
2018-11-09 18:12:19,278:INFO: Epoch 316/10000
2018-11-09 18:16:31,302:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.986
2018-11-09 18:17:22,895:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.865
2018-11-09 18:17:22,983:INFO: Epoch 317/10000
2018-11-09 18:21:34,988:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.970
2018-11-09 18:22:26,696:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.933
2018-11-09 18:22:26,804:INFO: Epoch 318/10000
2018-11-09 18:26:39,154:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.969
2018-11-09 18:27:30,629:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.992
2018-11-09 18:27:30,726:INFO: Epoch 319/10000
2018-11-09 18:31:42,349:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.964
2018-11-09 18:32:34,098:INFO: - Eval metrics: accuracy: 0.718 ; loss: 96.985
2018-11-09 18:32:34,200:INFO: Epoch 320/10000
2018-11-09 18:36:48,450:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.946
2018-11-09 18:37:40,347:INFO: - Eval metrics: accuracy: 0.719 ; loss: 96.955
2018-11-09 18:37:40,453:INFO: Epoch 321/10000
2018-11-09 18:41:52,896:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.939
2018-11-09 18:42:44,496:INFO: - Eval metrics: accuracy: 0.719 ; loss: 97.003
2018-11-09 18:42:44,599:INFO: Epoch 322/10000
2018-11-09 18:46:57,187:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.929
2018-11-09 18:47:48,896:INFO: - Eval metrics: accuracy: 0.719 ; loss: 97.040
2018-11-09 18:47:48,994:INFO: Epoch 323/10000
2018-11-09 18:52:01,582:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.929
2018-11-09 18:52:53,466:INFO: - Eval metrics: accuracy: 0.719 ; loss: 97.114
2018-11-09 18:52:53,560:INFO: Epoch 324/10000
2018-11-09 18:57:05,761:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.934
2018-11-09 18:57:57,397:INFO: - Eval metrics: accuracy: 0.719 ; loss: 97.099
2018-11-09 18:57:57,505:INFO: Epoch 325/10000
2018-11-09 19:02:09,268:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.912
2018-11-09 19:03:01,045:INFO: - Eval metrics: accuracy: 0.719 ; loss: 97.161
2018-11-09 19:03:01,141:INFO: Epoch 326/10000
2018-11-09 19:07:13,975:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.903
2018-11-09 19:08:05,424:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.157
2018-11-09 19:08:05,531:INFO: Epoch 327/10000
2018-11-09 19:12:16,483:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.952
2018-11-09 19:13:08,068:INFO: - Eval metrics: accuracy: 0.719 ; loss: 97.062
2018-11-09 19:13:08,173:INFO: Epoch 328/10000
2018-11-09 19:17:21,492:INFO: - Train metrics: accuracy: 0.848 ; loss: 10.958
2018-11-09 19:18:13,187:INFO: - Eval metrics: accuracy: 0.719 ; loss: 97.086
2018-11-09 19:18:13,291:INFO: Epoch 329/10000
2018-11-09 19:22:27,105:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.879
2018-11-09 19:23:18,866:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.150
2018-11-09 19:23:18,987:INFO: Epoch 330/10000
2018-11-09 19:27:32,165:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.873
2018-11-09 19:28:23,897:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.263
2018-11-09 19:28:23,997:INFO: Epoch 331/10000
2018-11-09 19:32:37,711:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.862
2018-11-09 19:33:29,195:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.258
2018-11-09 19:33:29,297:INFO: Epoch 332/10000
2018-11-09 19:37:41,063:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.848
2018-11-09 19:38:32,759:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.183
2018-11-09 19:38:32,853:INFO: Epoch 333/10000
2018-11-09 19:42:45,258:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.853
2018-11-09 19:43:37,230:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.179
2018-11-09 19:43:37,337:INFO: Epoch 334/10000
2018-11-09 19:47:48,787:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.850
2018-11-09 19:48:40,449:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.352
2018-11-09 19:48:40,553:INFO: Epoch 335/10000
2018-11-09 19:52:53,401:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.865
2018-11-09 19:53:45,275:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.436
2018-11-09 19:53:45,379:INFO: Epoch 336/10000
2018-11-09 19:57:58,584:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.852
2018-11-09 19:58:50,066:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.531
2018-11-09 19:58:50,165:INFO: Epoch 337/10000
2018-11-09 20:03:03,769:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.818
2018-11-09 20:03:55,467:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.339
2018-11-09 20:03:55,565:INFO: Epoch 338/10000
2018-11-09 20:08:07,748:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.815
2018-11-09 20:08:59,415:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.562
2018-11-09 20:08:59,522:INFO: Epoch 339/10000
2018-11-09 20:13:10,808:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.812
2018-11-09 20:14:02,549:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.631
2018-11-09 20:14:02,651:INFO: Epoch 340/10000
2018-11-09 20:18:15,338:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.804
2018-11-09 20:19:07,056:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.576
2018-11-09 20:19:07,156:INFO: Epoch 341/10000
2018-11-09 20:23:19,921:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.796
2018-11-09 20:24:11,734:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.589
2018-11-09 20:24:11,834:INFO: Epoch 342/10000
2018-11-09 20:28:25,196:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.801
2018-11-09 20:29:17,045:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.679
2018-11-09 20:29:17,154:INFO: Epoch 343/10000
2018-11-09 20:33:31,388:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.786
2018-11-09 20:34:23,185:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.495
2018-11-09 20:34:23,289:INFO: Epoch 344/10000
2018-11-09 20:38:37,768:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.780
2018-11-09 20:39:29,521:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.670
2018-11-09 20:39:29,610:INFO: Epoch 345/10000
2018-11-09 20:43:42,589:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.774
2018-11-09 20:44:34,021:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.763
2018-11-09 20:44:34,123:INFO: Epoch 346/10000
2018-11-09 20:48:47,778:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.756
2018-11-09 20:49:39,381:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.744
2018-11-09 20:49:39,484:INFO: Epoch 347/10000
2018-11-09 20:53:52,503:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.757
2018-11-09 20:54:44,494:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.823
2018-11-09 20:54:44,600:INFO: Epoch 348/10000
2018-11-09 20:58:57,072:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.755
2018-11-09 20:59:48,879:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.884
2018-11-09 20:59:48,980:INFO: Epoch 349/10000
2018-11-09 21:04:01,410:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.740
2018-11-09 21:04:53,201:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.873
2018-11-09 21:04:53,289:INFO: Epoch 350/10000
2018-11-09 21:09:05,430:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.738
2018-11-09 21:09:57,106:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.943
2018-11-09 21:09:57,215:INFO: Epoch 351/10000
2018-11-09 21:14:10,836:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.730
2018-11-09 21:15:02,989:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.877
2018-11-09 21:15:03,093:INFO: Epoch 352/10000
2018-11-09 21:19:17,049:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.727
2018-11-09 21:20:08,480:INFO: - Eval metrics: accuracy: 0.718 ; loss: 97.842
2018-11-09 21:20:08,576:INFO: Epoch 353/10000
2018-11-09 21:24:20,876:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.710
2018-11-09 21:25:12,737:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.028
2018-11-09 21:25:12,830:INFO: Epoch 354/10000
2018-11-09 21:29:26,101:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.713
2018-11-09 21:30:17,530:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.148
2018-11-09 21:30:17,626:INFO: Epoch 355/10000
2018-11-09 21:34:30,084:INFO: - Train metrics: accuracy: 0.849 ; loss: 10.714
2018-11-09 21:35:21,493:INFO: - Eval metrics: accuracy: 0.718 ; loss: 98.080
2018-11-09 21:35:21,595:INFO: Epoch 356/10000
2018-11-09 21:39:35,967:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.690
2018-11-09 21:40:27,413:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.037
2018-11-09 21:40:27,501:INFO: Epoch 357/10000
2018-11-09 21:44:42,065:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.694
2018-11-09 21:45:33,497:INFO: - Eval metrics: accuracy: 0.718 ; loss: 98.179
2018-11-09 21:45:33,589:INFO: Epoch 358/10000
2018-11-09 21:49:46,899:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.685
2018-11-09 21:50:38,643:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.282
2018-11-09 21:50:38,742:INFO: Epoch 359/10000
2018-11-09 21:54:52,740:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.666
2018-11-09 21:55:44,196:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.324
2018-11-09 21:55:44,298:INFO: Epoch 360/10000
2018-11-09 21:59:59,421:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.681
2018-11-09 22:00:51,021:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.289
2018-11-09 22:00:51,133:INFO: Epoch 361/10000
2018-11-09 22:05:04,219:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.657
2018-11-09 22:05:55,310:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.151
2018-11-09 22:05:55,409:INFO: Epoch 362/10000
2018-11-09 22:10:10,222:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.657
2018-11-09 22:11:01,487:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.022
2018-11-09 22:11:01,589:INFO: Epoch 363/10000
2018-11-09 22:15:14,232:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.657
2018-11-09 22:16:05,934:INFO: - Eval metrics: accuracy: 0.718 ; loss: 98.210
2018-11-09 22:16:06,031:INFO: Epoch 364/10000
2018-11-09 22:20:18,802:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.654
2018-11-09 22:21:10,583:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.233
2018-11-09 22:21:10,684:INFO: Epoch 365/10000
2018-11-09 22:25:24,854:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.640
2018-11-09 22:26:16,601:INFO: - Eval metrics: accuracy: 0.718 ; loss: 98.221
2018-11-09 22:26:16,695:INFO: Epoch 366/10000
2018-11-09 22:30:30,985:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.628
2018-11-09 22:31:22,641:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.306
2018-11-09 22:31:22,742:INFO: Epoch 367/10000
2018-11-09 22:35:36,154:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.626
2018-11-09 22:36:27,784:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.371
2018-11-09 22:36:27,883:INFO: Epoch 368/10000
2018-11-09 22:40:41,696:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.615
2018-11-09 22:41:33,121:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.481
2018-11-09 22:41:33,223:INFO: Epoch 369/10000
2018-11-09 22:45:46,040:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.623
2018-11-09 22:46:37,763:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.534
2018-11-09 22:46:37,864:INFO: Epoch 370/10000
2018-11-09 22:50:52,063:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.612
2018-11-09 22:51:43,809:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.353
2018-11-09 22:51:43,910:INFO: Epoch 371/10000
2018-11-09 22:55:56,288:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.598
2018-11-09 22:56:48,199:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.502
2018-11-09 22:56:48,298:INFO: Epoch 372/10000
2018-11-09 23:01:00,979:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.599
2018-11-09 23:01:52,686:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.509
2018-11-09 23:01:52,788:INFO: Epoch 373/10000
2018-11-09 23:06:05,433:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.587
2018-11-09 23:06:57,053:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.411
2018-11-09 23:06:57,152:INFO: Epoch 374/10000
2018-11-09 23:11:09,160:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.584
2018-11-09 23:12:00,003:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.546
2018-11-09 23:12:00,102:INFO: Epoch 375/10000
2018-11-09 23:16:13,381:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.575
2018-11-09 23:17:05,254:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.586
2018-11-09 23:17:05,359:INFO: Epoch 376/10000
2018-11-09 23:21:18,386:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.567
2018-11-09 23:22:10,001:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.625
2018-11-09 23:22:10,098:INFO: Epoch 377/10000
2018-11-09 23:26:21,719:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.563
2018-11-09 23:27:13,426:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.642
2018-11-09 23:27:13,523:INFO: Epoch 378/10000
2018-11-09 23:31:26,173:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.558
2018-11-09 23:32:17,887:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.709
2018-11-09 23:32:17,985:INFO: Epoch 379/10000
2018-11-09 23:36:30,206:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.545
2018-11-09 23:37:21,646:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.645
2018-11-09 23:37:21,749:INFO: Epoch 380/10000
2018-11-09 23:41:33,879:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.550
2018-11-09 23:42:25,628:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.660
2018-11-09 23:42:25,733:INFO: Epoch 381/10000
2018-11-09 23:46:38,027:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.541
2018-11-09 23:47:30,067:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.654
2018-11-09 23:47:30,189:INFO: Epoch 382/10000
2018-11-09 23:51:44,176:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.529
2018-11-09 23:52:35,871:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.709
2018-11-09 23:52:35,973:INFO: Epoch 383/10000
2018-11-09 23:56:48,787:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.525
2018-11-09 23:57:40,868:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.714
2018-11-09 23:57:40,979:INFO: Epoch 384/10000
2018-11-10 00:01:52,620:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.509
2018-11-10 00:02:44,383:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.817
2018-11-10 00:02:44,487:INFO: Epoch 385/10000
2018-11-10 00:06:56,697:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.514
2018-11-10 00:07:48,526:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.958
2018-11-10 00:07:48,631:INFO: Epoch 386/10000
2018-11-10 00:12:00,045:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.503
2018-11-10 00:12:51,450:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.668
2018-11-10 00:12:51,545:INFO: Epoch 387/10000
2018-11-10 00:17:03,931:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.493
2018-11-10 00:17:55,464:INFO: - Eval metrics: accuracy: 0.717 ; loss: 99.062
2018-11-10 00:17:55,567:INFO: Epoch 388/10000
2018-11-10 00:22:06,985:INFO: - Train metrics: accuracy: 0.850 ; loss: 10.481
2018-11-10 00:22:58,790:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.499
2018-11-10 00:22:58,893:INFO: Epoch 389/10000
2018-11-10 00:27:10,877:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.495
2018-11-10 00:28:02,372:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.674
2018-11-10 00:28:02,468:INFO: Epoch 390/10000
2018-11-10 00:32:14,825:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.471
2018-11-10 00:33:06,405:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.958
2018-11-10 00:33:06,506:INFO: Epoch 391/10000
2018-11-10 00:37:18,526:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.474
2018-11-10 00:38:10,812:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.686
2018-11-10 00:38:10,928:INFO: Epoch 392/10000
2018-11-10 00:42:23,592:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.462
2018-11-10 00:43:13,861:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.763
2018-11-10 00:43:13,949:INFO: Epoch 393/10000
2018-11-10 00:47:22,709:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.467
2018-11-10 00:48:14,549:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.838
2018-11-10 00:48:14,644:INFO: Epoch 394/10000
2018-11-10 00:52:26,248:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.451
2018-11-10 00:53:17,842:INFO: - Eval metrics: accuracy: 0.717 ; loss: 99.129
2018-11-10 00:53:17,939:INFO: Epoch 395/10000
2018-11-10 00:57:30,707:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.449
2018-11-10 00:58:22,596:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.669
2018-11-10 00:58:22,699:INFO: Epoch 396/10000
2018-11-10 01:02:34,778:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.452
2018-11-10 01:03:26,320:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.671
2018-11-10 01:03:26,424:INFO: Epoch 397/10000
2018-11-10 01:07:38,440:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.436
2018-11-10 01:08:30,183:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.068
2018-11-10 01:08:30,285:INFO: Epoch 398/10000
2018-11-10 01:12:41,497:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.427
2018-11-10 01:13:33,173:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.761
2018-11-10 01:13:33,272:INFO: Epoch 399/10000
2018-11-10 01:17:46,051:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.421
2018-11-10 01:18:37,641:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.741
2018-11-10 01:18:37,746:INFO: Epoch 400/10000
2018-11-10 01:22:52,203:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.433
2018-11-10 01:23:43,774:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.774
2018-11-10 01:23:43,874:INFO: Epoch 401/10000
2018-11-10 01:27:56,956:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.420
2018-11-10 01:28:48,908:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.837
2018-11-10 01:28:49,008:INFO: Epoch 402/10000
2018-11-10 01:33:02,846:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.420
2018-11-10 01:33:54,629:INFO: - Eval metrics: accuracy: 0.716 ; loss: 98.846
2018-11-10 01:33:54,723:INFO: Epoch 403/10000
2018-11-10 01:38:07,551:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.404
2018-11-10 01:38:59,276:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.918
2018-11-10 01:38:59,381:INFO: Epoch 404/10000
2018-11-10 01:43:11,829:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.387
2018-11-10 01:44:03,747:INFO: - Eval metrics: accuracy: 0.717 ; loss: 98.888
2018-11-10 01:44:03,836:INFO: Epoch 405/10000
2018-11-10 01:48:16,852:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.395
2018-11-10 01:49:08,590:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.012
2018-11-10 01:49:08,694:INFO: Epoch 406/10000
2018-11-10 01:53:22,851:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.407
2018-11-10 01:54:14,705:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.127
2018-11-10 01:54:14,802:INFO: Epoch 407/10000
2018-11-10 01:58:28,573:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.388
2018-11-10 01:59:20,036:INFO: - Eval metrics: accuracy: 0.716 ; loss: 98.936
2018-11-10 01:59:20,143:INFO: Epoch 408/10000
2018-11-10 02:03:32,743:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.381
2018-11-10 02:04:24,769:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.088
2018-11-10 02:04:24,870:INFO: Epoch 409/10000
2018-11-10 02:08:37,405:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.376
2018-11-10 02:09:29,008:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.153
2018-11-10 02:09:29,109:INFO: Epoch 410/10000
2018-11-10 02:13:38,424:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.372
2018-11-10 02:14:30,243:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.018
2018-11-10 02:14:30,347:INFO: Epoch 411/10000
2018-11-10 02:18:44,265:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.367
2018-11-10 02:19:35,540:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.321
2018-11-10 02:19:35,648:INFO: Epoch 412/10000
2018-11-10 02:23:47,706:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.353
2018-11-10 02:24:39,350:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.091
2018-11-10 02:24:39,449:INFO: Epoch 413/10000
2018-11-10 02:28:52,109:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.348
2018-11-10 02:29:43,705:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.411
2018-11-10 02:29:43,811:INFO: Epoch 414/10000
2018-11-10 02:33:57,762:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.345
2018-11-10 02:34:49,643:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.216
2018-11-10 02:34:49,742:INFO: Epoch 415/10000
2018-11-10 02:39:02,495:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.340
2018-11-10 02:39:54,132:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.194
2018-11-10 02:39:54,233:INFO: Epoch 416/10000
2018-11-10 02:44:07,529:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.336
2018-11-10 02:44:59,255:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.081
2018-11-10 02:44:59,353:INFO: Epoch 417/10000
2018-11-10 02:49:12,889:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.330
2018-11-10 02:50:04,513:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.522
2018-11-10 02:50:04,622:INFO: Epoch 418/10000
2018-11-10 02:54:16,926:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.320
2018-11-10 02:55:08,399:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.622
2018-11-10 02:55:08,496:INFO: Epoch 419/10000
2018-11-10 02:59:21,389:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.319
2018-11-10 03:00:13,000:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.473
2018-11-10 03:00:13,101:INFO: Epoch 420/10000
2018-11-10 03:04:25,525:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.310
2018-11-10 03:05:17,030:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.681
2018-11-10 03:05:17,135:INFO: Epoch 421/10000
2018-11-10 03:09:30,287:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.309
2018-11-10 03:10:21,913:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.750
2018-11-10 03:10:22,017:INFO: Epoch 422/10000
2018-11-10 03:14:33,160:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.321
2018-11-10 03:15:24,779:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.531
2018-11-10 03:15:24,878:INFO: Epoch 423/10000
2018-11-10 03:19:36,048:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.293
2018-11-10 03:20:27,439:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.479
2018-11-10 03:20:27,544:INFO: Epoch 424/10000
2018-11-10 03:24:40,326:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.294
2018-11-10 03:25:31,935:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.540
2018-11-10 03:25:32,040:INFO: Epoch 425/10000
2018-11-10 03:29:43,646:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.289
2018-11-10 03:30:35,404:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.905
2018-11-10 03:30:35,504:INFO: Epoch 426/10000
2018-11-10 03:34:47,818:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.284
2018-11-10 03:35:39,543:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.550
2018-11-10 03:35:39,644:INFO: Epoch 427/10000
2018-11-10 03:39:51,478:INFO: - Train metrics: accuracy: 0.851 ; loss: 10.294
2018-11-10 03:40:42,816:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.588
2018-11-10 03:40:42,923:INFO: Epoch 428/10000
2018-11-10 03:44:54,831:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.282
2018-11-10 03:45:46,292:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.629
2018-11-10 03:45:46,406:INFO: Epoch 429/10000
2018-11-10 03:49:58,390:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.270
2018-11-10 03:50:49,817:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.636
2018-11-10 03:50:49,915:INFO: Epoch 430/10000
2018-11-10 03:55:02,102:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.275
2018-11-10 03:55:53,386:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.661
2018-11-10 03:55:53,486:INFO: Epoch 431/10000
2018-11-10 04:00:05,395:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.267
2018-11-10 04:00:57,113:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.841
2018-11-10 04:00:57,219:INFO: Epoch 432/10000
2018-11-10 04:05:10,527:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.255
2018-11-10 04:06:01,954:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.716
2018-11-10 04:06:02,058:INFO: Epoch 433/10000
2018-11-10 04:10:14,544:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.251
2018-11-10 04:11:05,681:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.848
2018-11-10 04:11:05,781:INFO: Epoch 434/10000
2018-11-10 04:15:17,035:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.243
2018-11-10 04:16:08,113:INFO: - Eval metrics: accuracy: 0.716 ; loss: 100.028
2018-11-10 04:16:08,214:INFO: Epoch 435/10000
2018-11-10 04:20:20,547:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.239
2018-11-10 04:21:11,859:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.835
2018-11-10 04:21:11,959:INFO: Epoch 436/10000
2018-11-10 04:25:24,016:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.232
2018-11-10 04:26:15,117:INFO: - Eval metrics: accuracy: 0.715 ; loss: 99.819
2018-11-10 04:26:15,215:INFO: Epoch 437/10000
2018-11-10 04:30:27,385:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.248
2018-11-10 04:31:18,798:INFO: - Eval metrics: accuracy: 0.715 ; loss: 99.801
2018-11-10 04:31:18,910:INFO: Epoch 438/10000
2018-11-10 04:35:31,018:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.222
2018-11-10 04:36:22,358:INFO: - Eval metrics: accuracy: 0.715 ; loss: 99.880
2018-11-10 04:36:22,460:INFO: Epoch 439/10000
2018-11-10 04:40:33,631:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.223
2018-11-10 04:41:25,129:INFO: - Eval metrics: accuracy: 0.716 ; loss: 99.941
2018-11-10 04:41:25,232:INFO: Epoch 440/10000
2018-11-10 04:45:37,257:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.216
2018-11-10 04:46:28,673:INFO: - Eval metrics: accuracy: 0.715 ; loss: 99.891
2018-11-10 04:46:28,766:INFO: Epoch 441/10000
2018-11-10 04:50:41,035:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.211
2018-11-10 04:51:32,441:INFO: - Eval metrics: accuracy: 0.715 ; loss: 99.962
2018-11-10 04:51:32,544:INFO: Epoch 442/10000
2018-11-10 04:55:43,827:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.211
2018-11-10 04:56:35,212:INFO: - Eval metrics: accuracy: 0.715 ; loss: 99.984
2018-11-10 04:56:35,310:INFO: Epoch 443/10000
2018-11-10 05:00:47,006:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.203
2018-11-10 05:01:38,629:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.089
2018-11-10 05:01:38,729:INFO: Epoch 444/10000
2018-11-10 05:05:50,493:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.200
2018-11-10 05:06:41,917:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.126
2018-11-10 05:06:42,016:INFO: Epoch 445/10000
2018-11-10 05:10:54,094:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.195
2018-11-10 05:11:46,070:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.144
2018-11-10 05:11:46,169:INFO: Epoch 446/10000
2018-11-10 05:15:57,618:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.197
2018-11-10 05:16:48,948:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.074
2018-11-10 05:16:49,046:INFO: Epoch 447/10000
2018-11-10 05:21:01,391:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.193
2018-11-10 05:21:52,900:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.172
2018-11-10 05:21:52,999:INFO: Epoch 448/10000
2018-11-10 05:26:05,021:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.181
2018-11-10 05:26:56,554:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.119
2018-11-10 05:26:56,656:INFO: Epoch 449/10000
2018-11-10 05:31:10,254:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.181
2018-11-10 05:32:02,166:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.178
2018-11-10 05:32:02,266:INFO: Epoch 450/10000
2018-11-10 05:36:14,164:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.180
2018-11-10 05:37:05,823:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.281
2018-11-10 05:37:05,924:INFO: Epoch 451/10000
2018-11-10 05:41:18,686:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.171
2018-11-10 05:42:10,395:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.313
2018-11-10 05:42:10,497:INFO: Epoch 452/10000
2018-11-10 05:46:22,518:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.164
2018-11-10 05:47:14,109:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.358
2018-11-10 05:47:14,218:INFO: Epoch 453/10000
2018-11-10 05:51:25,972:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.167
2018-11-10 05:52:16,739:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.238
2018-11-10 05:52:16,843:INFO: Epoch 454/10000
2018-11-10 05:56:27,470:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.158
2018-11-10 05:57:18,113:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.239
2018-11-10 05:57:18,213:INFO: Epoch 455/10000
2018-11-10 06:01:29,659:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.149
2018-11-10 06:02:20,259:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.244
2018-11-10 06:02:20,358:INFO: Epoch 456/10000
2018-11-10 06:06:31,647:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.157
2018-11-10 06:07:22,494:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.365
2018-11-10 06:07:22,594:INFO: Epoch 457/10000
2018-11-10 06:11:32,739:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.155
2018-11-10 06:12:23,110:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.356
2018-11-10 06:12:23,211:INFO: Epoch 458/10000
2018-11-10 06:16:33,434:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.141
2018-11-10 06:17:24,063:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.416
2018-11-10 06:17:24,160:INFO: Epoch 459/10000
2018-11-10 06:21:32,395:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.141
2018-11-10 06:22:23,413:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.387
2018-11-10 06:22:23,511:INFO: Epoch 460/10000
2018-11-10 06:26:32,984:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.136
2018-11-10 06:27:23,741:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.405
2018-11-10 06:27:23,840:INFO: Epoch 461/10000
2018-11-10 06:31:32,555:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.135
2018-11-10 06:32:23,329:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.387
2018-11-10 06:32:23,434:INFO: Epoch 462/10000
2018-11-10 06:36:33,379:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.122
2018-11-10 06:37:24,351:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.483
2018-11-10 06:37:24,439:INFO: Epoch 463/10000
2018-11-10 06:41:33,353:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.136
2018-11-10 06:42:24,287:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.588
2018-11-10 06:42:24,392:INFO: Epoch 464/10000
2018-11-10 06:46:34,377:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.119
2018-11-10 06:47:25,493:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.570
2018-11-10 06:47:25,587:INFO: Epoch 465/10000
2018-11-10 06:51:35,545:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.118
2018-11-10 06:52:26,542:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.493
2018-11-10 06:52:26,635:INFO: Epoch 466/10000
2018-11-10 06:56:37,808:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.116
2018-11-10 06:57:28,641:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.580
2018-11-10 06:57:28,742:INFO: Epoch 467/10000
2018-11-10 07:01:39,178:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.111
2018-11-10 07:02:29,988:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.618
2018-11-10 07:02:30,086:INFO: Epoch 468/10000
2018-11-10 07:06:40,218:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.108
2018-11-10 07:07:30,812:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.617
2018-11-10 07:07:30,916:INFO: Epoch 469/10000
2018-11-10 07:11:40,796:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.099
2018-11-10 07:12:30,482:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.703
2018-11-10 07:12:30,594:INFO: Epoch 470/10000
2018-11-10 07:16:41,586:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.103
2018-11-10 07:17:32,505:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.679
2018-11-10 07:17:32,604:INFO: Epoch 471/10000
2018-11-10 07:21:43,802:INFO: - Train metrics: accuracy: 0.852 ; loss: 10.096
2018-11-10 07:22:34,537:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.857
2018-11-10 07:22:34,639:INFO: Epoch 472/10000
2018-11-10 07:26:44,889:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.091
2018-11-10 07:27:35,465:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.780
2018-11-10 07:27:35,564:INFO: Epoch 473/10000
2018-11-10 07:31:46,407:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.097
2018-11-10 07:32:37,165:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.746
2018-11-10 07:32:37,265:INFO: Epoch 474/10000
2018-11-10 07:36:46,636:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.094
2018-11-10 07:37:37,482:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.687
2018-11-10 07:37:37,580:INFO: Epoch 475/10000
2018-11-10 07:41:48,950:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.094
2018-11-10 07:42:39,832:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.808
2018-11-10 07:42:39,944:INFO: Epoch 476/10000
2018-11-10 07:46:10,446:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.075
2018-11-10 07:47:01,070:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.855
2018-11-10 07:47:01,208:INFO: Epoch 477/10000
2018-11-10 07:51:13,059:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.073
2018-11-10 07:52:03,977:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.913
2018-11-10 07:52:04,074:INFO: Epoch 478/10000
2018-11-10 07:56:13,471:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.070
2018-11-10 07:57:04,447:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.871
2018-11-10 07:57:04,553:INFO: Epoch 479/10000
2018-11-10 08:01:13,364:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.076
2018-11-10 08:02:04,119:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.067
2018-11-10 08:02:04,220:INFO: Epoch 480/10000
2018-11-10 08:06:16,271:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.063
2018-11-10 08:07:06,850:INFO: - Eval metrics: accuracy: 0.715 ; loss: 100.878
2018-11-10 08:07:06,952:INFO: Epoch 481/10000
2018-11-10 08:11:16,868:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.063
2018-11-10 08:12:07,028:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.971
2018-11-10 08:12:07,125:INFO: Epoch 482/10000
2018-11-10 08:16:17,654:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.057
2018-11-10 08:17:08,490:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.994
2018-11-10 08:17:08,588:INFO: Epoch 483/10000
2018-11-10 08:21:19,807:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.048
2018-11-10 08:22:10,254:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.968
2018-11-10 08:22:10,353:INFO: Epoch 484/10000
2018-11-10 08:26:20,477:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.050
2018-11-10 08:27:11,304:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.041
2018-11-10 08:27:11,406:INFO: Epoch 485/10000
2018-11-10 08:31:20,831:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.038
2018-11-10 08:32:11,955:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.023
2018-11-10 08:32:12,044:INFO: Epoch 486/10000
2018-11-10 08:36:20,728:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.038
2018-11-10 08:37:11,106:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.994
2018-11-10 08:37:11,202:INFO: Epoch 487/10000
2018-11-10 08:41:22,477:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.026
2018-11-10 08:42:13,794:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.910
2018-11-10 08:42:13,894:INFO: Epoch 488/10000
2018-11-10 08:46:26,468:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.033
2018-11-10 08:47:17,962:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.920
2018-11-10 08:47:18,061:INFO: Epoch 489/10000
2018-11-10 08:51:30,098:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.050
2018-11-10 08:52:21,725:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.112
2018-11-10 08:52:21,830:INFO: Epoch 490/10000
2018-11-10 08:56:33,907:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.020
2018-11-10 08:57:25,764:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.197
2018-11-10 08:57:25,861:INFO: Epoch 491/10000
2018-11-10 09:01:37,977:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.015
2018-11-10 09:02:29,690:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.931
2018-11-10 09:02:29,786:INFO: Epoch 492/10000
2018-11-10 09:06:42,998:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.008
2018-11-10 09:07:34,736:INFO: - Eval metrics: accuracy: 0.714 ; loss: 100.983
2018-11-10 09:07:34,827:INFO: Epoch 493/10000
2018-11-10 09:11:47,447:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.011
2018-11-10 09:12:38,088:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.273
2018-11-10 09:12:38,197:INFO: Epoch 494/10000
2018-11-10 09:16:50,861:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.001
2018-11-10 09:17:42,402:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.190
2018-11-10 09:17:42,499:INFO: Epoch 495/10000
2018-11-10 09:21:54,657:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.010
2018-11-10 09:22:46,461:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.306
2018-11-10 09:22:46,559:INFO: Epoch 496/10000
2018-11-10 09:26:59,746:INFO: - Train metrics: accuracy: 0.853 ; loss: 10.002
2018-11-10 09:27:51,567:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.116
2018-11-10 09:27:51,665:INFO: Epoch 497/10000
2018-11-10 09:32:04,159:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.986
2018-11-10 09:32:55,958:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.229
2018-11-10 09:32:56,055:INFO: Epoch 498/10000
2018-11-10 09:37:08,512:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.985
2018-11-10 09:38:00,594:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.181
2018-11-10 09:38:00,692:INFO: Epoch 499/10000
2018-11-10 09:42:13,118:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.996
2018-11-10 09:43:04,746:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.309
2018-11-10 09:43:04,844:INFO: Epoch 500/10000
2018-11-10 09:47:16,046:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.988
2018-11-10 09:48:07,635:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.094
2018-11-10 09:48:07,738:INFO: Epoch 501/10000
2018-11-10 09:52:18,347:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.974
2018-11-10 09:53:09,714:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.341
2018-11-10 09:53:09,814:INFO: Epoch 502/10000
2018-11-10 09:57:22,622:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.980
2018-11-10 09:58:13,954:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.266
2018-11-10 09:58:14,054:INFO: Epoch 503/10000
2018-11-10 10:02:26,127:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.965
2018-11-10 10:03:17,714:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.312
2018-11-10 10:03:17,814:INFO: Epoch 504/10000
2018-11-10 10:07:29,695:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.956
2018-11-10 10:08:20,995:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.395
2018-11-10 10:08:21,092:INFO: Epoch 505/10000
2018-11-10 10:12:31,825:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.949
2018-11-10 10:13:23,273:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.397
2018-11-10 10:13:23,372:INFO: Epoch 506/10000
2018-11-10 10:17:35,042:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.940
2018-11-10 10:18:26,690:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.449
2018-11-10 10:18:26,790:INFO: Epoch 507/10000
2018-11-10 10:22:40,218:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.934
2018-11-10 10:23:32,239:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.444
2018-11-10 10:23:32,340:INFO: Epoch 508/10000
2018-11-10 10:27:45,514:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.935
2018-11-10 10:28:37,210:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.446
2018-11-10 10:28:37,304:INFO: Epoch 509/10000
2018-11-10 10:32:50,628:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.932
2018-11-10 10:33:42,245:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.430
2018-11-10 10:33:42,343:INFO: Epoch 510/10000
2018-11-10 10:37:55,035:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.931
2018-11-10 10:38:46,858:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.628
2018-11-10 10:38:46,955:INFO: Epoch 511/10000
2018-11-10 10:42:59,554:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.934
2018-11-10 10:43:50,856:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.553
2018-11-10 10:43:50,963:INFO: Epoch 512/10000
2018-11-10 10:48:03,198:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.944
2018-11-10 10:48:54,704:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.738
2018-11-10 10:48:54,788:INFO: Epoch 513/10000
2018-11-10 10:53:07,122:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.923
2018-11-10 10:53:58,805:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.768
2018-11-10 10:53:58,898:INFO: Epoch 514/10000
2018-11-10 10:58:11,133:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.917
2018-11-10 10:59:02,458:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.872
2018-11-10 10:59:02,560:INFO: Epoch 515/10000
2018-11-10 11:03:14,701:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.920
2018-11-10 11:04:06,525:INFO: - Eval metrics: accuracy: 0.713 ; loss: 101.815
2018-11-10 11:04:06,618:INFO: Epoch 516/10000
2018-11-10 11:08:18,378:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.913
2018-11-10 11:09:09,967:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.791
2018-11-10 11:09:10,067:INFO: Epoch 517/10000
2018-11-10 11:13:21,889:INFO: - Train metrics: accuracy: 0.853 ; loss: 9.908
2018-11-10 11:14:13,476:INFO: - Eval metrics: accuracy: 0.713 ; loss: 101.912
2018-11-10 11:14:13,567:INFO: Epoch 518/10000
2018-11-10 11:18:26,163:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.909
2018-11-10 11:19:17,451:INFO: - Eval metrics: accuracy: 0.713 ; loss: 101.932
2018-11-10 11:19:17,558:INFO: Epoch 519/10000
2018-11-10 11:23:30,743:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.904
2018-11-10 11:24:22,260:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.778
2018-11-10 11:24:22,357:INFO: Epoch 520/10000
2018-11-10 11:28:34,698:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.891
2018-11-10 11:29:26,512:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.975
2018-11-10 11:29:26,614:INFO: Epoch 521/10000
2018-11-10 11:33:39,207:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.899
2018-11-10 11:34:30,964:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.934
2018-11-10 11:34:31,066:INFO: Epoch 522/10000
2018-11-10 11:38:43,094:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.893
2018-11-10 11:39:34,380:INFO: - Eval metrics: accuracy: 0.713 ; loss: 101.820
2018-11-10 11:39:34,480:INFO: Epoch 523/10000
2018-11-10 11:43:45,670:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.884
2018-11-10 11:44:36,999:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.090
2018-11-10 11:44:37,099:INFO: Epoch 524/10000
2018-11-10 11:48:50,474:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.892
2018-11-10 11:49:42,217:INFO: - Eval metrics: accuracy: 0.713 ; loss: 101.998
2018-11-10 11:49:42,318:INFO: Epoch 525/10000
2018-11-10 11:53:54,294:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.894
2018-11-10 11:54:46,078:INFO: - Eval metrics: accuracy: 0.713 ; loss: 101.897
2018-11-10 11:54:46,164:INFO: Epoch 526/10000
2018-11-10 11:58:58,123:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.875
2018-11-10 11:59:49,492:INFO: - Eval metrics: accuracy: 0.714 ; loss: 102.019
2018-11-10 11:59:49,592:INFO: Epoch 527/10000
2018-11-10 12:04:01,632:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.867
2018-11-10 12:04:53,605:INFO: - Eval metrics: accuracy: 0.714 ; loss: 101.987
2018-11-10 12:04:53,723:INFO: Epoch 528/10000
2018-11-10 12:09:04,854:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.875
2018-11-10 12:09:56,313:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.119
2018-11-10 12:09:56,419:INFO: Epoch 529/10000
2018-11-10 12:14:07,105:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.866
2018-11-10 12:14:58,772:INFO: - Eval metrics: accuracy: 0.714 ; loss: 102.059
2018-11-10 12:14:58,870:INFO: Epoch 530/10000
2018-11-10 12:19:11,903:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.858
2018-11-10 12:20:03,494:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.088
2018-11-10 12:20:03,591:INFO: Epoch 531/10000
2018-11-10 12:24:17,785:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.860
2018-11-10 12:25:09,552:INFO: - Eval metrics: accuracy: 0.713 ; loss: 101.775
2018-11-10 12:25:09,651:INFO: Epoch 532/10000
2018-11-10 12:29:22,693:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.859
2018-11-10 12:30:13,999:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.178
2018-11-10 12:30:14,097:INFO: Epoch 533/10000
2018-11-10 12:34:27,322:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.866
2018-11-10 12:35:18,880:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.202
2018-11-10 12:35:18,979:INFO: Epoch 534/10000
2018-11-10 12:39:30,060:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.864
2018-11-10 12:40:21,660:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.145
2018-11-10 12:40:21,761:INFO: Epoch 535/10000
2018-11-10 12:44:34,652:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.854
2018-11-10 12:45:26,642:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.211
2018-11-10 12:45:26,744:INFO: Epoch 536/10000
2018-11-10 12:49:38,965:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.848
2018-11-10 12:50:30,503:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.213
2018-11-10 12:50:30,597:INFO: Epoch 537/10000
2018-11-10 12:54:43,246:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.842
2018-11-10 12:55:35,031:INFO: - Eval metrics: accuracy: 0.713 ; loss: 101.845
2018-11-10 12:55:35,126:INFO: Epoch 538/10000
2018-11-10 12:59:47,784:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.852
2018-11-10 13:00:39,053:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.134
2018-11-10 13:00:39,144:INFO: Epoch 539/10000
2018-11-10 13:04:51,163:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.837
2018-11-10 13:05:42,667:INFO: - Eval metrics: accuracy: 0.713 ; loss: 101.995
2018-11-10 13:05:42,762:INFO: Epoch 540/10000
2018-11-10 13:09:55,504:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.840
2018-11-10 13:10:46,969:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.227
2018-11-10 13:10:47,063:INFO: Epoch 541/10000
2018-11-10 13:14:58,269:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.837
2018-11-10 13:15:49,752:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.344
2018-11-10 13:15:49,843:INFO: Epoch 542/10000
2018-11-10 13:20:02,060:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.823
2018-11-10 13:20:53,185:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.379
2018-11-10 13:20:53,277:INFO: Epoch 543/10000
2018-11-10 13:25:06,516:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.822
2018-11-10 13:25:58,201:INFO: - Eval metrics: accuracy: 0.713 ; loss: 101.843
2018-11-10 13:25:58,302:INFO: Epoch 544/10000
2018-11-10 13:30:13,737:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.820
2018-11-10 13:31:05,394:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.256
2018-11-10 13:31:05,502:INFO: Epoch 545/10000
2018-11-10 13:35:17,012:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.823
2018-11-10 13:36:08,752:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.246
2018-11-10 13:36:08,851:INFO: Epoch 546/10000
2018-11-10 13:40:20,786:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.858
2018-11-10 13:41:12,218:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.270
2018-11-10 13:41:12,323:INFO: Epoch 547/10000
2018-11-10 13:45:24,652:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.834
2018-11-10 13:46:16,178:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.188
2018-11-10 13:46:16,298:INFO: Epoch 548/10000
2018-11-10 13:50:28,866:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.809
2018-11-10 13:51:20,246:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.293
2018-11-10 13:51:20,347:INFO: Epoch 549/10000
2018-11-10 13:55:34,793:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.793
2018-11-10 13:56:26,469:INFO: - Eval metrics: accuracy: 0.713 ; loss: 101.912
2018-11-10 13:56:26,570:INFO: Epoch 550/10000
2018-11-10 14:00:38,824:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.803
2018-11-10 14:01:30,313:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.297
2018-11-10 14:01:30,407:INFO: Epoch 551/10000
2018-11-10 14:05:42,327:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.784
2018-11-10 14:06:34,175:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.424
2018-11-10 14:06:34,278:INFO: Epoch 552/10000
2018-11-10 14:10:45,740:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.800
2018-11-10 14:11:37,760:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.377
2018-11-10 14:11:37,858:INFO: Epoch 553/10000
2018-11-10 14:15:47,845:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.782
2018-11-10 14:16:39,766:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.540
2018-11-10 14:16:39,866:INFO: Epoch 554/10000
2018-11-10 14:20:52,208:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.780
2018-11-10 14:21:43,670:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.414
2018-11-10 14:21:43,765:INFO: Epoch 555/10000
2018-11-10 14:25:56,812:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.776
2018-11-10 14:26:48,554:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.346
2018-11-10 14:26:48,650:INFO: Epoch 556/10000
2018-11-10 14:31:01,791:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.783
2018-11-10 14:31:53,117:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.234
2018-11-10 14:31:53,223:INFO: Epoch 557/10000
2018-11-10 14:36:06,048:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.772
2018-11-10 14:36:57,534:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.218
2018-11-10 14:36:57,632:INFO: Epoch 558/10000
2018-11-10 14:41:10,115:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.772
2018-11-10 14:42:01,977:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.295
2018-11-10 14:42:02,078:INFO: Epoch 559/10000
2018-11-10 14:46:14,776:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.771
2018-11-10 14:47:06,287:INFO: - Eval metrics: accuracy: 0.713 ; loss: 102.249
2018-11-10 14:47:06,390:INFO: Epoch 560/10000
2018-11-10 14:51:19,472:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.763
2018-11-10 14:52:10,865:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.314
2018-11-10 14:52:10,978:INFO: Epoch 561/10000
2018-11-10 14:56:23,825:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.763
2018-11-10 14:57:15,756:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.340
2018-11-10 14:57:15,861:INFO: Epoch 562/10000
2018-11-10 15:01:29,020:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.755
2018-11-10 15:02:20,695:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.221
2018-11-10 15:02:20,789:INFO: Epoch 563/10000
2018-11-10 15:06:32,233:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.761
2018-11-10 15:07:24,005:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.386
2018-11-10 15:07:24,106:INFO: Epoch 564/10000
2018-11-10 15:11:35,016:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.748
2018-11-10 15:12:25,768:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.420
2018-11-10 15:12:25,861:INFO: Epoch 565/10000
2018-11-10 15:16:37,384:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.765
2018-11-10 15:17:28,830:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.255
2018-11-10 15:17:28,929:INFO: Epoch 566/10000
2018-11-10 15:21:38,390:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.754
2018-11-10 15:22:29,806:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.398
2018-11-10 15:22:29,922:INFO: Epoch 567/10000
2018-11-10 15:26:41,786:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.746
2018-11-10 15:27:33,113:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.400
2018-11-10 15:27:33,210:INFO: Epoch 568/10000
2018-11-10 15:31:44,891:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.737
2018-11-10 15:32:36,473:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.498
2018-11-10 15:32:36,574:INFO: Epoch 569/10000
2018-11-10 15:36:48,668:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.738
2018-11-10 15:37:40,289:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.426
2018-11-10 15:37:40,386:INFO: Epoch 570/10000
2018-11-10 15:41:53,614:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.730
2018-11-10 15:42:45,168:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.379
2018-11-10 15:42:45,269:INFO: Epoch 571/10000
2018-11-10 15:46:56,681:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.727
2018-11-10 15:47:48,471:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.476
2018-11-10 15:47:48,573:INFO: Epoch 572/10000
2018-11-10 15:52:00,156:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.738
2018-11-10 15:52:51,530:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.400
2018-11-10 15:52:51,634:INFO: Epoch 573/10000
2018-11-10 15:57:03,817:INFO: - Train metrics: accuracy: 0.854 ; loss: 9.720
2018-11-10 15:57:55,603:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.482
2018-11-10 15:57:55,702:INFO: Epoch 574/10000
2018-11-10 16:02:07,955:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.713
2018-11-10 16:02:59,449:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.230
2018-11-10 16:02:59,544:INFO: Epoch 575/10000
2018-11-10 16:07:11,804:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.715
2018-11-10 16:08:03,233:INFO: - Eval metrics: accuracy: 0.711 ; loss: 102.752
2018-11-10 16:08:03,337:INFO: Epoch 576/10000
2018-11-10 16:12:13,580:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.709
2018-11-10 16:13:05,256:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.406
2018-11-10 16:13:05,359:INFO: Epoch 577/10000
2018-11-10 16:17:16,253:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.716
2018-11-10 16:18:07,934:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.478
2018-11-10 16:18:08,037:INFO: Epoch 578/10000
2018-11-10 16:22:20,401:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.708
2018-11-10 16:23:11,978:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.563
2018-11-10 16:23:12,076:INFO: Epoch 579/10000
2018-11-10 16:27:24,608:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.702
2018-11-10 16:28:16,025:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.616
2018-11-10 16:28:16,133:INFO: Epoch 580/10000
2018-11-10 16:32:28,912:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.698
2018-11-10 16:33:20,584:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.565
2018-11-10 16:33:20,679:INFO: Epoch 581/10000
2018-11-10 16:37:32,524:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.702
2018-11-10 16:38:24,192:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.509
2018-11-10 16:38:24,290:INFO: Epoch 582/10000
2018-11-10 16:42:37,174:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.687
2018-11-10 16:43:28,388:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.437
2018-11-10 16:43:28,490:INFO: Epoch 583/10000
2018-11-10 16:47:40,478:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.693
2018-11-10 16:48:32,118:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.769
2018-11-10 16:48:32,219:INFO: Epoch 584/10000
2018-11-10 16:52:44,944:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.683
2018-11-10 16:53:36,349:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.538
2018-11-10 16:53:36,451:INFO: Epoch 585/10000
2018-11-10 16:57:48,879:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.700
2018-11-10 16:58:40,633:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.665
2018-11-10 16:58:40,736:INFO: Epoch 586/10000
2018-11-10 17:02:52,662:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.689
2018-11-10 17:03:44,099:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.758
2018-11-10 17:03:44,203:INFO: Epoch 587/10000
2018-11-10 17:07:55,614:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.679
2018-11-10 17:08:47,487:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.422
2018-11-10 17:08:47,592:INFO: Epoch 588/10000
2018-11-10 17:12:57,355:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.682
2018-11-10 17:13:49,156:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.499
2018-11-10 17:13:49,257:INFO: Epoch 589/10000
2018-11-10 17:18:00,322:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.676
2018-11-10 17:18:51,959:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.483
2018-11-10 17:18:52,062:INFO: Epoch 590/10000
2018-11-10 17:23:02,975:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.706
2018-11-10 17:23:54,269:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.736
2018-11-10 17:23:54,366:INFO: Epoch 591/10000
2018-11-10 17:28:06,200:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.682
2018-11-10 17:28:57,704:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.674
2018-11-10 17:28:57,806:INFO: Epoch 592/10000
2018-11-10 17:33:09,092:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.670
2018-11-10 17:34:00,651:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.742
2018-11-10 17:34:00,752:INFO: Epoch 593/10000
2018-11-10 17:38:13,387:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.654
2018-11-10 17:39:05,285:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.717
2018-11-10 17:39:05,385:INFO: Epoch 594/10000
2018-11-10 17:43:17,006:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.664
2018-11-10 17:44:08,539:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.734
2018-11-10 17:44:08,639:INFO: Epoch 595/10000
2018-11-10 17:48:19,795:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.650
2018-11-10 17:49:11,561:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.927
2018-11-10 17:49:11,663:INFO: Epoch 596/10000
2018-11-10 17:53:24,793:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.655
2018-11-10 17:54:16,535:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.574
2018-11-10 17:54:16,638:INFO: Epoch 597/10000
2018-11-10 17:58:28,509:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.647
2018-11-10 17:59:20,497:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.684
2018-11-10 17:59:20,604:INFO: Epoch 598/10000
2018-11-10 18:03:32,697:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.644
2018-11-10 18:04:24,339:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.969
2018-11-10 18:04:24,440:INFO: Epoch 599/10000
2018-11-10 18:08:35,950:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.652
2018-11-10 18:09:27,600:INFO: - Eval metrics: accuracy: 0.711 ; loss: 102.650
2018-11-10 18:09:27,696:INFO: Epoch 600/10000
2018-11-10 18:13:39,754:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.657
2018-11-10 18:14:31,380:INFO: - Eval metrics: accuracy: 0.711 ; loss: 102.789
2018-11-10 18:14:31,480:INFO: Epoch 601/10000
2018-11-10 18:18:43,552:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.631
2018-11-10 18:19:35,365:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.732
2018-11-10 18:19:35,470:INFO: Epoch 602/10000
2018-11-10 18:23:46,678:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.640
2018-11-10 18:24:38,268:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.815
2018-11-10 18:24:38,370:INFO: Epoch 603/10000
2018-11-10 18:28:50,682:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.644
2018-11-10 18:29:42,125:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.596
2018-11-10 18:29:42,227:INFO: Epoch 604/10000
2018-11-10 18:33:54,628:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.639
2018-11-10 18:34:45,963:INFO: - Eval metrics: accuracy: 0.711 ; loss: 102.615
2018-11-10 18:34:46,067:INFO: Epoch 605/10000
2018-11-10 18:38:57,973:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.630
2018-11-10 18:39:49,386:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.629
2018-11-10 18:39:49,483:INFO: Epoch 606/10000
2018-11-10 18:44:02,596:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.645
2018-11-10 18:44:54,245:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.914
2018-11-10 18:44:54,344:INFO: Epoch 607/10000
2018-11-10 18:49:06,454:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.626
2018-11-10 18:49:58,154:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.856
2018-11-10 18:49:58,254:INFO: Epoch 608/10000
2018-11-10 18:54:10,083:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.630
2018-11-10 18:55:01,323:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.575
2018-11-10 18:55:01,424:INFO: Epoch 609/10000
2018-11-10 18:59:13,651:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.620
2018-11-10 19:00:05,187:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.873
2018-11-10 19:00:05,298:INFO: Epoch 610/10000
2018-11-10 19:04:18,336:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.612
2018-11-10 19:05:09,827:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.905
2018-11-10 19:05:09,929:INFO: Epoch 611/10000
2018-11-10 19:09:21,582:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.623
2018-11-10 19:10:13,317:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.898
2018-11-10 19:10:13,425:INFO: Epoch 612/10000
2018-11-10 19:14:24,795:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.626
2018-11-10 19:15:16,134:INFO: - Eval metrics: accuracy: 0.711 ; loss: 102.925
2018-11-10 19:15:16,234:INFO: Epoch 613/10000
2018-11-10 19:19:28,963:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.607
2018-11-10 19:20:20,397:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.247
2018-11-10 19:20:20,492:INFO: Epoch 614/10000
2018-11-10 19:24:32,796:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.609
2018-11-10 19:25:23,980:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.926
2018-11-10 19:25:24,086:INFO: Epoch 615/10000
2018-11-10 19:29:36,980:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.600
2018-11-10 19:30:28,579:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.997
2018-11-10 19:30:28,680:INFO: Epoch 616/10000
2018-11-10 19:34:40,179:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.597
2018-11-10 19:35:32,180:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.966
2018-11-10 19:35:32,284:INFO: Epoch 617/10000
2018-11-10 19:39:44,083:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.607
2018-11-10 19:40:35,706:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.036
2018-11-10 19:40:35,799:INFO: Epoch 618/10000
2018-11-10 19:44:47,796:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.597
2018-11-10 19:45:39,126:INFO: - Eval metrics: accuracy: 0.711 ; loss: 102.975
2018-11-10 19:45:39,223:INFO: Epoch 619/10000
2018-11-10 19:49:50,493:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.597
2018-11-10 19:50:41,956:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.672
2018-11-10 19:50:42,058:INFO: Epoch 620/10000
2018-11-10 19:54:53,546:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.594
2018-11-10 19:55:45,019:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.273
2018-11-10 19:55:45,102:INFO: Epoch 621/10000
2018-11-10 19:59:57,880:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.586
2018-11-10 20:00:49,084:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.953
2018-11-10 20:00:49,182:INFO: Epoch 622/10000
2018-11-10 20:05:00,487:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.605
2018-11-10 20:05:52,020:INFO: - Eval metrics: accuracy: 0.711 ; loss: 102.943
2018-11-10 20:05:52,123:INFO: Epoch 623/10000
2018-11-10 20:10:04,044:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.584
2018-11-10 20:10:55,804:INFO: - Eval metrics: accuracy: 0.712 ; loss: 102.714
2018-11-10 20:10:55,904:INFO: Epoch 624/10000
2018-11-10 20:15:07,583:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.590
2018-11-10 20:15:59,202:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.036
2018-11-10 20:15:59,301:INFO: Epoch 625/10000
2018-11-10 20:20:11,914:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.597
2018-11-10 20:21:03,711:INFO: - Eval metrics: accuracy: 0.711 ; loss: 102.941
2018-11-10 20:21:03,814:INFO: Epoch 626/10000
2018-11-10 20:25:16,879:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.584
2018-11-10 20:26:08,742:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.142
2018-11-10 20:26:08,844:INFO: Epoch 627/10000
2018-11-10 20:30:20,675:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.577
2018-11-10 20:31:12,149:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.251
2018-11-10 20:31:12,248:INFO: Epoch 628/10000
2018-11-10 20:35:24,615:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.574
2018-11-10 20:36:15,856:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.137
2018-11-10 20:36:15,953:INFO: Epoch 629/10000
2018-11-10 20:40:28,495:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.562
2018-11-10 20:41:20,123:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.110
2018-11-10 20:41:20,238:INFO: Epoch 630/10000
2018-11-10 20:45:29,990:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.575
2018-11-10 20:46:21,048:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.197
2018-11-10 20:46:21,147:INFO: Epoch 631/10000
2018-11-10 20:50:32,226:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.567
2018-11-10 20:51:23,038:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.162
2018-11-10 20:51:23,133:INFO: Epoch 632/10000
2018-11-10 20:55:35,088:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.567
2018-11-10 20:56:25,578:INFO: - Eval metrics: accuracy: 0.711 ; loss: 102.913
2018-11-10 20:56:25,676:INFO: Epoch 633/10000
2018-11-10 21:00:36,615:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.565
2018-11-10 21:01:27,603:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.462
2018-11-10 21:01:27,697:INFO: Epoch 634/10000
2018-11-10 21:05:37,366:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.555
2018-11-10 21:06:28,382:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.197
2018-11-10 21:06:28,481:INFO: Epoch 635/10000
2018-11-10 21:10:38,548:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.562
2018-11-10 21:11:29,223:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.731
2018-11-10 21:11:29,322:INFO: Epoch 636/10000
2018-11-10 21:15:38,810:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.549
2018-11-10 21:16:29,521:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.335
2018-11-10 21:16:29,631:INFO: Epoch 637/10000
2018-11-10 21:20:39,118:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.561
2018-11-10 21:21:29,803:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.320
2018-11-10 21:21:29,905:INFO: Epoch 638/10000
2018-11-10 21:25:39,985:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.551
2018-11-10 21:26:30,804:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.381
2018-11-10 21:26:30,900:INFO: Epoch 639/10000
2018-11-10 21:30:41,560:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.543
2018-11-10 21:31:32,583:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.326
2018-11-10 21:31:32,680:INFO: Epoch 640/10000
2018-11-10 21:35:45,351:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.542
2018-11-10 21:36:36,258:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.349
2018-11-10 21:36:36,353:INFO: Epoch 641/10000
2018-11-10 21:40:46,330:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.532
2018-11-10 21:41:37,225:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.212
2018-11-10 21:41:37,328:INFO: Epoch 642/10000
2018-11-10 21:45:47,122:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.549
2018-11-10 21:46:37,982:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.233
2018-11-10 21:46:38,091:INFO: Epoch 643/10000
2018-11-10 21:50:49,806:INFO: - Train metrics: accuracy: 0.855 ; loss: 9.533
2018-11-10 21:51:40,395:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.525
2018-11-10 21:51:40,495:INFO: Epoch 644/10000
2018-11-10 21:55:50,803:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.531
2018-11-10 21:56:41,838:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.707
2018-11-10 21:56:41,938:INFO: Epoch 645/10000
2018-11-10 22:00:52,664:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.528
2018-11-10 22:01:43,647:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.148
2018-11-10 22:01:43,737:INFO: Epoch 646/10000
2018-11-10 22:05:55,938:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.525
2018-11-10 22:06:46,920:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.372
2018-11-10 22:06:47,019:INFO: Epoch 647/10000
2018-11-10 22:10:57,296:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.524
2018-11-10 22:11:47,928:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.482
2018-11-10 22:11:48,020:INFO: Epoch 648/10000
2018-11-10 22:15:56,276:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.518
2018-11-10 22:16:47,154:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.599
2018-11-10 22:16:47,259:INFO: Epoch 649/10000
2018-11-10 22:20:57,676:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.516
2018-11-10 22:21:48,856:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.661
2018-11-10 22:21:48,954:INFO: Epoch 650/10000
2018-11-10 22:25:59,949:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.515
2018-11-10 22:26:50,860:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.609
2018-11-10 22:26:50,959:INFO: Epoch 651/10000
2018-11-10 22:31:01,548:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.508
2018-11-10 22:31:52,457:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.598
2018-11-10 22:31:52,558:INFO: Epoch 652/10000
2018-11-10 22:36:02,965:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.516
2018-11-10 22:36:53,645:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.587
2018-11-10 22:36:53,749:INFO: Epoch 653/10000
2018-11-10 22:41:04,858:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.512
2018-11-10 22:41:55,749:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.598
2018-11-10 22:41:55,855:INFO: Epoch 654/10000
2018-11-10 22:46:06,010:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.512
2018-11-10 22:46:57,191:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.748
2018-11-10 22:46:57,283:INFO: Epoch 655/10000
2018-11-10 22:51:07,215:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.513
2018-11-10 22:51:57,981:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.490
2018-11-10 22:51:58,087:INFO: Epoch 656/10000
2018-11-10 22:56:08,167:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.501
2018-11-10 22:56:59,149:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.734
2018-11-10 22:56:59,247:INFO: Epoch 657/10000
2018-11-10 23:01:09,644:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.501
2018-11-10 23:02:00,776:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.692
2018-11-10 23:02:00,875:INFO: Epoch 658/10000
2018-11-10 23:06:10,071:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.496
2018-11-10 23:07:00,806:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.475
2018-11-10 23:07:00,903:INFO: Epoch 659/10000
2018-11-10 23:11:10,872:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.503
2018-11-10 23:12:00,685:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.526
2018-11-10 23:12:00,768:INFO: Epoch 660/10000
2018-11-10 23:16:11,273:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.490
2018-11-10 23:17:02,271:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.708
2018-11-10 23:17:02,368:INFO: Epoch 661/10000
2018-11-10 23:21:10,628:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.493
2018-11-10 23:22:01,201:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.779
2018-11-10 23:22:01,301:INFO: Epoch 662/10000
2018-11-10 23:26:10,966:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.510
2018-11-10 23:27:01,328:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.591
2018-11-10 23:27:01,422:INFO: Epoch 663/10000
2018-11-10 23:31:11,700:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.481
2018-11-10 23:32:02,598:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.672
2018-11-10 23:32:02,698:INFO: Epoch 664/10000
2018-11-10 23:36:12,197:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.502
2018-11-10 23:37:02,743:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.571
2018-11-10 23:37:02,850:INFO: Epoch 665/10000
2018-11-10 23:41:12,325:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.494
2018-11-10 23:42:03,018:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.672
2018-11-10 23:42:03,128:INFO: Epoch 666/10000
2018-11-10 23:46:13,016:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.483
2018-11-10 23:47:03,909:INFO: - Eval metrics: accuracy: 0.711 ; loss: 102.944
2018-11-10 23:47:04,016:INFO: Epoch 667/10000
2018-11-10 23:51:14,096:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.489
2018-11-10 23:52:04,952:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.291
2018-11-10 23:52:05,056:INFO: Epoch 668/10000
2018-11-10 23:56:14,171:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.484
2018-11-10 23:57:04,930:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.133
2018-11-10 23:57:05,032:INFO: Epoch 669/10000
2018-11-11 00:01:15,200:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.484
2018-11-11 00:02:06,182:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.664
2018-11-11 00:02:06,281:INFO: Epoch 670/10000
2018-11-11 00:06:17,303:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.479
2018-11-11 00:07:08,503:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.029
2018-11-11 00:07:08,607:INFO: Epoch 671/10000
2018-11-11 00:11:19,297:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.487
2018-11-11 00:12:09,264:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.749
2018-11-11 00:12:09,369:INFO: Epoch 672/10000
2018-11-11 00:16:18,207:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.469
2018-11-11 00:17:09,006:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.649
2018-11-11 00:17:09,120:INFO: Epoch 673/10000
2018-11-11 00:21:20,186:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.469
2018-11-11 00:22:10,888:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.380
2018-11-11 00:22:10,986:INFO: Epoch 674/10000
2018-11-11 00:26:21,985:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.480
2018-11-11 00:27:12,703:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.123
2018-11-11 00:27:12,799:INFO: Epoch 675/10000
2018-11-11 00:31:21,927:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.487
2018-11-11 00:32:12,725:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.259
2018-11-11 00:32:12,825:INFO: Epoch 676/10000
2018-11-11 00:36:21,177:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.468
2018-11-11 00:37:12,383:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.257
2018-11-11 00:37:12,482:INFO: Epoch 677/10000
2018-11-11 00:41:22,336:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.461
2018-11-11 00:42:13,455:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.095
2018-11-11 00:42:13,550:INFO: Epoch 678/10000
2018-11-11 00:46:22,832:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.474
2018-11-11 00:47:13,740:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.073
2018-11-11 00:47:13,842:INFO: Epoch 679/10000
2018-11-11 00:51:23,509:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.453
2018-11-11 00:52:14,323:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.659
2018-11-11 00:52:14,429:INFO: Epoch 680/10000
2018-11-11 00:56:23,511:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.457
2018-11-11 00:57:14,585:INFO: - Eval metrics: accuracy: 0.711 ; loss: 103.049
2018-11-11 00:57:14,685:INFO: Epoch 681/10000
2018-11-11 01:01:24,415:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.454
2018-11-11 01:02:15,289:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.103
2018-11-11 01:02:15,382:INFO: Epoch 682/10000
2018-11-11 01:06:26,395:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.470
2018-11-11 01:07:17,173:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.513
2018-11-11 01:07:17,275:INFO: Epoch 683/10000
2018-11-11 01:11:28,804:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.447
2018-11-11 01:12:18,609:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.144
2018-11-11 01:12:18,708:INFO: Epoch 684/10000
2018-11-11 01:16:29,162:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.473
2018-11-11 01:17:19,627:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.670
2018-11-11 01:17:19,727:INFO: Epoch 685/10000
2018-11-11 01:21:30,336:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.451
2018-11-11 01:22:21,017:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.311
2018-11-11 01:22:21,112:INFO: Epoch 686/10000
2018-11-11 01:26:31,467:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.441
2018-11-11 01:27:22,296:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.525
2018-11-11 01:27:22,394:INFO: Epoch 687/10000
2018-11-11 01:31:33,956:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.438
2018-11-11 01:32:24,975:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.729
2018-11-11 01:32:25,076:INFO: Epoch 688/10000
2018-11-11 01:36:36,771:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.446
2018-11-11 01:37:27,712:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.605
2018-11-11 01:37:27,815:INFO: Epoch 689/10000
2018-11-11 01:41:39,437:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.431
2018-11-11 01:42:30,333:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.174
2018-11-11 01:42:30,433:INFO: Epoch 690/10000
2018-11-11 01:46:39,706:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.439
2018-11-11 01:47:30,734:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.706
2018-11-11 01:47:30,850:INFO: Epoch 691/10000
2018-11-11 01:51:40,172:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.436
2018-11-11 01:52:30,960:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.637
2018-11-11 01:52:31,061:INFO: Epoch 692/10000
2018-11-11 01:56:41,214:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.427
2018-11-11 01:57:31,952:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.388
2018-11-11 01:57:32,057:INFO: Epoch 693/10000
2018-11-11 02:01:42,354:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.442
2018-11-11 02:02:33,442:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.860
2018-11-11 02:02:33,547:INFO: Epoch 694/10000
2018-11-11 02:06:45,488:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.420
2018-11-11 02:07:36,193:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.403
2018-11-11 02:07:36,291:INFO: Epoch 695/10000
2018-11-11 02:11:46,284:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.425
2018-11-11 02:12:36,064:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.077
2018-11-11 02:12:36,172:INFO: Epoch 696/10000
2018-11-11 02:16:46,382:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.442
2018-11-11 02:17:37,084:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.363
2018-11-11 02:17:37,183:INFO: Epoch 697/10000
2018-11-11 02:21:47,747:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.421
2018-11-11 02:22:38,554:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.485
2018-11-11 02:22:38,650:INFO: Epoch 698/10000
2018-11-11 02:26:49,555:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.420
2018-11-11 02:27:40,450:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.130
2018-11-11 02:27:40,553:INFO: Epoch 699/10000
2018-11-11 02:31:51,981:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.416
2018-11-11 02:32:42,665:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.540
2018-11-11 02:32:42,756:INFO: Epoch 700/10000
2018-11-11 02:36:52,745:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.429
2018-11-11 02:37:43,813:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.808
2018-11-11 02:37:43,907:INFO: Epoch 701/10000
2018-11-11 02:41:53,555:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.409
2018-11-11 02:42:44,484:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.536
2018-11-11 02:42:44,583:INFO: Epoch 702/10000
2018-11-11 02:46:55,790:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.404
2018-11-11 02:47:46,416:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.419
2018-11-11 02:47:46,519:INFO: Epoch 703/10000
2018-11-11 02:51:56,310:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.403
2018-11-11 02:52:47,363:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.359
2018-11-11 02:52:47,459:INFO: Epoch 704/10000
2018-11-11 02:56:56,856:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.414
2018-11-11 02:57:47,662:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.240
2018-11-11 02:57:47,755:INFO: Epoch 705/10000
2018-11-11 03:01:58,346:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.406
2018-11-11 03:02:49,142:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.608
2018-11-11 03:02:49,243:INFO: Epoch 706/10000
2018-11-11 03:06:59,651:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.399
2018-11-11 03:07:50,669:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.243
2018-11-11 03:07:50,770:INFO: Epoch 707/10000
2018-11-11 03:11:59,320:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.400
2018-11-11 03:12:50,003:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.404
2018-11-11 03:12:50,102:INFO: Epoch 708/10000
2018-11-11 03:16:59,474:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.397
2018-11-11 03:17:50,196:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.502
2018-11-11 03:17:50,300:INFO: Epoch 709/10000
2018-11-11 03:21:59,751:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.412
2018-11-11 03:22:50,402:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.421
2018-11-11 03:22:50,500:INFO: Epoch 710/10000
2018-11-11 03:27:00,484:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.397
2018-11-11 03:27:51,362:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.461
2018-11-11 03:27:51,454:INFO: Epoch 711/10000
2018-11-11 03:32:01,011:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.397
2018-11-11 03:32:52,084:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.436
2018-11-11 03:32:52,181:INFO: Epoch 712/10000
2018-11-11 03:37:03,300:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.384
2018-11-11 03:37:54,075:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.549
2018-11-11 03:37:54,173:INFO: Epoch 713/10000
2018-11-11 03:42:04,866:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.382
2018-11-11 03:42:55,455:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.749
2018-11-11 03:42:55,563:INFO: Epoch 714/10000
2018-11-11 03:47:05,981:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.387
2018-11-11 03:47:55,570:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.821
2018-11-11 03:47:55,675:INFO: Epoch 715/10000
2018-11-11 03:52:00,818:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.380
2018-11-11 03:52:51,386:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.864
2018-11-11 03:52:51,482:INFO: Epoch 716/10000
2018-11-11 03:57:01,621:INFO: - Train metrics: accuracy: 0.856 ; loss: 9.387
2018-11-11 03:57:52,303:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.889
2018-11-11 03:57:52,399:INFO: Epoch 717/10000
2018-11-11 04:02:02,634:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.384
2018-11-11 04:02:53,621:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.913
2018-11-11 04:02:53,720:INFO: Epoch 718/10000
2018-11-11 04:07:04,617:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.379
2018-11-11 04:07:55,458:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.528
2018-11-11 04:07:55,553:INFO: Epoch 719/10000
2018-11-11 04:12:04,098:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.373
2018-11-11 04:12:54,961:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.956
2018-11-11 04:12:55,064:INFO: Epoch 720/10000
2018-11-11 04:17:05,044:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.373
2018-11-11 04:17:55,534:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.936
2018-11-11 04:17:55,640:INFO: Epoch 721/10000
2018-11-11 04:22:06,580:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.372
2018-11-11 04:22:57,333:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.929
2018-11-11 04:22:57,439:INFO: Epoch 722/10000
2018-11-11 04:27:07,514:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.372
2018-11-11 04:27:58,682:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.012
2018-11-11 04:27:58,794:INFO: Epoch 723/10000
2018-11-11 04:32:10,336:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.369
2018-11-11 04:33:00,939:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.945
2018-11-11 04:33:01,032:INFO: Epoch 724/10000
2018-11-11 04:37:11,504:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.375
2018-11-11 04:38:02,406:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.792
2018-11-11 04:38:02,504:INFO: Epoch 725/10000
2018-11-11 04:42:11,756:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.368
2018-11-11 04:43:02,078:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.927
2018-11-11 04:43:02,178:INFO: Epoch 726/10000
2018-11-11 04:47:12,301:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.362
2018-11-11 04:48:02,810:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.017
2018-11-11 04:48:02,905:INFO: Epoch 727/10000
2018-11-11 04:52:13,456:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.360
2018-11-11 04:53:04,165:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.823
2018-11-11 04:53:04,261:INFO: Epoch 728/10000
2018-11-11 04:57:13,681:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.358
2018-11-11 04:58:04,649:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.094
2018-11-11 04:58:04,754:INFO: Epoch 729/10000
2018-11-11 05:02:15,350:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.353
2018-11-11 05:03:06,263:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.710
2018-11-11 05:03:06,365:INFO: Epoch 730/10000
2018-11-11 05:07:16,636:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.360
2018-11-11 05:08:07,618:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.043
2018-11-11 05:08:07,720:INFO: Epoch 731/10000
2018-11-11 05:12:17,361:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.352
2018-11-11 05:13:08,473:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.051
2018-11-11 05:13:08,609:INFO: Epoch 732/10000
2018-11-11 05:17:18,373:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.359
2018-11-11 05:18:09,291:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.141
2018-11-11 05:18:09,391:INFO: Epoch 733/10000
2018-11-11 05:22:21,256:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.352
2018-11-11 05:23:12,420:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.202
2018-11-11 05:23:12,520:INFO: Epoch 734/10000
2018-11-11 05:27:25,073:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.349
2018-11-11 05:28:15,963:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.190
2018-11-11 05:28:16,066:INFO: Epoch 735/10000
2018-11-11 05:32:27,945:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.350
2018-11-11 05:33:19,038:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.167
2018-11-11 05:33:19,142:INFO: Epoch 736/10000
2018-11-11 05:37:30,868:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.340
2018-11-11 05:38:21,604:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.182
2018-11-11 05:38:21,700:INFO: Epoch 737/10000
2018-11-11 05:42:32,291:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.344
2018-11-11 05:43:23,047:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.058
2018-11-11 05:43:23,143:INFO: Epoch 738/10000
2018-11-11 05:47:32,158:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.339
2018-11-11 05:48:23,039:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.140
2018-11-11 05:48:23,130:INFO: Epoch 739/10000
2018-11-11 05:52:31,164:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.336
2018-11-11 05:53:21,382:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.281
2018-11-11 05:53:21,488:INFO: Epoch 740/10000
2018-11-11 05:57:32,254:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.341
2018-11-11 05:58:23,383:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.272
2018-11-11 05:58:23,479:INFO: Epoch 741/10000
2018-11-11 06:02:34,502:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.338
2018-11-11 06:03:25,464:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.272
2018-11-11 06:03:25,569:INFO: Epoch 742/10000
2018-11-11 06:07:36,489:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.339
2018-11-11 06:08:27,184:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.202
2018-11-11 06:08:27,281:INFO: Epoch 743/10000
2018-11-11 06:12:36,589:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.336
2018-11-11 06:13:27,457:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.300
2018-11-11 06:13:27,707:INFO: Epoch 744/10000
2018-11-11 06:17:36,289:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.334
2018-11-11 06:18:26,975:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.337
2018-11-11 06:18:27,086:INFO: Epoch 745/10000
2018-11-11 06:22:35,495:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.330
2018-11-11 06:23:26,165:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.369
2018-11-11 06:23:26,262:INFO: Epoch 746/10000
2018-11-11 06:27:36,016:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.332
2018-11-11 06:28:26,738:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.393
2018-11-11 06:28:26,831:INFO: Epoch 747/10000
2018-11-11 06:32:35,826:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.328
2018-11-11 06:33:26,524:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.385
2018-11-11 06:33:26,617:INFO: Epoch 748/10000
2018-11-11 06:37:36,349:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.319
2018-11-11 06:38:27,196:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.982
2018-11-11 06:38:27,301:INFO: Epoch 749/10000
2018-11-11 06:42:37,074:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.323
2018-11-11 06:43:27,651:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.087
2018-11-11 06:43:27,742:INFO: Epoch 750/10000
2018-11-11 06:47:38,068:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.329
2018-11-11 06:48:29,069:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.360
2018-11-11 06:48:29,172:INFO: Epoch 751/10000
2018-11-11 06:52:39,672:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.324
2018-11-11 06:53:29,880:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.100
2018-11-11 06:53:29,979:INFO: Epoch 752/10000
2018-11-11 06:57:38,775:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.324
2018-11-11 06:58:29,453:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.137
2018-11-11 06:58:29,554:INFO: Epoch 753/10000
2018-11-11 07:02:38,469:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.319
2018-11-11 07:03:29,264:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.390
2018-11-11 07:03:29,365:INFO: Epoch 754/10000
2018-11-11 07:07:38,573:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.318
2018-11-11 07:08:29,569:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.136
2018-11-11 07:08:29,664:INFO: Epoch 755/10000
2018-11-11 07:12:37,932:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.317
2018-11-11 07:13:29,135:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.106
2018-11-11 07:13:29,275:INFO: Epoch 756/10000
2018-11-11 07:17:40,862:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.315
2018-11-11 07:18:31,767:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.183
2018-11-11 07:18:31,868:INFO: Epoch 757/10000
2018-11-11 07:22:41,990:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.313
2018-11-11 07:23:32,755:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.062
2018-11-11 07:23:32,855:INFO: Epoch 758/10000
2018-11-11 07:27:43,150:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.319
2018-11-11 07:28:34,221:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.071
2018-11-11 07:28:34,327:INFO: Epoch 759/10000
2018-11-11 07:32:44,034:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.307
2018-11-11 07:33:34,946:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.215
2018-11-11 07:33:35,038:INFO: Epoch 760/10000
2018-11-11 07:37:45,482:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.302
2018-11-11 07:38:36,501:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.066
2018-11-11 07:38:36,604:INFO: Epoch 761/10000
2018-11-11 07:42:46,360:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.306
2018-11-11 07:43:37,404:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.070
2018-11-11 07:43:37,499:INFO: Epoch 762/10000
2018-11-11 07:47:48,048:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.304
2018-11-11 07:48:38,912:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.247
2018-11-11 07:48:39,012:INFO: Epoch 763/10000
2018-11-11 07:52:39,097:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.303
2018-11-11 07:53:29,942:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.040
2018-11-11 07:53:30,203:INFO: Epoch 764/10000
2018-11-11 07:57:42,057:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.306
2018-11-11 07:58:32,837:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.591
2018-11-11 07:58:32,936:INFO: Epoch 765/10000
2018-11-11 08:02:43,200:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.302
2018-11-11 08:03:33,905:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.216
2018-11-11 08:03:34,007:INFO: Epoch 766/10000
2018-11-11 08:07:43,318:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.297
2018-11-11 08:08:34,037:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.238
2018-11-11 08:08:34,133:INFO: Epoch 767/10000
2018-11-11 08:12:43,478:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.301
2018-11-11 08:13:34,480:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.368
2018-11-11 08:13:34,579:INFO: Epoch 768/10000
2018-11-11 08:17:45,024:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.297
2018-11-11 08:18:35,669:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.129
2018-11-11 08:18:35,772:INFO: Epoch 769/10000
2018-11-11 08:22:45,734:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.286
2018-11-11 08:23:36,390:INFO: - Eval metrics: accuracy: 0.710 ; loss: 103.974
2018-11-11 08:23:36,488:INFO: Epoch 770/10000
2018-11-11 08:27:45,437:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.293
2018-11-11 08:28:36,292:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.032
2018-11-11 08:28:36,392:INFO: Epoch 771/10000
2018-11-11 08:32:47,851:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.287
2018-11-11 08:33:38,458:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.496
2018-11-11 08:33:38,562:INFO: Epoch 772/10000
2018-11-11 08:37:47,944:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.296
2018-11-11 08:38:38,733:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.192
2018-11-11 08:38:38,837:INFO: Epoch 773/10000
2018-11-11 08:42:48,080:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.290
2018-11-11 08:43:38,829:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.591
2018-11-11 08:43:38,924:INFO: Epoch 774/10000
2018-11-11 08:47:48,596:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.288
2018-11-11 08:48:39,355:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.102
2018-11-11 08:48:39,451:INFO: Epoch 775/10000
2018-11-11 08:52:49,307:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.284
2018-11-11 08:53:39,902:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.289
2018-11-11 08:53:40,006:INFO: Epoch 776/10000
2018-11-11 08:57:51,174:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.283
2018-11-11 08:58:41,992:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.742
2018-11-11 08:58:42,086:INFO: Epoch 777/10000
2018-11-11 09:02:52,237:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.279
2018-11-11 09:03:43,027:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.156
2018-11-11 09:03:43,135:INFO: Epoch 778/10000
2018-11-11 09:07:53,559:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.275
2018-11-11 09:08:44,412:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.069
2018-11-11 09:08:44,513:INFO: Epoch 779/10000
2018-11-11 09:12:53,294:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.278
2018-11-11 09:13:44,429:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.075
2018-11-11 09:13:44,555:INFO: Epoch 780/10000
2018-11-11 09:17:54,627:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.268
2018-11-11 09:18:45,401:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.121
2018-11-11 09:18:45,499:INFO: Epoch 781/10000
2018-11-11 09:22:57,259:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.268
2018-11-11 09:23:47,727:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.200
2018-11-11 09:23:47,827:INFO: Epoch 782/10000
2018-11-11 09:27:57,760:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.271
2018-11-11 09:28:48,463:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.115
2018-11-11 09:28:48,556:INFO: Epoch 783/10000
2018-11-11 09:32:58,592:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.264
2018-11-11 09:33:49,289:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.019
2018-11-11 09:33:49,385:INFO: Epoch 784/10000
2018-11-11 09:38:00,678:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.273
2018-11-11 09:38:51,781:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.131
2018-11-11 09:38:51,885:INFO: Epoch 785/10000
2018-11-11 09:43:01,608:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.256
2018-11-11 09:43:52,699:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.168
2018-11-11 09:43:52,800:INFO: Epoch 786/10000
2018-11-11 09:48:02,390:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.259
2018-11-11 09:48:53,298:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.006
2018-11-11 09:48:53,396:INFO: Epoch 787/10000
2018-11-11 09:53:06,100:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.257
2018-11-11 09:53:57,129:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.073
2018-11-11 09:53:57,239:INFO: Epoch 788/10000
2018-11-11 09:58:09,047:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.259
2018-11-11 09:59:00,019:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.135
2018-11-11 09:59:00,116:INFO: Epoch 789/10000
2018-11-11 10:03:09,929:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.247
2018-11-11 10:04:00,838:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.049
2018-11-11 10:04:00,942:INFO: Epoch 790/10000
2018-11-11 10:08:10,731:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.252
2018-11-11 10:09:01,659:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.141
2018-11-11 10:09:01,755:INFO: Epoch 791/10000
2018-11-11 10:13:12,337:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.252
2018-11-11 10:14:03,551:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.136
2018-11-11 10:14:03,653:INFO: Epoch 792/10000
2018-11-11 10:18:14,964:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.250
2018-11-11 10:19:05,688:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.132
2018-11-11 10:19:05,779:INFO: Epoch 793/10000
2018-11-11 10:23:16,615:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.249
2018-11-11 10:24:07,337:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.175
2018-11-11 10:24:07,438:INFO: Epoch 794/10000
2018-11-11 10:28:17,656:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.241
2018-11-11 10:29:08,279:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.198
2018-11-11 10:29:08,415:INFO: Epoch 795/10000
2018-11-11 10:33:19,394:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.237
2018-11-11 10:34:10,061:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.162
2018-11-11 10:34:10,156:INFO: Epoch 796/10000
2018-11-11 10:38:21,849:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.235
2018-11-11 10:39:12,706:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.254
2018-11-11 10:39:12,792:INFO: Epoch 797/10000
2018-11-11 10:43:24,455:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.228
2018-11-11 10:44:15,487:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.263
2018-11-11 10:44:15,582:INFO: Epoch 798/10000
2018-11-11 10:48:25,798:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.233
2018-11-11 10:49:16,557:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.343
2018-11-11 10:49:16,662:INFO: Epoch 799/10000
2018-11-11 10:53:25,995:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.234
2018-11-11 10:54:17,784:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.446
2018-11-11 10:54:17,874:INFO: Epoch 800/10000
2018-11-11 10:58:28,177:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.228
2018-11-11 10:59:18,917:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.453
2018-11-11 10:59:19,021:INFO: Epoch 801/10000
2018-11-11 11:03:28,869:INFO: - Train metrics: accuracy: 0.857 ; loss: 9.233
2018-11-11 11:04:19,779:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.439
2018-11-11 11:04:19,880:INFO: Epoch 802/10000
2018-11-11 11:08:29,963:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.224
2018-11-11 11:09:20,850:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.404
2018-11-11 11:09:20,951:INFO: Epoch 803/10000
2018-11-11 11:13:29,893:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.220
2018-11-11 11:14:20,580:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.504
2018-11-11 11:14:20,661:INFO: Epoch 804/10000
2018-11-11 11:18:31,447:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.223
2018-11-11 11:19:22,430:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.317
2018-11-11 11:19:22,524:INFO: Epoch 805/10000
2018-11-11 11:23:32,813:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.217
2018-11-11 11:24:23,557:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.171
2018-11-11 11:24:23,656:INFO: Epoch 806/10000
2018-11-11 11:28:36,942:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.213
2018-11-11 11:29:27,611:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.404
2018-11-11 11:29:27,709:INFO: Epoch 807/10000
2018-11-11 11:33:38,325:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.228
2018-11-11 11:34:29,124:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.595
2018-11-11 11:34:29,227:INFO: Epoch 808/10000
2018-11-11 11:38:39,708:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.219
2018-11-11 11:39:30,541:INFO: - Eval metrics: accuracy: 0.710 ; loss: 104.936
2018-11-11 11:39:30,651:INFO: Epoch 809/10000
2018-11-11 11:43:41,861:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.212
2018-11-11 11:44:32,442:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.528
2018-11-11 11:44:32,537:INFO: Epoch 810/10000
2018-11-11 11:48:43,180:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.202
2018-11-11 11:49:34,205:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.498
2018-11-11 11:49:34,303:INFO: Epoch 811/10000
2018-11-11 11:53:44,492:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.208
2018-11-11 11:54:35,474:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.579
2018-11-11 11:54:35,564:INFO: Epoch 812/10000
2018-11-11 11:58:46,320:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.203
2018-11-11 11:59:37,263:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.527
2018-11-11 11:59:37,377:INFO: Epoch 813/10000
2018-11-11 12:03:49,076:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.197
2018-11-11 12:04:40,061:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.457
2018-11-11 12:04:40,159:INFO: Epoch 814/10000
2018-11-11 12:08:51,782:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.210
2018-11-11 12:09:42,362:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.246
2018-11-11 12:09:42,461:INFO: Epoch 815/10000
2018-11-11 12:13:51,978:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.200
2018-11-11 12:14:42,770:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.824
2018-11-11 12:14:42,866:INFO: Epoch 816/10000
2018-11-11 12:18:52,731:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.198
2018-11-11 12:19:43,519:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.671
2018-11-11 12:19:43,620:INFO: Epoch 817/10000
2018-11-11 12:23:54,522:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.212
2018-11-11 12:24:45,455:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.200
2018-11-11 12:24:45,560:INFO: Epoch 818/10000
2018-11-11 12:28:55,585:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.194
2018-11-11 12:29:46,230:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.013
2018-11-11 12:29:46,329:INFO: Epoch 819/10000
2018-11-11 12:33:56,913:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.192
2018-11-11 12:34:47,390:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.592
2018-11-11 12:34:47,490:INFO: Epoch 820/10000
2018-11-11 12:38:57,855:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.186
2018-11-11 12:39:48,573:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.578
2018-11-11 12:39:48,675:INFO: Epoch 821/10000
2018-11-11 12:43:59,489:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.193
2018-11-11 12:44:50,425:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.734
2018-11-11 12:44:50,539:INFO: Epoch 822/10000
2018-11-11 12:49:01,370:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.189
2018-11-11 12:49:51,983:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.627
2018-11-11 12:49:52,087:INFO: Epoch 823/10000
2018-11-11 12:54:02,987:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.185
2018-11-11 12:54:53,722:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.632
2018-11-11 12:54:53,822:INFO: Epoch 824/10000
2018-11-11 12:59:05,783:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.181
2018-11-11 12:59:56,662:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.608
2018-11-11 12:59:56,779:INFO: Epoch 825/10000
2018-11-11 13:04:07,332:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.186
2018-11-11 13:04:58,369:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.617
2018-11-11 13:04:58,469:INFO: Epoch 826/10000
2018-11-11 13:09:12,115:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.182
2018-11-11 13:10:02,937:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.785
2018-11-11 13:10:03,055:INFO: Epoch 827/10000
2018-11-11 13:14:14,355:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.184
2018-11-11 13:15:05,307:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.961
2018-11-11 13:15:05,405:INFO: Epoch 828/10000
2018-11-11 13:19:15,998:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.180
2018-11-11 13:20:06,622:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.766
2018-11-11 13:20:06,718:INFO: Epoch 829/10000
2018-11-11 13:24:16,603:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.179
2018-11-11 13:25:07,312:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.920
2018-11-11 13:25:07,410:INFO: Epoch 830/10000
2018-11-11 13:29:17,828:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.179
2018-11-11 13:30:08,625:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.656
2018-11-11 13:30:08,725:INFO: Epoch 831/10000
2018-11-11 13:34:19,308:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.171
2018-11-11 13:35:10,270:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.651
2018-11-11 13:35:10,383:INFO: Epoch 832/10000
2018-11-11 13:39:21,091:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.173
2018-11-11 13:40:11,860:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.347
2018-11-11 13:40:11,962:INFO: Epoch 833/10000
2018-11-11 13:44:22,865:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.170
2018-11-11 13:45:13,464:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.686
2018-11-11 13:45:13,567:INFO: Epoch 834/10000
2018-11-11 13:49:25,307:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.169
2018-11-11 13:50:16,050:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.691
2018-11-11 13:50:16,145:INFO: Epoch 835/10000
2018-11-11 13:54:25,351:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.165
2018-11-11 13:55:16,636:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.693
2018-11-11 13:55:16,741:INFO: Epoch 836/10000
2018-11-11 13:59:26,670:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.166
2018-11-11 14:00:17,518:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.685
2018-11-11 14:00:17,616:INFO: Epoch 837/10000
2018-11-11 14:04:28,274:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.171
2018-11-11 14:05:18,892:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.725
2018-11-11 14:05:18,991:INFO: Epoch 838/10000
2018-11-11 14:09:29,736:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.160
2018-11-11 14:10:20,694:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.161
2018-11-11 14:10:20,790:INFO: Epoch 839/10000
2018-11-11 14:14:29,434:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.157
2018-11-11 14:15:20,196:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.745
2018-11-11 14:15:20,292:INFO: Epoch 840/10000
2018-11-11 14:19:30,859:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.155
2018-11-11 14:20:21,845:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.080
2018-11-11 14:20:21,944:INFO: Epoch 841/10000
2018-11-11 14:24:31,641:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.167
2018-11-11 14:25:22,586:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.457
2018-11-11 14:25:22,686:INFO: Epoch 842/10000
2018-11-11 14:29:33,555:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.156
2018-11-11 14:30:24,306:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.745
2018-11-11 14:30:24,400:INFO: Epoch 843/10000
2018-11-11 14:34:35,145:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.152
2018-11-11 14:35:25,845:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.034
2018-11-11 14:35:25,939:INFO: Epoch 844/10000
2018-11-11 14:39:36,554:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.151
2018-11-11 14:40:27,324:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.715
2018-11-11 14:40:27,424:INFO: Epoch 845/10000
2018-11-11 14:44:36,796:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.149
2018-11-11 14:45:27,409:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.545
2018-11-11 14:45:27,509:INFO: Epoch 846/10000
2018-11-11 14:49:37,721:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.144
2018-11-11 14:50:28,612:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.819
2018-11-11 14:50:28,713:INFO: Epoch 847/10000
2018-11-11 14:54:39,324:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.143
2018-11-11 14:55:29,949:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.305
2018-11-11 14:55:30,057:INFO: Epoch 848/10000
2018-11-11 14:59:39,623:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.135
2018-11-11 15:00:30,498:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.174
2018-11-11 15:00:30,597:INFO: Epoch 849/10000
2018-11-11 15:04:41,705:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.150
2018-11-11 15:05:32,258:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.964
2018-11-11 15:05:32,357:INFO: Epoch 850/10000
2018-11-11 15:09:39,300:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.139
2018-11-11 15:10:30,101:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.756
2018-11-11 15:10:30,198:INFO: Epoch 851/10000
2018-11-11 15:14:37,449:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.145
2018-11-11 15:15:28,073:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.786
2018-11-11 15:15:28,178:INFO: Epoch 852/10000
2018-11-11 15:19:32,619:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.133
2018-11-11 15:20:23,408:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.182
2018-11-11 15:20:23,502:INFO: Epoch 853/10000
2018-11-11 15:24:29,934:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.132
2018-11-11 15:25:20,844:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.794
2018-11-11 15:25:20,951:INFO: Epoch 854/10000
2018-11-11 15:29:28,184:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.151
2018-11-11 15:30:18,658:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.745
2018-11-11 15:30:18,761:INFO: Epoch 855/10000
2018-11-11 15:34:26,473:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.132
2018-11-11 15:35:16,887:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.862
2018-11-11 15:35:16,979:INFO: Epoch 856/10000
2018-11-11 15:39:23,106:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.131
2018-11-11 15:40:13,521:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.851
2018-11-11 15:40:13,617:INFO: Epoch 857/10000
2018-11-11 15:44:20,819:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.123
2018-11-11 15:45:11,617:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.916
2018-11-11 15:45:11,718:INFO: Epoch 858/10000
2018-11-11 15:49:18,165:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.124
2018-11-11 15:50:08,741:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.265
2018-11-11 15:50:08,839:INFO: Epoch 859/10000
2018-11-11 15:54:16,393:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.117
2018-11-11 15:55:06,962:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.962
2018-11-11 15:55:07,062:INFO: Epoch 860/10000
2018-11-11 15:59:13,921:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.130
2018-11-11 16:00:04,253:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.899
2018-11-11 16:00:04,354:INFO: Epoch 861/10000
2018-11-11 16:04:10,387:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.115
2018-11-11 16:05:01,238:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.998
2018-11-11 16:05:01,330:INFO: Epoch 862/10000
2018-11-11 16:09:07,261:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.119
2018-11-11 16:09:57,476:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.992
2018-11-11 16:09:57,585:INFO: Epoch 863/10000
2018-11-11 16:14:03,098:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.113
2018-11-11 16:14:53,678:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.308
2018-11-11 16:14:53,778:INFO: Epoch 864/10000
2018-11-11 16:19:00,055:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.109
2018-11-11 16:19:50,434:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.962
2018-11-11 16:19:50,518:INFO: Epoch 865/10000
2018-11-11 16:23:57,561:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.112
2018-11-11 16:24:48,029:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.949
2018-11-11 16:24:48,117:INFO: Epoch 866/10000
2018-11-11 16:28:56,675:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.103
2018-11-11 16:29:46,973:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.042
2018-11-11 16:29:47,083:INFO: Epoch 867/10000
2018-11-11 16:33:52,187:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.107
2018-11-11 16:34:42,864:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.159
2018-11-11 16:34:42,976:INFO: Epoch 868/10000
2018-11-11 16:38:48,889:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.098
2018-11-11 16:39:39,503:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.691
2018-11-11 16:39:39,607:INFO: Epoch 869/10000
2018-11-11 16:43:45,467:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.098
2018-11-11 16:44:35,912:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.937
2018-11-11 16:44:36,023:INFO: Epoch 870/10000
2018-11-11 16:48:43,078:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.111
2018-11-11 16:49:33,863:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.316
2018-11-11 16:49:33,951:INFO: Epoch 871/10000
2018-11-11 16:53:41,448:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.092
2018-11-11 16:54:32,177:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.929
2018-11-11 16:54:32,274:INFO: Epoch 872/10000
2018-11-11 16:58:38,741:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.092
2018-11-11 16:59:29,630:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.969
2018-11-11 16:59:29,731:INFO: Epoch 873/10000
2018-11-11 17:03:36,101:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.100
2018-11-11 17:04:26,952:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.603
2018-11-11 17:04:27,056:INFO: Epoch 874/10000
2018-11-11 17:08:33,439:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.101
2018-11-11 17:09:22,604:INFO: - Eval metrics: accuracy: 0.709 ; loss: 104.981
2018-11-11 17:09:22,705:INFO: Epoch 875/10000
2018-11-11 17:13:28,861:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.089
2018-11-11 17:14:19,684:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.034
2018-11-11 17:14:19,765:INFO: Epoch 876/10000
2018-11-11 17:18:27,407:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.084
2018-11-11 17:19:18,650:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.019
2018-11-11 17:19:18,739:INFO: Epoch 877/10000
2018-11-11 17:23:27,550:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.091
2018-11-11 17:24:18,025:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.080
2018-11-11 17:24:18,112:INFO: Epoch 878/10000
2018-11-11 17:28:26,331:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.092
2018-11-11 17:29:16,853:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.110
2018-11-11 17:29:16,972:INFO: Epoch 879/10000
2018-11-11 17:33:25,547:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.086
2018-11-11 17:34:16,133:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.018
2018-11-11 17:34:16,234:INFO: Epoch 880/10000
2018-11-11 17:38:27,127:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.083
2018-11-11 17:39:18,080:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.143
2018-11-11 17:39:18,178:INFO: Epoch 881/10000
2018-11-11 17:43:30,736:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.083
2018-11-11 17:44:21,911:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.127
2018-11-11 17:44:22,014:INFO: Epoch 882/10000
2018-11-11 17:48:34,993:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.089
2018-11-11 17:49:25,703:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.169
2018-11-11 17:49:25,803:INFO: Epoch 883/10000
2018-11-11 17:53:37,816:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.083
2018-11-11 17:54:28,863:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.834
2018-11-11 17:54:28,960:INFO: Epoch 884/10000
2018-11-11 17:58:40,728:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.069
2018-11-11 17:59:31,584:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.272
2018-11-11 17:59:31,675:INFO: Epoch 885/10000
2018-11-11 18:03:43,963:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.080
2018-11-11 18:04:34,673:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.000
2018-11-11 18:04:34,772:INFO: Epoch 886/10000
2018-11-11 18:08:46,201:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.080
2018-11-11 18:09:37,024:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.156
2018-11-11 18:09:37,130:INFO: Epoch 887/10000
2018-11-11 18:13:48,150:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.078
2018-11-11 18:14:39,022:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.195
2018-11-11 18:14:39,124:INFO: Epoch 888/10000
2018-11-11 18:18:50,183:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.075
2018-11-11 18:19:41,057:INFO: - Eval metrics: accuracy: 0.708 ; loss: 105.236
2018-11-11 18:19:41,166:INFO: Epoch 889/10000
2018-11-11 18:23:51,559:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.070
2018-11-11 18:24:42,450:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.167
2018-11-11 18:24:42,550:INFO: Epoch 890/10000
2018-11-11 18:28:54,083:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.069
2018-11-11 18:29:44,812:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.192
2018-11-11 18:29:44,909:INFO: Epoch 891/10000
2018-11-11 18:33:56,382:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.068
2018-11-11 18:34:47,002:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.705
2018-11-11 18:34:47,098:INFO: Epoch 892/10000
2018-11-11 18:38:58,131:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.062
2018-11-11 18:39:48,613:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.184
2018-11-11 18:39:48,717:INFO: Epoch 893/10000
2018-11-11 18:44:00,317:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.073
2018-11-11 18:44:51,207:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.182
2018-11-11 18:44:51,301:INFO: Epoch 894/10000
2018-11-11 18:49:03,615:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.085
2018-11-11 18:49:54,670:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.177
2018-11-11 18:49:54,768:INFO: Epoch 895/10000
2018-11-11 18:54:06,085:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.061
2018-11-11 18:54:56,925:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.218
2018-11-11 18:54:57,020:INFO: Epoch 896/10000
2018-11-11 18:59:07,511:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.060
2018-11-11 18:59:58,236:INFO: - Eval metrics: accuracy: 0.708 ; loss: 105.365
2018-11-11 18:59:58,339:INFO: Epoch 897/10000
2018-11-11 19:04:08,730:INFO: - Train metrics: accuracy: 0.859 ; loss: 9.057
2018-11-11 19:04:59,168:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.264
2018-11-11 19:04:59,270:INFO: Epoch 898/10000
2018-11-11 19:09:10,540:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.059
2018-11-11 19:10:01,830:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.179
2018-11-11 19:10:01,933:INFO: Epoch 899/10000
2018-11-11 19:14:11,985:INFO: - Train metrics: accuracy: 0.859 ; loss: 9.054
2018-11-11 19:15:03,234:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.335
2018-11-11 19:15:03,333:INFO: Epoch 900/10000
2018-11-11 19:19:14,601:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.055
2018-11-11 19:20:05,247:INFO: - Eval metrics: accuracy: 0.708 ; loss: 105.364
2018-11-11 19:20:05,346:INFO: Epoch 901/10000
2018-11-11 19:24:15,800:INFO: - Train metrics: accuracy: 0.858 ; loss: 9.056
2018-11-11 19:25:06,502:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.324
2018-11-11 19:25:06,608:INFO: Epoch 902/10000
2018-11-11 19:29:15,793:INFO: - Train metrics: accuracy: 0.859 ; loss: 9.050
2018-11-11 19:30:06,724:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.339
2018-11-11 19:30:06,820:INFO: Epoch 903/10000
2018-11-11 19:34:16,111:INFO: - Train metrics: accuracy: 0.859 ; loss: 9.052
2018-11-11 19:35:06,840:INFO: - Eval metrics: accuracy: 0.709 ; loss: 105.326
2018-11-11 19:35:06,929:INFO: Epoch 904/10000
2018-11-11 21:33:51,966:INFO: Creating the datasets...
2018-11-11 21:33:53,708:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-11 21:33:54,011:WARNING: From /home/rwee015/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-11 21:33:54,066:INFO: - done.
2018-11-11 21:33:54,066:INFO: Creating the model...
2018-11-11 21:33:55,406:INFO: - done.
2018-11-11 21:33:55,407:INFO: Starting training for 10000 epoch(s)
2018-11-11 21:33:56,180:INFO: Epoch 1/10000
2018-11-11 22:40:06,390:INFO: Creating the datasets...
2018-11-11 22:40:08,218:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-11 22:40:08,502:WARNING: From /home/rwee015/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-11 22:40:08,542:INFO: - done.
2018-11-11 22:40:08,542:INFO: Creating the model...
2018-11-11 22:40:09,868:INFO: - done.
2018-11-11 22:40:09,868:INFO: Starting training for 10000 epoch(s)
2018-11-11 22:40:10,633:INFO: Epoch 1/10000
2018-11-11 22:42:02,097:INFO: Creating the datasets...
2018-11-11 22:42:03,843:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-11 22:42:04,125:WARNING: From /home/rwee015/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-11 22:42:04,164:INFO: - done.
2018-11-11 22:42:04,165:INFO: Creating the model...
2018-11-11 22:42:05,517:INFO: - done.
2018-11-11 22:42:05,518:INFO: Starting training for 10000 epoch(s)
2018-11-11 22:42:06,276:INFO: Epoch 1/10000
2018-11-11 22:47:03,414:INFO: Creating the datasets...
2018-11-11 22:47:05,174:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-11 22:47:05,453:WARNING: From /home/rwee015/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-11 22:47:05,491:INFO: - done.
2018-11-11 22:47:05,492:INFO: Creating the model...
2018-11-11 22:47:06,828:INFO: - done.
2018-11-11 22:47:06,828:INFO: Starting training for 10000 epoch(s)
2018-11-11 22:47:07,590:INFO: Epoch 1/10000
2018-11-11 22:50:59,894:INFO: - Train metrics: accuracy: 0.670 ; loss: 245.009
2018-11-11 22:51:48,321:INFO: - Eval metrics: accuracy: 0.673 ; loss: 139.695
2018-11-11 22:51:48,726:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-11 22:51:48,739:INFO: Epoch 2/10000
2018-11-11 22:55:37,249:INFO: - Train metrics: accuracy: 0.713 ; loss: 152.949
2018-11-11 22:56:26,464:INFO: - Eval metrics: accuracy: 0.697 ; loss: 133.830
2018-11-11 22:56:26,817:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-11 22:56:26,817:INFO: Epoch 3/10000
2018-11-11 23:00:16,079:INFO: - Train metrics: accuracy: 0.722 ; loss: 140.876
2018-11-11 23:01:05,011:INFO: - Eval metrics: accuracy: 0.715 ; loss: 109.544
2018-11-11 23:01:05,299:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-11 23:01:05,300:INFO: Epoch 4/10000
2018-11-11 23:04:55,497:INFO: - Train metrics: accuracy: 0.727 ; loss: 127.711
2018-11-11 23:05:44,181:INFO: - Eval metrics: accuracy: 0.721 ; loss: 107.005
2018-11-11 23:05:44,487:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-11 23:05:44,488:INFO: Epoch 5/10000
2018-11-11 23:09:31,918:INFO: - Train metrics: accuracy: 0.731 ; loss: 118.896
2018-11-11 23:10:20,249:INFO: - Eval metrics: accuracy: 0.717 ; loss: 110.892
2018-11-11 23:10:20,328:INFO: Epoch 6/10000
2018-11-11 23:14:05,901:INFO: - Train metrics: accuracy: 0.733 ; loss: 112.156
2018-11-11 23:14:54,553:INFO: - Eval metrics: accuracy: 0.717 ; loss: 109.635
2018-11-11 23:14:54,655:INFO: Epoch 7/10000
2018-11-11 23:18:43,455:INFO: - Train metrics: accuracy: 0.736 ; loss: 105.353
2018-11-11 23:19:32,053:INFO: - Eval metrics: accuracy: 0.721 ; loss: 102.685
2018-11-11 23:19:32,333:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-11 23:19:32,333:INFO: Epoch 8/10000
2018-11-11 23:23:20,799:INFO: - Train metrics: accuracy: 0.739 ; loss: 100.028
2018-11-11 23:24:09,544:INFO: - Eval metrics: accuracy: 0.721 ; loss: 102.555
2018-11-11 23:24:09,633:INFO: Epoch 9/10000
2018-11-11 23:27:58,399:INFO: - Train metrics: accuracy: 0.741 ; loss: 95.666
2018-11-11 23:28:47,103:INFO: - Eval metrics: accuracy: 0.717 ; loss: 102.555
2018-11-11 23:28:47,184:INFO: Epoch 10/10000
2018-11-11 23:32:32,097:INFO: - Train metrics: accuracy: 0.743 ; loss: 87.739
2018-11-11 23:33:19,983:INFO: - Eval metrics: accuracy: 0.721 ; loss: 99.541
2018-11-11 23:33:20,053:INFO: Epoch 11/10000
2018-11-11 23:37:09,793:INFO: - Train metrics: accuracy: 0.746 ; loss: 78.909
2018-11-11 23:37:58,486:INFO: - Eval metrics: accuracy: 0.718 ; loss: 98.067
2018-11-11 23:37:58,563:INFO: Epoch 12/10000
2018-11-11 23:41:49,852:INFO: - Train metrics: accuracy: 0.748 ; loss: 71.884
2018-11-11 23:42:38,398:INFO: - Eval metrics: accuracy: 0.723 ; loss: 98.369
2018-11-11 23:42:38,673:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-11 23:42:38,673:INFO: Epoch 13/10000
2018-11-11 23:46:27,045:INFO: - Train metrics: accuracy: 0.750 ; loss: 66.217
2018-11-11 23:47:15,533:INFO: - Eval metrics: accuracy: 0.719 ; loss: 103.405
2018-11-11 23:47:15,611:INFO: Epoch 14/10000
2018-11-11 23:51:02,922:INFO: - Train metrics: accuracy: 0.752 ; loss: 62.222
2018-11-11 23:51:51,056:INFO: - Eval metrics: accuracy: 0.718 ; loss: 107.782
2018-11-11 23:51:51,139:INFO: Epoch 15/10000
2018-11-11 23:55:41,803:INFO: - Train metrics: accuracy: 0.755 ; loss: 58.875
2018-11-11 23:56:30,672:INFO: - Eval metrics: accuracy: 0.717 ; loss: 109.328
2018-11-11 23:56:30,751:INFO: Epoch 16/10000
2018-11-12 00:00:18,759:INFO: - Train metrics: accuracy: 0.757 ; loss: 55.834
2018-11-12 00:01:07,151:INFO: - Eval metrics: accuracy: 0.716 ; loss: 110.765
2018-11-12 00:01:07,232:INFO: Epoch 17/10000
2018-11-12 00:04:56,047:INFO: - Train metrics: accuracy: 0.760 ; loss: 52.901
2018-11-12 00:05:44,726:INFO: - Eval metrics: accuracy: 0.716 ; loss: 109.452
2018-11-12 00:05:44,810:INFO: Epoch 18/10000
2018-11-12 00:09:34,482:INFO: - Train metrics: accuracy: 0.762 ; loss: 50.402
2018-11-12 00:10:23,239:INFO: - Eval metrics: accuracy: 0.717 ; loss: 111.928
2018-11-12 00:10:23,306:INFO: Epoch 19/10000
2018-11-12 00:14:11,916:INFO: - Train metrics: accuracy: 0.764 ; loss: 47.956
2018-11-12 00:15:00,627:INFO: - Eval metrics: accuracy: 0.714 ; loss: 114.094
2018-11-12 00:15:00,698:INFO: Epoch 20/10000
2018-11-12 00:18:47,661:INFO: - Train metrics: accuracy: 0.767 ; loss: 45.709
2018-11-12 00:19:35,994:INFO: - Eval metrics: accuracy: 0.714 ; loss: 117.165
2018-11-12 00:19:36,083:INFO: Epoch 21/10000
2018-11-12 00:23:23,218:INFO: - Train metrics: accuracy: 0.769 ; loss: 43.626
2018-11-12 00:24:12,122:INFO: - Eval metrics: accuracy: 0.713 ; loss: 116.622
2018-11-12 00:24:12,205:INFO: Epoch 22/10000
2018-11-12 00:28:01,847:INFO: - Train metrics: accuracy: 0.771 ; loss: 41.963
2018-11-12 00:28:50,335:INFO: - Eval metrics: accuracy: 0.710 ; loss: 119.929
2018-11-12 00:28:50,415:INFO: Epoch 23/10000
2018-11-12 00:32:36,846:INFO: - Train metrics: accuracy: 0.773 ; loss: 40.284
2018-11-12 00:33:25,349:INFO: - Eval metrics: accuracy: 0.709 ; loss: 123.112
2018-11-12 00:33:25,431:INFO: Epoch 24/10000
2018-11-12 00:37:11,480:INFO: - Train metrics: accuracy: 0.775 ; loss: 38.691
2018-11-12 00:37:59,837:INFO: - Eval metrics: accuracy: 0.708 ; loss: 124.152
2018-11-12 00:37:59,920:INFO: Epoch 25/10000
2018-11-12 00:41:50,329:INFO: - Train metrics: accuracy: 0.776 ; loss: 37.302
2018-11-12 00:42:39,639:INFO: - Eval metrics: accuracy: 0.707 ; loss: 125.037
2018-11-12 00:42:39,724:INFO: Epoch 26/10000
2018-11-12 00:46:27,615:INFO: - Train metrics: accuracy: 0.778 ; loss: 36.061
2018-11-12 00:47:16,328:INFO: - Eval metrics: accuracy: 0.706 ; loss: 126.300
2018-11-12 00:47:16,403:INFO: Epoch 27/10000
2018-11-12 00:51:05,269:INFO: - Train metrics: accuracy: 0.780 ; loss: 34.953
2018-11-12 00:51:53,549:INFO: - Eval metrics: accuracy: 0.706 ; loss: 126.214
2018-11-12 00:51:53,632:INFO: Epoch 28/10000
2018-11-12 00:55:44,517:INFO: - Train metrics: accuracy: 0.781 ; loss: 33.941
2018-11-12 00:56:33,403:INFO: - Eval metrics: accuracy: 0.706 ; loss: 126.607
2018-11-12 00:56:33,487:INFO: Epoch 29/10000
2018-11-12 01:00:23,493:INFO: - Train metrics: accuracy: 0.783 ; loss: 32.971
2018-11-12 01:01:12,640:INFO: - Eval metrics: accuracy: 0.705 ; loss: 127.788
2018-11-12 01:01:12,728:INFO: Epoch 30/10000
2018-11-12 01:05:03,473:INFO: - Train metrics: accuracy: 0.784 ; loss: 32.160
2018-11-12 01:05:51,892:INFO: - Eval metrics: accuracy: 0.704 ; loss: 128.956
2018-11-12 01:05:51,976:INFO: Epoch 31/10000
2018-11-12 01:09:40,561:INFO: - Train metrics: accuracy: 0.785 ; loss: 31.325
2018-11-12 01:10:28,642:INFO: - Eval metrics: accuracy: 0.703 ; loss: 129.671
2018-11-12 01:10:28,721:INFO: Epoch 32/10000
2018-11-12 01:14:14,654:INFO: - Train metrics: accuracy: 0.786 ; loss: 30.562
2018-11-12 01:15:03,318:INFO: - Eval metrics: accuracy: 0.703 ; loss: 129.780
2018-11-12 01:15:03,496:INFO: Epoch 33/10000
2018-11-12 01:18:54,024:INFO: - Train metrics: accuracy: 0.788 ; loss: 29.953
2018-11-12 01:19:42,856:INFO: - Eval metrics: accuracy: 0.703 ; loss: 130.806
2018-11-12 01:19:42,937:INFO: Epoch 34/10000
2018-11-12 01:23:32,273:INFO: - Train metrics: accuracy: 0.789 ; loss: 29.258
2018-11-12 01:24:21,075:INFO: - Eval metrics: accuracy: 0.703 ; loss: 131.972
2018-11-12 01:24:21,171:INFO: Epoch 35/10000
2018-11-12 01:28:08,799:INFO: - Train metrics: accuracy: 0.790 ; loss: 28.701
2018-11-12 01:28:57,191:INFO: - Eval metrics: accuracy: 0.703 ; loss: 129.568
2018-11-12 01:28:57,267:INFO: Epoch 36/10000
2018-11-12 01:32:44,224:INFO: - Train metrics: accuracy: 0.791 ; loss: 28.142
2018-11-12 01:33:32,811:INFO: - Eval metrics: accuracy: 0.703 ; loss: 129.736
2018-11-12 01:33:32,891:INFO: Epoch 37/10000
2018-11-12 01:37:21,602:INFO: - Train metrics: accuracy: 0.792 ; loss: 27.687
2018-11-12 01:38:10,069:INFO: - Eval metrics: accuracy: 0.703 ; loss: 129.854
2018-11-12 01:38:10,142:INFO: Epoch 38/10000
2018-11-12 01:41:58,594:INFO: - Train metrics: accuracy: 0.793 ; loss: 27.241
2018-11-12 01:42:47,019:INFO: - Eval metrics: accuracy: 0.703 ; loss: 129.825
2018-11-12 01:42:47,098:INFO: Epoch 39/10000
2018-11-12 01:46:36,335:INFO: - Train metrics: accuracy: 0.793 ; loss: 26.824
2018-11-12 01:47:24,730:INFO: - Eval metrics: accuracy: 0.703 ; loss: 129.868
2018-11-12 01:47:24,813:INFO: Epoch 40/10000
2018-11-12 01:51:11,714:INFO: - Train metrics: accuracy: 0.794 ; loss: 26.390
2018-11-12 01:51:59,945:INFO: - Eval metrics: accuracy: 0.703 ; loss: 129.781
2018-11-12 01:52:00,024:INFO: Epoch 41/10000
2018-11-12 01:55:51,646:INFO: - Train metrics: accuracy: 0.795 ; loss: 26.011
2018-11-12 01:56:39,933:INFO: - Eval metrics: accuracy: 0.703 ; loss: 129.803
2018-11-12 01:56:40,009:INFO: Epoch 42/10000
2018-11-12 02:00:21,996:INFO: - Train metrics: accuracy: 0.796 ; loss: 25.623
2018-11-12 02:01:08,704:INFO: - Eval metrics: accuracy: 0.703 ; loss: 129.130
2018-11-12 02:01:08,786:INFO: Epoch 43/10000
2018-11-12 02:04:54,799:INFO: - Train metrics: accuracy: 0.797 ; loss: 25.279
2018-11-12 02:05:41,602:INFO: - Eval metrics: accuracy: 0.702 ; loss: 129.687
2018-11-12 02:05:41,675:INFO: Epoch 44/10000
2018-11-12 02:09:24,381:INFO: - Train metrics: accuracy: 0.797 ; loss: 24.964
2018-11-12 02:10:12,867:INFO: - Eval metrics: accuracy: 0.703 ; loss: 129.564
2018-11-12 02:10:12,952:INFO: Epoch 45/10000
2018-11-12 02:14:00,888:INFO: - Train metrics: accuracy: 0.798 ; loss: 24.632
2018-11-12 02:14:49,682:INFO: - Eval metrics: accuracy: 0.702 ; loss: 129.857
2018-11-12 02:14:49,766:INFO: Epoch 46/10000
2018-11-12 02:18:38,267:INFO: - Train metrics: accuracy: 0.799 ; loss: 24.340
2018-11-12 02:19:27,000:INFO: - Eval metrics: accuracy: 0.702 ; loss: 130.037
2018-11-12 02:19:27,083:INFO: Epoch 47/10000
2018-11-12 02:23:16,317:INFO: - Train metrics: accuracy: 0.799 ; loss: 24.022
2018-11-12 02:24:04,914:INFO: - Eval metrics: accuracy: 0.701 ; loss: 129.825
2018-11-12 02:24:05,004:INFO: Epoch 48/10000
2018-11-12 02:27:53,799:INFO: - Train metrics: accuracy: 0.800 ; loss: 23.779
2018-11-12 02:28:42,377:INFO: - Eval metrics: accuracy: 0.701 ; loss: 130.344
2018-11-12 02:28:42,456:INFO: Epoch 49/10000
2018-11-12 02:32:33,658:INFO: - Train metrics: accuracy: 0.801 ; loss: 23.490
2018-11-12 02:33:22,401:INFO: - Eval metrics: accuracy: 0.701 ; loss: 129.694
2018-11-12 02:33:22,489:INFO: Epoch 50/10000
2018-11-12 02:37:13,832:INFO: - Train metrics: accuracy: 0.801 ; loss: 23.252
2018-11-12 02:38:02,690:INFO: - Eval metrics: accuracy: 0.701 ; loss: 129.953
2018-11-12 02:38:02,777:INFO: Epoch 51/10000
2018-11-12 02:41:53,422:INFO: - Train metrics: accuracy: 0.802 ; loss: 23.015
2018-11-12 02:42:42,126:INFO: - Eval metrics: accuracy: 0.701 ; loss: 129.929
2018-11-12 02:42:42,200:INFO: Epoch 52/10000
2018-11-12 02:46:31,522:INFO: - Train metrics: accuracy: 0.803 ; loss: 22.755
2018-11-12 02:47:20,030:INFO: - Eval metrics: accuracy: 0.700 ; loss: 130.310
2018-11-12 02:47:20,108:INFO: Epoch 53/10000
2018-11-12 02:51:10,121:INFO: - Train metrics: accuracy: 0.803 ; loss: 22.564
2018-11-12 02:51:58,058:INFO: - Eval metrics: accuracy: 0.700 ; loss: 130.468
2018-11-12 02:51:58,144:INFO: Epoch 54/10000
2018-11-12 02:55:47,862:INFO: - Train metrics: accuracy: 0.804 ; loss: 22.330
2018-11-12 02:56:35,897:INFO: - Eval metrics: accuracy: 0.699 ; loss: 131.146
2018-11-12 02:56:35,983:INFO: Epoch 55/10000
2018-11-12 03:00:26,292:INFO: - Train metrics: accuracy: 0.804 ; loss: 22.138
2018-11-12 03:01:14,215:INFO: - Eval metrics: accuracy: 0.698 ; loss: 131.632
2018-11-12 03:01:14,302:INFO: Epoch 56/10000
2018-11-12 03:05:05,060:INFO: - Train metrics: accuracy: 0.804 ; loss: 21.944
2018-11-12 03:05:53,324:INFO: - Eval metrics: accuracy: 0.698 ; loss: 132.511
2018-11-12 03:05:53,405:INFO: Epoch 57/10000
2018-11-12 03:09:41,008:INFO: - Train metrics: accuracy: 0.805 ; loss: 21.750
2018-11-12 03:10:29,859:INFO: - Eval metrics: accuracy: 0.698 ; loss: 132.871
2018-11-12 03:10:29,939:INFO: Epoch 58/10000
2018-11-12 03:14:17,703:INFO: - Train metrics: accuracy: 0.805 ; loss: 21.581
2018-11-12 03:15:06,247:INFO: - Eval metrics: accuracy: 0.698 ; loss: 133.397
2018-11-12 03:15:06,332:INFO: Epoch 59/10000
2018-11-12 03:18:53,968:INFO: - Train metrics: accuracy: 0.806 ; loss: 21.399
2018-11-12 03:19:42,857:INFO: - Eval metrics: accuracy: 0.698 ; loss: 133.601
2018-11-12 03:19:42,942:INFO: Epoch 60/10000
2018-11-12 03:23:33,321:INFO: - Train metrics: accuracy: 0.806 ; loss: 21.209
2018-11-12 03:24:22,159:INFO: - Eval metrics: accuracy: 0.698 ; loss: 133.428
2018-11-12 03:24:22,244:INFO: Epoch 61/10000
2018-11-12 03:28:11,114:INFO: - Train metrics: accuracy: 0.807 ; loss: 21.030
2018-11-12 03:29:00,012:INFO: - Eval metrics: accuracy: 0.697 ; loss: 133.645
2018-11-12 03:29:00,096:INFO: Epoch 62/10000
2018-11-12 03:32:46,694:INFO: - Train metrics: accuracy: 0.807 ; loss: 20.869
2018-11-12 03:33:35,059:INFO: - Eval metrics: accuracy: 0.697 ; loss: 134.538
2018-11-12 03:33:35,143:INFO: Epoch 63/10000
2018-11-12 03:37:25,298:INFO: - Train metrics: accuracy: 0.808 ; loss: 20.725
2018-11-12 03:38:13,875:INFO: - Eval metrics: accuracy: 0.697 ; loss: 134.595
2018-11-12 03:38:13,958:INFO: Epoch 64/10000
2018-11-12 03:42:04,685:INFO: - Train metrics: accuracy: 0.808 ; loss: 20.592
2018-11-12 03:42:53,019:INFO: - Eval metrics: accuracy: 0.696 ; loss: 135.420
2018-11-12 03:42:53,100:INFO: Epoch 65/10000
2018-11-12 03:46:39,664:INFO: - Train metrics: accuracy: 0.808 ; loss: 20.452
2018-11-12 03:47:27,879:INFO: - Eval metrics: accuracy: 0.696 ; loss: 135.969
2018-11-12 03:47:27,946:INFO: Epoch 66/10000
2018-11-12 03:51:14,383:INFO: - Train metrics: accuracy: 0.809 ; loss: 20.299
2018-11-12 03:52:03,106:INFO: - Eval metrics: accuracy: 0.696 ; loss: 135.691
2018-11-12 03:52:03,185:INFO: Epoch 67/10000
2018-11-12 03:55:52,205:INFO: - Train metrics: accuracy: 0.809 ; loss: 20.178
2018-11-12 03:56:40,663:INFO: - Eval metrics: accuracy: 0.696 ; loss: 135.884
2018-11-12 03:56:40,747:INFO: Epoch 68/10000
2018-11-12 04:00:29,292:INFO: - Train metrics: accuracy: 0.810 ; loss: 20.043
2018-11-12 04:01:17,863:INFO: - Eval metrics: accuracy: 0.696 ; loss: 136.116
2018-11-12 04:01:17,944:INFO: Epoch 69/10000
2018-11-12 04:05:07,088:INFO: - Train metrics: accuracy: 0.810 ; loss: 19.927
2018-11-12 04:05:55,272:INFO: - Eval metrics: accuracy: 0.696 ; loss: 136.191
2018-11-12 04:05:55,358:INFO: Epoch 70/10000
2018-11-12 04:09:47,105:INFO: - Train metrics: accuracy: 0.810 ; loss: 19.809
2018-11-12 04:10:35,817:INFO: - Eval metrics: accuracy: 0.696 ; loss: 136.460
2018-11-12 04:10:35,905:INFO: Epoch 71/10000
2018-11-12 04:14:25,710:INFO: - Train metrics: accuracy: 0.811 ; loss: 19.711
2018-11-12 04:15:14,190:INFO: - Eval metrics: accuracy: 0.696 ; loss: 136.793
2018-11-12 04:15:14,270:INFO: Epoch 72/10000
2018-11-12 04:19:01,212:INFO: - Train metrics: accuracy: 0.811 ; loss: 19.598
2018-11-12 04:19:50,058:INFO: - Eval metrics: accuracy: 0.695 ; loss: 137.236
2018-11-12 04:19:50,142:INFO: Epoch 73/10000
2018-11-12 04:23:38,239:INFO: - Train metrics: accuracy: 0.811 ; loss: 19.496
2018-11-12 04:24:24,848:INFO: - Eval metrics: accuracy: 0.695 ; loss: 137.435
2018-11-12 04:24:24,941:INFO: Epoch 74/10000
2018-11-12 04:28:09,650:INFO: - Train metrics: accuracy: 0.812 ; loss: 19.390
2018-11-12 04:28:58,506:INFO: - Eval metrics: accuracy: 0.695 ; loss: 137.718
2018-11-12 04:28:58,591:INFO: Epoch 75/10000
2018-11-12 04:32:47,172:INFO: - Train metrics: accuracy: 0.812 ; loss: 19.278
2018-11-12 04:33:35,571:INFO: - Eval metrics: accuracy: 0.695 ; loss: 137.914
2018-11-12 04:33:35,649:INFO: Epoch 76/10000
2018-11-12 04:37:24,867:INFO: - Train metrics: accuracy: 0.812 ; loss: 19.171
2018-11-12 04:38:13,542:INFO: - Eval metrics: accuracy: 0.695 ; loss: 137.871
2018-11-12 04:38:13,630:INFO: Epoch 77/10000
2018-11-12 04:42:04,020:INFO: - Train metrics: accuracy: 0.813 ; loss: 19.068
2018-11-12 04:42:52,292:INFO: - Eval metrics: accuracy: 0.694 ; loss: 138.239
2018-11-12 04:42:52,372:INFO: Epoch 78/10000
2018-11-12 04:46:41,008:INFO: - Train metrics: accuracy: 0.813 ; loss: 18.973
2018-11-12 04:47:29,247:INFO: - Eval metrics: accuracy: 0.694 ; loss: 137.767
2018-11-12 04:47:29,330:INFO: Epoch 79/10000
2018-11-12 04:51:18,721:INFO: - Train metrics: accuracy: 0.813 ; loss: 18.886
2018-11-12 04:52:07,305:INFO: - Eval metrics: accuracy: 0.694 ; loss: 137.355
2018-11-12 04:52:07,385:INFO: Epoch 80/10000
2018-11-12 04:55:55,175:INFO: - Train metrics: accuracy: 0.813 ; loss: 18.782
2018-11-12 04:56:43,996:INFO: - Eval metrics: accuracy: 0.694 ; loss: 137.481
2018-11-12 04:56:44,080:INFO: Epoch 81/10000
2018-11-12 05:00:30,361:INFO: - Train metrics: accuracy: 0.814 ; loss: 18.682
2018-11-12 05:01:18,691:INFO: - Eval metrics: accuracy: 0.694 ; loss: 137.424
2018-11-12 05:01:18,775:INFO: Epoch 82/10000
2018-11-12 05:05:03,545:INFO: - Train metrics: accuracy: 0.814 ; loss: 18.595
2018-11-12 05:05:52,592:INFO: - Eval metrics: accuracy: 0.693 ; loss: 137.131
2018-11-12 05:05:52,734:INFO: Epoch 83/10000
2018-11-12 05:09:39,622:INFO: - Train metrics: accuracy: 0.814 ; loss: 18.517
2018-11-12 05:10:29,068:INFO: - Eval metrics: accuracy: 0.694 ; loss: 136.170
2018-11-12 05:10:29,381:INFO: Epoch 84/10000
2018-11-12 05:14:16,339:INFO: - Train metrics: accuracy: 0.815 ; loss: 18.422
2018-11-12 05:15:04,519:INFO: - Eval metrics: accuracy: 0.693 ; loss: 136.858
2018-11-12 05:15:04,602:INFO: Epoch 85/10000
2018-11-12 05:18:53,661:INFO: - Train metrics: accuracy: 0.815 ; loss: 18.338
2018-11-12 05:19:42,434:INFO: - Eval metrics: accuracy: 0.693 ; loss: 137.160
2018-11-12 05:19:42,515:INFO: Epoch 86/10000
2018-11-12 05:23:32,888:INFO: - Train metrics: accuracy: 0.815 ; loss: 18.262
2018-11-12 05:24:21,268:INFO: - Eval metrics: accuracy: 0.693 ; loss: 137.252
2018-11-12 05:24:21,344:INFO: Epoch 87/10000
2018-11-12 05:28:11,770:INFO: - Train metrics: accuracy: 0.815 ; loss: 18.199
2018-11-12 05:29:00,711:INFO: - Eval metrics: accuracy: 0.692 ; loss: 137.354
2018-11-12 05:29:00,792:INFO: Epoch 88/10000
2018-11-12 05:32:47,815:INFO: - Train metrics: accuracy: 0.816 ; loss: 18.105
2018-11-12 05:33:36,734:INFO: - Eval metrics: accuracy: 0.692 ; loss: 137.179
2018-11-12 05:33:36,812:INFO: Epoch 89/10000
2018-11-12 05:37:24,384:INFO: - Train metrics: accuracy: 0.816 ; loss: 18.058
2018-11-12 05:38:13,088:INFO: - Eval metrics: accuracy: 0.692 ; loss: 137.387
2018-11-12 05:38:13,171:INFO: Epoch 90/10000
2018-11-12 05:42:02,501:INFO: - Train metrics: accuracy: 0.816 ; loss: 17.968
2018-11-12 05:42:51,533:INFO: - Eval metrics: accuracy: 0.692 ; loss: 137.581
2018-11-12 05:42:51,612:INFO: Epoch 91/10000
2018-11-12 05:46:38,538:INFO: - Train metrics: accuracy: 0.816 ; loss: 17.882
2018-11-12 05:47:26,707:INFO: - Eval metrics: accuracy: 0.692 ; loss: 137.470
2018-11-12 05:47:26,792:INFO: Epoch 92/10000
2018-11-12 05:51:17,418:INFO: - Train metrics: accuracy: 0.817 ; loss: 17.845
2018-11-12 05:52:05,933:INFO: - Eval metrics: accuracy: 0.692 ; loss: 137.396
2018-11-12 05:52:06,017:INFO: Epoch 93/10000
2018-11-12 05:55:57,303:INFO: - Train metrics: accuracy: 0.817 ; loss: 17.756
2018-11-12 05:56:46,086:INFO: - Eval metrics: accuracy: 0.692 ; loss: 137.488
2018-11-12 05:56:46,158:INFO: Epoch 94/10000
2018-11-12 06:00:32,007:INFO: - Train metrics: accuracy: 0.817 ; loss: 17.684
2018-11-12 06:01:21,033:INFO: - Eval metrics: accuracy: 0.692 ; loss: 137.516
2018-11-12 06:01:21,121:INFO: Epoch 95/10000
2018-11-12 06:05:11,545:INFO: - Train metrics: accuracy: 0.817 ; loss: 17.616
2018-11-12 06:05:59,799:INFO: - Eval metrics: accuracy: 0.691 ; loss: 137.773
2018-11-12 06:05:59,868:INFO: Epoch 96/10000
2018-11-12 06:09:49,849:INFO: - Train metrics: accuracy: 0.818 ; loss: 17.548
2018-11-12 06:10:37,669:INFO: - Eval metrics: accuracy: 0.691 ; loss: 137.866
2018-11-12 06:10:37,743:INFO: Epoch 97/10000
2018-11-12 06:14:25,572:INFO: - Train metrics: accuracy: 0.818 ; loss: 17.481
2018-11-12 06:15:13,980:INFO: - Eval metrics: accuracy: 0.691 ; loss: 138.089
2018-11-12 06:15:14,056:INFO: Epoch 98/10000
2018-11-12 06:19:04,697:INFO: - Train metrics: accuracy: 0.818 ; loss: 17.416
2018-11-12 06:19:53,387:INFO: - Eval metrics: accuracy: 0.691 ; loss: 138.143
2018-11-12 06:19:53,471:INFO: Epoch 99/10000
2018-11-12 06:23:42,654:INFO: - Train metrics: accuracy: 0.818 ; loss: 17.354
2018-11-12 06:24:31,031:INFO: - Eval metrics: accuracy: 0.691 ; loss: 137.691
2018-11-12 06:24:31,120:INFO: Epoch 100/10000
2018-11-12 06:28:16,056:INFO: - Train metrics: accuracy: 0.818 ; loss: 17.291
2018-11-12 06:29:05,006:INFO: - Eval metrics: accuracy: 0.691 ; loss: 138.110
2018-11-12 06:29:05,093:INFO: Epoch 101/10000
2018-11-12 06:32:53,918:INFO: - Train metrics: accuracy: 0.819 ; loss: 17.227
2018-11-12 06:33:42,436:INFO: - Eval metrics: accuracy: 0.691 ; loss: 138.307
2018-11-12 06:33:42,515:INFO: Epoch 102/10000
2018-11-12 06:37:33,296:INFO: - Train metrics: accuracy: 0.819 ; loss: 17.165
2018-11-12 06:38:21,811:INFO: - Eval metrics: accuracy: 0.691 ; loss: 138.366
2018-11-12 06:38:21,895:INFO: Epoch 103/10000
2018-11-12 06:42:11,331:INFO: - Train metrics: accuracy: 0.819 ; loss: 17.101
2018-11-12 06:42:59,609:INFO: - Eval metrics: accuracy: 0.691 ; loss: 138.348
2018-11-12 06:42:59,687:INFO: Epoch 104/10000
2018-11-12 06:46:47,607:INFO: - Train metrics: accuracy: 0.819 ; loss: 17.045
2018-11-12 06:47:36,342:INFO: - Eval metrics: accuracy: 0.691 ; loss: 138.420
2018-11-12 06:47:36,410:INFO: Epoch 105/10000
2018-11-12 06:51:25,868:INFO: - Train metrics: accuracy: 0.820 ; loss: 16.991
2018-11-12 06:52:14,747:INFO: - Eval metrics: accuracy: 0.690 ; loss: 138.413
2018-11-12 06:52:14,823:INFO: Epoch 106/10000
2018-11-12 06:56:03,321:INFO: - Train metrics: accuracy: 0.820 ; loss: 16.936
2018-11-12 06:56:51,922:INFO: - Eval metrics: accuracy: 0.690 ; loss: 138.781
2018-11-12 06:56:52,012:INFO: Epoch 107/10000
2018-11-12 07:00:42,439:INFO: - Train metrics: accuracy: 0.820 ; loss: 16.887
2018-11-12 07:01:30,940:INFO: - Eval metrics: accuracy: 0.690 ; loss: 139.064
2018-11-12 07:01:31,024:INFO: Epoch 108/10000
2018-11-12 07:05:19,722:INFO: - Train metrics: accuracy: 0.820 ; loss: 16.831
2018-11-12 07:06:08,428:INFO: - Eval metrics: accuracy: 0.690 ; loss: 138.911
2018-11-12 07:06:08,513:INFO: Epoch 109/10000
2018-11-12 07:09:51,981:INFO: - Train metrics: accuracy: 0.820 ; loss: 16.773
2018-11-12 07:10:40,271:INFO: - Eval metrics: accuracy: 0.690 ; loss: 139.300
2018-11-12 07:10:40,344:INFO: Epoch 110/10000
2018-11-12 07:14:26,260:INFO: - Train metrics: accuracy: 0.821 ; loss: 16.724
2018-11-12 07:15:14,699:INFO: - Eval metrics: accuracy: 0.690 ; loss: 138.968
2018-11-12 07:15:14,765:INFO: Epoch 111/10000
2018-11-12 07:19:01,697:INFO: - Train metrics: accuracy: 0.821 ; loss: 16.664
2018-11-12 07:19:49,828:INFO: - Eval metrics: accuracy: 0.689 ; loss: 139.602
2018-11-12 07:19:49,899:INFO: Epoch 112/10000
2018-11-12 07:23:37,290:INFO: - Train metrics: accuracy: 0.821 ; loss: 16.624
2018-11-12 07:24:25,417:INFO: - Eval metrics: accuracy: 0.689 ; loss: 139.440
2018-11-12 07:24:25,504:INFO: Epoch 113/10000
2018-11-12 07:28:16,164:INFO: - Train metrics: accuracy: 0.821 ; loss: 16.567
2018-11-12 07:29:04,608:INFO: - Eval metrics: accuracy: 0.689 ; loss: 139.355
2018-11-12 07:29:04,679:INFO: Epoch 114/10000
2018-11-12 07:32:51,949:INFO: - Train metrics: accuracy: 0.821 ; loss: 16.518
2018-11-12 07:33:39,439:INFO: - Eval metrics: accuracy: 0.689 ; loss: 139.174
2018-11-12 07:33:39,528:INFO: Epoch 115/10000
2018-11-12 07:37:28,055:INFO: - Train metrics: accuracy: 0.822 ; loss: 16.463
2018-11-12 07:38:15,684:INFO: - Eval metrics: accuracy: 0.689 ; loss: 139.505
2018-11-12 07:38:15,768:INFO: Epoch 116/10000
2018-11-12 07:42:04,701:INFO: - Train metrics: accuracy: 0.822 ; loss: 16.416
2018-11-12 07:42:53,545:INFO: - Eval metrics: accuracy: 0.689 ; loss: 140.058
2018-11-12 07:42:53,612:INFO: Epoch 117/10000
2018-11-12 07:46:42,789:INFO: - Train metrics: accuracy: 0.822 ; loss: 16.371
2018-11-12 07:47:30,731:INFO: - Eval metrics: accuracy: 0.689 ; loss: 139.482
2018-11-12 07:47:30,815:INFO: Epoch 118/10000
2018-11-12 07:51:16,681:INFO: - Train metrics: accuracy: 0.822 ; loss: 16.321
2018-11-12 07:52:05,277:INFO: - Eval metrics: accuracy: 0.689 ; loss: 140.050
2018-11-12 07:52:05,356:INFO: Epoch 119/10000
2018-11-12 07:55:53,403:INFO: - Train metrics: accuracy: 0.822 ; loss: 16.282
2018-11-12 07:56:42,103:INFO: - Eval metrics: accuracy: 0.689 ; loss: 140.128
2018-11-12 07:56:42,190:INFO: Epoch 120/10000
2018-11-12 08:00:04,385:INFO: - Train metrics: accuracy: 0.822 ; loss: 16.232
2018-11-12 08:00:42,116:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.333
2018-11-12 08:00:42,250:INFO: Epoch 121/10000
2018-11-12 08:04:19,062:INFO: - Train metrics: accuracy: 0.823 ; loss: 16.199
2018-11-12 08:05:07,543:INFO: - Eval metrics: accuracy: 0.689 ; loss: 139.407
2018-11-12 08:05:07,645:INFO: Epoch 122/10000
2018-11-12 08:08:53,441:INFO: - Train metrics: accuracy: 0.823 ; loss: 16.153
2018-11-12 08:09:42,068:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.417
2018-11-12 08:09:42,182:INFO: Epoch 123/10000
2018-11-12 08:13:31,230:INFO: - Train metrics: accuracy: 0.823 ; loss: 16.107
2018-11-12 08:14:19,924:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.447
2018-11-12 08:14:20,005:INFO: Epoch 124/10000
2018-11-12 08:18:08,069:INFO: - Train metrics: accuracy: 0.823 ; loss: 16.073
2018-11-12 08:18:56,533:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.448
2018-11-12 08:18:56,616:INFO: Epoch 125/10000
2018-11-12 08:22:46,105:INFO: - Train metrics: accuracy: 0.823 ; loss: 16.018
2018-11-12 08:23:33,962:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.373
2018-11-12 08:23:34,047:INFO: Epoch 126/10000
2018-11-12 08:27:23,591:INFO: - Train metrics: accuracy: 0.823 ; loss: 15.972
2018-11-12 08:28:12,176:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.048
2018-11-12 08:28:12,265:INFO: Epoch 127/10000
2018-11-12 08:32:03,748:INFO: - Train metrics: accuracy: 0.823 ; loss: 15.933
2018-11-12 08:32:52,151:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.306
2018-11-12 08:32:52,232:INFO: Epoch 128/10000
2018-11-12 08:36:41,066:INFO: - Train metrics: accuracy: 0.824 ; loss: 15.902
2018-11-12 08:37:29,524:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.669
2018-11-12 08:37:29,602:INFO: Epoch 129/10000
2018-11-12 08:41:21,554:INFO: - Train metrics: accuracy: 0.824 ; loss: 15.859
2018-11-12 08:42:10,152:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.577
2018-11-12 08:42:10,231:INFO: Epoch 130/10000
2018-11-12 08:45:55,405:INFO: - Train metrics: accuracy: 0.824 ; loss: 15.810
2018-11-12 08:46:42,031:INFO: - Eval metrics: accuracy: 0.688 ; loss: 141.168
2018-11-12 08:46:42,107:INFO: Epoch 131/10000
2018-11-12 08:50:27,144:INFO: - Train metrics: accuracy: 0.824 ; loss: 15.784
2018-11-12 08:51:15,330:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.981
2018-11-12 08:51:15,400:INFO: Epoch 132/10000
2018-11-12 08:55:02,361:INFO: - Train metrics: accuracy: 0.824 ; loss: 15.735
2018-11-12 08:55:51,123:INFO: - Eval metrics: accuracy: 0.687 ; loss: 141.394
2018-11-12 08:55:51,207:INFO: Epoch 133/10000
2018-11-12 08:59:39,773:INFO: - Train metrics: accuracy: 0.824 ; loss: 15.706
2018-11-12 09:00:28,508:INFO: - Eval metrics: accuracy: 0.688 ; loss: 141.206
2018-11-12 09:00:28,592:INFO: Epoch 134/10000
2018-11-12 09:04:16,154:INFO: - Train metrics: accuracy: 0.824 ; loss: 15.672
2018-11-12 09:05:03,904:INFO: - Eval metrics: accuracy: 0.687 ; loss: 141.388
2018-11-12 09:05:03,978:INFO: Epoch 135/10000
2018-11-12 09:08:50,801:INFO: - Train metrics: accuracy: 0.825 ; loss: 15.623
2018-11-12 09:09:38,104:INFO: - Eval metrics: accuracy: 0.687 ; loss: 141.234
2018-11-12 09:09:38,180:INFO: Epoch 136/10000
2018-11-12 09:13:24,197:INFO: - Train metrics: accuracy: 0.825 ; loss: 15.600
2018-11-12 09:14:11,498:INFO: - Eval metrics: accuracy: 0.687 ; loss: 141.188
2018-11-12 09:14:11,583:INFO: Epoch 137/10000
2018-11-12 09:17:57,653:INFO: - Train metrics: accuracy: 0.825 ; loss: 15.562
2018-11-12 09:18:46,073:INFO: - Eval metrics: accuracy: 0.687 ; loss: 140.898
2018-11-12 09:18:46,163:INFO: Epoch 138/10000
2018-11-12 09:22:32,357:INFO: - Train metrics: accuracy: 0.825 ; loss: 15.515
2018-11-12 09:23:21,225:INFO: - Eval metrics: accuracy: 0.687 ; loss: 141.270
2018-11-12 09:23:21,312:INFO: Epoch 139/10000
2018-11-12 09:27:09,534:INFO: - Train metrics: accuracy: 0.825 ; loss: 15.486
2018-11-12 09:27:57,891:INFO: - Eval metrics: accuracy: 0.688 ; loss: 141.181
2018-11-12 09:27:57,965:INFO: Epoch 140/10000
2018-11-12 09:31:44,424:INFO: - Train metrics: accuracy: 0.825 ; loss: 15.464
2018-11-12 09:32:32,777:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.902
2018-11-12 09:32:32,857:INFO: Epoch 141/10000
2018-11-12 09:36:19,606:INFO: - Train metrics: accuracy: 0.825 ; loss: 15.438
2018-11-12 09:37:07,949:INFO: - Eval metrics: accuracy: 0.687 ; loss: 140.931
2018-11-12 09:37:08,031:INFO: Epoch 142/10000
2018-11-12 09:40:59,185:INFO: - Train metrics: accuracy: 0.826 ; loss: 15.385
2018-11-12 09:41:47,643:INFO: - Eval metrics: accuracy: 0.687 ; loss: 140.919
2018-11-12 09:41:47,712:INFO: Epoch 143/10000
2018-11-12 09:45:36,847:INFO: - Train metrics: accuracy: 0.826 ; loss: 15.353
2018-11-12 09:46:25,073:INFO: - Eval metrics: accuracy: 0.687 ; loss: 140.921
2018-11-12 09:46:25,154:INFO: Epoch 144/10000
2018-11-12 09:50:12,325:INFO: - Train metrics: accuracy: 0.826 ; loss: 15.315
2018-11-12 09:51:00,847:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.545
2018-11-12 09:51:00,915:INFO: Epoch 145/10000
2018-11-12 09:54:50,359:INFO: - Train metrics: accuracy: 0.826 ; loss: 15.292
2018-11-12 09:55:38,680:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.409
2018-11-12 09:55:38,752:INFO: Epoch 146/10000
2018-11-12 09:59:24,147:INFO: - Train metrics: accuracy: 0.826 ; loss: 15.248
2018-11-12 10:00:12,291:INFO: - Eval metrics: accuracy: 0.688 ; loss: 140.580
2018-11-12 10:00:12,365:INFO: Epoch 147/10000
2018-11-12 10:04:00,480:INFO: - Train metrics: accuracy: 0.826 ; loss: 15.209
2018-11-12 10:04:46,900:INFO: - Eval metrics: accuracy: 0.687 ; loss: 140.717
2018-11-12 10:04:46,971:INFO: Epoch 148/10000
2018-11-12 10:08:25,078:INFO: - Train metrics: accuracy: 0.826 ; loss: 15.187
2018-11-12 10:09:14,125:INFO: - Eval metrics: accuracy: 0.687 ; loss: 140.866
2018-11-12 10:09:14,216:INFO: Epoch 149/10000
2018-11-12 10:13:00,440:INFO: - Train metrics: accuracy: 0.827 ; loss: 15.145
2018-11-12 10:13:41,722:INFO: - Eval metrics: accuracy: 0.687 ; loss: 141.347
2018-11-12 10:13:44,462:INFO: Epoch 150/10000
2018-11-12 10:18:08,311:INFO: Creating the datasets...
2018-11-12 10:18:12,386:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 10:18:12,684:WARNING: From /home/rwee015/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 10:18:12,723:INFO: - done.
2018-11-12 10:18:12,723:INFO: Creating the model...
2018-11-12 10:18:14,053:INFO: - done.
2018-11-12 10:18:14,053:INFO: Starting training for 10000 epoch(s)
2018-11-12 10:18:14,904:INFO: Epoch 1/10000
2018-11-12 10:20:10,060:INFO: Creating the datasets...
2018-11-12 10:20:11,620:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 10:20:11,892:WARNING: From /home/rwee015/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 10:20:11,930:INFO: - done.
2018-11-12 10:20:11,930:INFO: Creating the model...
2018-11-12 10:20:13,200:INFO: - done.
2018-11-12 10:20:13,200:INFO: Starting training for 10000 epoch(s)
2018-11-12 10:20:13,901:INFO: Epoch 1/10000
2018-11-12 10:21:12,010:INFO: Creating the datasets...
2018-11-12 10:21:13,563:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 10:21:13,835:WARNING: From /home/rwee015/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 10:21:13,873:INFO: - done.
2018-11-12 10:21:13,873:INFO: Creating the model...
2018-11-12 10:21:15,146:INFO: - done.
2018-11-12 10:21:15,146:INFO: Starting training for 10000 epoch(s)
2018-11-12 10:21:15,865:INFO: Epoch 1/10000
2018-11-12 10:23:42,759:INFO: - Train metrics: accuracy: 0.614 ; loss: 441.387
2018-11-12 10:24:16,762:INFO: - Eval metrics: accuracy: 0.707 ; loss: 120.510
2018-11-12 10:27:36,534:INFO: Creating the datasets...
2018-11-12 10:27:38,139:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 10:27:38,448:WARNING: From /home/rwee015/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 10:27:38,487:INFO: - done.
2018-11-12 10:27:38,488:INFO: Creating the model...
2018-11-12 10:27:39,777:INFO: - done.
2018-11-12 10:27:39,777:INFO: Starting training for 10000 epoch(s)
2018-11-12 10:27:40,498:INFO: Epoch 1/10000
2018-11-12 10:28:30,461:INFO: Creating the datasets...
2018-11-12 10:28:33,590:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 10:28:33,864:WARNING: From /home/rwee015/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 10:28:33,902:INFO: - done.
2018-11-12 10:28:33,902:INFO: Creating the model...
2018-11-12 10:28:35,170:INFO: - done.
2018-11-12 10:28:35,170:INFO: Starting training for 10000 epoch(s)
2018-11-12 10:28:35,876:INFO: Epoch 1/10000
2018-11-12 10:31:53,665:INFO: - Train metrics: accuracy: 0.375 ; loss: 1147.079
2018-11-12 10:32:16,445:INFO: - Eval metrics: accuracy: 0.649 ; loss: 217.323
2018-11-12 10:33:17,715:INFO: Creating the datasets...
2018-11-12 10:33:24,137:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 10:33:24,424:WARNING: From /home/rwee015/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 10:33:24,478:INFO: - done.
2018-11-12 10:33:24,478:INFO: Creating the model...
2018-11-12 10:33:25,817:INFO: - done.
2018-11-12 10:33:25,817:INFO: Starting training for 10000 epoch(s)
2018-11-12 10:33:26,647:INFO: Epoch 1/10000
2018-11-12 10:37:00,165:INFO: - Train metrics: accuracy: 0.697 ; loss: 211.077
2018-11-12 10:37:47,923:INFO: - Eval metrics: accuracy: 0.719 ; loss: 82.230
2018-11-12 10:37:48,317:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-12 10:37:48,336:INFO: Epoch 2/10000
2018-11-12 10:41:28,667:INFO: - Train metrics: accuracy: 0.728 ; loss: 133.282
2018-11-12 10:42:14,629:INFO: - Eval metrics: accuracy: 0.729 ; loss: 80.828
2018-11-12 10:42:14,923:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-12 10:42:14,923:INFO: Epoch 3/10000
2018-11-12 10:45:59,306:INFO: - Train metrics: accuracy: 0.733 ; loss: 126.983
2018-11-12 10:46:45,799:INFO: - Eval metrics: accuracy: 0.729 ; loss: 83.199
2018-11-12 10:46:46,071:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-12 10:46:46,071:INFO: Epoch 4/10000
2018-11-12 10:50:32,233:INFO: - Train metrics: accuracy: 0.736 ; loss: 119.678
2018-11-12 10:51:20,431:INFO: - Eval metrics: accuracy: 0.735 ; loss: 79.810
2018-11-12 10:51:20,716:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-12 10:51:20,717:INFO: Epoch 5/10000
2018-11-12 10:55:06,050:INFO: - Train metrics: accuracy: 0.738 ; loss: 110.801
2018-11-12 10:55:50,797:INFO: - Eval metrics: accuracy: 0.734 ; loss: 78.620
2018-11-12 10:55:50,855:INFO: Epoch 6/10000
2018-11-12 10:59:34,871:INFO: - Train metrics: accuracy: 0.740 ; loss: 100.798
2018-11-12 11:00:20,508:INFO: - Eval metrics: accuracy: 0.736 ; loss: 79.695
2018-11-12 11:00:20,795:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-12 11:00:20,796:INFO: Epoch 7/10000
2018-11-12 11:03:59,667:INFO: - Train metrics: accuracy: 0.742 ; loss: 93.795
2018-11-12 11:04:46,833:INFO: - Eval metrics: accuracy: 0.727 ; loss: 86.850
2018-11-12 11:04:46,902:INFO: Epoch 8/10000
2018-11-12 11:08:26,942:INFO: - Train metrics: accuracy: 0.744 ; loss: 83.540
2018-11-12 11:09:13,461:INFO: - Eval metrics: accuracy: 0.733 ; loss: 83.006
2018-11-12 11:09:13,609:INFO: Epoch 9/10000
2018-11-12 11:12:57,166:INFO: - Train metrics: accuracy: 0.747 ; loss: 75.788
2018-11-12 11:13:41,824:INFO: - Eval metrics: accuracy: 0.728 ; loss: 85.085
2018-11-12 11:13:41,945:INFO: Epoch 10/10000
2018-11-12 11:16:46,814:INFO: - Train metrics: accuracy: 0.749 ; loss: 71.927
2018-11-12 11:17:40,537:INFO: - Eval metrics: accuracy: 0.728 ; loss: 87.868
2018-11-12 11:17:43,695:INFO: Epoch 11/10000
2018-11-12 11:25:02,859:INFO: - Train metrics: accuracy: 0.751 ; loss: 66.494
2018-11-12 11:26:40,127:INFO: - Eval metrics: accuracy: 0.734 ; loss: 87.045
2018-11-12 11:26:43,835:INFO: Epoch 12/10000
2018-11-12 11:29:34,532:INFO: - Train metrics: accuracy: 0.753 ; loss: 63.666
2018-11-12 11:30:11,368:INFO: - Eval metrics: accuracy: 0.733 ; loss: 87.227
2018-11-12 11:30:11,426:INFO: Epoch 13/10000
2018-11-12 11:33:56,966:INFO: - Train metrics: accuracy: 0.755 ; loss: 59.037
2018-11-12 11:34:43,647:INFO: - Eval metrics: accuracy: 0.731 ; loss: 90.334
2018-11-12 11:34:43,731:INFO: Epoch 14/10000
2018-11-12 11:38:27,342:INFO: - Train metrics: accuracy: 0.758 ; loss: 56.293
2018-11-12 11:39:20,869:INFO: - Eval metrics: accuracy: 0.729 ; loss: 92.708
2018-11-12 11:39:20,953:INFO: Epoch 15/10000
2018-11-12 11:43:07,336:INFO: - Train metrics: accuracy: 0.760 ; loss: 53.197
2018-11-12 11:43:53,213:INFO: - Eval metrics: accuracy: 0.729 ; loss: 94.028
2018-11-12 11:43:53,276:INFO: Epoch 16/10000
2018-11-12 11:47:00,415:INFO: - Train metrics: accuracy: 0.762 ; loss: 50.603
2018-11-12 11:47:41,358:INFO: - Eval metrics: accuracy: 0.727 ; loss: 95.214
2018-11-12 11:47:42,953:INFO: Epoch 17/10000
2018-11-12 11:50:41,173:INFO: - Train metrics: accuracy: 0.764 ; loss: 48.261
2018-11-12 11:51:23,814:INFO: - Eval metrics: accuracy: 0.725 ; loss: 97.255
2018-11-12 11:51:24,636:INFO: Epoch 18/10000
2018-11-12 12:14:01,983:INFO: Creating the datasets...
2018-11-12 12:14:07,362:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 12:14:07,699:WARNING: From /home/rwee015/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 12:14:07,759:INFO: - done.
2018-11-12 12:14:07,760:INFO: Creating the model...
2018-11-12 12:14:09,421:INFO: - done.
2018-11-12 12:14:09,422:INFO: Starting training for 10000 epoch(s)
2018-11-12 12:14:10,472:INFO: Epoch 1/10000
2018-11-12 12:17:26,095:INFO: - Train metrics: accuracy: 0.681 ; loss: 297.900
2018-11-12 12:18:19,469:INFO: - Eval metrics: accuracy: 0.753 ; loss: 70.132
2018-11-12 12:18:20,336:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-12 12:18:20,337:INFO: Epoch 2/10000
2018-11-12 12:21:34,174:INFO: - Train metrics: accuracy: 0.734 ; loss: 120.968
2018-11-12 12:22:16,879:INFO: - Eval metrics: accuracy: 0.744 ; loss: 70.600
2018-11-12 12:22:17,134:INFO: Epoch 3/10000
2018-11-12 12:25:14,637:INFO: - Train metrics: accuracy: 0.738 ; loss: 111.159
2018-11-12 12:25:55,912:INFO: - Eval metrics: accuracy: 0.752 ; loss: 70.709
2018-11-12 12:25:55,987:INFO: Epoch 4/10000
2018-11-12 12:29:07,921:INFO: - Train metrics: accuracy: 0.742 ; loss: 102.750
2018-11-12 12:29:47,469:INFO: - Eval metrics: accuracy: 0.751 ; loss: 70.521
2018-11-12 12:29:47,565:INFO: Epoch 5/10000
2018-11-12 12:32:45,754:INFO: - Train metrics: accuracy: 0.744 ; loss: 97.194
2018-11-12 12:33:29,154:INFO: - Eval metrics: accuracy: 0.751 ; loss: 74.783
2018-11-12 12:33:32,734:INFO: Epoch 6/10000
2018-11-12 12:36:37,296:INFO: - Train metrics: accuracy: 0.747 ; loss: 90.597
2018-11-12 12:37:19,098:INFO: - Eval metrics: accuracy: 0.747 ; loss: 72.424
2018-11-12 12:37:19,634:INFO: Epoch 7/10000
2018-11-12 14:00:44,312:INFO: Creating the datasets...
2018-11-12 14:00:46,192:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:00:46,502:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:00:46,558:INFO: - done.
2018-11-12 14:00:46,558:INFO: Creating the model...
2018-11-12 14:00:47,934:INFO: - done.
2018-11-12 14:00:47,934:INFO: Starting training for 10000 epoch(s)
2018-11-12 14:00:48,879:INFO: Epoch 1/10000
2018-11-12 14:04:39,523:INFO: - Train metrics: accuracy: 0.681 ; loss: 297.900
2018-11-12 14:05:30,817:INFO: - Eval metrics: accuracy: 0.753 ; loss: 70.132
2018-11-12 14:05:31,398:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-12 14:05:31,442:INFO: Epoch 2/10000
2018-11-12 14:06:00,586:INFO: Creating the datasets...
2018-11-12 14:06:05,730:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:06:06,023:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:06:06,088:INFO: - done.
2018-11-12 14:06:06,088:INFO: Creating the model...
2018-11-12 14:06:07,425:INFO: - done.
2018-11-12 14:06:07,425:INFO: Starting training for 10000 epoch(s)
2018-11-12 14:06:08,340:INFO: Epoch 1/10000
2018-11-12 14:07:48,987:INFO: Creating the datasets...
2018-11-12 14:07:50,364:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:07:50,638:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:07:50,676:INFO: - done.
2018-11-12 14:07:50,676:INFO: Creating the model...
2018-11-12 14:08:05,413:INFO: Creating the datasets...
2018-11-12 14:08:06,773:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:08:07,041:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:08:07,079:INFO: - done.
2018-11-12 14:08:07,079:INFO: Creating the model...
2018-11-12 14:10:00,577:INFO: Creating the datasets...
2018-11-12 14:10:01,975:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:10:02,250:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:10:02,289:INFO: - done.
2018-11-12 14:10:02,289:INFO: Creating the model...
2018-11-12 14:10:03,582:INFO: - done.
2018-11-12 14:10:03,582:INFO: Starting training for 10000 epoch(s)
2018-11-12 14:10:04,341:INFO: Epoch 1/10000
2018-11-12 14:13:50,481:INFO: - Train metrics: accuracy: 0.683 ; loss: 286.622
2018-11-12 14:14:33,398:INFO: - Eval metrics: accuracy: 0.755 ; loss: 73.799
2018-11-12 14:14:33,905:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-12 14:14:33,905:INFO: Epoch 2/10000
2018-11-12 14:14:45,268:INFO: Creating the datasets...
2018-11-12 14:14:46,931:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:14:47,201:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:14:47,239:INFO: - done.
2018-11-12 14:14:47,239:INFO: Creating the model...
2018-11-12 14:14:47,239:WARNING: From /home/rwee015/Code/Nov18/two/model/model_fn.py:33: ntfCell.__init__ (from model.ntfCell) is deprecated and will be removed in a future version.
Instructions for updating:
This class is equivalent as tf.keras.layers.ntfCell, and will be replaced by that in Tensorflow 2.0.
2018-11-12 14:14:48,687:INFO: - done.
2018-11-12 14:14:48,687:INFO: Starting training for 10000 epoch(s)
2018-11-12 14:14:49,483:INFO: Epoch 1/10000
2018-11-12 14:19:07,865:INFO: - Train metrics: accuracy: 0.685 ; loss: 282.345
2018-11-12 14:19:54,099:INFO: - Eval metrics: accuracy: 0.749 ; loss: 74.137
2018-11-12 14:19:54,473:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-12 14:19:54,506:INFO: Epoch 2/10000
2018-11-12 14:24:08,368:INFO: - Train metrics: accuracy: 0.735 ; loss: 121.219
2018-11-12 14:24:53,096:INFO: - Eval metrics: accuracy: 0.742 ; loss: 67.899
2018-11-12 14:24:53,445:INFO: Epoch 3/10000
2018-11-12 14:26:41,094:INFO: Creating the datasets...
2018-11-12 14:26:45,614:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:26:45,887:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:26:45,926:INFO: - done.
2018-11-12 14:26:45,926:INFO: Creating the model...
2018-11-12 14:35:25,250:INFO: Creating the datasets...
2018-11-12 14:35:26,637:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:35:26,915:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:35:26,957:INFO: - done.
2018-11-12 14:35:26,957:INFO: Creating the model...
2018-11-12 14:37:22,690:INFO: Creating the datasets...
2018-11-12 14:37:24,083:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:37:24,351:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:37:24,389:INFO: - done.
2018-11-12 14:37:24,389:INFO: Creating the model...
2018-11-12 14:41:45,624:INFO: Creating the datasets...
2018-11-12 14:41:47,022:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:41:47,295:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:41:47,333:INFO: - done.
2018-11-12 14:41:47,334:INFO: Creating the model...
2018-11-12 14:42:22,549:INFO: Creating the datasets...
2018-11-12 14:42:23,923:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:42:24,195:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:42:24,233:INFO: - done.
2018-11-12 14:42:24,233:INFO: Creating the model...
2018-11-12 14:42:45,163:INFO: Creating the datasets...
2018-11-12 14:42:46,535:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:42:46,805:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:42:46,843:INFO: - done.
2018-11-12 14:42:46,843:INFO: Creating the model...
2018-11-12 14:44:18,846:INFO: Creating the datasets...
2018-11-12 14:44:20,220:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:44:20,491:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:44:20,529:INFO: - done.
2018-11-12 14:44:20,529:INFO: Creating the model...
2018-11-12 14:44:22,076:INFO: - done.
2018-11-12 14:44:22,076:INFO: Starting training for 10000 epoch(s)
2018-11-12 14:44:23,075:INFO: Epoch 1/10000
2018-11-12 14:45:19,512:INFO: Creating the datasets...
2018-11-12 14:45:20,893:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:45:21,168:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:45:21,207:INFO: - done.
2018-11-12 14:45:21,207:INFO: Creating the model...
2018-11-12 14:48:11,991:INFO: Creating the datasets...
2018-11-12 14:48:13,390:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 14:48:13,666:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 14:48:13,705:INFO: - done.
2018-11-12 14:48:13,705:INFO: Creating the model...
2018-11-12 14:48:15,197:INFO: - done.
2018-11-12 14:48:15,197:INFO: Starting training for 10000 epoch(s)
2018-11-12 14:48:16,053:INFO: Epoch 1/10000
2018-11-12 14:53:57,723:INFO: - Train metrics: accuracy: 0.683 ; loss: 277.216
2018-11-12 14:54:47,963:INFO: - Eval metrics: accuracy: 0.749 ; loss: 68.527
2018-11-12 14:54:48,615:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-12 14:54:48,615:INFO: Epoch 2/10000
2018-11-12 15:00:08,337:INFO: - Train metrics: accuracy: 0.735 ; loss: 118.071
2018-11-12 15:01:05,968:INFO: - Eval metrics: accuracy: 0.755 ; loss: 66.185
2018-11-12 15:01:06,554:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-12 15:01:06,564:INFO: Epoch 3/10000
2018-11-12 15:06:12,616:INFO: Creating the datasets...
2018-11-12 15:06:16,990:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 15:06:17,263:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 15:06:17,301:INFO: - done.
2018-11-12 15:06:17,301:INFO: Creating the model...
2018-11-12 15:06:18,783:INFO: - done.
2018-11-12 15:06:18,784:INFO: Starting training for 10000 epoch(s)
2018-11-12 15:06:19,750:INFO: Epoch 1/10000
2018-11-12 15:09:23,558:INFO: Creating the datasets...
2018-11-12 15:09:25,007:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 15:09:25,278:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 15:09:25,316:INFO: - done.
2018-11-12 15:09:25,316:INFO: Creating the model...
2018-11-12 15:09:26,807:INFO: - done.
2018-11-12 15:09:26,807:INFO: Starting training for 10000 epoch(s)
2018-11-12 15:09:27,645:INFO: Epoch 1/10000
2018-11-12 15:12:03,051:INFO: Creating the datasets...
2018-11-12 15:12:04,489:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-12 15:12:04,770:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-12 15:12:04,809:INFO: - done.
2018-11-12 15:12:04,809:INFO: Creating the model...
2018-11-12 15:12:06,321:INFO: - done.
2018-11-12 15:12:06,321:INFO: Starting training for 10000 epoch(s)
2018-11-12 15:12:07,173:INFO: Epoch 1/10000
2018-11-12 15:17:50,776:INFO: - Train metrics: accuracy: 0.684 ; loss: 272.378
2018-11-12 15:18:47,054:INFO: - Eval metrics: accuracy: 0.749 ; loss: 70.127
2018-11-12 15:18:47,468:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-12 15:18:47,468:INFO: Epoch 2/10000
2018-11-12 15:24:30,795:INFO: - Train metrics: accuracy: 0.736 ; loss: 117.907
2018-11-12 15:25:27,690:INFO: - Eval metrics: accuracy: 0.746 ; loss: 67.687
2018-11-12 15:25:27,823:INFO: Epoch 3/10000
2018-11-12 15:31:12,596:INFO: - Train metrics: accuracy: 0.740 ; loss: 108.887
2018-11-12 15:32:09,635:INFO: - Eval metrics: accuracy: 0.754 ; loss: 67.264
2018-11-12 15:32:09,965:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-12 15:32:09,965:INFO: Epoch 4/10000
2018-11-12 15:37:55,875:INFO: - Train metrics: accuracy: 0.744 ; loss: 100.662
2018-11-12 15:38:52,416:INFO: - Eval metrics: accuracy: 0.744 ; loss: 69.356
2018-11-12 15:38:52,517:INFO: Epoch 5/10000
2018-11-12 15:44:37,173:INFO: - Train metrics: accuracy: 0.747 ; loss: 94.220
2018-11-12 15:45:34,066:INFO: - Eval metrics: accuracy: 0.746 ; loss: 69.700
2018-11-12 15:45:34,154:INFO: Epoch 6/10000
2018-11-12 15:51:17,134:INFO: - Train metrics: accuracy: 0.750 ; loss: 88.737
2018-11-12 15:52:14,056:INFO: - Eval metrics: accuracy: 0.743 ; loss: 72.819
2018-11-12 15:52:14,142:INFO: Epoch 7/10000
2018-11-12 15:57:54,895:INFO: - Train metrics: accuracy: 0.753 ; loss: 81.237
2018-11-12 15:58:54,643:INFO: - Eval metrics: accuracy: 0.746 ; loss: 79.937
2018-11-12 15:58:55,940:INFO: Epoch 8/10000
2018-11-12 16:04:38,610:INFO: - Train metrics: accuracy: 0.756 ; loss: 75.037
2018-11-12 16:05:35,835:INFO: - Eval metrics: accuracy: 0.742 ; loss: 77.406
2018-11-12 16:05:35,941:INFO: Epoch 9/10000
2018-11-12 16:11:19,908:INFO: - Train metrics: accuracy: 0.760 ; loss: 68.913
2018-11-12 16:12:16,445:INFO: - Eval metrics: accuracy: 0.744 ; loss: 82.057
2018-11-12 16:12:16,526:INFO: Epoch 10/10000
2018-11-12 16:18:00,736:INFO: - Train metrics: accuracy: 0.763 ; loss: 63.161
2018-11-12 16:18:57,569:INFO: - Eval metrics: accuracy: 0.741 ; loss: 86.016
2018-11-12 16:18:57,661:INFO: Epoch 11/10000
2018-11-12 16:24:42,387:INFO: - Train metrics: accuracy: 0.766 ; loss: 59.766
2018-11-12 16:25:39,568:INFO: - Eval metrics: accuracy: 0.740 ; loss: 86.377
2018-11-12 16:25:39,667:INFO: Epoch 12/10000
2018-11-12 16:31:27,407:INFO: - Train metrics: accuracy: 0.769 ; loss: 54.551
2018-11-12 16:32:24,250:INFO: - Eval metrics: accuracy: 0.739 ; loss: 88.221
2018-11-12 16:32:24,341:INFO: Epoch 13/10000
2018-11-12 16:38:10,217:INFO: - Train metrics: accuracy: 0.772 ; loss: 51.698
2018-11-12 16:39:07,732:INFO: - Eval metrics: accuracy: 0.739 ; loss: 87.754
2018-11-12 16:39:07,942:INFO: Epoch 14/10000
2018-11-12 16:44:53,403:INFO: - Train metrics: accuracy: 0.774 ; loss: 49.091
2018-11-12 16:45:50,548:INFO: - Eval metrics: accuracy: 0.738 ; loss: 89.120
2018-11-12 16:45:50,697:INFO: Epoch 15/10000
2018-11-12 16:51:32,740:INFO: - Train metrics: accuracy: 0.776 ; loss: 46.761
2018-11-12 16:52:28,985:INFO: - Eval metrics: accuracy: 0.736 ; loss: 89.569
2018-11-12 16:52:29,110:INFO: Epoch 16/10000
2018-11-12 16:58:12,666:INFO: - Train metrics: accuracy: 0.778 ; loss: 44.585
2018-11-12 16:59:10,140:INFO: - Eval metrics: accuracy: 0.736 ; loss: 89.505
2018-11-12 16:59:10,485:INFO: Epoch 17/10000
2018-11-12 17:04:57,691:INFO: - Train metrics: accuracy: 0.780 ; loss: 42.859
2018-11-12 17:05:54,352:INFO: - Eval metrics: accuracy: 0.734 ; loss: 92.010
2018-11-12 17:05:54,465:INFO: Epoch 18/10000
2018-11-12 17:11:38,489:INFO: - Train metrics: accuracy: 0.782 ; loss: 41.217
2018-11-12 17:12:35,800:INFO: - Eval metrics: accuracy: 0.735 ; loss: 91.127
2018-11-12 17:12:35,895:INFO: Epoch 19/10000
2018-11-12 17:18:21,705:INFO: - Train metrics: accuracy: 0.784 ; loss: 39.636
2018-11-12 17:19:17,309:INFO: - Eval metrics: accuracy: 0.732 ; loss: 91.824
2018-11-12 17:19:17,398:INFO: Epoch 20/10000
2018-11-12 17:25:00,440:INFO: - Train metrics: accuracy: 0.786 ; loss: 38.008
2018-11-12 17:25:57,624:INFO: - Eval metrics: accuracy: 0.731 ; loss: 91.838
2018-11-12 17:25:57,722:INFO: Epoch 21/10000
2018-11-12 17:31:41,433:INFO: - Train metrics: accuracy: 0.787 ; loss: 37.159
2018-11-12 17:32:37,460:INFO: - Eval metrics: accuracy: 0.729 ; loss: 93.027
2018-11-12 17:32:37,555:INFO: Epoch 22/10000
2018-11-12 17:38:21,392:INFO: - Train metrics: accuracy: 0.789 ; loss: 35.796
2018-11-12 17:39:30,402:INFO: - Eval metrics: accuracy: 0.730 ; loss: 94.177
2018-11-12 17:39:30,551:INFO: Epoch 23/10000
2018-11-12 17:45:14,999:INFO: - Train metrics: accuracy: 0.790 ; loss: 34.926
2018-11-12 17:46:11,047:INFO: - Eval metrics: accuracy: 0.728 ; loss: 94.100
2018-11-12 17:46:11,155:INFO: Epoch 24/10000
2018-11-12 17:51:48,665:INFO: - Train metrics: accuracy: 0.791 ; loss: 33.423
2018-11-12 17:52:46,189:INFO: - Eval metrics: accuracy: 0.728 ; loss: 94.350
2018-11-12 17:52:46,726:INFO: Epoch 25/10000
2018-11-12 17:58:30,524:INFO: - Train metrics: accuracy: 0.793 ; loss: 32.899
2018-11-12 17:59:27,438:INFO: - Eval metrics: accuracy: 0.726 ; loss: 94.945
2018-11-12 17:59:27,518:INFO: Epoch 26/10000
2018-11-12 18:05:12,233:INFO: - Train metrics: accuracy: 0.794 ; loss: 35.308
2018-11-12 18:06:09,146:INFO: - Eval metrics: accuracy: 0.728 ; loss: 95.967
2018-11-12 18:06:09,268:INFO: Epoch 27/10000
2018-11-12 18:11:53,092:INFO: - Train metrics: accuracy: 0.795 ; loss: 32.355
2018-11-12 18:12:47,441:INFO: - Eval metrics: accuracy: 0.725 ; loss: 97.130
2018-11-12 18:12:47,609:INFO: Epoch 28/10000
2018-11-12 18:18:23,799:INFO: - Train metrics: accuracy: 0.796 ; loss: 30.874
2018-11-12 18:19:18,603:INFO: - Eval metrics: accuracy: 0.727 ; loss: 98.166
2018-11-12 18:19:18,740:INFO: Epoch 29/10000
2018-11-12 18:24:58,621:INFO: - Train metrics: accuracy: 0.797 ; loss: 30.679
2018-11-12 18:25:54,444:INFO: - Eval metrics: accuracy: 0.727 ; loss: 98.243
2018-11-12 18:25:54,541:INFO: Epoch 30/10000
2018-11-12 18:31:33,973:INFO: - Train metrics: accuracy: 0.798 ; loss: 30.217
2018-11-12 18:32:31,213:INFO: - Eval metrics: accuracy: 0.726 ; loss: 98.588
2018-11-12 18:32:31,309:INFO: Epoch 31/10000
2018-11-12 18:38:13,478:INFO: - Train metrics: accuracy: 0.799 ; loss: 30.118
2018-11-12 18:39:10,252:INFO: - Eval metrics: accuracy: 0.724 ; loss: 98.663
2018-11-12 18:39:10,332:INFO: Epoch 32/10000
2018-11-12 18:44:54,142:INFO: - Train metrics: accuracy: 0.800 ; loss: 29.315
2018-11-12 18:45:50,680:INFO: - Eval metrics: accuracy: 0.725 ; loss: 99.807
2018-11-12 18:45:50,768:INFO: Epoch 33/10000
2018-11-12 18:51:32,037:INFO: - Train metrics: accuracy: 0.801 ; loss: 28.568
2018-11-12 18:52:28,708:INFO: - Eval metrics: accuracy: 0.724 ; loss: 99.208
2018-11-12 18:52:28,802:INFO: Epoch 34/10000
2018-11-12 18:58:11,679:INFO: - Train metrics: accuracy: 0.801 ; loss: 29.287
2018-11-12 18:59:07,436:INFO: - Eval metrics: accuracy: 0.724 ; loss: 99.864
2018-11-12 18:59:07,524:INFO: Epoch 35/10000
2018-11-12 19:04:45,631:INFO: - Train metrics: accuracy: 0.802 ; loss: 27.943
2018-11-12 19:05:42,005:INFO: - Eval metrics: accuracy: 0.724 ; loss: 100.128
2018-11-12 19:05:42,095:INFO: Epoch 36/10000
2018-11-12 19:11:22,726:INFO: - Train metrics: accuracy: 0.803 ; loss: 27.568
2018-11-12 19:12:18,696:INFO: - Eval metrics: accuracy: 0.722 ; loss: 100.155
2018-11-12 19:12:19,104:INFO: Epoch 37/10000
2018-11-12 19:17:55,355:INFO: - Train metrics: accuracy: 0.803 ; loss: 27.766
2018-11-12 19:18:50,246:INFO: - Eval metrics: accuracy: 0.721 ; loss: 100.823
2018-11-12 19:18:50,328:INFO: Epoch 38/10000
2018-11-12 19:24:31,001:INFO: - Train metrics: accuracy: 0.804 ; loss: 27.378
2018-11-12 19:25:26,362:INFO: - Eval metrics: accuracy: 0.721 ; loss: 101.305
2018-11-12 19:25:26,787:INFO: Epoch 39/10000
2018-11-12 19:31:03,506:INFO: - Train metrics: accuracy: 0.804 ; loss: 34.836
2018-11-12 19:32:00,097:INFO: - Eval metrics: accuracy: 0.719 ; loss: 101.652
2018-11-12 19:32:00,183:INFO: Epoch 40/10000
2018-11-12 19:37:42,512:INFO: - Train metrics: accuracy: 0.805 ; loss: 33.366
2018-11-12 19:38:38,263:INFO: - Eval metrics: accuracy: 0.719 ; loss: 101.544
2018-11-12 19:38:38,346:INFO: Epoch 41/10000
2018-11-12 19:44:15,381:INFO: - Train metrics: accuracy: 0.806 ; loss: 27.020
2018-11-12 19:45:12,021:INFO: - Eval metrics: accuracy: 0.720 ; loss: 101.111
2018-11-12 19:45:12,108:INFO: Epoch 42/10000
2018-11-12 19:50:55,428:INFO: - Train metrics: accuracy: 0.806 ; loss: 26.583
2018-11-12 19:51:52,329:INFO: - Eval metrics: accuracy: 0.721 ; loss: 101.904
2018-11-12 19:51:52,423:INFO: Epoch 43/10000
2018-11-12 19:57:36,654:INFO: - Train metrics: accuracy: 0.806 ; loss: 35.382
2018-11-12 19:58:33,818:INFO: - Eval metrics: accuracy: 0.715 ; loss: 103.656
2018-11-12 19:58:33,897:INFO: Epoch 44/10000
2018-11-12 20:04:20,463:INFO: - Train metrics: accuracy: 0.807 ; loss: 36.000
2018-11-12 20:05:17,180:INFO: - Eval metrics: accuracy: 0.720 ; loss: 102.920
2018-11-12 20:05:17,267:INFO: Epoch 45/10000
2018-11-12 20:11:02,540:INFO: - Train metrics: accuracy: 0.807 ; loss: 33.710
2018-11-12 20:11:59,360:INFO: - Eval metrics: accuracy: 0.719 ; loss: 102.470
2018-11-12 20:11:59,437:INFO: Epoch 46/10000
2018-11-12 20:17:40,591:INFO: - Train metrics: accuracy: 0.808 ; loss: 29.868
2018-11-12 20:18:36,049:INFO: - Eval metrics: accuracy: 0.721 ; loss: 101.857
2018-11-12 20:18:36,135:INFO: Epoch 47/10000
2018-11-12 20:24:21,538:INFO: - Train metrics: accuracy: 0.808 ; loss: 28.994
2018-11-12 20:25:18,409:INFO: - Eval metrics: accuracy: 0.719 ; loss: 103.028
2018-11-12 20:25:18,494:INFO: Epoch 48/10000
2018-11-12 20:31:02,288:INFO: - Train metrics: accuracy: 0.809 ; loss: 26.188
2018-11-12 20:31:59,083:INFO: - Eval metrics: accuracy: 0.719 ; loss: 102.621
2018-11-12 20:31:59,170:INFO: Epoch 49/10000
2018-11-12 20:37:45,521:INFO: - Train metrics: accuracy: 0.810 ; loss: 25.773
2018-11-12 20:38:41,837:INFO: - Eval metrics: accuracy: 0.719 ; loss: 102.840
2018-11-12 20:38:41,927:INFO: Epoch 50/10000
2018-11-12 20:44:26,241:INFO: - Train metrics: accuracy: 0.810 ; loss: 25.615
2018-11-12 20:45:23,129:INFO: - Eval metrics: accuracy: 0.717 ; loss: 103.111
2018-11-12 20:45:23,213:INFO: Epoch 51/10000
2018-11-12 20:51:10,223:INFO: - Train metrics: accuracy: 0.810 ; loss: 24.975
2018-11-12 20:52:07,046:INFO: - Eval metrics: accuracy: 0.717 ; loss: 103.376
2018-11-12 20:52:07,136:INFO: Epoch 52/10000
2018-11-12 20:57:49,655:INFO: - Train metrics: accuracy: 0.811 ; loss: 24.204
2018-11-12 20:58:46,176:INFO: - Eval metrics: accuracy: 0.717 ; loss: 103.676
2018-11-12 20:58:46,256:INFO: Epoch 53/10000
2018-11-12 21:04:32,260:INFO: - Train metrics: accuracy: 0.811 ; loss: 34.165
2018-11-12 21:05:27,869:INFO: - Eval metrics: accuracy: 0.717 ; loss: 103.492
2018-11-12 21:05:27,949:INFO: Epoch 54/10000
2018-11-12 21:11:06,942:INFO: - Train metrics: accuracy: 0.812 ; loss: 25.375
2018-11-12 21:12:03,951:INFO: - Eval metrics: accuracy: 0.718 ; loss: 104.279
2018-11-12 21:12:04,039:INFO: Epoch 55/10000
2018-11-12 21:17:51,031:INFO: - Train metrics: accuracy: 0.812 ; loss: 25.374
2018-11-12 21:18:46,983:INFO: - Eval metrics: accuracy: 0.719 ; loss: 103.904
2018-11-12 21:18:47,059:INFO: Epoch 56/10000
2018-11-12 21:24:31,260:INFO: - Train metrics: accuracy: 0.812 ; loss: 24.275
2018-11-12 21:25:28,222:INFO: - Eval metrics: accuracy: 0.717 ; loss: 104.049
2018-11-12 21:25:28,315:INFO: Epoch 57/10000
2018-11-12 21:31:13,464:INFO: - Train metrics: accuracy: 0.813 ; loss: 24.031
2018-11-12 21:32:10,336:INFO: - Eval metrics: accuracy: 0.716 ; loss: 104.522
2018-11-12 21:32:10,461:INFO: Epoch 58/10000
2018-11-12 21:37:55,693:INFO: - Train metrics: accuracy: 0.813 ; loss: 22.922
2018-11-12 21:38:52,499:INFO: - Eval metrics: accuracy: 0.716 ; loss: 104.043
2018-11-12 21:38:52,596:INFO: Epoch 59/10000
2018-11-12 21:44:36,501:INFO: - Train metrics: accuracy: 0.813 ; loss: 22.910
2018-11-12 21:45:33,326:INFO: - Eval metrics: accuracy: 0.718 ; loss: 104.310
2018-11-12 21:45:33,435:INFO: Epoch 60/10000
2018-11-12 21:51:16,359:INFO: - Train metrics: accuracy: 0.813 ; loss: 24.970
2018-11-12 21:52:13,096:INFO: - Eval metrics: accuracy: 0.717 ; loss: 103.712
2018-11-12 21:52:13,180:INFO: Epoch 61/10000
2018-11-12 21:57:56,232:INFO: - Train metrics: accuracy: 0.814 ; loss: 22.820
2018-11-12 21:58:53,840:INFO: - Eval metrics: accuracy: 0.715 ; loss: 104.392
2018-11-12 21:58:53,932:INFO: Epoch 62/10000
2018-11-12 22:04:36,746:INFO: - Train metrics: accuracy: 0.814 ; loss: 22.133
2018-11-12 22:05:33,748:INFO: - Eval metrics: accuracy: 0.716 ; loss: 104.789
2018-11-12 22:05:33,832:INFO: Epoch 63/10000
2018-11-12 22:11:19,505:INFO: - Train metrics: accuracy: 0.815 ; loss: 22.658
2018-11-12 22:12:15,930:INFO: - Eval metrics: accuracy: 0.717 ; loss: 104.613
2018-11-12 22:12:16,011:INFO: Epoch 64/10000
2018-11-12 22:17:58,617:INFO: - Train metrics: accuracy: 0.815 ; loss: 22.269
2018-11-12 22:18:54,854:INFO: - Eval metrics: accuracy: 0.716 ; loss: 104.622
2018-11-12 22:18:54,939:INFO: Epoch 65/10000
2018-11-12 22:24:40,810:INFO: - Train metrics: accuracy: 0.815 ; loss: 22.975
2018-11-12 22:25:37,706:INFO: - Eval metrics: accuracy: 0.715 ; loss: 104.775
2018-11-12 22:25:37,787:INFO: Epoch 66/10000
2018-11-12 22:31:21,695:INFO: - Train metrics: accuracy: 0.815 ; loss: 32.535
2018-11-12 22:32:14,315:INFO: - Eval metrics: accuracy: 0.717 ; loss: 104.557
2018-11-12 22:32:14,419:INFO: Epoch 67/10000
2018-11-12 22:37:58,954:INFO: - Train metrics: accuracy: 0.815 ; loss: 31.956
2018-11-12 22:38:56,157:INFO: - Eval metrics: accuracy: 0.717 ; loss: 103.845
2018-11-12 22:38:56,250:INFO: Epoch 68/10000
2018-11-12 22:44:42,174:INFO: - Train metrics: accuracy: 0.815 ; loss: 29.404
2018-11-12 22:45:38,601:INFO: - Eval metrics: accuracy: 0.716 ; loss: 104.785
2018-11-12 22:45:38,688:INFO: Epoch 69/10000
2018-11-12 22:51:23,934:INFO: - Train metrics: accuracy: 0.815 ; loss: 32.339
2018-11-12 22:52:20,994:INFO: - Eval metrics: accuracy: 0.714 ; loss: 105.246
2018-11-12 22:52:21,091:INFO: Epoch 70/10000
2018-11-12 22:58:06,934:INFO: - Train metrics: accuracy: 0.816 ; loss: 25.650
2018-11-12 22:59:03,576:INFO: - Eval metrics: accuracy: 0.717 ; loss: 105.416
2018-11-12 22:59:03,670:INFO: Epoch 71/10000
2018-11-12 23:04:48,533:INFO: - Train metrics: accuracy: 0.814 ; loss: 23.461
2018-11-12 23:05:45,536:INFO: - Eval metrics: accuracy: 0.718 ; loss: 104.919
2018-11-12 23:05:45,626:INFO: Epoch 72/10000
2018-11-12 23:11:31,013:INFO: - Train metrics: accuracy: 0.816 ; loss: 27.579
2018-11-12 23:12:28,254:INFO: - Eval metrics: accuracy: 0.717 ; loss: 104.791
2018-11-12 23:12:28,334:INFO: Epoch 73/10000
2018-11-12 23:18:13,127:INFO: - Train metrics: accuracy: 0.817 ; loss: 24.602
2018-11-12 23:19:08,867:INFO: - Eval metrics: accuracy: 0.716 ; loss: 105.842
2018-11-12 23:19:08,953:INFO: Epoch 74/10000
2018-11-12 23:24:55,017:INFO: - Train metrics: accuracy: 0.817 ; loss: 22.294
2018-11-12 23:25:51,746:INFO: - Eval metrics: accuracy: 0.716 ; loss: 105.198
2018-11-12 23:25:51,835:INFO: Epoch 75/10000
2018-11-12 23:31:36,333:INFO: - Train metrics: accuracy: 0.818 ; loss: 21.319
2018-11-12 23:32:32,651:INFO: - Eval metrics: accuracy: 0.714 ; loss: 106.056
2018-11-12 23:32:32,741:INFO: Epoch 76/10000
2018-11-12 23:38:15,177:INFO: - Train metrics: accuracy: 0.817 ; loss: 21.908
2018-11-12 23:39:11,515:INFO: - Eval metrics: accuracy: 0.716 ; loss: 105.966
2018-11-12 23:39:11,606:INFO: Epoch 77/10000
2018-11-12 23:44:55,468:INFO: - Train metrics: accuracy: 0.818 ; loss: 22.713
2018-11-12 23:45:52,221:INFO: - Eval metrics: accuracy: 0.717 ; loss: 105.603
2018-11-12 23:45:52,312:INFO: Epoch 78/10000
2018-11-12 23:51:37,961:INFO: - Train metrics: accuracy: 0.818 ; loss: 24.149
2018-11-12 23:52:34,463:INFO: - Eval metrics: accuracy: 0.717 ; loss: 106.512
2018-11-12 23:52:34,570:INFO: Epoch 79/10000
2018-11-12 23:58:19,007:INFO: - Train metrics: accuracy: 0.818 ; loss: 21.725
2018-11-12 23:59:15,673:INFO: - Eval metrics: accuracy: 0.717 ; loss: 105.926
2018-11-12 23:59:15,766:INFO: Epoch 80/10000
2018-11-13 00:04:58,367:INFO: - Train metrics: accuracy: 0.818 ; loss: 21.624
2018-11-13 00:05:55,273:INFO: - Eval metrics: accuracy: 0.717 ; loss: 106.121
2018-11-13 00:05:55,373:INFO: Epoch 81/10000
2018-11-13 00:11:38,965:INFO: - Train metrics: accuracy: 0.819 ; loss: 22.130
2018-11-13 00:12:35,652:INFO: - Eval metrics: accuracy: 0.716 ; loss: 105.803
2018-11-13 00:12:35,742:INFO: Epoch 82/10000
2018-11-13 00:18:18,050:INFO: - Train metrics: accuracy: 0.819 ; loss: 22.384
2018-11-13 00:19:13,383:INFO: - Eval metrics: accuracy: 0.714 ; loss: 105.966
2018-11-13 00:19:13,464:INFO: Epoch 83/10000
2018-11-13 00:24:55,149:INFO: - Train metrics: accuracy: 0.819 ; loss: 20.916
2018-11-13 00:25:52,903:INFO: - Eval metrics: accuracy: 0.716 ; loss: 106.377
2018-11-13 00:25:53,244:INFO: Epoch 84/10000
2018-11-13 00:31:36,908:INFO: - Train metrics: accuracy: 0.819 ; loss: 22.088
2018-11-13 00:32:33,401:INFO: - Eval metrics: accuracy: 0.715 ; loss: 106.511
2018-11-13 00:32:33,492:INFO: Epoch 85/10000
2018-11-13 00:38:08,664:INFO: - Train metrics: accuracy: 0.819 ; loss: 27.233
2018-11-13 00:39:05,481:INFO: - Eval metrics: accuracy: 0.717 ; loss: 106.878
2018-11-13 00:39:05,585:INFO: Epoch 86/10000
2018-11-13 00:44:49,275:INFO: - Train metrics: accuracy: 0.819 ; loss: 26.357
2018-11-13 00:45:46,151:INFO: - Eval metrics: accuracy: 0.714 ; loss: 105.645
2018-11-13 00:45:46,238:INFO: Epoch 87/10000
2018-11-13 00:51:28,965:INFO: - Train metrics: accuracy: 0.819 ; loss: 22.785
2018-11-13 00:52:25,259:INFO: - Eval metrics: accuracy: 0.715 ; loss: 106.849
2018-11-13 00:52:25,349:INFO: Epoch 88/10000
2018-11-13 00:58:09,359:INFO: - Train metrics: accuracy: 0.820 ; loss: 36.500
2018-11-13 00:59:06,114:INFO: - Eval metrics: accuracy: 0.714 ; loss: 106.431
2018-11-13 00:59:06,203:INFO: Epoch 89/10000
2018-11-13 01:04:48,623:INFO: - Train metrics: accuracy: 0.820 ; loss: 26.817
2018-11-13 01:05:45,189:INFO: - Eval metrics: accuracy: 0.713 ; loss: 106.982
2018-11-13 01:05:45,277:INFO: Epoch 90/10000
2018-11-13 01:11:28,741:INFO: - Train metrics: accuracy: 0.820 ; loss: 22.634
2018-11-13 01:12:25,239:INFO: - Eval metrics: accuracy: 0.714 ; loss: 106.641
2018-11-13 01:12:25,332:INFO: Epoch 91/10000
2018-11-13 01:18:08,894:INFO: - Train metrics: accuracy: 0.821 ; loss: 22.493
2018-11-13 01:19:05,007:INFO: - Eval metrics: accuracy: 0.714 ; loss: 106.855
2018-11-13 01:19:05,102:INFO: Epoch 92/10000
2018-11-13 01:24:43,050:INFO: - Train metrics: accuracy: 0.821 ; loss: 24.206
2018-11-13 01:25:39,610:INFO: - Eval metrics: accuracy: 0.714 ; loss: 106.632
2018-11-13 01:25:39,706:INFO: Epoch 93/10000
2018-11-13 01:31:23,569:INFO: - Train metrics: accuracy: 0.821 ; loss: 23.370
2018-11-13 01:32:20,112:INFO: - Eval metrics: accuracy: 0.714 ; loss: 107.581
2018-11-13 01:32:20,212:INFO: Epoch 94/10000
2018-11-13 01:38:02,956:INFO: - Train metrics: accuracy: 0.821 ; loss: 24.360
2018-11-13 01:38:59,955:INFO: - Eval metrics: accuracy: 0.715 ; loss: 107.660
2018-11-13 01:39:00,042:INFO: Epoch 95/10000
2018-11-13 01:44:43,282:INFO: - Train metrics: accuracy: 0.821 ; loss: 25.454
2018-11-13 01:45:39,303:INFO: - Eval metrics: accuracy: 0.714 ; loss: 108.121
2018-11-13 01:45:39,375:INFO: Epoch 96/10000
2018-11-13 01:51:22,816:INFO: - Train metrics: accuracy: 0.821 ; loss: 29.165
2018-11-13 01:52:19,441:INFO: - Eval metrics: accuracy: 0.715 ; loss: 107.116
2018-11-13 01:52:19,523:INFO: Epoch 97/10000
2018-11-13 01:58:03,327:INFO: - Train metrics: accuracy: 0.821 ; loss: 27.278
2018-11-13 01:58:59,995:INFO: - Eval metrics: accuracy: 0.714 ; loss: 107.370
2018-11-13 01:59:00,075:INFO: Epoch 98/10000
2018-11-13 02:04:44,847:INFO: - Train metrics: accuracy: 0.821 ; loss: 29.445
2018-11-13 02:05:41,639:INFO: - Eval metrics: accuracy: 0.715 ; loss: 107.935
2018-11-13 02:05:41,725:INFO: Epoch 99/10000
2018-11-13 02:11:26,711:INFO: - Train metrics: accuracy: 0.822 ; loss: 32.904
2018-11-13 02:12:23,279:INFO: - Eval metrics: accuracy: 0.717 ; loss: 107.107
2018-11-13 02:12:23,371:INFO: Epoch 100/10000
2018-11-13 02:18:07,319:INFO: - Train metrics: accuracy: 0.822 ; loss: 30.663
2018-11-13 02:19:02,593:INFO: - Eval metrics: accuracy: 0.714 ; loss: 108.086
2018-11-13 02:19:02,684:INFO: Epoch 101/10000
2018-11-13 02:24:40,991:INFO: - Train metrics: accuracy: 0.822 ; loss: 29.703
2018-11-13 02:25:37,701:INFO: - Eval metrics: accuracy: 0.712 ; loss: 108.038
2018-11-13 02:25:37,796:INFO: Epoch 102/10000
2018-11-13 02:31:22,043:INFO: - Train metrics: accuracy: 0.822 ; loss: 27.371
2018-11-13 02:32:17,437:INFO: - Eval metrics: accuracy: 0.716 ; loss: 107.324
2018-11-13 02:32:17,523:INFO: Epoch 103/10000
2018-11-13 02:37:55,607:INFO: - Train metrics: accuracy: 0.822 ; loss: 27.322
2018-11-13 02:38:52,120:INFO: - Eval metrics: accuracy: 0.713 ; loss: 108.702
2018-11-13 02:38:52,217:INFO: Epoch 104/10000
2018-11-13 02:44:35,896:INFO: - Train metrics: accuracy: 0.822 ; loss: 29.104
2018-11-13 02:45:31,457:INFO: - Eval metrics: accuracy: 0.715 ; loss: 107.269
2018-11-13 02:45:31,547:INFO: Epoch 105/10000
2018-11-13 02:51:10,090:INFO: - Train metrics: accuracy: 0.822 ; loss: 31.650
2018-11-13 02:52:06,763:INFO: - Eval metrics: accuracy: 0.714 ; loss: 108.724
2018-11-13 02:52:06,853:INFO: Epoch 106/10000
2018-11-13 02:57:52,254:INFO: - Train metrics: accuracy: 0.823 ; loss: 31.606
2018-11-13 02:58:49,074:INFO: - Eval metrics: accuracy: 0.715 ; loss: 107.455
2018-11-13 02:58:49,173:INFO: Epoch 107/10000
2018-11-13 03:04:33,776:INFO: - Train metrics: accuracy: 0.823 ; loss: 28.189
2018-11-13 03:05:30,543:INFO: - Eval metrics: accuracy: 0.715 ; loss: 108.112
2018-11-13 03:05:30,637:INFO: Epoch 108/10000
2018-11-13 03:11:15,423:INFO: - Train metrics: accuracy: 0.823 ; loss: 29.623
2018-11-13 03:12:12,100:INFO: - Eval metrics: accuracy: 0.716 ; loss: 106.754
2018-11-13 03:12:12,179:INFO: Epoch 109/10000
2018-11-13 03:17:57,565:INFO: - Train metrics: accuracy: 0.823 ; loss: 29.967
2018-11-13 03:18:54,187:INFO: - Eval metrics: accuracy: 0.713 ; loss: 108.714
2018-11-13 03:18:54,285:INFO: Epoch 110/10000
2018-11-13 03:24:37,427:INFO: - Train metrics: accuracy: 0.823 ; loss: 24.703
2018-11-13 03:25:33,867:INFO: - Eval metrics: accuracy: 0.713 ; loss: 108.618
2018-11-13 03:25:33,951:INFO: Epoch 111/10000
2018-11-13 03:31:19,588:INFO: - Train metrics: accuracy: 0.823 ; loss: 29.218
2018-11-13 03:32:16,910:INFO: - Eval metrics: accuracy: 0.713 ; loss: 109.443
2018-11-13 03:32:17,006:INFO: Epoch 112/10000
2018-11-13 03:38:01,139:INFO: - Train metrics: accuracy: 0.794 ; loss: 47.560
2018-11-13 03:38:57,640:INFO: - Eval metrics: accuracy: 0.715 ; loss: 109.150
2018-11-13 03:38:57,729:INFO: Epoch 113/10000
2018-11-13 03:44:40,750:INFO: - Train metrics: accuracy: 0.823 ; loss: 27.993
2018-11-13 03:45:36,900:INFO: - Eval metrics: accuracy: 0.712 ; loss: 108.186
2018-11-13 03:45:36,986:INFO: Epoch 114/10000
2018-11-13 03:51:20,424:INFO: - Train metrics: accuracy: 0.823 ; loss: 30.724
2018-11-13 03:52:17,022:INFO: - Eval metrics: accuracy: 0.713 ; loss: 108.584
2018-11-13 03:52:17,108:INFO: Epoch 115/10000
2018-11-13 03:58:01,616:INFO: - Train metrics: accuracy: 0.824 ; loss: 27.942
2018-11-13 03:58:56,941:INFO: - Eval metrics: accuracy: 0.712 ; loss: 108.849
2018-11-13 03:58:57,025:INFO: Epoch 116/10000
2018-11-13 04:04:34,291:INFO: - Train metrics: accuracy: 0.824 ; loss: 30.895
2018-11-13 04:05:30,904:INFO: - Eval metrics: accuracy: 0.714 ; loss: 108.587
2018-11-13 04:05:30,994:INFO: Epoch 117/10000
2018-11-13 04:11:16,416:INFO: - Train metrics: accuracy: 0.824 ; loss: 28.891
2018-11-13 04:12:12,913:INFO: - Eval metrics: accuracy: 0.714 ; loss: 108.283
2018-11-13 04:12:13,002:INFO: Epoch 118/10000
2018-11-13 04:17:57,843:INFO: - Train metrics: accuracy: 0.824 ; loss: 30.522
2018-11-13 04:18:53,786:INFO: - Eval metrics: accuracy: 0.712 ; loss: 108.351
2018-11-13 04:18:53,877:INFO: Epoch 119/10000
2018-11-13 04:24:37,590:INFO: - Train metrics: accuracy: 0.824 ; loss: 31.276
2018-11-13 04:25:35,142:INFO: - Eval metrics: accuracy: 0.713 ; loss: 107.737
2018-11-13 04:25:35,229:INFO: Epoch 120/10000
2018-11-13 04:31:20,324:INFO: - Train metrics: accuracy: 0.824 ; loss: 32.575
2018-11-13 04:32:16,924:INFO: - Eval metrics: accuracy: 0.713 ; loss: 108.291
2018-11-13 04:32:17,011:INFO: Epoch 121/10000
2018-11-13 04:38:03,388:INFO: - Train metrics: accuracy: 0.825 ; loss: 30.451
2018-11-13 04:39:00,271:INFO: - Eval metrics: accuracy: 0.711 ; loss: 108.723
2018-11-13 04:39:00,369:INFO: Epoch 122/10000
2018-11-13 04:44:45,706:INFO: - Train metrics: accuracy: 0.825 ; loss: 31.575
2018-11-13 04:45:42,281:INFO: - Eval metrics: accuracy: 0.712 ; loss: 108.522
2018-11-13 04:45:42,374:INFO: Epoch 123/10000
2018-11-13 04:51:27,937:INFO: - Train metrics: accuracy: 0.825 ; loss: 31.420
2018-11-13 04:52:20,013:INFO: - Eval metrics: accuracy: 0.713 ; loss: 108.222
2018-11-13 04:52:20,090:INFO: Epoch 124/10000
2018-11-13 04:58:03,646:INFO: - Train metrics: accuracy: 0.825 ; loss: 28.972
2018-11-13 04:59:00,405:INFO: - Eval metrics: accuracy: 0.714 ; loss: 107.854
2018-11-13 04:59:00,495:INFO: Epoch 125/10000
2018-11-13 05:04:45,900:INFO: - Train metrics: accuracy: 0.825 ; loss: 29.803
2018-11-13 05:05:42,486:INFO: - Eval metrics: accuracy: 0.714 ; loss: 107.611
2018-11-13 05:05:42,575:INFO: Epoch 126/10000
2018-11-13 05:11:26,955:INFO: - Train metrics: accuracy: 0.825 ; loss: 28.742
2018-11-13 05:12:23,842:INFO: - Eval metrics: accuracy: 0.712 ; loss: 107.906
2018-11-13 05:12:23,929:INFO: Epoch 127/10000
2018-11-13 05:18:09,216:INFO: - Train metrics: accuracy: 0.826 ; loss: 23.943
2018-11-13 05:19:05,332:INFO: - Eval metrics: accuracy: 0.713 ; loss: 108.305
2018-11-13 05:19:05,425:INFO: Epoch 128/10000
2018-11-13 05:24:50,233:INFO: - Train metrics: accuracy: 0.826 ; loss: 26.748
2018-11-13 05:25:46,910:INFO: - Eval metrics: accuracy: 0.714 ; loss: 108.371
2018-11-13 05:25:46,989:INFO: Epoch 129/10000
2018-11-13 05:31:32,762:INFO: - Train metrics: accuracy: 0.826 ; loss: 24.925
2018-11-13 05:32:29,568:INFO: - Eval metrics: accuracy: 0.713 ; loss: 107.856
2018-11-13 05:32:29,682:INFO: Epoch 130/10000
2018-11-13 05:38:15,453:INFO: - Train metrics: accuracy: 0.826 ; loss: 28.247
2018-11-13 05:39:12,115:INFO: - Eval metrics: accuracy: 0.713 ; loss: 107.824
2018-11-13 05:39:12,201:INFO: Epoch 131/10000
2018-11-13 05:44:59,301:INFO: - Train metrics: accuracy: 0.826 ; loss: 26.048
2018-11-13 05:45:54,919:INFO: - Eval metrics: accuracy: 0.714 ; loss: 107.852
2018-11-13 05:45:55,005:INFO: Epoch 132/10000
2018-11-13 05:51:33,585:INFO: - Train metrics: accuracy: 0.826 ; loss: 28.144
2018-11-13 05:52:29,271:INFO: - Eval metrics: accuracy: 0.712 ; loss: 108.130
2018-11-13 05:52:29,353:INFO: Epoch 133/10000
2018-11-13 05:58:04,604:INFO: - Train metrics: accuracy: 0.605 ; loss: 363.455
2018-11-13 05:58:58,947:INFO: - Eval metrics: accuracy: 0.465 ; loss: 660.709
2018-11-13 05:58:59,025:INFO: Epoch 134/10000
2018-11-13 11:01:24,638:INFO: Creating the datasets...
2018-11-13 11:01:29,195:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:01:29,485:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:01:29,524:INFO: - done.
2018-11-13 11:01:29,524:INFO: Creating the model...
2018-11-13 11:03:41,097:INFO: Creating the datasets...
2018-11-13 11:03:42,476:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:03:42,764:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:03:42,803:INFO: - done.
2018-11-13 11:03:42,803:INFO: Creating the model...
2018-11-13 11:04:05,962:INFO: Creating the datasets...
2018-11-13 11:04:07,363:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:04:07,638:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:04:07,676:INFO: - done.
2018-11-13 11:04:07,676:INFO: Creating the model...
2018-11-13 11:06:34,711:INFO: Creating the datasets...
2018-11-13 11:06:36,111:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:06:36,383:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:06:36,422:INFO: - done.
2018-11-13 11:06:36,422:INFO: Creating the model...
2018-11-13 11:06:48,723:INFO: Creating the datasets...
2018-11-13 11:06:50,107:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:06:50,386:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:06:50,425:INFO: - done.
2018-11-13 11:06:50,425:INFO: Creating the model...
2018-11-13 11:08:11,896:INFO: Creating the datasets...
2018-11-13 11:08:13,276:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:08:13,552:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:08:13,592:INFO: - done.
2018-11-13 11:08:13,592:INFO: Creating the model...
2018-11-13 11:09:13,631:INFO: Creating the datasets...
2018-11-13 11:09:15,060:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:09:15,339:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:09:15,378:INFO: - done.
2018-11-13 11:09:15,378:INFO: Creating the model...
2018-11-13 11:09:36,257:INFO: Creating the datasets...
2018-11-13 11:09:37,639:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:09:37,910:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:09:37,948:INFO: - done.
2018-11-13 11:09:37,949:INFO: Creating the model...
2018-11-13 11:09:48,591:INFO: Creating the datasets...
2018-11-13 11:09:49,963:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:09:50,235:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:09:50,274:INFO: - done.
2018-11-13 11:09:50,274:INFO: Creating the model...
2018-11-13 11:10:21,164:INFO: Creating the datasets...
2018-11-13 11:10:22,535:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:10:22,809:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:10:22,847:INFO: - done.
2018-11-13 11:10:22,847:INFO: Creating the model...
2018-11-13 11:12:33,216:INFO: Creating the datasets...
2018-11-13 11:12:34,635:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:12:34,906:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:12:34,944:INFO: - done.
2018-11-13 11:12:34,945:INFO: Creating the model...
2018-11-13 11:12:55,378:INFO: Creating the datasets...
2018-11-13 11:12:56,764:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:12:57,042:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:12:57,082:INFO: - done.
2018-11-13 11:12:57,082:INFO: Creating the model...
2018-11-13 11:14:19,719:INFO: Creating the datasets...
2018-11-13 11:14:21,075:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:14:21,345:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:14:21,383:INFO: - done.
2018-11-13 11:14:21,383:INFO: Creating the model...
2018-11-13 11:17:52,862:INFO: Creating the datasets...
2018-11-13 11:17:54,268:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:17:54,543:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:17:54,582:INFO: - done.
2018-11-13 11:17:54,582:INFO: Creating the model...
2018-11-13 11:20:02,912:INFO: Creating the datasets...
2018-11-13 11:20:04,326:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:20:04,600:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:20:04,639:INFO: - done.
2018-11-13 11:20:04,639:INFO: Creating the model...
2018-11-13 11:20:23,146:INFO: Creating the datasets...
2018-11-13 11:20:24,557:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:20:24,830:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:20:24,869:INFO: - done.
2018-11-13 11:20:24,870:INFO: Creating the model...
2018-11-13 11:21:55,869:INFO: Creating the datasets...
2018-11-13 11:21:57,353:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:21:57,643:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:21:57,684:INFO: - done.
2018-11-13 11:21:57,684:INFO: Creating the model...
2018-11-13 11:23:10,262:INFO: Creating the datasets...
2018-11-13 11:23:11,656:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:23:11,929:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:23:11,968:INFO: - done.
2018-11-13 11:23:11,968:INFO: Creating the model...
2018-11-13 11:23:20,288:INFO: Creating the datasets...
2018-11-13 11:23:21,667:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:23:21,938:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:23:21,977:INFO: - done.
2018-11-13 11:23:21,977:INFO: Creating the model...
2018-11-13 11:25:58,493:INFO: Creating the datasets...
2018-11-13 11:25:59,860:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:26:00,131:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:26:00,170:INFO: - done.
2018-11-13 11:26:00,170:INFO: Creating the model...
2018-11-13 11:41:05,412:INFO: Creating the datasets...
2018-11-13 11:41:10,656:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:41:11,081:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:41:11,209:INFO: - done.
2018-11-13 11:41:11,209:INFO: Creating the model...
2018-11-13 11:42:30,543:INFO: Creating the datasets...
2018-11-13 11:42:35,712:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:42:36,105:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:42:36,189:INFO: - done.
2018-11-13 11:42:36,189:INFO: Creating the model...
2018-11-13 11:43:33,789:INFO: Creating the datasets...
2018-11-13 11:43:35,560:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:43:35,833:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:43:35,873:INFO: - done.
2018-11-13 11:43:35,873:INFO: Creating the model...
2018-11-13 11:44:00,895:INFO: Creating the datasets...
2018-11-13 11:44:02,286:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:44:02,556:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:44:02,595:INFO: - done.
2018-11-13 11:44:02,595:INFO: Creating the model...
2018-11-13 11:44:44,052:INFO: Creating the datasets...
2018-11-13 11:44:45,454:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:44:45,726:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:44:45,765:INFO: - done.
2018-11-13 11:44:45,765:INFO: Creating the model...
2018-11-13 11:45:18,721:INFO: Creating the datasets...
2018-11-13 11:45:20,237:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:45:20,508:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:45:20,546:INFO: - done.
2018-11-13 11:45:20,547:INFO: Creating the model...
2018-11-13 11:45:52,103:INFO: Creating the datasets...
2018-11-13 11:45:53,519:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:45:53,796:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:45:53,835:INFO: - done.
2018-11-13 11:45:53,835:INFO: Creating the model...
2018-11-13 11:46:04,233:INFO: Creating the datasets...
2018-11-13 11:46:05,617:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:46:05,884:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:46:05,923:INFO: - done.
2018-11-13 11:46:05,923:INFO: Creating the model...
2018-11-13 11:46:22,382:INFO: Creating the datasets...
2018-11-13 11:46:23,752:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:46:24,021:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:46:24,060:INFO: - done.
2018-11-13 11:46:24,060:INFO: Creating the model...
2018-11-13 11:46:34,498:INFO: Creating the datasets...
2018-11-13 11:46:35,893:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:46:36,165:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:46:36,203:INFO: - done.
2018-11-13 11:46:36,204:INFO: Creating the model...
2018-11-13 11:47:32,891:INFO: Creating the datasets...
2018-11-13 11:47:34,289:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:47:34,568:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:47:34,607:INFO: - done.
2018-11-13 11:47:34,607:INFO: Creating the model...
2018-11-13 11:47:48,791:INFO: Creating the datasets...
2018-11-13 11:47:50,348:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:47:50,620:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:47:50,659:INFO: - done.
2018-11-13 11:47:50,659:INFO: Creating the model...
2018-11-13 11:47:58,469:INFO: Creating the datasets...
2018-11-13 11:47:59,886:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:48:00,162:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:48:00,201:INFO: - done.
2018-11-13 11:48:00,202:INFO: Creating the model...
2018-11-13 11:48:30,184:INFO: Creating the datasets...
2018-11-13 11:48:31,635:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:48:31,913:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:48:31,956:INFO: - done.
2018-11-13 11:48:31,956:INFO: Creating the model...
2018-11-13 11:48:45,176:INFO: Creating the datasets...
2018-11-13 11:48:46,583:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:48:46,857:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:48:46,904:INFO: - done.
2018-11-13 11:48:46,904:INFO: Creating the model...
2018-11-13 11:49:10,044:INFO: Creating the datasets...
2018-11-13 11:49:11,418:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:49:11,688:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:49:11,726:INFO: - done.
2018-11-13 11:49:11,726:INFO: Creating the model...
2018-11-13 11:49:30,457:INFO: Creating the datasets...
2018-11-13 11:49:31,873:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:49:32,147:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:49:32,187:INFO: - done.
2018-11-13 11:49:32,187:INFO: Creating the model...
2018-11-13 11:49:57,529:INFO: Creating the datasets...
2018-11-13 11:49:58,919:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:49:59,193:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:49:59,232:INFO: - done.
2018-11-13 11:49:59,233:INFO: Creating the model...
2018-11-13 11:50:11,403:INFO: Creating the datasets...
2018-11-13 11:50:12,846:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 11:50:13,118:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 11:50:13,157:INFO: - done.
2018-11-13 11:50:13,157:INFO: Creating the model...
2018-11-13 11:50:17,494:INFO: - done.
2018-11-13 11:50:17,494:INFO: Starting training for 10000 epoch(s)
2018-11-13 11:50:20,051:INFO: Epoch 1/10000
2018-11-13 11:59:55,838:INFO: Creating the datasets...
2018-11-13 12:00:00,081:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:00:00,380:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:00:00,440:INFO: - done.
2018-11-13 12:00:00,440:INFO: Creating the model...
2018-11-13 12:00:22,618:INFO: Creating the datasets...
2018-11-13 12:00:24,015:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:00:24,290:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:00:24,330:INFO: - done.
2018-11-13 12:00:24,330:INFO: Creating the model...
2018-11-13 12:00:28,753:INFO: - done.
2018-11-13 12:00:28,753:INFO: Starting training for 10000 epoch(s)
2018-11-13 12:00:30,917:INFO: Epoch 1/10000
2018-11-13 12:27:35,385:INFO: - Train metrics: accuracy: 0.673 ; loss: 236.325
2018-11-13 12:39:29,816:INFO: - Eval metrics: accuracy: 0.710 ; loss: 86.112
2018-11-13 12:39:32,172:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-13 12:39:32,202:INFO: Epoch 2/10000
2018-11-13 12:40:42,766:INFO: Creating the datasets...
2018-11-13 12:40:47,301:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:40:47,573:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:40:47,612:INFO: - done.
2018-11-13 12:40:47,612:INFO: Creating the model...
2018-11-13 12:41:45,053:INFO: Creating the datasets...
2018-11-13 12:41:46,468:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:41:46,743:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:41:46,781:INFO: - done.
2018-11-13 12:41:46,782:INFO: Creating the model...
2018-11-13 12:42:30,091:INFO: Creating the datasets...
2018-11-13 12:42:31,483:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:42:31,768:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:42:31,811:INFO: - done.
2018-11-13 12:42:31,811:INFO: Creating the model...
2018-11-13 12:42:59,863:INFO: Creating the datasets...
2018-11-13 12:43:01,280:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:43:01,556:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:43:01,595:INFO: - done.
2018-11-13 12:43:01,595:INFO: Creating the model...
2018-11-13 12:43:54,140:INFO: Creating the datasets...
2018-11-13 12:43:55,528:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:43:55,800:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:43:55,839:INFO: - done.
2018-11-13 12:43:55,839:INFO: Creating the model...
2018-11-13 12:44:00,358:INFO: - done.
2018-11-13 12:44:00,358:INFO: Starting training for 10000 epoch(s)
2018-11-13 12:44:02,446:INFO: Epoch 1/10000
2018-11-13 12:44:53,814:INFO: Creating the datasets...
2018-11-13 12:44:55,206:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:44:55,477:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:44:55,516:INFO: - done.
2018-11-13 12:44:55,516:INFO: Creating the model...
2018-11-13 12:45:39,851:INFO: Creating the datasets...
2018-11-13 12:45:41,235:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:45:41,506:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:45:41,544:INFO: - done.
2018-11-13 12:45:41,544:INFO: Creating the model...
2018-11-13 12:46:11,389:INFO: Creating the datasets...
2018-11-13 12:46:12,793:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:46:13,065:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:46:13,104:INFO: - done.
2018-11-13 12:46:13,104:INFO: Creating the model...
2018-11-13 12:54:38,711:INFO: Creating the datasets...
2018-11-13 12:54:40,134:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:54:40,418:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:54:40,460:INFO: - done.
2018-11-13 12:54:40,460:INFO: Creating the model...
2018-11-13 12:54:44,956:INFO: - done.
2018-11-13 12:54:44,956:INFO: Starting training for 10000 epoch(s)
2018-11-13 12:54:46,962:INFO: Epoch 1/10000
2018-11-13 12:56:48,089:INFO: Creating the datasets...
2018-11-13 12:56:49,482:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:56:49,758:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:56:49,797:INFO: - done.
2018-11-13 12:56:49,797:INFO: Creating the model...
2018-11-13 12:57:07,501:INFO: Creating the datasets...
2018-11-13 12:57:08,895:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:57:09,170:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:57:09,209:INFO: - done.
2018-11-13 12:57:09,209:INFO: Creating the model...
2018-11-13 12:57:13,768:INFO: - done.
2018-11-13 12:57:13,769:INFO: Starting training for 10000 epoch(s)
2018-11-13 12:57:15,757:INFO: Epoch 1/10000
2018-11-13 12:57:49,940:INFO: Creating the datasets...
2018-11-13 12:57:51,426:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 12:57:51,740:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 12:57:51,787:INFO: - done.
2018-11-13 12:57:51,787:INFO: Creating the model...
2018-11-13 12:57:56,420:INFO: - done.
2018-11-13 12:57:56,420:INFO: Starting training for 10000 epoch(s)
2018-11-13 12:57:58,483:INFO: Epoch 1/10000
2018-11-13 13:01:47,566:INFO: Creating the datasets...
2018-11-13 13:01:49,016:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 13:01:49,299:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 13:01:49,339:INFO: - done.
2018-11-13 13:01:49,339:INFO: Creating the model...
2018-11-13 13:09:16,036:INFO: Creating the datasets...
2018-11-13 13:09:17,482:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 13:09:17,757:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 13:09:17,796:INFO: - done.
2018-11-13 13:09:17,796:INFO: Creating the model...
2018-11-13 13:09:22,104:INFO: - done.
2018-11-13 13:09:22,104:INFO: Starting training for 10000 epoch(s)
2018-11-13 13:09:24,093:INFO: Epoch 1/10000
2018-11-13 13:35:00,706:INFO: - Train metrics: accuracy: 0.673 ; loss: 287.516
2018-11-13 13:45:55,185:INFO: - Eval metrics: accuracy: 0.748 ; loss: 76.689
2018-11-13 13:45:57,437:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-13 13:45:57,452:INFO: Epoch 2/10000
2018-11-13 14:11:28,331:INFO: - Train metrics: accuracy: 0.732 ; loss: 124.406
2018-11-13 14:13:19,771:INFO: Creating the datasets...
2018-11-13 14:13:24,431:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 14:13:24,717:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 14:13:24,756:INFO: - done.
2018-11-13 14:13:24,756:INFO: Creating the model...
2018-11-13 14:15:41,694:INFO: Creating the datasets...
2018-11-13 14:15:43,120:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 14:15:43,406:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 14:15:43,445:INFO: - done.
2018-11-13 14:15:43,445:INFO: Creating the model...
2018-11-13 14:16:15,299:INFO: Creating the datasets...
2018-11-13 14:16:16,718:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 14:16:16,994:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 14:16:17,033:INFO: - done.
2018-11-13 14:16:17,034:INFO: Creating the model...
2018-11-13 14:16:36,788:INFO: Creating the datasets...
2018-11-13 14:16:38,166:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 14:16:38,437:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 14:16:38,476:INFO: - done.
2018-11-13 14:16:38,476:INFO: Creating the model...
2018-11-13 14:16:42,812:INFO: - done.
2018-11-13 14:16:42,812:INFO: Starting training for 10000 epoch(s)
2018-11-13 14:16:44,958:INFO: Epoch 1/10000
2018-11-13 14:20:10,558:INFO: Creating the datasets...
2018-11-13 14:20:12,050:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 14:20:12,333:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 14:20:12,378:INFO: - done.
2018-11-13 14:20:12,379:INFO: Creating the model...
2018-11-13 14:20:35,798:INFO: Creating the datasets...
2018-11-13 14:20:37,184:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 14:20:37,458:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 14:20:37,497:INFO: - done.
2018-11-13 14:20:37,497:INFO: Creating the model...
2018-11-13 14:21:16,942:INFO: Creating the datasets...
2018-11-13 14:21:18,404:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 14:21:18,688:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 14:21:18,732:INFO: - done.
2018-11-13 14:21:18,732:INFO: Creating the model...
2018-11-13 14:35:43,356:INFO: Creating the datasets...
2018-11-13 14:35:45,039:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 14:35:45,344:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 14:35:45,389:INFO: - done.
2018-11-13 14:35:45,389:INFO: Creating the model...
2018-11-13 14:43:20,309:INFO: Creating the datasets...
2018-11-13 14:43:21,729:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 14:43:22,008:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 14:43:22,047:INFO: - done.
2018-11-13 14:43:22,048:INFO: Creating the model...
2018-11-13 14:43:32,515:INFO: - done.
2018-11-13 14:43:32,515:INFO: Starting training for 10000 epoch(s)
2018-11-13 14:43:36,959:INFO: Epoch 1/10000
2018-11-13 15:17:40,338:INFO: Creating the datasets...
2018-11-13 15:17:45,049:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 15:17:45,389:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 15:17:45,432:INFO: - done.
2018-11-13 15:17:45,432:INFO: Creating the model...
2018-11-13 15:18:02,694:INFO: - done.
2018-11-13 15:18:02,694:INFO: Starting training for 10000 epoch(s)
2018-11-13 15:18:10,029:INFO: Epoch 1/10000
2018-11-13 15:20:28,592:INFO: Creating the datasets...
2018-11-13 15:20:33,044:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 15:20:33,356:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 15:20:33,413:INFO: - done.
2018-11-13 15:20:33,413:INFO: Creating the model...
2018-11-13 15:24:33,924:INFO: Creating the datasets...
2018-11-13 15:24:35,375:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 15:24:35,650:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 15:24:35,690:INFO: - done.
2018-11-13 15:24:35,690:INFO: Creating the model...
2018-11-13 15:25:00,451:INFO: Creating the datasets...
2018-11-13 15:25:01,950:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 15:25:02,247:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 15:25:02,287:INFO: - done.
2018-11-13 15:25:02,287:INFO: Creating the model...
2018-11-13 15:25:31,825:INFO: - done.
2018-11-13 15:25:31,825:INFO: Starting training for 10000 epoch(s)
2018-11-13 15:25:43,837:INFO: Epoch 1/10000
2018-11-13 15:30:42,696:INFO: Creating the datasets...
2018-11-13 15:30:47,131:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 15:30:47,421:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 15:30:47,473:INFO: - done.
2018-11-13 15:30:47,473:INFO: Creating the model...
2018-11-13 15:31:17,895:INFO: - done.
2018-11-13 15:31:17,895:INFO: Starting training for 10000 epoch(s)
2018-11-13 15:31:30,410:INFO: Epoch 1/10000
2018-11-13 15:34:23,254:INFO: Creating the datasets...
2018-11-13 15:34:29,773:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 15:34:30,081:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 15:34:30,132:INFO: - done.
2018-11-13 15:34:30,132:INFO: Creating the model...
2018-11-13 15:35:00,481:INFO: - done.
2018-11-13 15:35:00,481:INFO: Starting training for 10000 epoch(s)
2018-11-13 15:35:13,142:INFO: Epoch 1/10000
2018-11-13 15:37:39,652:INFO: Creating the datasets...
2018-11-13 15:37:43,771:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 15:37:44,050:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 15:37:44,090:INFO: - done.
2018-11-13 15:37:44,091:INFO: Creating the model...
2018-11-13 15:38:14,536:INFO: - done.
2018-11-13 15:38:14,536:INFO: Starting training for 10000 epoch(s)
2018-11-13 15:38:26,726:INFO: Epoch 1/10000
2018-11-13 15:40:45,041:INFO: Creating the datasets...
2018-11-13 15:40:49,852:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 15:40:50,135:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 15:40:50,174:INFO: - done.
2018-11-13 15:40:50,175:INFO: Creating the model...
2018-11-13 15:41:19,913:INFO: - done.
2018-11-13 15:41:19,913:INFO: Starting training for 10000 epoch(s)
2018-11-13 15:41:32,231:INFO: Epoch 1/10000
2018-11-13 16:17:03,102:INFO: Creating the datasets...
2018-11-13 16:17:07,929:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 16:17:08,253:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 16:17:08,321:INFO: - done.
2018-11-13 16:17:08,321:INFO: Creating the model...
2018-11-13 16:17:38,697:INFO: - done.
2018-11-13 16:17:38,698:INFO: Starting training for 10000 epoch(s)
2018-11-13 16:17:51,394:INFO: Epoch 1/10000
2018-11-13 16:23:07,829:INFO: Creating the datasets...
2018-11-13 16:23:12,722:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 16:23:13,011:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 16:23:13,063:INFO: - done.
2018-11-13 16:23:13,063:INFO: Creating the model...
2018-11-13 16:23:36,138:INFO: Creating the datasets...
2018-11-13 16:23:37,552:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 16:23:37,825:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 16:23:37,864:INFO: - done.
2018-11-13 16:23:37,864:INFO: Creating the model...
2018-11-13 16:24:07,510:INFO: - done.
2018-11-13 16:24:07,511:INFO: Starting training for 10000 epoch(s)
2018-11-13 16:24:19,734:INFO: Epoch 1/10000
2018-11-13 16:26:16,161:INFO: Creating the datasets...
2018-11-13 16:26:17,826:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 16:26:18,103:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 16:26:18,142:INFO: - done.
2018-11-13 16:26:18,142:INFO: Creating the model...
2018-11-13 16:27:14,935:INFO: Creating the datasets...
2018-11-13 16:27:16,395:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 16:27:16,676:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 16:27:16,715:INFO: - done.
2018-11-13 16:27:16,715:INFO: Creating the model...
2018-11-13 16:27:46,371:INFO: - done.
2018-11-13 16:27:46,371:INFO: Starting training for 10000 epoch(s)
2018-11-13 16:27:58,573:INFO: Epoch 1/10000
2018-11-13 16:29:41,884:INFO: Creating the datasets...
2018-11-13 16:29:43,557:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 16:29:43,832:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 16:29:43,871:INFO: - done.
2018-11-13 16:29:43,877:INFO: Creating the model...
2018-11-13 16:31:28,715:INFO: Creating the datasets...
2018-11-13 16:31:30,136:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 16:31:30,415:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 16:31:30,454:INFO: - done.
2018-11-13 16:31:30,455:INFO: Creating the model...
2018-11-13 16:31:48,545:INFO: - done.
2018-11-13 16:31:48,546:INFO: Starting training for 10000 epoch(s)
2018-11-13 16:31:55,872:INFO: Epoch 1/10000
2018-11-13 16:32:48,504:INFO: Creating the datasets...
2018-11-13 16:32:49,916:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 16:32:50,197:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 16:32:50,237:INFO: - done.
2018-11-13 16:32:50,237:INFO: Creating the model...
2018-11-13 16:33:01,883:INFO: - done.
2018-11-13 16:33:01,883:INFO: Starting training for 10000 epoch(s)
2018-11-13 16:33:06,716:INFO: Epoch 1/10000
2018-11-13 16:36:53,437:INFO: Creating the datasets...
2018-11-13 16:36:54,878:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 16:36:55,158:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 16:36:55,199:INFO: - done.
2018-11-13 16:36:55,199:INFO: Creating the model...
2018-11-13 16:37:18,617:INFO: - done.
2018-11-13 16:37:18,617:INFO: Starting training for 10000 epoch(s)
2018-11-13 16:37:28,201:INFO: Epoch 1/10000
2018-11-13 16:39:40,034:INFO: Creating the datasets...
2018-11-13 16:39:41,487:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 16:39:41,776:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 16:39:41,819:INFO: - done.
2018-11-13 16:39:41,819:INFO: Creating the model...
2018-11-13 16:40:05,445:INFO: - done.
2018-11-13 16:40:05,445:INFO: Starting training for 10000 epoch(s)
2018-11-13 16:40:15,202:INFO: Epoch 1/10000
2018-11-13 16:58:35,912:INFO: Creating the datasets...
2018-11-13 16:58:43,055:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 16:58:43,361:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 16:58:43,400:INFO: - done.
2018-11-13 16:58:43,400:INFO: Creating the model...
2018-11-13 16:59:14,648:INFO: - done.
2018-11-13 16:59:14,648:INFO: Starting training for 10000 epoch(s)
2018-11-13 16:59:27,625:INFO: Epoch 1/10000
2018-11-13 17:16:01,046:INFO: Creating the datasets...
2018-11-13 17:16:15,616:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 17:16:15,983:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 17:16:16,034:INFO: - done.
2018-11-13 17:16:16,034:INFO: Creating the model...
2018-11-13 17:16:49,174:INFO: - done.
2018-11-13 17:16:49,174:INFO: Starting training for 10000 epoch(s)
2018-11-13 17:17:02,394:INFO: Epoch 1/10000
2018-11-13 17:20:08,233:INFO: Creating the datasets...
2018-11-13 17:20:09,621:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-13 17:20:09,892:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-13 17:20:09,932:INFO: - done.
2018-11-13 17:20:09,932:INFO: Creating the model...
2018-11-13 17:20:42,789:INFO: - done.
2018-11-13 17:20:42,789:INFO: Starting training for 10000 epoch(s)
2018-11-13 17:20:55,763:INFO: Epoch 1/10000
2018-11-14 09:31:09,811:INFO: Creating the datasets...
2018-11-14 09:31:11,373:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 09:31:11,641:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 09:31:11,680:INFO: - done.
2018-11-14 09:31:11,680:INFO: Creating the model...
2018-11-14 09:31:43,493:INFO: - done.
2018-11-14 09:31:43,493:INFO: Starting training for 10000 epoch(s)
2018-11-14 09:31:56,610:INFO: Epoch 1/10000
2018-11-14 10:34:37,179:INFO: Creating the datasets...
2018-11-14 10:34:56,474:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 10:34:56,818:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 10:34:56,867:INFO: - done.
2018-11-14 10:34:56,867:INFO: Creating the model...
2018-11-14 10:35:29,466:INFO: - done.
2018-11-14 10:35:29,466:INFO: Starting training for 10000 epoch(s)
2018-11-14 10:35:43,219:INFO: Epoch 1/10000
2018-11-14 10:37:15,075:INFO: Creating the datasets...
2018-11-14 10:37:16,567:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 10:37:16,849:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 10:37:16,889:INFO: - done.
2018-11-14 10:37:16,889:INFO: Creating the model...
2018-11-14 10:37:52,161:INFO: - done.
2018-11-14 10:37:52,161:INFO: Starting training for 10000 epoch(s)
2018-11-14 10:38:05,611:INFO: Epoch 1/10000
2018-11-14 10:39:11,805:INFO: Creating the datasets...
2018-11-14 10:39:14,176:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 10:39:14,489:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 10:39:14,532:INFO: - done.
2018-11-14 10:39:14,532:INFO: Creating the model...
2018-11-14 10:39:51,993:INFO: - done.
2018-11-14 10:39:51,994:INFO: Starting training for 10000 epoch(s)
2018-11-14 10:40:05,041:INFO: Epoch 1/10000
2018-11-14 11:37:11,346:INFO: Creating the datasets...
2018-11-14 11:37:16,831:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 11:37:17,166:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 11:37:17,207:INFO: - done.
2018-11-14 11:37:17,208:INFO: Creating the model...
2018-11-14 11:45:33,670:INFO: Creating the datasets...
2018-11-14 11:45:44,620:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 11:45:45,735:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 11:45:45,914:INFO: - done.
2018-11-14 11:45:45,914:INFO: Creating the model...
2018-11-14 11:48:12,478:INFO: Creating the datasets...
2018-11-14 11:48:18,139:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 11:48:18,871:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 11:48:18,992:INFO: - done.
2018-11-14 11:48:18,992:INFO: Creating the model...
2018-11-14 11:48:54,722:INFO: - done.
2018-11-14 11:48:54,792:INFO: Starting training for 10000 epoch(s)
2018-11-14 11:49:16,465:INFO: Epoch 1/10000
2018-11-14 12:08:03,336:INFO: Creating the datasets...
2018-11-14 12:08:07,993:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 12:08:08,290:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 12:08:08,330:INFO: - done.
2018-11-14 12:08:08,330:INFO: Creating the model...
2018-11-14 12:08:41,164:INFO: - done.
2018-11-14 12:08:41,164:INFO: Starting training for 10000 epoch(s)
2018-11-14 12:08:54,613:INFO: Epoch 1/10000
2018-11-14 12:17:07,329:INFO: Creating the datasets...
2018-11-14 12:17:08,756:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 12:17:09,037:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 12:17:09,077:INFO: - done.
2018-11-14 12:17:09,077:INFO: Creating the model...
2018-11-14 12:17:42,004:INFO: - done.
2018-11-14 12:17:42,005:INFO: Starting training for 10000 epoch(s)
2018-11-14 12:17:55,119:INFO: Epoch 1/10000
2018-11-14 12:30:48,373:INFO: Creating the datasets...
2018-11-14 12:30:49,876:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 12:30:50,163:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 12:30:50,203:INFO: - done.
2018-11-14 12:30:50,203:INFO: Creating the model...
2018-11-14 12:32:17,065:INFO: Creating the datasets...
2018-11-14 12:32:18,477:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 12:32:18,754:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 12:32:18,794:INFO: - done.
2018-11-14 12:32:18,794:INFO: Creating the model...
2018-11-14 12:33:07,293:INFO: - done.
2018-11-14 12:33:07,293:INFO: Starting training for 10000 epoch(s)
2018-11-14 12:33:26,795:INFO: Epoch 1/10000
2018-11-14 19:06:38,036:INFO: Creating the datasets...
2018-11-14 19:06:42,584:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 19:06:42,899:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 19:06:42,953:INFO: - done.
2018-11-14 19:06:42,953:INFO: Creating the model...
2018-11-14 19:07:34,847:INFO: - done.
2018-11-14 19:07:34,847:INFO: Starting training for 10000 epoch(s)
2018-11-14 19:07:56,029:INFO: Epoch 1/10000
2018-11-14 21:12:03,413:INFO: Creating the datasets...
2018-11-14 21:12:08,362:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 21:12:08,672:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 21:12:08,722:INFO: - done.
2018-11-14 21:12:08,722:INFO: Creating the model...
2018-11-14 21:13:50,121:INFO: Creating the datasets...
2018-11-14 21:13:51,630:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 21:13:51,913:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 21:13:51,954:INFO: - done.
2018-11-14 21:13:51,954:INFO: Creating the model...
2018-11-14 21:14:42,078:INFO: - done.
2018-11-14 21:14:42,078:INFO: Starting training for 10000 epoch(s)
2018-11-14 21:15:02,116:INFO: Epoch 1/10000
2018-11-14 22:10:15,948:INFO: Creating the datasets...
2018-11-14 22:10:21,955:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-14 22:10:22,258:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-14 22:10:22,315:INFO: - done.
2018-11-14 22:10:22,315:INFO: Creating the model...
2018-11-14 22:11:09,966:INFO: - done.
2018-11-14 22:11:09,966:INFO: Starting training for 10000 epoch(s)
2018-11-14 22:11:29,280:INFO: Epoch 1/10000
2018-11-15 09:41:34,956:INFO: Creating the datasets...
2018-11-15 09:41:39,605:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 09:41:39,908:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 09:41:39,957:INFO: - done.
2018-11-15 09:41:39,957:INFO: Creating the model...
2018-11-15 09:42:27,555:INFO: - done.
2018-11-15 09:42:27,556:INFO: Starting training for 10000 epoch(s)
2018-11-15 09:42:46,809:INFO: Epoch 1/10000
2018-11-15 11:29:32,060:INFO: Creating the datasets...
2018-11-15 11:29:36,711:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 11:29:37,012:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 11:29:37,061:INFO: - done.
2018-11-15 11:29:37,061:INFO: Creating the model...
2018-11-15 11:31:22,008:INFO: Creating the datasets...
2018-11-15 11:31:23,477:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 11:31:23,759:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 11:31:23,800:INFO: - done.
2018-11-15 11:31:23,800:INFO: Creating the model...
2018-11-15 11:31:48,859:INFO: Creating the datasets...
2018-11-15 11:31:50,357:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 11:31:50,636:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 11:31:50,675:INFO: - done.
2018-11-15 11:31:50,676:INFO: Creating the model...
2018-11-15 11:37:45,779:INFO: Creating the datasets...
2018-11-15 11:37:47,250:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 11:37:47,546:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 11:37:47,588:INFO: - done.
2018-11-15 11:37:47,588:INFO: Creating the model...
2018-11-15 11:39:42,298:INFO: Creating the datasets...
2018-11-15 11:39:43,731:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 11:39:44,016:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 11:39:44,057:INFO: - done.
2018-11-15 11:39:44,057:INFO: Creating the model...
2018-11-15 11:40:31,842:INFO: Creating the datasets...
2018-11-15 11:40:33,410:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 11:40:33,695:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 11:40:33,736:INFO: - done.
2018-11-15 11:40:33,736:INFO: Creating the model...
2018-11-15 11:41:24,897:INFO: Creating the datasets...
2018-11-15 11:41:26,341:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 11:41:26,621:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 11:41:26,661:INFO: - done.
2018-11-15 11:41:26,661:INFO: Creating the model...
2018-11-15 11:41:42,053:INFO: Creating the datasets...
2018-11-15 11:41:43,474:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 11:41:43,756:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 11:41:43,795:INFO: - done.
2018-11-15 11:41:43,795:INFO: Creating the model...
2018-11-15 11:43:02,222:INFO: Creating the datasets...
2018-11-15 11:43:03,679:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 11:43:03,956:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 11:43:03,996:INFO: - done.
2018-11-15 11:43:03,996:INFO: Creating the model...
2018-11-15 11:46:03,531:INFO: Creating the datasets...
2018-11-15 11:46:05,044:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 11:46:05,340:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 11:46:05,386:INFO: - done.
2018-11-15 11:46:05,386:INFO: Creating the model...
2018-11-15 11:46:54,868:INFO: - done.
2018-11-15 11:46:54,869:INFO: Starting training for 10000 epoch(s)
2018-11-15 11:47:14,958:INFO: Epoch 1/10000
2018-11-15 11:51:35,547:INFO: Creating the datasets...
2018-11-15 11:51:40,869:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 11:51:41,178:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 11:51:41,237:INFO: - done.
2018-11-15 11:51:41,237:INFO: Creating the model...
2018-11-15 11:52:27,223:INFO: - done.
2018-11-15 11:52:27,224:INFO: Starting training for 10000 epoch(s)
2018-11-15 11:52:45,550:INFO: Epoch 1/10000
2018-11-15 11:54:37,903:INFO: Creating the datasets...
2018-11-15 11:54:39,404:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 11:54:39,686:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 11:54:39,726:INFO: - done.
2018-11-15 11:54:39,727:INFO: Creating the model...
2018-11-15 11:55:26,401:INFO: - done.
2018-11-15 11:55:26,401:INFO: Starting training for 10000 epoch(s)
2018-11-15 11:55:44,846:INFO: Epoch 1/10000
2018-11-15 12:01:41,790:INFO: Creating the datasets...
2018-11-15 12:01:43,494:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:01:43,773:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:01:43,813:INFO: - done.
2018-11-15 12:01:43,814:INFO: Creating the model...
2018-11-15 12:05:05,260:INFO: Creating the datasets...
2018-11-15 12:05:06,714:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:05:06,996:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:05:07,035:INFO: - done.
2018-11-15 12:05:07,036:INFO: Creating the model...
2018-11-15 12:05:55,495:INFO: Creating the datasets...
2018-11-15 12:05:56,948:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:05:57,232:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:05:57,272:INFO: - done.
2018-11-15 12:05:57,272:INFO: Creating the model...
2018-11-15 12:21:01,620:INFO: Creating the datasets...
2018-11-15 12:21:03,042:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:21:03,326:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:21:03,367:INFO: - done.
2018-11-15 12:21:03,367:INFO: Creating the model...
2018-11-15 12:22:49,223:INFO: Creating the datasets...
2018-11-15 12:22:50,651:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:22:50,932:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:22:50,971:INFO: - done.
2018-11-15 12:22:50,972:INFO: Creating the model...
2018-11-15 12:24:34,034:INFO: Creating the datasets...
2018-11-15 12:24:35,499:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:24:35,783:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:24:35,823:INFO: - done.
2018-11-15 12:24:35,823:INFO: Creating the model...
2018-11-15 12:26:39,830:INFO: Creating the datasets...
2018-11-15 12:26:41,273:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:26:41,554:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:26:41,593:INFO: - done.
2018-11-15 12:26:41,593:INFO: Creating the model...
2018-11-15 12:28:00,488:INFO: Creating the datasets...
2018-11-15 12:28:01,965:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:28:02,251:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:28:02,291:INFO: - done.
2018-11-15 12:28:02,291:INFO: Creating the model...
2018-11-15 12:30:21,701:INFO: Creating the datasets...
2018-11-15 12:30:23,159:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:30:23,442:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:30:23,482:INFO: - done.
2018-11-15 12:30:23,482:INFO: Creating the model...
2018-11-15 12:32:57,114:INFO: Creating the datasets...
2018-11-15 12:32:58,563:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:32:58,846:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:32:58,886:INFO: - done.
2018-11-15 12:32:58,886:INFO: Creating the model...
2018-11-15 12:34:42,502:INFO: Creating the datasets...
2018-11-15 12:34:43,973:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:34:44,258:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:34:44,299:INFO: - done.
2018-11-15 12:34:44,299:INFO: Creating the model...
2018-11-15 12:37:00,895:INFO: Creating the datasets...
2018-11-15 12:37:02,393:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:37:02,686:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:37:02,726:INFO: - done.
2018-11-15 12:37:02,726:INFO: Creating the model...
2018-11-15 12:38:59,670:INFO: Creating the datasets...
2018-11-15 12:39:01,110:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:39:01,388:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:39:01,427:INFO: - done.
2018-11-15 12:39:01,427:INFO: Creating the model...
2018-11-15 12:39:47,401:INFO: - done.
2018-11-15 12:39:47,401:INFO: Starting training for 10000 epoch(s)
2018-11-15 12:40:05,934:INFO: Epoch 1/10000
2018-11-15 12:41:55,588:INFO: Creating the datasets...
2018-11-15 12:42:00,579:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:42:00,889:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:42:00,937:INFO: - done.
2018-11-15 12:42:00,937:INFO: Creating the model...
2018-11-15 12:42:48,162:INFO: - done.
2018-11-15 12:42:48,162:INFO: Starting training for 10000 epoch(s)
2018-11-15 12:43:08,082:INFO: Epoch 1/10000
2018-11-15 12:46:02,165:INFO: Creating the datasets...
2018-11-15 12:46:06,905:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 12:46:07,186:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 12:46:07,225:INFO: - done.
2018-11-15 12:46:07,225:INFO: Creating the model...
2018-11-15 12:46:53,716:INFO: - done.
2018-11-15 12:46:53,717:INFO: Starting training for 10000 epoch(s)
2018-11-15 12:47:12,397:INFO: Epoch 1/10000
2018-11-15 14:05:04,669:INFO: Creating the datasets...
2018-11-15 14:05:09,327:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 14:05:09,644:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 14:05:09,692:INFO: - done.
2018-11-15 14:05:09,692:INFO: Creating the model...
2018-11-15 14:05:56,038:INFO: - done.
2018-11-15 14:05:56,038:INFO: Starting training for 10000 epoch(s)
2018-11-15 14:06:14,803:INFO: Epoch 1/10000
2018-11-15 17:21:52,376:INFO: Creating the datasets...
2018-11-15 17:21:57,324:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-15 17:21:57,704:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-15 17:21:57,779:INFO: - done.
2018-11-15 17:21:57,779:INFO: Creating the model...
2018-11-15 17:22:39,505:INFO: - done.
2018-11-15 17:22:39,505:INFO: Starting training for 10000 epoch(s)
2018-11-15 17:22:56,672:INFO: Epoch 1/10000
2018-11-16 00:31:48,182:INFO: Creating the datasets...
2018-11-16 00:31:49,684:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 00:31:49,970:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 00:31:50,010:INFO: - done.
2018-11-16 00:31:50,010:INFO: Creating the model...
2018-11-16 00:32:32,177:INFO: - done.
2018-11-16 00:32:32,177:INFO: Starting training for 10000 epoch(s)
2018-11-16 00:32:49,974:INFO: Epoch 1/10000
2018-11-16 00:37:35,618:INFO: Creating the datasets...
2018-11-16 00:37:40,158:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 00:37:40,438:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 00:37:40,477:INFO: - done.
2018-11-16 00:37:40,478:INFO: Creating the model...
2018-11-16 00:43:45,873:INFO: Creating the datasets...
2018-11-16 00:43:47,316:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 00:43:47,599:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 00:43:47,640:INFO: - done.
2018-11-16 00:43:47,640:INFO: Creating the model...
2018-11-16 00:45:37,369:INFO: Creating the datasets...
2018-11-16 00:45:38,811:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 00:45:39,092:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 00:45:39,134:INFO: - done.
2018-11-16 00:45:39,134:INFO: Creating the model...
2018-11-16 00:46:21,375:INFO: - done.
2018-11-16 00:46:21,375:INFO: Starting training for 10000 epoch(s)
2018-11-16 00:46:38,399:INFO: Epoch 1/10000
2018-11-16 00:49:11,528:INFO: Creating the datasets...
2018-11-16 00:49:15,449:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 00:49:15,732:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 00:49:15,784:INFO: - done.
2018-11-16 00:49:15,784:INFO: Creating the model...
2018-11-16 00:49:58,158:INFO: - done.
2018-11-16 00:49:58,158:INFO: Starting training for 10000 epoch(s)
2018-11-16 00:50:15,337:INFO: Epoch 1/10000
2018-11-16 00:51:34,339:INFO: Creating the datasets...
2018-11-16 00:51:38,033:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 00:51:38,318:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 00:51:38,358:INFO: - done.
2018-11-16 00:51:38,359:INFO: Creating the model...
2018-11-16 00:52:20,656:INFO: - done.
2018-11-16 00:52:20,656:INFO: Starting training for 10000 epoch(s)
2018-11-16 00:52:37,658:INFO: Epoch 1/10000
2018-11-16 00:53:53,049:INFO: Creating the datasets...
2018-11-16 00:53:57,107:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 00:53:57,392:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 00:53:57,439:INFO: - done.
2018-11-16 00:53:57,439:INFO: Creating the model...
2018-11-16 00:54:39,205:INFO: - done.
2018-11-16 00:54:39,205:INFO: Starting training for 10000 epoch(s)
2018-11-16 00:54:56,239:INFO: Epoch 1/10000
2018-11-16 11:04:37,323:INFO: Creating the datasets...
2018-11-16 11:04:41,821:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 11:04:42,115:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 11:04:42,154:INFO: - done.
2018-11-16 11:04:42,155:INFO: Creating the model...
2018-11-16 11:05:21,997:INFO: - done.
2018-11-16 11:05:21,998:INFO: Starting training for 10000 epoch(s)
2018-11-16 11:05:38,406:INFO: Epoch 1/10000
2018-11-16 11:14:40,460:INFO: Creating the datasets...
2018-11-16 11:14:44,850:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 11:14:45,149:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 11:14:45,250:INFO: - done.
2018-11-16 11:14:45,250:INFO: Creating the model...
2018-11-16 11:15:25,807:INFO: - done.
2018-11-16 11:15:25,807:INFO: Starting training for 10000 epoch(s)
2018-11-16 11:15:42,171:INFO: Epoch 1/10000
2018-11-16 11:21:19,323:INFO: Creating the datasets...
2018-11-16 11:21:23,647:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 11:21:23,944:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 11:21:23,996:INFO: - done.
2018-11-16 11:21:23,997:INFO: Creating the model...
2018-11-16 11:22:03,779:INFO: - done.
2018-11-16 11:22:03,779:INFO: Starting training for 10000 epoch(s)
2018-11-16 11:22:20,140:INFO: Epoch 1/10000
2018-11-16 11:26:37,755:INFO: Creating the datasets...
2018-11-16 11:26:41,753:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 11:26:42,031:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 11:26:42,071:INFO: - done.
2018-11-16 11:26:42,071:INFO: Creating the model...
2018-11-16 11:27:22,687:INFO: - done.
2018-11-16 11:27:22,687:INFO: Starting training for 10000 epoch(s)
2018-11-16 11:27:39,241:INFO: Epoch 1/10000
2018-11-16 11:29:21,101:INFO: Creating the datasets...
2018-11-16 11:29:25,507:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 11:29:25,797:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 11:29:25,849:INFO: - done.
2018-11-16 11:29:25,849:INFO: Creating the model...
2018-11-16 11:30:59,840:INFO: Creating the datasets...
2018-11-16 11:31:01,254:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-16 11:31:01,528:WARNING: From /home/rwee015/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-16 11:31:01,591:INFO: - done.
2018-11-16 11:31:01,591:INFO: Creating the model...
2018-11-16 11:31:41,519:INFO: - done.
2018-11-16 11:31:41,519:INFO: Starting training for 10000 epoch(s)
2018-11-16 11:31:58,248:INFO: Epoch 1/10000
2018-11-16 20:10:14,520:INFO: Creating the datasets...
2018-11-16 20:10:19,299:INFO: - done.
2018-11-16 20:10:19,300:INFO: Creating the model...
2018-11-16 20:11:51,728:INFO: Creating the datasets...
2018-11-16 20:11:58,911:INFO: - done.
2018-11-16 20:11:58,912:INFO: Creating the model...
2018-11-16 20:14:06,860:INFO: - done.
2018-11-16 20:14:06,861:INFO: Starting training for 10000 epoch(s)
2018-11-16 20:14:52,198:INFO: Epoch 1/10000
2018-11-16 20:22:36,082:INFO: Creating the datasets...
2018-11-16 20:22:45,667:INFO: - done.
2018-11-16 20:22:45,667:INFO: Creating the model...
2018-11-16 20:25:22,821:INFO: - done.
2018-11-16 20:25:22,822:INFO: Starting training for 10000 epoch(s)
2018-11-16 20:26:22,379:INFO: Epoch 1/10000
2018-11-18 19:45:17,519:INFO: Creating the datasets...
2018-11-18 19:45:24,075:INFO: - done.
2018-11-18 19:45:24,075:INFO: Creating the model...
2018-11-18 19:46:53,254:INFO: Cannot use 'model/rnn/while/ntf_cell/map/while/next_velocity/stat_speed' as input to 'Merge/MergeSummary' because 'model/rnn/while/ntf_cell/map/while/next_velocity/stat_speed' is in a while loop.

Merge/MergeSummary while context: None
model/rnn/while/ntf_cell/map/while/next_velocity/stat_speed while context: model/rnn/while/ntf_cell/map/while/while_context

Traceback for Merge/MergeSummary:
  File "train.py", line 87, in <module>
    train_model_spec = model_fn('train', train_inputs, params)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/model/model_fn.py", line 166, in model_fn
    model_spec['summary_op'] = tf.summary.merge_all()
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/summary/summary.py", line 317, in merge_all
    return merge(summary_ops, name=name)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/summary/summary.py", line 282, in merge
    val = _gen_logging_ops.merge_summary(inputs=inputs, name=name)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/gen_logging_ops.py", line 469, in merge_summary
    "MergeSummary", inputs=inputs, name=name)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 787, in _apply_op_helper
    op_def=op_def)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py", line 488, in new_func
    return func(*args, **kwargs)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 3272, in create_op
    op_def=op_def)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1768, in __init__
    self._traceback = tf_stack.extract_stack()

Traceback for model/rnn/while/ntf_cell/map/while/next_velocity/stat_speed:
  File "train.py", line 87, in <module>
    train_model_spec = model_fn('train', train_inputs, params)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/model/model_fn.py", line 75, in model_fn
    predicted_outputs = build_model(mode, inputs, params)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/model/model_fn.py", line 36, in build_model
    rnn_outputs, rnn_states  = tf.nn.dynamic_rnn(lstm_cell, input_batch, dtype=tf.float32)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 664, in dynamic_rnn
    dtype=dtype)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 868, in _dynamic_rnn_loop
    swap_memory=swap_memory)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py", line 3274, in while_loop
    return_same_structure)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py", line 2994, in BuildLoop
    pred, body, original_loop_vars, loop_vars, shape_invariants)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py", line 2929, in _BuildLoop
    body_result = body(*packed_vars_for_body)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py", line 3243, in <lambda>
    body = lambda i, lv: (i + 1, orig_body(*lv))
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 836, in _time_step
    (output, new_state) = call_cell()
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 822, in <lambda>
    call_cell = lambda: cell(input_t, state)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn_cell_impl.py", line 370, in __call__
    *args, **kwargs)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/layers/base.py", line 364, in __call__
    outputs = super(Layer, self).__call__(inputs, *args, **kwargs)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 769, in __call__
    outputs = self.call(inputs, *args, **kwargs)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/model/ntfCell.py", line 298, in call
    velocity = tf.map_fn(next_v,in_vars, dtype=tf.float32)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/functional_ops.py", line 460, in map_fn
    maximum_iterations=n)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py", line 3274, in while_loop
    return_same_structure)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py", line 2994, in BuildLoop
    pred, body, original_loop_vars, loop_vars, shape_invariants)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py", line 2929, in _BuildLoop
    body_result = body(*packed_vars_for_body)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py", line 3243, in <lambda>
    body = lambda i, lv: (i + 1, orig_body(*lv))
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/functional_ops.py", line 449, in compute
    packed_fn_values = fn(packed_values)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/model/ntfCell.py", line 292, in <lambda>
    next_v = lambda x: next_velocity(x)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/model/ntfCell.py", line 281, in next_velocity
    tf.summary.scalar('stat_speed', stat_speed)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/summary/summary.py", line 90, in scalar
    val = _gen_logging_ops.scalar_summary(tags=tag, values=tensor, name=scope)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/gen_logging_ops.py", line 624, in scalar_summary
    "ScalarSummary", tags=tags, values=values, name=name)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 787, in _apply_op_helper
    op_def=op_def)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py", line 488, in new_func
    return func(*args, **kwargs)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 3272, in create_op
    op_def=op_def)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1768, in __init__
    self._traceback = tf_stack.extract_stack()


2018-11-18 22:49:46,322:INFO: Creating the datasets...
2018-11-18 22:49:53,783:INFO: - done.
2018-11-18 22:49:53,784:INFO: Creating the model...
2018-11-18 22:51:19,093:INFO: Cannot use 'model/rnn/while/ntf_cell/density' as input to 'Merge/MergeSummary' because 'model/rnn/while/ntf_cell/density' is in a while loop.

Merge/MergeSummary while context: None
model/rnn/while/ntf_cell/density while context: model/rnn/while/while_context

Traceback for Merge/MergeSummary:
  File "train.py", line 87, in <module>
    train_model_spec = model_fn('train', train_inputs, params)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/model/model_fn.py", line 166, in model_fn
    model_spec['summary_op'] = tf.summary.merge_all()
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/summary/summary.py", line 317, in merge_all
    return merge(summary_ops, name=name)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/summary/summary.py", line 282, in merge
    val = _gen_logging_ops.merge_summary(inputs=inputs, name=name)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/gen_logging_ops.py", line 469, in merge_summary
    "MergeSummary", inputs=inputs, name=name)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 787, in _apply_op_helper
    op_def=op_def)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py", line 488, in new_func
    return func(*args, **kwargs)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 3272, in create_op
    op_def=op_def)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1768, in __init__
    self._traceback = tf_stack.extract_stack()

Traceback for model/rnn/while/ntf_cell/density:
  File "train.py", line 87, in <module>
    train_model_spec = model_fn('train', train_inputs, params)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/model/model_fn.py", line 75, in model_fn
    predicted_outputs = build_model(mode, inputs, params)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/model/model_fn.py", line 36, in build_model
    rnn_outputs, rnn_states  = tf.nn.dynamic_rnn(lstm_cell, input_batch, dtype=tf.float32)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 664, in dynamic_rnn
    dtype=dtype)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 868, in _dynamic_rnn_loop
    swap_memory=swap_memory)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py", line 3274, in while_loop
    return_same_structure)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py", line 2994, in BuildLoop
    pred, body, original_loop_vars, loop_vars, shape_invariants)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py", line 2929, in _BuildLoop
    body_result = body(*packed_vars_for_body)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py", line 3243, in <lambda>
    body = lambda i, lv: (i + 1, orig_body(*lv))
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 836, in _time_step
    (output, new_state) = call_cell()
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 822, in <lambda>
    call_cell = lambda: cell(input_t, state)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn_cell_impl.py", line 370, in __call__
    *args, **kwargs)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/layers/base.py", line 364, in __call__
    outputs = super(Layer, self).__call__(inputs, *args, **kwargs)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 769, in __call__
    outputs = self.call(inputs, *args, **kwargs)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/model/ntfCell.py", line 301, in call
    tf.summary.scalar('density', density)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/summary/summary.py", line 90, in scalar
    val = _gen_logging_ops.scalar_summary(tags=tag, values=tensor, name=scope)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/gen_logging_ops.py", line 624, in scalar_summary
    "ScalarSummary", tags=tags, values=values, name=name)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 787, in _apply_op_helper
    op_def=op_def)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py", line 488, in new_func
    return func(*args, **kwargs)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 3272, in create_op
    op_def=op_def)
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1768, in __init__
    self._traceback = tf_stack.extract_stack()


2018-11-18 23:49:34,355:INFO: Creating the datasets...
2018-11-18 23:49:39,596:INFO: - done.
2018-11-18 23:49:39,596:INFO: Creating the model...
2018-11-18 23:50:23,377:INFO: Creating the datasets...
2018-11-18 23:50:28,012:INFO: - done.
2018-11-18 23:50:28,012:INFO: Creating the model...
2018-11-19 00:17:39,706:INFO: Creating the datasets...
2018-11-19 00:17:45,272:INFO: - done.
2018-11-19 00:17:45,272:INFO: Creating the model...
2018-11-19 00:19:33,660:INFO: - done.
2018-11-19 00:19:33,661:INFO: Starting training for 10000 epoch(s)
2018-11-19 00:21:31,083:INFO: Creating the datasets...
2018-11-19 00:21:36,335:INFO: - done.
2018-11-19 00:21:36,335:INFO: Creating the model...
2018-11-19 00:22:52,342:INFO: Creating the datasets...
2018-11-19 00:22:58,114:INFO: - done.
2018-11-19 00:22:58,115:INFO: Creating the model...
2018-11-19 00:23:55,851:INFO: Creating the datasets...
2018-11-19 00:24:00,254:INFO: - done.
2018-11-19 00:24:00,254:INFO: Creating the model...
2018-11-19 00:25:11,300:INFO: Creating the datasets...
2018-11-19 00:25:15,331:INFO: - done.
2018-11-19 00:25:15,332:INFO: Creating the model...
2018-11-19 00:26:46,211:INFO: - done.
2018-11-19 00:26:46,211:INFO: Starting training for 10000 epoch(s)
2018-11-19 00:27:29,332:INFO: Epoch 1/10000
2018-11-19 00:30:53,128:INFO: Creating the datasets...
2018-11-19 00:30:58,549:INFO: - done.
2018-11-19 00:30:58,550:INFO: Creating the model...
2018-11-19 00:32:35,967:INFO: - done.
2018-11-19 00:32:35,968:INFO: Starting training for 10000 epoch(s)
2018-11-19 00:33:45,417:INFO: Epoch 1/10000
2018-11-19 14:13:33,592:INFO: Creating the datasets...
2018-11-19 14:13:38,207:INFO: - done.
2018-11-19 14:13:38,208:INFO: Creating the model...
2018-11-19 14:14:57,069:INFO: - done.
2018-11-19 14:14:57,071:INFO: Starting training for 10000 epoch(s)
2018-11-19 14:15:34,098:INFO: Epoch 1/10000
2018-11-19 18:39:02,476:INFO: Creating the datasets...
2018-11-19 18:39:08,643:INFO: - done.
2018-11-19 18:39:08,643:INFO: Creating the model...
2018-11-19 18:41:26,851:INFO: - done.
2018-11-19 18:41:26,857:INFO: Starting training for 10000 epoch(s)
2018-11-19 18:42:25,640:INFO: Epoch 1/10000
2018-11-21 16:27:13,710:INFO: Creating the datasets...
2018-11-21 16:27:18,543:INFO: - done.
2018-11-21 16:27:18,543:INFO: Creating the model...
2018-11-21 16:27:33,014:INFO: Creating the datasets...
2018-11-21 16:27:37,671:INFO: - done.
2018-11-21 16:27:37,671:INFO: Creating the model...
2018-11-21 16:30:55,358:INFO: Creating the datasets...
2018-11-21 16:31:00,359:INFO: - done.
2018-11-21 16:31:00,359:INFO: Creating the model...
2018-11-21 16:32:41,590:INFO: - done.
2018-11-21 16:32:41,592:INFO: Starting training for 10000 epoch(s)
2018-11-21 16:33:40,098:INFO: Epoch 1/10000
2018-11-21 16:54:29,345:INFO: Creating the datasets...
2018-11-21 16:54:43,206:INFO: - done.
2018-11-21 16:54:43,207:INFO: Creating the model...
2018-11-21 16:58:29,059:INFO: - done.
2018-11-21 16:58:29,065:INFO: Starting training for 10000 epoch(s)
2018-11-21 17:01:03,454:INFO: Epoch 1/10000
2018-11-21 17:09:02,420:INFO: Creating the datasets...
2018-11-21 17:09:09,087:INFO: - done.
2018-11-21 17:09:09,087:INFO: Creating the model...
2018-11-21 17:10:59,823:INFO: - done.
2018-11-21 17:10:59,825:INFO: Starting training for 10000 epoch(s)
2018-11-21 17:12:25,934:INFO: Epoch 1/10000
2018-11-21 17:17:55,867:INFO: Creating the datasets...
2018-11-21 17:18:00,493:INFO: - done.
2018-11-21 17:18:00,494:INFO: Creating the model...
2018-11-21 17:18:33,493:INFO: Creating the datasets...
2018-11-21 17:18:37,318:INFO: - done.
2018-11-21 17:18:37,318:INFO: Creating the model...
2018-11-21 17:20:11,570:INFO: - done.
2018-11-21 17:20:11,571:INFO: Starting training for 10000 epoch(s)
2018-11-21 17:21:00,852:INFO: Epoch 1/10000
2018-11-21 17:25:35,994:INFO: Creating the datasets...
2018-11-21 17:25:40,774:INFO: - done.
2018-11-21 17:25:40,774:INFO: Creating the model...
2018-11-21 17:28:40,905:INFO: Creating the datasets...
2018-11-21 17:28:47,234:INFO: - done.
2018-11-21 17:28:47,235:INFO: Creating the model...
2018-11-21 17:29:19,259:INFO: Creating the datasets...
2018-11-21 17:29:24,329:INFO: - done.
2018-11-21 17:29:24,329:INFO: Creating the model...
2018-11-21 17:30:40,835:INFO: Creating the datasets...
2018-11-21 17:30:46,144:INFO: - done.
2018-11-21 17:30:46,144:INFO: Creating the model...
2018-11-21 17:31:08,823:INFO: Creating the datasets...
2018-11-21 17:31:14,141:INFO: - done.
2018-11-21 17:31:14,141:INFO: Creating the model...
2018-11-21 17:32:56,214:INFO: Creating the datasets...
2018-11-21 17:33:01,020:INFO: - done.
2018-11-21 17:33:01,020:INFO: Creating the model...
2018-11-21 17:35:07,412:INFO: Creating the datasets...
2018-11-21 17:35:12,633:INFO: - done.
2018-11-21 17:35:12,634:INFO: Creating the model...
2018-11-21 17:35:44,274:INFO: Creating the datasets...
2018-11-21 17:35:48,517:INFO: - done.
2018-11-21 17:35:48,517:INFO: Creating the model...
2018-11-21 17:36:03,889:INFO: Creating the datasets...
2018-11-21 17:36:09,621:INFO: - done.
2018-11-21 17:36:09,622:INFO: Creating the model...
2018-11-21 17:36:25,871:INFO: Creating the datasets...
2018-11-21 17:36:31,694:INFO: - done.
2018-11-21 17:36:31,694:INFO: Creating the model...
2018-11-21 17:37:52,716:INFO: - done.
2018-11-21 17:37:52,716:INFO: Starting training for 10000 epoch(s)
2018-11-21 17:38:30,714:INFO: Epoch 1/10000
2018-11-21 17:42:01,744:INFO: Creating the datasets...
2018-11-21 17:42:07,197:INFO: - done.
2018-11-21 17:42:07,197:INFO: Creating the model...
2018-11-21 17:43:12,935:INFO: Creating the datasets...
2018-11-21 17:43:18,125:INFO: - done.
2018-11-21 17:43:18,126:INFO: Creating the model...
2018-11-21 17:44:41,896:INFO: - done.
2018-11-21 17:44:41,898:INFO: Starting training for 10000 epoch(s)
2018-11-21 17:45:19,100:INFO: Epoch 1/10000
2018-11-21 17:52:57,290:INFO: Creating the datasets...
2018-11-21 17:53:03,248:INFO: - done.
2018-11-21 17:53:03,248:INFO: Creating the model...
2018-11-21 17:54:41,168:INFO: - done.
2018-11-21 17:54:41,169:INFO: Starting training for 10000 epoch(s)
2018-11-21 17:55:20,816:INFO: Epoch 1/10000
2018-11-21 19:23:47,368:INFO: Creating the datasets...
2018-11-21 19:23:52,199:INFO: - done.
2018-11-21 19:23:52,200:INFO: Creating the model...
2018-11-21 19:25:10,525:INFO: - done.
2018-11-21 19:25:10,526:INFO: Starting training for 10000 epoch(s)
2018-11-21 19:26:15,381:INFO: Epoch 1/10000
2018-11-21 19:36:21,792:INFO: Creating the datasets...
2018-11-21 19:36:26,503:INFO: - done.
2018-11-21 19:36:26,503:INFO: Creating the model...
2018-11-21 19:37:26,996:INFO: Creating the datasets...
2018-11-21 19:37:36,571:INFO: - done.
2018-11-21 19:37:36,571:INFO: Creating the model...
2018-11-21 19:39:35,597:INFO: - done.
2018-11-21 19:39:35,597:INFO: Starting training for 10000 epoch(s)
2018-11-21 19:40:21,940:INFO: Epoch 1/10000
2018-11-22 09:50:16,195:INFO: Creating the datasets...
2018-11-22 09:50:23,714:INFO: - done.
2018-11-22 09:50:23,714:INFO: Creating the model...
2018-11-22 09:51:44,193:INFO: - done.
2018-11-22 09:51:44,194:INFO: Starting training for 10000 epoch(s)
2018-11-22 09:52:20,344:INFO: Epoch 1/10000
2018-11-22 11:12:47,546:INFO: Creating the datasets...
2018-11-22 11:12:52,717:INFO: - done.
2018-11-22 11:12:52,717:INFO: Creating the model...
2018-11-22 11:14:27,586:INFO: - done.
2018-11-22 11:14:27,586:INFO: Starting training for 10000 epoch(s)
2018-11-22 11:15:08,499:INFO: Epoch 1/10000
2018-11-22 11:19:18,956:INFO: Creating the datasets...
2018-11-22 11:19:24,403:INFO: - done.
2018-11-22 11:19:24,403:INFO: Creating the model...
2018-11-22 11:20:17,663:INFO: Creating the datasets...
2018-11-22 11:20:22,060:INFO: - done.
2018-11-22 11:20:22,060:INFO: Creating the model...
2018-11-22 11:20:30,813:INFO: Creating the datasets...
2018-11-22 11:20:35,327:INFO: - done.
2018-11-22 11:20:35,328:INFO: Creating the model...
2018-11-22 11:22:03,131:INFO: - done.
2018-11-22 11:22:03,132:INFO: Starting training for 10000 epoch(s)
2018-11-22 11:22:42,186:INFO: Epoch 1/10000
2018-11-22 11:34:53,136:INFO: Creating the datasets...
2018-11-22 11:35:00,596:INFO: - done.
2018-11-22 11:35:00,597:INFO: Creating the model...
2018-11-22 13:21:42,093:INFO: Creating the datasets...
2018-11-22 13:21:50,993:INFO: - done.
2018-11-22 13:21:50,994:INFO: Creating the model...
2018-11-22 13:21:51,299:ERROR: ==================================
Object was never used (type <class 'tensorflow.python.ops.tensor_array_ops.TensorArray'>):
<tensorflow.python.ops.tensor_array_ops.TensorArray object at 0x129bbfeb8>
If you want to mark it as used call its "mark_used()" method.
It was originally created here:
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 791, in <genexpr>
    for ta, input_ in zip(input_ta, flat_input))  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/util/tf_should_use.py", line 189, in wrapped
    return _add_should_use_warning(fn(*args, **kwargs))
==================================
2018-11-22 13:21:51,301:ERROR: ==================================
Object was never used (type <class 'tensorflow.python.ops.tensor_array_ops.TensorArray'>):
<tensorflow.python.ops.tensor_array_ops.TensorArray object at 0x129bbffd0>
If you want to mark it as used call its "mark_used()" method.
It was originally created here:
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 791, in <genexpr>
    for ta, input_ in zip(input_ta, flat_input))  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/util/tf_should_use.py", line 189, in wrapped
    return _add_should_use_warning(fn(*args, **kwargs))  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/tensor_array_ops.py", line 907, in unstack
    return self._implementation.unstack(value, name=name)  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/util/tf_should_use.py", line 189, in wrapped
    return _add_should_use_warning(fn(*args, **kwargs))
==================================
2018-11-22 13:21:51,301:ERROR: ==================================
Object was never used (type <class 'tensorflow.python.ops.tensor_array_ops.TensorArray'>):
<tensorflow.python.ops.tensor_array_ops.TensorArray object at 0x129bbfc18>
If you want to mark it as used call its "mark_used()" method.
It was originally created here:
  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/rnn.py", line 791, in <genexpr>
    for ta, input_ in zip(input_ta, flat_input))  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/util/tf_should_use.py", line 189, in wrapped
    return _add_should_use_warning(fn(*args, **kwargs))  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/tensor_array_ops.py", line 907, in unstack
    return self._implementation.unstack(value, name=name)  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/util/tf_should_use.py", line 189, in wrapped
    return _add_should_use_warning(fn(*args, **kwargs))  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/ops/tensor_array_ops.py", line 331, in unstack
    indices=math_ops.range(0, num_elements), value=value, name=name)  File "/Users/R/Google Drive (rwee015@aucklanduni.ac.nz)/Research/git/ntfm/venv/lib/python3.6/site-packages/tensorflow/python/util/tf_should_use.py", line 189, in wrapped
    return _add_should_use_warning(fn(*args, **kwargs))
==================================
2018-11-22 13:21:55,709:INFO: Creating the datasets...
2018-11-22 13:22:00,165:INFO: - done.
2018-11-22 13:22:00,165:INFO: Creating the model...
2018-11-22 13:23:54,892:INFO: Creating the datasets...
2018-11-22 13:23:59,655:INFO: - done.
2018-11-22 13:23:59,655:INFO: Creating the model...
2018-11-22 13:24:51,063:INFO: Creating the datasets...
2018-11-22 13:24:55,773:INFO: - done.
2018-11-22 13:24:55,773:INFO: Creating the model...
2018-11-22 13:25:08,521:INFO: Creating the datasets...
2018-11-22 13:25:13,685:INFO: - done.
2018-11-22 13:25:13,685:INFO: Creating the model...
2018-11-22 13:25:20,922:INFO: Creating the datasets...
2018-11-22 13:25:26,443:INFO: - done.
2018-11-22 13:25:26,443:INFO: Creating the model...
2018-11-22 13:25:30,004:INFO: Creating the datasets...
2018-11-22 13:25:33,934:INFO: - done.
2018-11-22 13:25:33,934:INFO: Creating the model...
2018-11-22 13:27:03,116:INFO: Creating the datasets...
2018-11-22 13:27:08,131:INFO: - done.
2018-11-22 13:27:08,131:INFO: Creating the model...
2018-11-22 13:28:38,359:INFO: - done.
2018-11-22 13:28:38,360:INFO: Starting training for 10000 epoch(s)
2018-11-22 13:29:16,031:INFO: Epoch 1/10000
2018-11-22 13:32:45,341:INFO: Creating the datasets...
2018-11-22 13:32:50,536:INFO: - done.
2018-11-22 13:32:50,536:INFO: Creating the model...
2018-11-22 13:33:34,384:INFO: Creating the datasets...
2018-11-22 13:33:38,243:INFO: - done.
2018-11-22 13:33:38,244:INFO: Creating the model...
2018-11-22 13:34:00,451:INFO: Creating the datasets...
2018-11-22 13:34:04,297:INFO: - done.
2018-11-22 13:34:04,297:INFO: Creating the model...
2018-11-22 13:35:43,750:INFO: Creating the datasets...
2018-11-22 13:35:48,355:INFO: - done.
2018-11-22 13:35:48,355:INFO: Creating the model...
2018-11-22 13:36:01,256:INFO: Creating the datasets...
2018-11-22 13:36:05,208:INFO: - done.
2018-11-22 13:36:05,209:INFO: Creating the model...
2018-11-22 13:36:26,254:INFO: Creating the datasets...
2018-11-22 13:36:30,248:INFO: - done.
2018-11-22 13:36:30,248:INFO: Creating the model...
2018-11-22 13:36:38,761:INFO: Creating the datasets...
2018-11-22 13:36:43,451:INFO: - done.
2018-11-22 13:36:43,451:INFO: Creating the model...
2018-11-22 13:36:59,397:INFO: Creating the datasets...
2018-11-22 13:37:03,493:INFO: - done.
2018-11-22 13:37:03,493:INFO: Creating the model...
2018-11-22 13:37:18,142:INFO: Creating the datasets...
2018-11-22 13:37:22,073:INFO: - done.
2018-11-22 13:37:22,073:INFO: Creating the model...
2018-11-22 13:37:42,843:INFO: Creating the datasets...
2018-11-22 13:37:46,699:INFO: - done.
2018-11-22 13:37:46,699:INFO: Creating the model...
2018-11-22 13:39:01,491:INFO: Creating the datasets...
2018-11-22 13:39:05,299:INFO: - done.
2018-11-22 13:39:05,299:INFO: Creating the model...
2018-11-22 13:40:31,213:INFO: - done.
2018-11-22 13:40:31,214:INFO: Starting training for 10000 epoch(s)
2018-11-22 13:41:07,501:INFO: Epoch 1/10000
2018-11-22 13:44:50,809:INFO: Creating the datasets...
2018-11-22 13:44:56,932:INFO: - done.
2018-11-22 13:44:56,932:INFO: Creating the model...
2018-11-22 13:46:43,139:INFO: - done.
2018-11-22 13:46:43,139:INFO: Starting training for 10000 epoch(s)
2018-11-22 13:47:33,589:INFO: Epoch 1/10000
2018-11-22 13:50:16,473:INFO: Creating the datasets...
2018-11-22 13:50:21,199:INFO: - done.
2018-11-22 13:50:21,199:INFO: Creating the model...
2018-11-22 13:50:50,410:INFO: Creating the datasets...
2018-11-22 13:50:54,332:INFO: - done.
2018-11-22 13:50:54,332:INFO: Creating the model...
2018-11-22 13:51:08,279:INFO: Creating the datasets...
2018-11-22 13:51:12,330:INFO: - done.
2018-11-22 13:51:12,330:INFO: Creating the model...
2018-11-22 13:53:11,069:INFO: - done.
2018-11-22 13:53:11,069:INFO: Starting training for 10000 epoch(s)
2018-11-22 13:54:08,748:INFO: Epoch 1/10000
2018-11-22 13:59:10,422:INFO: Creating the datasets...
2018-11-22 13:59:16,087:INFO: - done.
2018-11-22 13:59:16,087:INFO: Creating the model...
2018-11-22 13:59:37,424:INFO: Creating the datasets...
2018-11-22 13:59:41,609:INFO: - done.
2018-11-22 13:59:41,610:INFO: Creating the model...
2018-11-22 14:01:46,548:INFO: - done.
2018-11-22 14:01:46,548:INFO: Starting training for 10000 epoch(s)
2018-11-22 14:02:50,872:INFO: Epoch 1/10000
2018-11-22 14:11:29,257:INFO: Creating the datasets...
2018-11-22 14:11:34,050:INFO: - done.
2018-11-22 14:11:34,050:INFO: Creating the model...
2018-11-22 14:12:08,387:INFO: Creating the datasets...
2018-11-22 14:12:12,268:INFO: - done.
2018-11-22 14:12:12,268:INFO: Creating the model...
2018-11-22 14:13:07,299:INFO: Creating the datasets...
2018-11-22 14:13:11,291:INFO: - done.
2018-11-22 14:13:11,291:INFO: Creating the model...
2018-11-22 14:38:40,334:INFO: Creating the datasets...
2018-11-22 14:38:45,779:INFO: - done.
2018-11-22 14:38:45,779:INFO: Creating the model...
2018-11-22 14:40:32,571:INFO: - done.
2018-11-22 14:40:32,572:INFO: Starting training for 10000 epoch(s)
2018-11-22 14:41:22,039:INFO: Epoch 1/10000
2018-11-22 14:45:20,664:INFO: Creating the datasets...
2018-11-22 14:45:26,165:INFO: - done.
2018-11-22 14:45:26,166:INFO: Creating the model...
2018-11-22 14:46:16,037:INFO: Creating the datasets...
2018-11-22 14:46:20,794:INFO: - done.
2018-11-22 14:46:20,794:INFO: Creating the model...
2018-11-22 14:49:04,809:INFO: Creating the datasets...
2018-11-22 14:49:10,493:INFO: - done.
2018-11-22 14:49:10,494:INFO: Creating the model...
2018-11-22 14:50:37,451:INFO: Creating the datasets...
2018-11-22 14:50:41,305:INFO: - done.
2018-11-22 14:50:41,305:INFO: Creating the model...
2018-11-22 14:51:28,421:INFO: Creating the datasets...
2018-11-22 14:51:34,279:INFO: - done.
2018-11-22 14:51:34,279:INFO: Creating the model...
2018-11-22 14:51:40,884:INFO: Creating the datasets...
2018-11-22 14:51:44,947:INFO: - done.
2018-11-22 14:51:44,947:INFO: Creating the model...
2018-11-22 14:52:58,250:INFO: Creating the datasets...
2018-11-22 14:53:02,285:INFO: - done.
2018-11-22 14:53:02,285:INFO: Creating the model...
2018-11-22 14:54:57,792:INFO: - done.
2018-11-22 14:54:57,793:INFO: Starting training for 10000 epoch(s)
2018-11-22 14:55:42,878:INFO: Epoch 1/10000
2018-11-22 15:04:49,936:INFO: Creating the datasets...
2018-11-22 15:04:55,970:INFO: - done.
2018-11-22 15:04:55,970:INFO: Creating the model...
2018-11-22 15:06:52,056:INFO: - done.
2018-11-22 15:06:52,057:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:07:40,264:INFO: Epoch 1/10000
2018-11-22 15:22:30,103:INFO: Creating the datasets...
2018-11-22 15:22:34,790:INFO: - done.
2018-11-22 15:22:34,790:INFO: Creating the model...
2018-11-22 15:23:03,945:INFO: Creating the datasets...
2018-11-22 15:23:07,959:INFO: - done.
2018-11-22 15:23:07,959:INFO: Creating the model...
2018-11-22 15:25:11,115:INFO: - done.
2018-11-22 15:25:11,115:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:26:03,797:INFO: Epoch 1/10000
2018-11-22 15:30:17,526:INFO: Creating the datasets...
2018-11-22 15:30:22,999:INFO: - done.
2018-11-22 15:30:23,000:INFO: Creating the model...
2018-11-22 15:32:29,594:INFO: - done.
2018-11-22 15:32:29,594:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:33:29,773:INFO: Epoch 1/10000
2018-11-22 15:38:26,121:INFO: Creating the datasets...
2018-11-22 15:38:32,259:INFO: - done.
2018-11-22 15:38:32,259:INFO: Creating the model...
2018-11-22 15:38:37,154:INFO: - done.
2018-11-22 15:38:37,155:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:38:40,062:INFO: Epoch 1/10000
2018-11-22 15:40:00,327:INFO: Creating the datasets...
2018-11-22 15:40:05,342:INFO: - done.
2018-11-22 15:40:05,342:INFO: Creating the model...
2018-11-22 15:40:09,548:INFO: - done.
2018-11-22 15:40:09,559:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:40:11,999:INFO: Epoch 1/10000
2018-11-22 15:40:40,289:INFO: Creating the datasets...
2018-11-22 15:40:46,537:INFO: - done.
2018-11-22 15:40:46,537:INFO: Creating the model...
2018-11-22 15:40:53,580:INFO: - done.
2018-11-22 15:40:53,580:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:40:57,708:INFO: Epoch 1/10000
2018-11-22 15:44:55,252:INFO: Creating the datasets...
2018-11-22 15:44:59,966:INFO: - done.
2018-11-22 15:44:59,966:INFO: Creating the model...
2018-11-22 15:45:04,025:INFO: - done.
2018-11-22 15:45:04,025:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:45:06,541:INFO: Epoch 1/10000
2018-11-22 15:46:12,264:INFO: Creating the datasets...
2018-11-22 15:46:17,225:INFO: - done.
2018-11-22 15:46:17,225:INFO: Creating the model...
2018-11-22 15:46:21,321:INFO: - done.
2018-11-22 15:46:21,322:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:46:23,738:INFO: Epoch 1/10000
2018-11-22 15:47:47,793:INFO: Creating the datasets...
2018-11-22 15:47:53,043:INFO: - done.
2018-11-22 15:47:53,044:INFO: Creating the model...
2018-11-22 15:47:58,095:INFO: - done.
2018-11-22 15:47:58,095:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:48:00,640:INFO: Epoch 1/10000
2018-11-22 15:49:16,444:INFO: Creating the datasets...
2018-11-22 15:49:22,358:INFO: - done.
2018-11-22 15:49:22,358:INFO: Creating the model...
2018-11-22 15:49:27,619:INFO: - done.
2018-11-22 15:49:27,619:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:49:30,274:INFO: Epoch 1/10000
2018-11-22 15:51:09,130:INFO: Creating the datasets...
2018-11-22 15:51:14,954:INFO: - done.
2018-11-22 15:51:14,954:INFO: Creating the model...
2018-11-22 15:51:19,312:INFO: - done.
2018-11-22 15:51:19,312:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:51:21,822:INFO: Epoch 1/10000
2018-11-22 15:56:24,197:INFO: Creating the datasets...
2018-11-22 15:56:30,269:INFO: - done.
2018-11-22 15:56:30,269:INFO: Creating the model...
2018-11-22 15:56:51,112:INFO: Creating the datasets...
2018-11-22 15:56:55,799:INFO: - done.
2018-11-22 15:56:55,799:INFO: Creating the model...
2018-11-22 15:56:57,403:INFO: - done.
2018-11-22 15:56:57,403:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:56:58,607:INFO: Epoch 1/10000
2018-11-22 15:58:31,567:INFO: Creating the datasets...
2018-11-22 15:58:36,993:INFO: - done.
2018-11-22 15:58:36,993:INFO: Creating the model...
2018-11-22 15:58:38,586:INFO: - done.
2018-11-22 15:58:38,586:INFO: Starting training for 10000 epoch(s)
2018-11-22 15:58:39,831:INFO: Epoch 1/10000
2018-11-22 15:59:52,579:INFO: Creating the datasets...
2018-11-22 15:59:57,280:INFO: - done.
2018-11-22 15:59:57,280:INFO: Creating the model...
2018-11-22 16:00:01,679:INFO: - done.
2018-11-22 16:00:01,679:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:00:04,176:INFO: Epoch 1/10000
2018-11-22 16:01:20,501:INFO: Creating the datasets...
2018-11-22 16:01:27,233:INFO: - done.
2018-11-22 16:01:27,233:INFO: Creating the model...
2018-11-22 16:02:27,141:INFO: Creating the datasets...
2018-11-22 16:02:31,676:INFO: - done.
2018-11-22 16:02:31,677:INFO: Creating the model...
2018-11-22 16:02:33,517:INFO: - done.
2018-11-22 16:02:33,517:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:02:34,811:INFO: Epoch 1/10000
2018-11-22 16:03:05,912:INFO: Creating the datasets...
2018-11-22 16:03:10,916:INFO: - done.
2018-11-22 16:03:10,916:INFO: Creating the model...
2018-11-22 16:03:14,744:INFO: - done.
2018-11-22 16:03:14,744:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:03:17,027:INFO: Epoch 1/10000
2018-11-22 16:07:04,759:INFO: Creating the datasets...
2018-11-22 16:07:09,471:INFO: - done.
2018-11-22 16:07:09,472:INFO: Creating the model...
2018-11-22 16:07:12,870:INFO: - done.
2018-11-22 16:07:12,870:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:07:14,956:INFO: Epoch 1/10000
2018-11-22 16:07:57,785:INFO: Creating the datasets...
2018-11-22 16:08:02,446:INFO: - done.
2018-11-22 16:08:02,446:INFO: Creating the model...
2018-11-22 16:08:05,887:INFO: - done.
2018-11-22 16:08:05,887:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:08:07,940:INFO: Epoch 1/10000
2018-11-22 16:08:46,294:INFO: Creating the datasets...
2018-11-22 16:08:50,703:INFO: - done.
2018-11-22 16:08:50,703:INFO: Creating the model...
2018-11-22 16:08:54,090:INFO: - done.
2018-11-22 16:08:54,090:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:08:56,102:INFO: Epoch 1/10000
2018-11-22 16:09:40,292:INFO: Creating the datasets...
2018-11-22 16:09:44,756:INFO: - done.
2018-11-22 16:09:44,756:INFO: Creating the model...
2018-11-22 16:09:48,427:INFO: - done.
2018-11-22 16:09:48,428:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:09:50,600:INFO: Epoch 1/10000
2018-11-22 16:11:01,751:INFO: Creating the datasets...
2018-11-22 16:11:07,030:INFO: - done.
2018-11-22 16:11:07,030:INFO: Creating the model...
2018-11-22 16:11:10,868:INFO: - done.
2018-11-22 16:11:10,868:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:11:13,285:INFO: Epoch 1/10000
2018-11-22 16:13:05,336:INFO: Creating the datasets...
2018-11-22 16:13:09,836:INFO: - done.
2018-11-22 16:13:09,837:INFO: Creating the model...
2018-11-22 16:14:08,156:INFO: Creating the datasets...
2018-11-22 16:14:13,627:INFO: - done.
2018-11-22 16:14:13,627:INFO: Creating the model...
2018-11-22 16:14:18,065:INFO: - done.
2018-11-22 16:14:18,065:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:14:20,230:INFO: Epoch 1/10000
2018-11-22 16:16:22,350:INFO: Creating the datasets...
2018-11-22 16:16:27,224:INFO: - done.
2018-11-22 16:16:27,224:INFO: Creating the model...
2018-11-22 16:16:30,392:INFO: - done.
2018-11-22 16:16:30,392:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:16:32,345:INFO: Epoch 1/10000
2018-11-22 16:18:03,430:INFO: Creating the datasets...
2018-11-22 16:18:08,243:INFO: - done.
2018-11-22 16:18:08,243:INFO: Creating the model...
2018-11-22 16:18:11,431:INFO: - done.
2018-11-22 16:18:11,431:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:18:13,250:INFO: Epoch 1/10000
2018-11-22 16:20:42,888:INFO: Creating the datasets...
2018-11-22 16:20:47,594:INFO: - done.
2018-11-22 16:20:47,594:INFO: Creating the model...
2018-11-22 16:20:50,796:INFO: - done.
2018-11-22 16:20:50,796:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:20:52,732:INFO: Epoch 1/10000
2018-11-22 16:23:57,340:INFO: Creating the datasets...
2018-11-22 16:24:01,880:INFO: - done.
2018-11-22 16:24:01,880:INFO: Creating the model...
2018-11-22 16:24:05,136:INFO: - done.
2018-11-22 16:24:05,136:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:24:07,055:INFO: Epoch 1/10000
2018-11-22 16:24:48,493:INFO: Creating the datasets...
2018-11-22 16:24:52,933:INFO: - done.
2018-11-22 16:24:52,934:INFO: Creating the model...
2018-11-22 16:24:56,060:INFO: - done.
2018-11-22 16:24:56,060:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:24:57,893:INFO: Epoch 1/10000
2018-11-22 16:25:18,526:INFO: Creating the datasets...
2018-11-22 16:25:22,439:INFO: - done.
2018-11-22 16:25:22,439:INFO: Creating the model...
2018-11-22 16:25:25,582:INFO: - done.
2018-11-22 16:25:25,582:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:25:27,434:INFO: Epoch 1/10000
2018-11-22 16:47:58,777:INFO: Creating the datasets...
2018-11-22 16:48:01,405:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-22 16:48:01,726:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-22 16:48:01,775:INFO: - done.
2018-11-22 16:48:01,776:INFO: Creating the model...
2018-11-22 16:48:03,702:INFO: - done.
2018-11-22 16:48:03,702:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:48:03,822:INFO: Restoring parameters from experiments/last_weights
2018-11-22 16:48:03,855:INFO: Restoring parameters from experiments/last_weights/after-epoch-1
2018-11-22 16:48:04,645:INFO: Epoch 2/10001
2018-11-22 16:52:56,313:INFO: - Train metrics: accuracy: 0.024 ; loss: 1536.644
2018-11-22 16:53:36,951:INFO: - Eval metrics: accuracy: 0.033 ; loss: 1443.807
2018-11-22 16:55:41,002:INFO: Creating the datasets...
2018-11-22 16:55:42,889:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-22 16:55:43,208:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-22 16:55:43,257:INFO: - done.
2018-11-22 16:55:43,257:INFO: Creating the model...
2018-11-22 16:55:45,223:INFO: - done.
2018-11-22 16:55:45,223:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:55:46,196:INFO: Epoch 1/10000
2018-11-22 16:58:45,541:INFO: Creating the datasets...
2018-11-22 16:58:47,292:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-22 16:58:47,607:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-22 16:58:47,654:INFO: - done.
2018-11-22 16:58:47,654:INFO: Creating the model...
2018-11-22 16:58:49,586:INFO: - done.
2018-11-22 16:58:49,586:INFO: Starting training for 10000 epoch(s)
2018-11-22 16:58:50,536:INFO: Epoch 1/10000
2018-11-22 17:03:52,335:INFO: Creating the datasets...
2018-11-22 17:03:54,127:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-22 17:03:54,451:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-22 17:03:54,499:INFO: - done.
2018-11-22 17:03:54,500:INFO: Creating the model...
2018-11-22 17:03:56,373:INFO: - done.
2018-11-22 17:03:56,373:INFO: Starting training for 10000 epoch(s)
2018-11-22 17:03:57,254:INFO: Epoch 1/10000
2018-11-22 17:08:37,202:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.708
2018-11-22 17:09:16,559:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.276
2018-11-22 17:09:17,345:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-22 17:09:17,346:INFO: Epoch 2/10000
2018-11-22 17:13:54,518:INFO: - Train metrics: accuracy: 0.005 ; loss: 1556.605
2018-11-22 17:14:33,334:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1474.222
2018-11-22 17:14:33,975:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-22 17:14:33,975:INFO: Epoch 3/10000
2018-11-22 17:19:08,792:INFO: - Train metrics: accuracy: 0.006 ; loss: 1555.507
2018-11-22 17:19:47,793:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1473.169
2018-11-22 17:19:48,428:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-22 17:19:48,429:INFO: Epoch 4/10000
2018-11-22 17:24:23,002:INFO: - Train metrics: accuracy: 0.007 ; loss: 1554.386
2018-11-22 17:25:02,161:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1472.081
2018-11-22 17:25:02,837:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-22 17:25:02,838:INFO: Epoch 5/10000
2018-11-22 17:29:39,173:INFO: - Train metrics: accuracy: 0.008 ; loss: 1553.223
2018-11-22 17:30:18,017:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1470.959
2018-11-22 17:30:18,653:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-22 17:30:18,654:INFO: Epoch 6/10000
2018-11-22 17:34:54,816:INFO: - Train metrics: accuracy: 0.009 ; loss: 1552.013
2018-11-22 17:35:34,123:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1469.776
2018-11-22 17:35:34,759:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-22 17:35:34,760:INFO: Epoch 7/10000
2018-11-22 17:40:12,255:INFO: - Train metrics: accuracy: 0.010 ; loss: 1550.747
2018-11-22 17:40:51,396:INFO: - Eval metrics: accuracy: 0.010 ; loss: 1468.507
2018-11-22 17:40:52,043:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-22 17:40:52,044:INFO: Epoch 8/10000
2018-11-22 17:45:28,451:INFO: - Train metrics: accuracy: 0.011 ; loss: 1549.437
2018-11-22 17:46:07,902:INFO: - Eval metrics: accuracy: 0.012 ; loss: 1467.161
2018-11-22 17:46:08,683:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-22 17:46:08,702:INFO: Epoch 9/10000
2018-11-22 17:50:46,187:INFO: - Train metrics: accuracy: 0.013 ; loss: 1548.064
2018-11-22 17:51:25,488:INFO: - Eval metrics: accuracy: 0.013 ; loss: 1465.755
2018-11-22 17:51:26,117:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-22 17:51:26,117:INFO: Epoch 10/10000
2018-11-22 17:56:03,784:INFO: - Train metrics: accuracy: 0.014 ; loss: 1546.618
2018-11-22 17:56:43,063:INFO: - Eval metrics: accuracy: 0.015 ; loss: 1464.282
2018-11-22 17:56:43,719:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-22 17:56:43,720:INFO: Epoch 11/10000
2018-11-22 18:01:21,275:INFO: - Train metrics: accuracy: 0.015 ; loss: 1545.085
2018-11-22 18:02:00,455:INFO: - Eval metrics: accuracy: 0.016 ; loss: 1462.717
2018-11-22 18:02:01,248:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-22 18:02:01,249:INFO: Epoch 12/10000
2018-11-22 18:06:36,007:INFO: - Train metrics: accuracy: 0.017 ; loss: 1543.459
2018-11-22 18:07:15,156:INFO: - Eval metrics: accuracy: 0.018 ; loss: 1461.044
2018-11-22 18:07:15,779:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-22 18:07:15,779:INFO: Epoch 13/10000
2018-11-22 18:11:48,729:INFO: - Train metrics: accuracy: 0.019 ; loss: 1541.743
2018-11-22 18:12:27,901:INFO: - Eval metrics: accuracy: 0.019 ; loss: 1459.263
2018-11-22 18:12:28,542:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-22 18:12:28,543:INFO: Epoch 14/10000
2018-11-22 18:17:00,670:INFO: - Train metrics: accuracy: 0.020 ; loss: 1539.925
2018-11-22 18:17:39,179:INFO: - Eval metrics: accuracy: 0.021 ; loss: 1457.365
2018-11-22 18:17:39,813:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-22 18:17:39,814:INFO: Epoch 15/10000
2018-11-22 18:22:12,516:INFO: - Train metrics: accuracy: 0.022 ; loss: 1538.003
2018-11-22 18:22:51,458:INFO: - Eval metrics: accuracy: 0.023 ; loss: 1455.355
2018-11-22 18:22:52,093:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-22 18:22:52,094:INFO: Epoch 16/10000
2018-11-22 18:27:24,869:INFO: - Train metrics: accuracy: 0.024 ; loss: 1535.987
2018-11-22 18:28:03,872:INFO: - Eval metrics: accuracy: 0.025 ; loss: 1453.240
2018-11-22 18:28:04,505:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-22 18:28:04,506:INFO: Epoch 17/10000
2018-11-22 18:32:35,647:INFO: - Train metrics: accuracy: 0.026 ; loss: 1533.888
2018-11-22 18:33:14,835:INFO: - Eval metrics: accuracy: 0.027 ; loss: 1451.046
2018-11-22 18:33:15,467:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-22 18:33:15,468:INFO: Epoch 18/10000
2018-11-22 18:37:47,507:INFO: - Train metrics: accuracy: 0.028 ; loss: 1531.686
2018-11-22 18:38:26,490:INFO: - Eval metrics: accuracy: 0.029 ; loss: 1448.763
2018-11-22 18:38:27,144:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-22 18:38:27,145:INFO: Epoch 19/10000
2018-11-22 18:42:59,517:INFO: - Train metrics: accuracy: 0.030 ; loss: 1529.363
2018-11-22 18:43:38,672:INFO: - Eval metrics: accuracy: 0.031 ; loss: 1446.352
2018-11-22 18:43:39,448:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-22 18:43:39,448:INFO: Epoch 20/10000
2018-11-22 18:48:10,208:INFO: - Train metrics: accuracy: 0.032 ; loss: 1526.927
2018-11-22 18:48:49,216:INFO: - Eval metrics: accuracy: 0.033 ; loss: 1443.824
2018-11-22 18:48:49,919:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-20
2018-11-22 18:48:49,920:INFO: Epoch 21/10000
2018-11-22 18:53:21,190:INFO: - Train metrics: accuracy: 0.034 ; loss: 1524.380
2018-11-22 18:53:59,963:INFO: - Eval metrics: accuracy: 0.035 ; loss: 1441.184
2018-11-22 18:54:00,661:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-22 18:54:00,661:INFO: Epoch 22/10000
2018-11-22 18:58:34,024:INFO: - Train metrics: accuracy: 0.036 ; loss: 1521.725
2018-11-22 18:59:13,185:INFO: - Eval metrics: accuracy: 0.037 ; loss: 1438.463
2018-11-22 18:59:13,852:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-22 18:59:13,853:INFO: Epoch 23/10000
2018-11-22 19:03:45,810:INFO: - Train metrics: accuracy: 0.039 ; loss: 1518.964
2018-11-22 19:04:24,828:INFO: - Eval metrics: accuracy: 0.039 ; loss: 1435.644
2018-11-22 19:04:25,468:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-22 19:04:25,468:INFO: Epoch 24/10000
2018-11-22 19:08:58,246:INFO: - Train metrics: accuracy: 0.041 ; loss: 1516.098
2018-11-22 19:09:37,338:INFO: - Eval metrics: accuracy: 0.042 ; loss: 1432.720
2018-11-22 19:09:37,974:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-22 19:09:37,974:INFO: Epoch 25/10000
2018-11-22 19:14:10,424:INFO: - Train metrics: accuracy: 0.044 ; loss: 1513.118
2018-11-22 19:14:49,341:INFO: - Eval metrics: accuracy: 0.044 ; loss: 1429.684
2018-11-22 19:14:49,981:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-22 19:14:49,982:INFO: Epoch 26/10000
2018-11-22 19:19:21,746:INFO: - Train metrics: accuracy: 0.046 ; loss: 1510.007
2018-11-22 19:20:00,860:INFO: - Eval metrics: accuracy: 0.047 ; loss: 1426.525
2018-11-22 19:20:01,492:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-22 19:20:01,492:INFO: Epoch 27/10000
2018-11-22 19:24:34,403:INFO: - Train metrics: accuracy: 0.049 ; loss: 1506.768
2018-11-22 19:25:13,207:INFO: - Eval metrics: accuracy: 0.049 ; loss: 1423.222
2018-11-22 19:25:13,838:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-22 19:25:13,838:INFO: Epoch 28/10000
2018-11-22 19:29:47,608:INFO: - Train metrics: accuracy: 0.051 ; loss: 1503.417
2018-11-22 19:30:26,188:INFO: - Eval metrics: accuracy: 0.052 ; loss: 1419.795
2018-11-22 19:30:26,812:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-22 19:30:26,813:INFO: Epoch 29/10000
2018-11-22 19:35:00,150:INFO: - Train metrics: accuracy: 0.054 ; loss: 1499.940
2018-11-22 19:35:39,354:INFO: - Eval metrics: accuracy: 0.055 ; loss: 1416.237
2018-11-22 19:35:39,979:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-22 19:35:39,980:INFO: Epoch 30/10000
2018-11-22 19:40:15,181:INFO: - Train metrics: accuracy: 0.057 ; loss: 1496.340
2018-11-22 19:40:54,439:INFO: - Eval metrics: accuracy: 0.057 ; loss: 1412.541
2018-11-22 19:40:55,135:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-30
2018-11-22 19:40:55,136:INFO: Epoch 31/10000
2018-11-22 19:45:28,963:INFO: - Train metrics: accuracy: 0.060 ; loss: 1492.613
2018-11-22 19:46:08,025:INFO: - Eval metrics: accuracy: 0.060 ; loss: 1408.732
2018-11-22 19:46:08,669:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-31
2018-11-22 19:46:08,669:INFO: Epoch 32/10000
2018-11-22 19:50:42,416:INFO: - Train metrics: accuracy: 0.063 ; loss: 1488.759
2018-11-22 19:51:21,362:INFO: - Eval metrics: accuracy: 0.063 ; loss: 1404.790
2018-11-22 19:51:21,958:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-22 19:51:21,959:INFO: Epoch 33/10000
2018-11-22 19:55:56,535:INFO: - Train metrics: accuracy: 0.066 ; loss: 1484.778
2018-11-22 19:56:35,652:INFO: - Eval metrics: accuracy: 0.066 ; loss: 1400.703
2018-11-22 19:56:36,306:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-33
2018-11-22 19:56:36,306:INFO: Epoch 34/10000
2018-11-22 20:01:09,300:INFO: - Train metrics: accuracy: 0.069 ; loss: 1480.669
2018-11-22 20:01:48,270:INFO: - Eval metrics: accuracy: 0.069 ; loss: 1396.482
2018-11-22 20:01:48,901:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-34
2018-11-22 20:01:48,902:INFO: Epoch 35/10000
2018-11-22 20:06:24,286:INFO: - Train metrics: accuracy: 0.072 ; loss: 1476.433
2018-11-22 20:07:03,455:INFO: - Eval metrics: accuracy: 0.073 ; loss: 1392.123
2018-11-22 20:07:04,205:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-35
2018-11-22 20:07:04,205:INFO: Epoch 36/10000
2018-11-22 20:11:37,541:INFO: - Train metrics: accuracy: 0.075 ; loss: 1472.055
2018-11-22 20:12:16,780:INFO: - Eval metrics: accuracy: 0.076 ; loss: 1387.631
2018-11-22 20:12:17,425:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-36
2018-11-22 20:12:17,426:INFO: Epoch 37/10000
2018-11-22 20:16:50,902:INFO: - Train metrics: accuracy: 0.079 ; loss: 1467.545
2018-11-22 20:17:29,970:INFO: - Eval metrics: accuracy: 0.079 ; loss: 1383.009
2018-11-22 20:17:30,677:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-37
2018-11-22 20:17:30,678:INFO: Epoch 38/10000
2018-11-22 20:22:03,934:INFO: - Train metrics: accuracy: 0.082 ; loss: 1462.902
2018-11-22 20:22:42,992:INFO: - Eval metrics: accuracy: 0.083 ; loss: 1378.255
2018-11-22 20:22:43,717:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-38
2018-11-22 20:22:43,718:INFO: Epoch 39/10000
2018-11-22 20:27:17,488:INFO: - Train metrics: accuracy: 0.085 ; loss: 1458.113
2018-11-22 20:27:56,531:INFO: - Eval metrics: accuracy: 0.086 ; loss: 1373.357
2018-11-22 20:27:57,154:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-39
2018-11-22 20:27:57,154:INFO: Epoch 40/10000
2018-11-22 20:32:29,176:INFO: - Train metrics: accuracy: 0.089 ; loss: 1453.182
2018-11-22 20:33:08,245:INFO: - Eval metrics: accuracy: 0.090 ; loss: 1368.321
2018-11-22 20:33:08,863:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-40
2018-11-22 20:33:08,864:INFO: Epoch 41/10000
2018-11-22 20:37:41,128:INFO: - Train metrics: accuracy: 0.093 ; loss: 1448.105
2018-11-22 20:38:20,226:INFO: - Eval metrics: accuracy: 0.093 ; loss: 1363.128
2018-11-22 20:38:20,854:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-41
2018-11-22 20:38:20,855:INFO: Epoch 42/10000
2018-11-22 20:42:53,195:INFO: - Train metrics: accuracy: 0.096 ; loss: 1442.885
2018-11-22 20:43:32,336:INFO: - Eval metrics: accuracy: 0.097 ; loss: 1357.785
2018-11-22 20:43:32,974:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-42
2018-11-22 20:43:32,974:INFO: Epoch 43/10000
2018-11-22 20:48:05,946:INFO: - Train metrics: accuracy: 0.100 ; loss: 1437.523
2018-11-22 20:48:45,016:INFO: - Eval metrics: accuracy: 0.101 ; loss: 1352.282
2018-11-22 20:48:45,711:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-43
2018-11-22 20:48:45,712:INFO: Epoch 44/10000
2018-11-22 20:53:19,405:INFO: - Train metrics: accuracy: 0.104 ; loss: 1432.020
2018-11-22 20:53:58,503:INFO: - Eval metrics: accuracy: 0.105 ; loss: 1346.642
2018-11-22 20:53:59,129:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-44
2018-11-22 20:53:59,130:INFO: Epoch 45/10000
2018-11-22 20:58:32,752:INFO: - Train metrics: accuracy: 0.108 ; loss: 1426.376
2018-11-22 20:59:11,953:INFO: - Eval metrics: accuracy: 0.109 ; loss: 1340.849
2018-11-22 20:59:12,589:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-45
2018-11-22 20:59:12,589:INFO: Epoch 46/10000
2018-11-22 21:03:45,723:INFO: - Train metrics: accuracy: 0.112 ; loss: 1420.584
2018-11-22 21:04:24,773:INFO: - Eval metrics: accuracy: 0.113 ; loss: 1334.931
2018-11-22 21:04:25,417:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-46
2018-11-22 21:04:25,417:INFO: Epoch 47/10000
2018-11-22 21:08:57,743:INFO: - Train metrics: accuracy: 0.116 ; loss: 1414.651
2018-11-22 21:09:36,766:INFO: - Eval metrics: accuracy: 0.117 ; loss: 1328.889
2018-11-22 21:09:37,417:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-47
2018-11-22 21:09:37,418:INFO: Epoch 48/10000
2018-11-22 21:14:11,807:INFO: - Train metrics: accuracy: 0.121 ; loss: 1408.572
2018-11-22 21:14:50,969:INFO: - Eval metrics: accuracy: 0.121 ; loss: 1322.697
2018-11-22 21:14:51,603:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-48
2018-11-22 21:14:51,604:INFO: Epoch 49/10000
2018-11-22 21:19:27,187:INFO: - Train metrics: accuracy: 0.125 ; loss: 1402.342
2018-11-22 21:20:06,141:INFO: - Eval metrics: accuracy: 0.126 ; loss: 1316.370
2018-11-22 21:20:06,770:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-49
2018-11-22 21:20:06,771:INFO: Epoch 50/10000
2018-11-22 21:24:40,098:INFO: - Train metrics: accuracy: 0.130 ; loss: 1395.968
2018-11-22 21:25:19,325:INFO: - Eval metrics: accuracy: 0.130 ; loss: 1309.866
2018-11-22 21:25:19,941:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-50
2018-11-22 21:25:19,941:INFO: Epoch 51/10000
2018-11-22 21:29:55,426:INFO: - Train metrics: accuracy: 0.134 ; loss: 1389.452
2018-11-22 21:30:34,285:INFO: - Eval metrics: accuracy: 0.134 ; loss: 1303.233
2018-11-22 21:30:34,911:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-51
2018-11-22 21:30:34,911:INFO: Epoch 52/10000
2018-11-22 21:35:10,037:INFO: - Train metrics: accuracy: 0.139 ; loss: 1382.802
2018-11-22 21:35:49,082:INFO: - Eval metrics: accuracy: 0.139 ; loss: 1296.444
2018-11-22 21:35:49,786:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-52
2018-11-22 21:35:49,787:INFO: Epoch 53/10000
2018-11-22 21:40:23,000:INFO: - Train metrics: accuracy: 0.143 ; loss: 1376.012
2018-11-22 21:41:02,020:INFO: - Eval metrics: accuracy: 0.144 ; loss: 1289.523
2018-11-22 21:41:02,654:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-53
2018-11-22 21:41:02,654:INFO: Epoch 54/10000
2018-11-22 21:45:36,711:INFO: - Train metrics: accuracy: 0.148 ; loss: 1369.081
2018-11-22 21:46:15,789:INFO: - Eval metrics: accuracy: 0.148 ; loss: 1282.476
2018-11-22 21:46:16,424:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-54
2018-11-22 21:46:16,425:INFO: Epoch 55/10000
2018-11-22 21:50:48,236:INFO: - Train metrics: accuracy: 0.153 ; loss: 1362.002
2018-11-22 21:51:27,139:INFO: - Eval metrics: accuracy: 0.153 ; loss: 1275.283
2018-11-22 21:51:27,773:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-55
2018-11-22 21:51:27,773:INFO: Epoch 56/10000
2018-11-22 21:55:59,939:INFO: - Train metrics: accuracy: 0.158 ; loss: 1354.781
2018-11-22 21:56:39,095:INFO: - Eval metrics: accuracy: 0.158 ; loss: 1267.928
2018-11-22 21:56:39,729:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-56
2018-11-22 21:56:39,729:INFO: Epoch 57/10000
2018-11-22 22:01:12,646:INFO: - Train metrics: accuracy: 0.163 ; loss: 1347.416
2018-11-22 22:01:51,656:INFO: - Eval metrics: accuracy: 0.163 ; loss: 1260.426
2018-11-22 22:01:52,284:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-57
2018-11-22 22:01:52,285:INFO: Epoch 58/10000
2018-11-22 22:06:23,935:INFO: - Train metrics: accuracy: 0.168 ; loss: 1339.901
2018-11-22 22:07:02,812:INFO: - Eval metrics: accuracy: 0.168 ; loss: 1252.768
2018-11-22 22:07:03,447:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-58
2018-11-22 22:07:03,448:INFO: Epoch 59/10000
2018-11-22 22:11:35,049:INFO: - Train metrics: accuracy: 0.173 ; loss: 1332.233
2018-11-22 22:12:13,968:INFO: - Eval metrics: accuracy: 0.173 ; loss: 1244.977
2018-11-22 22:12:14,596:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-59
2018-11-22 22:12:14,596:INFO: Epoch 60/10000
2018-11-22 22:16:47,147:INFO: - Train metrics: accuracy: 0.178 ; loss: 1324.419
2018-11-22 22:17:26,052:INFO: - Eval metrics: accuracy: 0.178 ; loss: 1237.050
2018-11-22 22:17:26,676:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-60
2018-11-22 22:17:26,676:INFO: Epoch 61/10000
2018-11-22 22:21:58,874:INFO: - Train metrics: accuracy: 0.183 ; loss: 1316.462
2018-11-22 22:22:37,965:INFO: - Eval metrics: accuracy: 0.183 ; loss: 1228.962
2018-11-22 22:22:38,587:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-61
2018-11-22 22:22:38,588:INFO: Epoch 62/10000
2018-11-22 22:27:11,110:INFO: - Train metrics: accuracy: 0.189 ; loss: 1308.361
2018-11-22 22:27:50,267:INFO: - Eval metrics: accuracy: 0.188 ; loss: 1220.740
2018-11-22 22:27:50,906:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-62
2018-11-22 22:27:50,906:INFO: Epoch 63/10000
2018-11-22 22:32:24,413:INFO: - Train metrics: accuracy: 0.194 ; loss: 1300.117
2018-11-22 22:33:03,498:INFO: - Eval metrics: accuracy: 0.194 ; loss: 1212.367
2018-11-22 22:33:04,157:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-63
2018-11-22 22:33:04,158:INFO: Epoch 64/10000
2018-11-22 22:37:37,629:INFO: - Train metrics: accuracy: 0.199 ; loss: 1291.736
2018-11-22 22:38:16,763:INFO: - Eval metrics: accuracy: 0.199 ; loss: 1203.851
2018-11-22 22:38:17,590:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-64
2018-11-22 22:38:17,591:INFO: Epoch 65/10000
2018-11-22 22:42:51,296:INFO: - Train metrics: accuracy: 0.205 ; loss: 1283.221
2018-11-22 22:43:30,372:INFO: - Eval metrics: accuracy: 0.205 ; loss: 1195.187
2018-11-22 22:43:31,009:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-65
2018-11-22 22:43:31,010:INFO: Epoch 66/10000
2018-11-22 22:48:04,173:INFO: - Train metrics: accuracy: 0.211 ; loss: 1274.571
2018-11-22 22:48:43,239:INFO: - Eval metrics: accuracy: 0.210 ; loss: 1186.396
2018-11-22 22:48:43,871:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-66
2018-11-22 22:48:43,872:INFO: Epoch 67/10000
2018-11-22 22:53:15,748:INFO: - Train metrics: accuracy: 0.216 ; loss: 1265.778
2018-11-22 22:53:54,762:INFO: - Eval metrics: accuracy: 0.216 ; loss: 1177.447
2018-11-22 22:53:55,396:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-67
2018-11-22 22:53:55,396:INFO: Epoch 68/10000
2018-11-22 22:58:27,236:INFO: - Train metrics: accuracy: 0.222 ; loss: 1256.846
2018-11-22 22:59:06,230:INFO: - Eval metrics: accuracy: 0.222 ; loss: 1168.376
2018-11-22 22:59:06,934:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-68
2018-11-22 22:59:06,935:INFO: Epoch 69/10000
2018-11-22 23:03:40,377:INFO: - Train metrics: accuracy: 0.228 ; loss: 1247.767
2018-11-22 23:04:19,354:INFO: - Eval metrics: accuracy: 0.227 ; loss: 1159.156
2018-11-22 23:04:19,983:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-69
2018-11-22 23:04:19,984:INFO: Epoch 70/10000
2018-11-22 23:08:51,546:INFO: - Train metrics: accuracy: 0.234 ; loss: 1238.557
2018-11-22 23:09:30,444:INFO: - Eval metrics: accuracy: 0.233 ; loss: 1149.817
2018-11-22 23:09:31,085:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-70
2018-11-22 23:09:31,085:INFO: Epoch 71/10000
2018-11-22 23:14:03,142:INFO: - Train metrics: accuracy: 0.240 ; loss: 1229.204
2018-11-22 23:14:42,235:INFO: - Eval metrics: accuracy: 0.239 ; loss: 1140.337
2018-11-22 23:14:42,869:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-71
2018-11-22 23:14:42,870:INFO: Epoch 72/10000
2018-11-22 23:19:16,523:INFO: - Train metrics: accuracy: 0.245 ; loss: 1219.720
2018-11-22 23:19:55,491:INFO: - Eval metrics: accuracy: 0.245 ; loss: 1130.724
2018-11-22 23:19:56,112:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-72
2018-11-22 23:19:56,113:INFO: Epoch 73/10000
2018-11-22 23:24:29,617:INFO: - Train metrics: accuracy: 0.251 ; loss: 1210.101
2018-11-22 23:25:08,781:INFO: - Eval metrics: accuracy: 0.251 ; loss: 1120.982
2018-11-22 23:25:09,414:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-73
2018-11-22 23:25:09,415:INFO: Epoch 74/10000
2018-11-22 23:29:43,614:INFO: - Train metrics: accuracy: 0.257 ; loss: 1200.355
2018-11-22 23:30:22,519:INFO: - Eval metrics: accuracy: 0.257 ; loss: 1111.103
2018-11-22 23:30:23,160:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-74
2018-11-22 23:30:23,160:INFO: Epoch 75/10000
2018-11-22 23:34:54,472:INFO: - Train metrics: accuracy: 0.263 ; loss: 1190.473
2018-11-22 23:35:33,576:INFO: - Eval metrics: accuracy: 0.263 ; loss: 1101.099
2018-11-22 23:35:34,297:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-75
2018-11-22 23:35:34,297:INFO: Epoch 76/10000
2018-11-22 23:40:06,497:INFO: - Train metrics: accuracy: 0.269 ; loss: 1180.461
2018-11-22 23:40:45,466:INFO: - Eval metrics: accuracy: 0.269 ; loss: 1090.968
2018-11-22 23:40:46,094:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-76
2018-11-22 23:40:46,095:INFO: Epoch 77/10000
2018-11-22 23:45:17,333:INFO: - Train metrics: accuracy: 0.275 ; loss: 1170.319
2018-11-22 23:45:56,254:INFO: - Eval metrics: accuracy: 0.275 ; loss: 1080.713
2018-11-22 23:45:56,888:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-77
2018-11-22 23:45:56,888:INFO: Epoch 78/10000
2018-11-22 23:50:28,188:INFO: - Train metrics: accuracy: 0.281 ; loss: 1160.053
2018-11-22 23:51:07,218:INFO: - Eval metrics: accuracy: 0.281 ; loss: 1070.324
2018-11-22 23:51:07,853:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-78
2018-11-22 23:51:07,854:INFO: Epoch 79/10000
2018-11-22 23:55:39,706:INFO: - Train metrics: accuracy: 0.288 ; loss: 1149.664
2018-11-22 23:56:18,826:INFO: - Eval metrics: accuracy: 0.287 ; loss: 1059.821
2018-11-22 23:56:19,455:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-79
2018-11-22 23:56:19,456:INFO: Epoch 80/10000
2018-11-23 00:00:51,377:INFO: - Train metrics: accuracy: 0.294 ; loss: 1139.150
2018-11-23 00:01:30,232:INFO: - Eval metrics: accuracy: 0.293 ; loss: 1049.191
2018-11-23 00:01:30,854:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-80
2018-11-23 00:01:30,855:INFO: Epoch 81/10000
2018-11-23 00:06:03,028:INFO: - Train metrics: accuracy: 0.300 ; loss: 1128.515
2018-11-23 00:06:42,062:INFO: - Eval metrics: accuracy: 0.299 ; loss: 1038.427
2018-11-23 00:06:42,687:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-81
2018-11-23 00:06:42,688:INFO: Epoch 82/10000
2018-11-23 00:11:14,410:INFO: - Train metrics: accuracy: 0.306 ; loss: 1117.754
2018-11-23 00:11:53,294:INFO: - Eval metrics: accuracy: 0.305 ; loss: 1027.552
2018-11-23 00:11:53,939:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-82
2018-11-23 00:11:53,939:INFO: Epoch 83/10000
2018-11-23 00:16:26,204:INFO: - Train metrics: accuracy: 0.312 ; loss: 1106.871
2018-11-23 00:17:05,268:INFO: - Eval metrics: accuracy: 0.311 ; loss: 1016.562
2018-11-23 00:17:05,895:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-83
2018-11-23 00:17:05,895:INFO: Epoch 84/10000
2018-11-23 00:21:38,544:INFO: - Train metrics: accuracy: 0.318 ; loss: 1095.878
2018-11-23 00:22:17,554:INFO: - Eval metrics: accuracy: 0.318 ; loss: 1005.452
2018-11-23 00:22:18,171:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-84
2018-11-23 00:22:18,171:INFO: Epoch 85/10000
2018-11-23 00:26:50,060:INFO: - Train metrics: accuracy: 0.324 ; loss: 1084.771
2018-11-23 00:27:28,696:INFO: - Eval metrics: accuracy: 0.324 ; loss: 994.240
2018-11-23 00:27:29,398:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-85
2018-11-23 00:27:29,399:INFO: Epoch 86/10000
2018-11-23 00:32:08,275:INFO: - Train metrics: accuracy: 0.330 ; loss: 1073.554
2018-11-23 00:32:48,078:INFO: - Eval metrics: accuracy: 0.330 ; loss: 982.926
2018-11-23 00:32:48,789:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-86
2018-11-23 00:32:48,790:INFO: Epoch 87/10000
2018-11-23 00:37:28,486:INFO: - Train metrics: accuracy: 0.336 ; loss: 1062.226
2018-11-23 00:38:08,286:INFO: - Eval metrics: accuracy: 0.336 ; loss: 971.506
2018-11-23 00:38:08,924:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-87
2018-11-23 00:38:08,925:INFO: Epoch 88/10000
2018-11-23 00:42:43,328:INFO: - Train metrics: accuracy: 0.342 ; loss: 1050.794
2018-11-23 00:43:22,291:INFO: - Eval metrics: accuracy: 0.342 ; loss: 959.974
2018-11-23 00:43:22,926:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-88
2018-11-23 00:43:22,926:INFO: Epoch 89/10000
2018-11-23 00:47:56,079:INFO: - Train metrics: accuracy: 0.348 ; loss: 1039.251
2018-11-23 00:48:35,064:INFO: - Eval metrics: accuracy: 0.348 ; loss: 948.343
2018-11-23 00:48:35,709:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-89
2018-11-23 00:48:35,709:INFO: Epoch 90/10000
2018-11-23 00:53:07,841:INFO: - Train metrics: accuracy: 0.354 ; loss: 1027.613
2018-11-23 00:53:47,190:INFO: - Eval metrics: accuracy: 0.354 ; loss: 936.638
2018-11-23 00:53:47,836:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-90
2018-11-23 00:53:47,836:INFO: Epoch 91/10000
2018-11-23 00:58:20,624:INFO: - Train metrics: accuracy: 0.360 ; loss: 1015.876
2018-11-23 00:58:59,630:INFO: - Eval metrics: accuracy: 0.360 ; loss: 924.818
2018-11-23 00:59:00,268:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-91
2018-11-23 00:59:00,269:INFO: Epoch 92/10000
2018-11-23 01:03:32,916:INFO: - Train metrics: accuracy: 0.366 ; loss: 1004.043
2018-11-23 01:04:11,979:INFO: - Eval metrics: accuracy: 0.366 ; loss: 912.908
2018-11-23 01:04:12,752:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-92
2018-11-23 01:04:12,753:INFO: Epoch 93/10000
2018-11-23 01:08:46,310:INFO: - Train metrics: accuracy: 0.372 ; loss: 992.117
2018-11-23 01:09:25,456:INFO: - Eval metrics: accuracy: 0.372 ; loss: 900.903
2018-11-23 01:09:26,090:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-93
2018-11-23 01:09:26,091:INFO: Epoch 94/10000
2018-11-23 01:13:59,052:INFO: - Train metrics: accuracy: 0.378 ; loss: 980.098
2018-11-23 01:14:38,309:INFO: - Eval metrics: accuracy: 0.378 ; loss: 888.817
2018-11-23 01:14:38,946:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-94
2018-11-23 01:14:38,947:INFO: Epoch 95/10000
2018-11-23 01:19:13,962:INFO: - Train metrics: accuracy: 0.384 ; loss: 967.992
2018-11-23 01:19:53,385:INFO: - Eval metrics: accuracy: 0.384 ; loss: 876.659
2018-11-23 01:19:54,004:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-95
2018-11-23 01:19:54,004:INFO: Epoch 96/10000
2018-11-23 01:24:29,735:INFO: - Train metrics: accuracy: 0.390 ; loss: 955.800
2018-11-23 01:25:08,956:INFO: - Eval metrics: accuracy: 0.389 ; loss: 864.411
2018-11-23 01:25:09,592:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-96
2018-11-23 01:25:09,593:INFO: Epoch 97/10000
2018-11-23 01:29:43,843:INFO: - Train metrics: accuracy: 0.395 ; loss: 943.528
2018-11-23 01:30:22,412:INFO: - Eval metrics: accuracy: 0.395 ; loss: 852.091
2018-11-23 01:30:23,034:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-97
2018-11-23 01:30:23,035:INFO: Epoch 98/10000
2018-11-23 01:34:57,266:INFO: - Train metrics: accuracy: 0.401 ; loss: 931.182
2018-11-23 01:35:36,328:INFO: - Eval metrics: accuracy: 0.401 ; loss: 839.712
2018-11-23 01:35:36,956:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-98
2018-11-23 01:35:36,956:INFO: Epoch 99/10000
2018-11-23 01:40:11,050:INFO: - Train metrics: accuracy: 0.406 ; loss: 918.762
2018-11-23 01:40:50,013:INFO: - Eval metrics: accuracy: 0.406 ; loss: 827.260
2018-11-23 01:40:50,647:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-99
2018-11-23 01:40:50,648:INFO: Epoch 100/10000
2018-11-23 01:45:23,058:INFO: - Train metrics: accuracy: 0.412 ; loss: 906.272
2018-11-23 01:46:02,011:INFO: - Eval metrics: accuracy: 0.412 ; loss: 814.734
2018-11-23 01:46:02,776:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-100
2018-11-23 01:46:02,776:INFO: Epoch 101/10000
2018-11-23 01:50:35,015:INFO: - Train metrics: accuracy: 0.417 ; loss: 893.714
2018-11-23 01:51:14,112:INFO: - Eval metrics: accuracy: 0.417 ; loss: 802.165
2018-11-23 01:51:14,743:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-101
2018-11-23 01:51:14,744:INFO: Epoch 102/10000
2018-11-23 01:55:46,357:INFO: - Train metrics: accuracy: 0.422 ; loss: 881.095
2018-11-23 01:56:25,318:INFO: - Eval metrics: accuracy: 0.422 ; loss: 789.539
2018-11-23 01:56:26,004:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-102
2018-11-23 01:56:26,004:INFO: Epoch 103/10000
2018-11-23 02:00:58,283:INFO: - Train metrics: accuracy: 0.427 ; loss: 868.422
2018-11-23 02:01:37,189:INFO: - Eval metrics: accuracy: 0.427 ; loss: 776.864
2018-11-23 02:01:37,837:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-103
2018-11-23 02:01:37,837:INFO: Epoch 104/10000
2018-11-23 02:06:09,588:INFO: - Train metrics: accuracy: 0.432 ; loss: 855.692
2018-11-23 02:06:48,753:INFO: - Eval metrics: accuracy: 0.432 ; loss: 764.137
2018-11-23 02:06:49,389:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-104
2018-11-23 02:06:49,389:INFO: Epoch 105/10000
2018-11-23 02:11:21,151:INFO: - Train metrics: accuracy: 0.437 ; loss: 842.912
2018-11-23 02:11:59,935:INFO: - Eval metrics: accuracy: 0.437 ; loss: 751.371
2018-11-23 02:12:00,558:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-105
2018-11-23 02:12:00,559:INFO: Epoch 106/10000
2018-11-23 02:16:32,680:INFO: - Train metrics: accuracy: 0.442 ; loss: 830.089
2018-11-23 02:17:11,601:INFO: - Eval metrics: accuracy: 0.442 ; loss: 738.568
2018-11-23 02:17:12,224:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-106
2018-11-23 02:17:12,225:INFO: Epoch 107/10000
2018-11-23 02:21:45,479:INFO: - Train metrics: accuracy: 0.446 ; loss: 817.227
2018-11-23 02:22:24,707:INFO: - Eval metrics: accuracy: 0.447 ; loss: 725.739
2018-11-23 02:22:25,334:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-107
2018-11-23 02:22:25,335:INFO: Epoch 108/10000
2018-11-23 02:26:57,784:INFO: - Train metrics: accuracy: 0.450 ; loss: 804.327
2018-11-23 02:27:36,917:INFO: - Eval metrics: accuracy: 0.451 ; loss: 712.877
2018-11-23 02:27:37,541:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-108
2018-11-23 02:27:37,542:INFO: Epoch 109/10000
2018-11-23 02:32:09,884:INFO: - Train metrics: accuracy: 0.455 ; loss: 791.398
2018-11-23 02:32:48,936:INFO: - Eval metrics: accuracy: 0.455 ; loss: 700.001
2018-11-23 02:32:49,556:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-109
2018-11-23 02:32:49,557:INFO: Epoch 110/10000
2018-11-23 02:37:21,626:INFO: - Train metrics: accuracy: 0.459 ; loss: 778.442
2018-11-23 02:38:00,827:INFO: - Eval metrics: accuracy: 0.460 ; loss: 687.110
2018-11-23 02:38:01,458:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-110
2018-11-23 02:38:01,459:INFO: Epoch 111/10000
2018-11-23 02:42:33,725:INFO: - Train metrics: accuracy: 0.463 ; loss: 765.467
2018-11-23 02:43:12,889:INFO: - Eval metrics: accuracy: 0.464 ; loss: 674.201
2018-11-23 02:43:13,521:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-111
2018-11-23 02:43:13,521:INFO: Epoch 112/10000
2018-11-23 02:47:46,338:INFO: - Train metrics: accuracy: 0.466 ; loss: 752.476
2018-11-23 02:48:25,580:INFO: - Eval metrics: accuracy: 0.468 ; loss: 661.296
2018-11-23 02:48:26,208:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-112
2018-11-23 02:48:26,209:INFO: Epoch 113/10000
2018-11-23 02:52:58,192:INFO: - Train metrics: accuracy: 0.470 ; loss: 739.474
2018-11-23 02:53:37,170:INFO: - Eval metrics: accuracy: 0.471 ; loss: 648.399
2018-11-23 02:53:37,804:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-113
2018-11-23 02:53:37,805:INFO: Epoch 114/10000
2018-11-23 02:58:10,953:INFO: - Train metrics: accuracy: 0.473 ; loss: 726.469
2018-11-23 02:58:49,744:INFO: - Eval metrics: accuracy: 0.475 ; loss: 635.498
2018-11-23 02:58:50,390:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-114
2018-11-23 02:58:50,391:INFO: Epoch 115/10000
2018-11-23 03:03:23,533:INFO: - Train metrics: accuracy: 0.477 ; loss: 713.463
2018-11-23 03:04:02,699:INFO: - Eval metrics: accuracy: 0.478 ; loss: 622.614
2018-11-23 03:04:03,325:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-115
2018-11-23 03:04:03,326:INFO: Epoch 116/10000
2018-11-23 03:08:36,722:INFO: - Train metrics: accuracy: 0.480 ; loss: 700.466
2018-11-23 03:09:15,781:INFO: - Eval metrics: accuracy: 0.482 ; loss: 609.756
2018-11-23 03:09:16,489:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-116
2018-11-23 03:09:16,490:INFO: Epoch 117/10000
2018-11-23 03:13:50,223:INFO: - Train metrics: accuracy: 0.483 ; loss: 687.483
2018-11-23 03:14:29,064:INFO: - Eval metrics: accuracy: 0.485 ; loss: 596.919
2018-11-23 03:14:29,696:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-117
2018-11-23 03:14:29,696:INFO: Epoch 118/10000
2018-11-23 03:19:04,604:INFO: - Train metrics: accuracy: 0.485 ; loss: 674.518
2018-11-23 03:19:43,678:INFO: - Eval metrics: accuracy: 0.488 ; loss: 584.124
2018-11-23 03:19:44,316:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-118
2018-11-23 03:19:44,316:INFO: Epoch 119/10000
2018-11-23 03:24:19,104:INFO: - Train metrics: accuracy: 0.488 ; loss: 661.581
2018-11-23 03:24:58,165:INFO: - Eval metrics: accuracy: 0.490 ; loss: 571.365
2018-11-23 03:24:58,800:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-119
2018-11-23 03:24:58,801:INFO: Epoch 120/10000
2018-11-23 03:29:36,234:INFO: - Train metrics: accuracy: 0.490 ; loss: 648.676
2018-11-23 03:30:15,164:INFO: - Eval metrics: accuracy: 0.493 ; loss: 558.656
2018-11-23 03:30:15,797:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-120
2018-11-23 03:30:15,797:INFO: Epoch 121/10000
2018-11-23 03:34:52,067:INFO: - Train metrics: accuracy: 0.492 ; loss: 635.811
2018-11-23 03:35:31,137:INFO: - Eval metrics: accuracy: 0.495 ; loss: 546.000
2018-11-23 03:35:31,758:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-121
2018-11-23 03:35:31,759:INFO: Epoch 122/10000
2018-11-23 03:40:04,626:INFO: - Train metrics: accuracy: 0.494 ; loss: 622.992
2018-11-23 03:40:43,861:INFO: - Eval metrics: accuracy: 0.497 ; loss: 533.411
2018-11-23 03:40:44,645:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-122
2018-11-23 03:40:44,645:INFO: Epoch 123/10000
2018-11-23 03:45:18,552:INFO: - Train metrics: accuracy: 0.496 ; loss: 610.226
2018-11-23 03:45:57,855:INFO: - Eval metrics: accuracy: 0.499 ; loss: 520.892
2018-11-23 03:45:58,498:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-123
2018-11-23 03:45:58,499:INFO: Epoch 124/10000
2018-11-23 03:50:32,402:INFO: - Train metrics: accuracy: 0.497 ; loss: 597.519
2018-11-23 03:51:11,448:INFO: - Eval metrics: accuracy: 0.501 ; loss: 508.445
2018-11-23 03:51:12,081:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-124
2018-11-23 03:51:12,082:INFO: Epoch 125/10000
2018-11-23 03:55:46,724:INFO: - Train metrics: accuracy: 0.499 ; loss: 584.884
2018-11-23 03:56:25,772:INFO: - Eval metrics: accuracy: 0.503 ; loss: 496.091
2018-11-23 03:56:26,426:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-125
2018-11-23 03:56:26,427:INFO: Epoch 126/10000
2018-11-23 04:00:58,745:INFO: - Train metrics: accuracy: 0.500 ; loss: 572.323
2018-11-23 04:01:37,741:INFO: - Eval metrics: accuracy: 0.504 ; loss: 483.830
2018-11-23 04:01:38,368:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-126
2018-11-23 04:01:38,368:INFO: Epoch 127/10000
2018-11-23 04:06:13,535:INFO: - Train metrics: accuracy: 0.501 ; loss: 559.844
2018-11-23 04:06:52,627:INFO: - Eval metrics: accuracy: 0.506 ; loss: 471.670
2018-11-23 04:06:53,230:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-127
2018-11-23 04:06:53,231:INFO: Epoch 128/10000
2018-11-23 04:11:27,902:INFO: - Train metrics: accuracy: 0.502 ; loss: 547.457
2018-11-23 04:12:06,923:INFO: - Eval metrics: accuracy: 0.507 ; loss: 459.621
2018-11-23 04:12:07,577:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-128
2018-11-23 04:12:07,578:INFO: Epoch 129/10000
2018-11-23 04:16:40,441:INFO: - Train metrics: accuracy: 0.502 ; loss: 535.169
2018-11-23 04:17:19,611:INFO: - Eval metrics: accuracy: 0.508 ; loss: 447.697
2018-11-23 04:17:20,241:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-129
2018-11-23 04:17:20,242:INFO: Epoch 130/10000
2018-11-23 04:21:54,946:INFO: - Train metrics: accuracy: 0.503 ; loss: 522.990
2018-11-23 04:22:34,113:INFO: - Eval metrics: accuracy: 0.509 ; loss: 435.897
2018-11-23 04:22:34,886:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-130
2018-11-23 04:22:34,887:INFO: Epoch 131/10000
2018-11-23 04:27:07,992:INFO: - Train metrics: accuracy: 0.504 ; loss: 510.923
2018-11-23 04:27:47,229:INFO: - Eval metrics: accuracy: 0.510 ; loss: 424.237
2018-11-23 04:27:47,863:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-131
2018-11-23 04:27:47,864:INFO: Epoch 132/10000
2018-11-23 04:32:23,305:INFO: - Train metrics: accuracy: 0.504 ; loss: 498.983
2018-11-23 04:33:02,217:INFO: - Eval metrics: accuracy: 0.511 ; loss: 412.722
2018-11-23 04:33:02,847:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-132
2018-11-23 04:33:02,848:INFO: Epoch 133/10000
2018-11-23 04:37:36,623:INFO: - Train metrics: accuracy: 0.505 ; loss: 487.176
2018-11-23 04:38:15,624:INFO: - Eval metrics: accuracy: 0.512 ; loss: 401.364
2018-11-23 04:38:16,285:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-133
2018-11-23 04:38:16,286:INFO: Epoch 134/10000
2018-11-23 04:42:48,312:INFO: - Train metrics: accuracy: 0.505 ; loss: 475.510
2018-11-23 04:43:27,445:INFO: - Eval metrics: accuracy: 0.512 ; loss: 390.168
2018-11-23 04:43:28,077:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-134
2018-11-23 04:43:28,077:INFO: Epoch 135/10000
2018-11-23 04:48:03,206:INFO: - Train metrics: accuracy: 0.505 ; loss: 463.994
2018-11-23 04:48:42,467:INFO: - Eval metrics: accuracy: 0.513 ; loss: 379.151
2018-11-23 04:48:43,104:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-135
2018-11-23 04:48:43,104:INFO: Epoch 136/10000
2018-11-23 04:53:17,209:INFO: - Train metrics: accuracy: 0.505 ; loss: 452.636
2018-11-23 04:53:56,126:INFO: - Eval metrics: accuracy: 0.513 ; loss: 368.318
2018-11-23 04:53:56,759:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-136
2018-11-23 04:53:56,759:INFO: Epoch 137/10000
2018-11-23 04:58:30,568:INFO: - Train metrics: accuracy: 0.505 ; loss: 441.449
2018-11-23 04:59:09,810:INFO: - Eval metrics: accuracy: 0.513 ; loss: 357.679
2018-11-23 04:59:10,461:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-137
2018-11-23 04:59:10,462:INFO: Epoch 138/10000
2018-11-23 05:03:43,600:INFO: - Train metrics: accuracy: 0.505 ; loss: 430.439
2018-11-23 05:04:22,645:INFO: - Eval metrics: accuracy: 0.513 ; loss: 347.248
2018-11-23 05:04:23,090:INFO: Epoch 139/10000
2018-11-23 05:08:56,255:INFO: - Train metrics: accuracy: 0.505 ; loss: 419.615
2018-11-23 05:09:35,370:INFO: - Eval metrics: accuracy: 0.513 ; loss: 337.027
2018-11-23 05:09:35,817:INFO: Epoch 140/10000
2018-11-23 05:14:09,009:INFO: - Train metrics: accuracy: 0.504 ; loss: 408.988
2018-11-23 05:14:48,211:INFO: - Eval metrics: accuracy: 0.512 ; loss: 327.030
2018-11-23 05:14:48,640:INFO: Epoch 141/10000
2018-11-23 05:19:21,575:INFO: - Train metrics: accuracy: 0.504 ; loss: 398.567
2018-11-23 05:20:00,779:INFO: - Eval metrics: accuracy: 0.512 ; loss: 317.268
2018-11-23 05:20:01,237:INFO: Epoch 142/10000
2018-11-23 05:24:35,343:INFO: - Train metrics: accuracy: 0.503 ; loss: 388.362
2018-11-23 05:25:14,568:INFO: - Eval metrics: accuracy: 0.511 ; loss: 307.751
2018-11-23 05:25:15,003:INFO: Epoch 143/10000
2018-11-23 05:29:48,700:INFO: - Train metrics: accuracy: 0.502 ; loss: 378.382
2018-11-23 05:30:27,766:INFO: - Eval metrics: accuracy: 0.511 ; loss: 298.488
2018-11-23 05:30:28,195:INFO: Epoch 144/10000
2018-11-23 05:35:02,252:INFO: - Train metrics: accuracy: 0.501 ; loss: 368.636
2018-11-23 05:35:41,388:INFO: - Eval metrics: accuracy: 0.510 ; loss: 289.488
2018-11-23 05:35:41,840:INFO: Epoch 145/10000
2018-11-23 05:40:15,477:INFO: - Train metrics: accuracy: 0.500 ; loss: 359.132
2018-11-23 05:40:54,649:INFO: - Eval metrics: accuracy: 0.509 ; loss: 280.764
2018-11-23 05:40:55,090:INFO: Epoch 146/10000
2018-11-23 05:45:28,566:INFO: - Train metrics: accuracy: 0.499 ; loss: 349.881
2018-11-23 05:46:07,638:INFO: - Eval metrics: accuracy: 0.508 ; loss: 272.318
2018-11-23 05:46:08,072:INFO: Epoch 147/10000
2018-11-23 05:50:40,433:INFO: - Train metrics: accuracy: 0.497 ; loss: 340.890
2018-11-23 05:51:19,341:INFO: - Eval metrics: accuracy: 0.506 ; loss: 264.166
2018-11-23 05:51:19,773:INFO: Epoch 148/10000
2018-11-23 05:55:52,592:INFO: - Train metrics: accuracy: 0.496 ; loss: 332.169
2018-11-23 05:56:31,663:INFO: - Eval metrics: accuracy: 0.505 ; loss: 256.315
2018-11-23 05:56:32,136:INFO: Epoch 149/10000
2018-11-23 06:01:04,889:INFO: - Train metrics: accuracy: 0.495 ; loss: 323.725
2018-11-23 06:01:43,870:INFO: - Eval metrics: accuracy: 0.504 ; loss: 248.766
2018-11-23 06:01:44,313:INFO: Epoch 150/10000
2018-11-23 06:06:17,068:INFO: - Train metrics: accuracy: 0.493 ; loss: 315.564
2018-11-23 06:06:56,048:INFO: - Eval metrics: accuracy: 0.502 ; loss: 241.533
2018-11-23 06:06:56,480:INFO: Epoch 151/10000
2018-11-23 06:11:29,179:INFO: - Train metrics: accuracy: 0.492 ; loss: 307.696
2018-11-23 06:12:08,067:INFO: - Eval metrics: accuracy: 0.501 ; loss: 234.619
2018-11-23 06:12:08,506:INFO: Epoch 152/10000
2018-11-23 06:16:41,549:INFO: - Train metrics: accuracy: 0.490 ; loss: 300.124
2018-11-23 06:17:20,625:INFO: - Eval metrics: accuracy: 0.500 ; loss: 228.026
2018-11-23 06:17:21,050:INFO: Epoch 153/10000
2018-11-23 06:21:53,061:INFO: - Train metrics: accuracy: 0.489 ; loss: 292.856
2018-11-23 06:22:32,110:INFO: - Eval metrics: accuracy: 0.498 ; loss: 221.761
2018-11-23 06:22:32,551:INFO: Epoch 154/10000
2018-11-23 06:27:05,829:INFO: - Train metrics: accuracy: 0.488 ; loss: 285.893
2018-11-23 06:27:44,807:INFO: - Eval metrics: accuracy: 0.497 ; loss: 215.823
2018-11-23 06:27:45,247:INFO: Epoch 155/10000
2018-11-23 06:32:19,198:INFO: - Train metrics: accuracy: 0.487 ; loss: 279.241
2018-11-23 06:32:58,033:INFO: - Eval metrics: accuracy: 0.496 ; loss: 210.210
2018-11-23 06:32:58,464:INFO: Epoch 156/10000
2018-11-23 06:37:30,686:INFO: - Train metrics: accuracy: 0.485 ; loss: 272.899
2018-11-23 06:38:09,885:INFO: - Eval metrics: accuracy: 0.495 ; loss: 204.917
2018-11-23 06:38:10,328:INFO: Epoch 157/10000
2018-11-23 06:42:44,689:INFO: - Train metrics: accuracy: 0.484 ; loss: 266.869
2018-11-23 06:43:23,592:INFO: - Eval metrics: accuracy: 0.494 ; loss: 199.941
2018-11-23 06:43:24,030:INFO: Epoch 158/10000
2018-11-23 06:47:58,081:INFO: - Train metrics: accuracy: 0.484 ; loss: 261.148
2018-11-23 06:48:37,153:INFO: - Eval metrics: accuracy: 0.493 ; loss: 195.272
2018-11-23 06:48:37,590:INFO: Epoch 159/10000
2018-11-23 06:53:10,600:INFO: - Train metrics: accuracy: 0.483 ; loss: 255.733
2018-11-23 06:53:49,414:INFO: - Eval metrics: accuracy: 0.493 ; loss: 190.897
2018-11-23 06:53:49,844:INFO: Epoch 160/10000
2018-11-23 06:58:25,466:INFO: - Train metrics: accuracy: 0.483 ; loss: 250.614
2018-11-23 06:59:04,398:INFO: - Eval metrics: accuracy: 0.492 ; loss: 186.798
2018-11-23 06:59:04,860:INFO: Epoch 161/10000
2018-11-23 07:03:38,779:INFO: - Train metrics: accuracy: 0.483 ; loss: 245.783
2018-11-23 07:04:17,822:INFO: - Eval metrics: accuracy: 0.492 ; loss: 182.957
2018-11-23 07:04:18,264:INFO: Epoch 162/10000
2018-11-23 07:08:51,440:INFO: - Train metrics: accuracy: 0.483 ; loss: 241.225
2018-11-23 07:09:30,355:INFO: - Eval metrics: accuracy: 0.493 ; loss: 179.354
2018-11-23 07:09:30,795:INFO: Epoch 163/10000
2018-11-23 07:14:03,300:INFO: - Train metrics: accuracy: 0.483 ; loss: 236.927
2018-11-23 07:14:42,247:INFO: - Eval metrics: accuracy: 0.493 ; loss: 175.969
2018-11-23 07:14:42,688:INFO: Epoch 164/10000
2018-11-23 07:19:16,412:INFO: - Train metrics: accuracy: 0.484 ; loss: 232.872
2018-11-23 07:19:55,473:INFO: - Eval metrics: accuracy: 0.494 ; loss: 172.779
2018-11-23 07:19:55,914:INFO: Epoch 165/10000
2018-11-23 07:24:29,563:INFO: - Train metrics: accuracy: 0.485 ; loss: 229.042
2018-11-23 07:25:08,777:INFO: - Eval metrics: accuracy: 0.495 ; loss: 169.763
2018-11-23 07:25:09,209:INFO: Epoch 166/10000
2018-11-23 07:29:42,108:INFO: - Train metrics: accuracy: 0.486 ; loss: 225.420
2018-11-23 07:30:20,755:INFO: - Eval metrics: accuracy: 0.496 ; loss: 166.905
2018-11-23 07:30:21,189:INFO: Epoch 167/10000
2018-11-23 07:34:54,983:INFO: - Train metrics: accuracy: 0.488 ; loss: 221.991
2018-11-23 07:35:33,510:INFO: - Eval metrics: accuracy: 0.498 ; loss: 164.190
2018-11-23 07:35:33,952:INFO: Epoch 168/10000
2018-11-23 07:40:08,389:INFO: - Train metrics: accuracy: 0.490 ; loss: 218.740
2018-11-23 07:40:47,589:INFO: - Eval metrics: accuracy: 0.500 ; loss: 161.604
2018-11-23 07:40:48,029:INFO: Epoch 169/10000
2018-11-23 07:45:20,467:INFO: - Train metrics: accuracy: 0.491 ; loss: 215.655
2018-11-23 07:45:59,426:INFO: - Eval metrics: accuracy: 0.501 ; loss: 159.135
2018-11-23 07:45:59,863:INFO: Epoch 170/10000
2018-11-23 07:50:11,408:INFO: - Train metrics: accuracy: 0.493 ; loss: 212.722
2018-11-23 07:50:51,370:INFO: - Eval metrics: accuracy: 0.503 ; loss: 156.778
2018-11-23 07:50:51,865:INFO: Epoch 171/10000
2018-11-23 07:55:26,419:INFO: - Train metrics: accuracy: 0.495 ; loss: 209.932
2018-11-23 07:56:05,719:INFO: - Eval metrics: accuracy: 0.505 ; loss: 154.523
2018-11-23 07:56:06,171:INFO: Epoch 172/10000
2018-11-23 08:00:40,609:INFO: - Train metrics: accuracy: 0.497 ; loss: 207.276
2018-11-23 08:01:19,706:INFO: - Eval metrics: accuracy: 0.507 ; loss: 152.366
2018-11-23 08:01:20,175:INFO: Epoch 173/10000
2018-11-23 08:05:52,686:INFO: - Train metrics: accuracy: 0.499 ; loss: 204.746
2018-11-23 08:06:31,679:INFO: - Eval metrics: accuracy: 0.508 ; loss: 150.304
2018-11-23 08:06:32,144:INFO: Epoch 174/10000
2018-11-23 08:11:04,061:INFO: - Train metrics: accuracy: 0.501 ; loss: 202.337
2018-11-23 08:11:42,883:INFO: - Eval metrics: accuracy: 0.510 ; loss: 148.335
2018-11-23 08:11:43,318:INFO: Epoch 175/10000
2018-11-23 08:16:15,762:INFO: - Train metrics: accuracy: 0.503 ; loss: 200.045
2018-11-23 08:16:54,659:INFO: - Eval metrics: accuracy: 0.512 ; loss: 146.456
2018-11-23 08:16:55,104:INFO: Epoch 176/10000
2018-11-23 08:21:27,170:INFO: - Train metrics: accuracy: 0.504 ; loss: 197.864
2018-11-23 08:22:06,175:INFO: - Eval metrics: accuracy: 0.513 ; loss: 144.666
2018-11-23 08:22:06,811:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-176
2018-11-23 08:22:06,821:INFO: Epoch 177/10000
2018-11-23 08:26:38,703:INFO: - Train metrics: accuracy: 0.506 ; loss: 195.787
2018-11-23 08:27:17,877:INFO: - Eval metrics: accuracy: 0.515 ; loss: 142.961
2018-11-23 08:27:18,508:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-177
2018-11-23 08:27:18,508:INFO: Epoch 178/10000
2018-11-23 08:31:50,917:INFO: - Train metrics: accuracy: 0.508 ; loss: 193.810
2018-11-23 08:32:29,955:INFO: - Eval metrics: accuracy: 0.516 ; loss: 141.336
2018-11-23 08:32:30,749:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-178
2018-11-23 08:32:30,750:INFO: Epoch 179/10000
2018-11-23 08:37:02,669:INFO: - Train metrics: accuracy: 0.509 ; loss: 191.926
2018-11-23 08:37:41,743:INFO: - Eval metrics: accuracy: 0.518 ; loss: 139.788
2018-11-23 08:37:42,365:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-179
2018-11-23 08:37:42,366:INFO: Epoch 180/10000
2018-11-23 08:42:14,168:INFO: - Train metrics: accuracy: 0.510 ; loss: 190.131
2018-11-23 08:42:53,375:INFO: - Eval metrics: accuracy: 0.519 ; loss: 138.317
2018-11-23 08:42:54,006:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-180
2018-11-23 08:42:54,006:INFO: Epoch 181/10000
2018-11-23 08:47:26,397:INFO: - Train metrics: accuracy: 0.511 ; loss: 188.419
2018-11-23 08:48:05,289:INFO: - Eval metrics: accuracy: 0.520 ; loss: 136.921
2018-11-23 08:48:05,952:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-181
2018-11-23 08:48:05,953:INFO: Epoch 182/10000
2018-11-23 08:52:39,183:INFO: - Train metrics: accuracy: 0.513 ; loss: 186.788
2018-11-23 08:53:18,348:INFO: - Eval metrics: accuracy: 0.521 ; loss: 135.597
2018-11-23 08:53:18,979:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-182
2018-11-23 08:53:18,979:INFO: Epoch 183/10000
2018-11-23 08:57:52,204:INFO: - Train metrics: accuracy: 0.514 ; loss: 185.236
2018-11-23 08:58:31,347:INFO: - Eval metrics: accuracy: 0.522 ; loss: 134.344
2018-11-23 08:58:31,972:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-183
2018-11-23 08:58:31,973:INFO: Epoch 184/10000
2018-11-23 09:03:06,011:INFO: - Train metrics: accuracy: 0.515 ; loss: 183.760
2018-11-23 09:03:45,090:INFO: - Eval metrics: accuracy: 0.523 ; loss: 133.167
2018-11-23 09:03:45,796:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-184
2018-11-23 09:03:45,797:INFO: Epoch 185/10000
2018-11-23 09:08:20,723:INFO: - Train metrics: accuracy: 0.515 ; loss: 182.360
2018-11-23 09:08:59,901:INFO: - Eval metrics: accuracy: 0.524 ; loss: 132.061
2018-11-23 09:09:00,535:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-185
2018-11-23 09:09:00,535:INFO: Epoch 186/10000
2018-11-23 09:13:33,971:INFO: - Train metrics: accuracy: 0.516 ; loss: 181.036
2018-11-23 09:14:13,005:INFO: - Eval metrics: accuracy: 0.525 ; loss: 131.028
2018-11-23 09:14:13,659:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-186
2018-11-23 09:14:13,659:INFO: Epoch 187/10000
2018-11-23 09:18:46,050:INFO: - Train metrics: accuracy: 0.517 ; loss: 179.787
2018-11-23 09:19:24,911:INFO: - Eval metrics: accuracy: 0.525 ; loss: 130.069
2018-11-23 09:19:25,618:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-187
2018-11-23 09:19:25,619:INFO: Epoch 188/10000
2018-11-23 09:24:00,794:INFO: - Train metrics: accuracy: 0.518 ; loss: 178.613
2018-11-23 09:24:40,058:INFO: - Eval metrics: accuracy: 0.526 ; loss: 129.183
2018-11-23 09:24:40,691:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-188
2018-11-23 09:24:40,691:INFO: Epoch 189/10000
2018-11-23 09:29:15,151:INFO: - Train metrics: accuracy: 0.519 ; loss: 177.515
2018-11-23 09:29:54,070:INFO: - Eval metrics: accuracy: 0.527 ; loss: 128.373
2018-11-23 09:29:54,704:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-189
2018-11-23 09:29:54,704:INFO: Epoch 190/10000
2018-11-23 09:34:29,013:INFO: - Train metrics: accuracy: 0.519 ; loss: 176.494
2018-11-23 09:35:08,105:INFO: - Eval metrics: accuracy: 0.528 ; loss: 127.639
2018-11-23 09:35:08,734:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-190
2018-11-23 09:35:08,735:INFO: Epoch 191/10000
2018-11-23 09:39:41,261:INFO: - Train metrics: accuracy: 0.520 ; loss: 175.551
2018-11-23 09:40:23,726:INFO: - Eval metrics: accuracy: 0.528 ; loss: 126.980
2018-11-23 09:40:24,383:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-191
2018-11-23 09:40:24,397:INFO: Epoch 192/10000
2018-11-23 09:45:23,515:INFO: - Train metrics: accuracy: 0.521 ; loss: 174.685
2018-11-23 09:46:04,200:INFO: - Eval metrics: accuracy: 0.529 ; loss: 126.397
2018-11-23 09:46:05,181:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-192
2018-11-23 09:46:05,194:INFO: Epoch 193/10000
2018-11-23 09:50:51,040:INFO: - Train metrics: accuracy: 0.521 ; loss: 173.898
2018-11-23 09:51:34,495:INFO: - Eval metrics: accuracy: 0.530 ; loss: 125.888
2018-11-23 09:51:35,313:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-193
2018-11-23 09:51:35,313:INFO: Epoch 194/10000
2018-11-23 09:56:37,872:INFO: - Train metrics: accuracy: 0.522 ; loss: 173.188
2018-11-23 09:57:20,791:INFO: - Eval metrics: accuracy: 0.530 ; loss: 125.451
2018-11-23 09:57:21,483:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-194
2018-11-23 09:57:21,484:INFO: Epoch 195/10000
2018-11-23 10:02:22,950:INFO: - Train metrics: accuracy: 0.523 ; loss: 172.554
2018-11-23 10:03:05,878:INFO: - Eval metrics: accuracy: 0.531 ; loss: 125.082
2018-11-23 10:03:06,578:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-195
2018-11-23 10:03:06,579:INFO: Epoch 196/10000
2018-11-23 10:08:09,961:INFO: - Train metrics: accuracy: 0.523 ; loss: 171.992
2018-11-23 10:08:59,785:INFO: - Eval metrics: accuracy: 0.531 ; loss: 124.776
2018-11-23 10:09:00,523:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-196
2018-11-23 10:09:00,524:INFO: Epoch 197/10000
2018-11-23 10:14:02,354:INFO: - Train metrics: accuracy: 0.524 ; loss: 171.500
2018-11-23 10:14:45,292:INFO: - Eval metrics: accuracy: 0.532 ; loss: 124.527
2018-11-23 10:14:45,959:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-197
2018-11-23 10:14:45,960:INFO: Epoch 198/10000
2018-11-23 10:19:46,137:INFO: - Train metrics: accuracy: 0.524 ; loss: 171.074
2018-11-23 10:20:28,903:INFO: - Eval metrics: accuracy: 0.533 ; loss: 124.328
2018-11-23 10:20:29,677:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-198
2018-11-23 10:20:29,678:INFO: Epoch 199/10000
2018-11-23 10:25:31,321:INFO: - Train metrics: accuracy: 0.525 ; loss: 170.706
2018-11-23 10:26:14,280:INFO: - Eval metrics: accuracy: 0.533 ; loss: 124.171
2018-11-23 10:26:14,996:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-199
2018-11-23 10:26:14,996:INFO: Epoch 200/10000
2018-11-23 10:31:15,854:INFO: - Train metrics: accuracy: 0.526 ; loss: 170.390
2018-11-23 10:31:58,595:INFO: - Eval metrics: accuracy: 0.534 ; loss: 124.046
2018-11-23 10:31:59,301:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-200
2018-11-23 10:31:59,301:INFO: Epoch 201/10000
2018-11-23 10:37:01,655:INFO: - Train metrics: accuracy: 0.526 ; loss: 170.118
2018-11-23 10:37:44,416:INFO: - Eval metrics: accuracy: 0.535 ; loss: 123.944
2018-11-23 10:37:45,099:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-201
2018-11-23 10:37:45,099:INFO: Epoch 202/10000
2018-11-23 10:42:48,003:INFO: - Train metrics: accuracy: 0.527 ; loss: 169.882
2018-11-23 10:43:30,769:INFO: - Eval metrics: accuracy: 0.535 ; loss: 123.856
2018-11-23 10:43:31,433:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-202
2018-11-23 10:43:31,434:INFO: Epoch 203/10000
2018-11-23 10:48:34,204:INFO: - Train metrics: accuracy: 0.527 ; loss: 169.673
2018-11-23 10:49:17,049:INFO: - Eval metrics: accuracy: 0.536 ; loss: 123.775
2018-11-23 10:49:17,717:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-203
2018-11-23 10:49:17,718:INFO: Epoch 204/10000
2018-11-23 10:54:19,451:INFO: - Train metrics: accuracy: 0.528 ; loss: 169.484
2018-11-23 10:55:02,101:INFO: - Eval metrics: accuracy: 0.536 ; loss: 123.697
2018-11-23 10:55:02,769:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-204
2018-11-23 10:55:02,770:INFO: Epoch 205/10000
2018-11-23 11:00:05,970:INFO: - Train metrics: accuracy: 0.528 ; loss: 169.309
2018-11-23 11:00:48,905:INFO: - Eval metrics: accuracy: 0.537 ; loss: 123.617
2018-11-23 11:00:49,577:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-205
2018-11-23 11:00:49,578:INFO: Epoch 206/10000
2018-11-23 11:05:51,765:INFO: - Train metrics: accuracy: 0.529 ; loss: 169.143
2018-11-23 11:06:34,575:INFO: - Eval metrics: accuracy: 0.537 ; loss: 123.534
2018-11-23 11:06:35,352:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-206
2018-11-23 11:06:35,353:INFO: Epoch 207/10000
2018-11-23 11:11:36,321:INFO: - Train metrics: accuracy: 0.529 ; loss: 168.984
2018-11-23 11:12:19,369:INFO: - Eval metrics: accuracy: 0.538 ; loss: 123.450
2018-11-23 11:12:20,058:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-207
2018-11-23 11:12:20,059:INFO: Epoch 208/10000
2018-11-23 11:17:21,305:INFO: - Train metrics: accuracy: 0.530 ; loss: 168.828
2018-11-23 11:18:04,230:INFO: - Eval metrics: accuracy: 0.538 ; loss: 123.362
2018-11-23 11:18:04,907:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-208
2018-11-23 11:18:04,907:INFO: Epoch 209/10000
2018-11-23 11:23:05,147:INFO: - Train metrics: accuracy: 0.530 ; loss: 168.675
2018-11-23 11:23:48,188:INFO: - Eval metrics: accuracy: 0.539 ; loss: 123.271
2018-11-23 11:23:48,847:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-209
2018-11-23 11:23:48,848:INFO: Epoch 210/10000
2018-11-23 11:28:51,796:INFO: - Train metrics: accuracy: 0.531 ; loss: 168.524
2018-11-23 11:29:34,635:INFO: - Eval metrics: accuracy: 0.539 ; loss: 123.176
2018-11-23 11:29:35,303:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-210
2018-11-23 11:29:35,304:INFO: Epoch 211/10000
2018-11-23 11:34:37,074:INFO: - Train metrics: accuracy: 0.531 ; loss: 168.374
2018-11-23 11:35:20,124:INFO: - Eval metrics: accuracy: 0.539 ; loss: 123.080
2018-11-23 11:35:20,788:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-211
2018-11-23 11:35:20,789:INFO: Epoch 212/10000
2018-11-23 11:40:22,199:INFO: - Train metrics: accuracy: 0.531 ; loss: 168.225
2018-11-23 11:41:04,883:INFO: - Eval metrics: accuracy: 0.540 ; loss: 122.983
2018-11-23 11:41:05,587:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-212
2018-11-23 11:41:05,588:INFO: Epoch 213/10000
2018-11-23 11:46:06,798:INFO: - Train metrics: accuracy: 0.532 ; loss: 168.077
2018-11-23 11:46:49,938:INFO: - Eval metrics: accuracy: 0.540 ; loss: 122.885
2018-11-23 11:46:50,608:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-213
2018-11-23 11:46:50,608:INFO: Epoch 214/10000
2018-11-23 11:51:54,451:INFO: - Train metrics: accuracy: 0.532 ; loss: 167.929
2018-11-23 11:52:37,436:INFO: - Eval metrics: accuracy: 0.541 ; loss: 122.786
2018-11-23 11:52:38,100:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-214
2018-11-23 11:52:38,101:INFO: Epoch 215/10000
2018-11-23 11:57:39,664:INFO: - Train metrics: accuracy: 0.533 ; loss: 167.782
2018-11-23 11:58:22,545:INFO: - Eval metrics: accuracy: 0.541 ; loss: 122.686
2018-11-23 11:58:23,214:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-215
2018-11-23 11:58:23,215:INFO: Epoch 216/10000
2018-11-23 12:03:24,530:INFO: - Train metrics: accuracy: 0.533 ; loss: 167.636
2018-11-23 12:04:07,513:INFO: - Eval metrics: accuracy: 0.541 ; loss: 122.585
2018-11-23 12:04:08,260:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-216
2018-11-23 12:04:08,261:INFO: Epoch 217/10000
2018-11-23 12:09:10,521:INFO: - Train metrics: accuracy: 0.533 ; loss: 167.490
2018-11-23 12:09:53,390:INFO: - Eval metrics: accuracy: 0.542 ; loss: 122.485
2018-11-23 12:09:54,083:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-217
2018-11-23 12:09:54,083:INFO: Epoch 218/10000
2018-11-23 12:14:54,743:INFO: - Train metrics: accuracy: 0.534 ; loss: 167.345
2018-11-23 12:15:37,815:INFO: - Eval metrics: accuracy: 0.542 ; loss: 122.385
2018-11-23 12:15:38,514:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-218
2018-11-23 12:15:38,514:INFO: Epoch 219/10000
2018-11-23 12:20:40,730:INFO: - Train metrics: accuracy: 0.534 ; loss: 167.201
2018-11-23 12:21:23,616:INFO: - Eval metrics: accuracy: 0.543 ; loss: 122.285
2018-11-23 12:21:24,304:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-219
2018-11-23 12:21:24,305:INFO: Epoch 220/10000
2018-11-23 12:26:25,391:INFO: - Train metrics: accuracy: 0.534 ; loss: 167.057
2018-11-23 12:27:08,460:INFO: - Eval metrics: accuracy: 0.543 ; loss: 122.186
2018-11-23 12:27:09,142:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-220
2018-11-23 12:27:09,142:INFO: Epoch 221/10000
2018-11-23 12:32:09,389:INFO: - Train metrics: accuracy: 0.535 ; loss: 166.915
2018-11-23 12:32:52,212:INFO: - Eval metrics: accuracy: 0.543 ; loss: 122.087
2018-11-23 12:32:52,875:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-221
2018-11-23 12:32:52,876:INFO: Epoch 222/10000
2018-11-23 12:37:54,617:INFO: - Train metrics: accuracy: 0.535 ; loss: 166.773
2018-11-23 12:38:37,817:INFO: - Eval metrics: accuracy: 0.544 ; loss: 121.989
2018-11-23 12:38:38,526:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-222
2018-11-23 12:38:38,527:INFO: Epoch 223/10000
2018-11-23 12:43:40,328:INFO: - Train metrics: accuracy: 0.535 ; loss: 166.633
2018-11-23 12:44:23,430:INFO: - Eval metrics: accuracy: 0.544 ; loss: 121.892
2018-11-23 12:44:24,097:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-223
2018-11-23 12:44:24,098:INFO: Epoch 224/10000
2018-11-23 12:49:25,071:INFO: - Train metrics: accuracy: 0.536 ; loss: 166.492
2018-11-23 12:50:07,549:INFO: - Eval metrics: accuracy: 0.544 ; loss: 121.795
2018-11-23 12:50:08,264:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-224
2018-11-23 12:50:08,264:INFO: Epoch 225/10000
2018-11-23 12:55:09,698:INFO: - Train metrics: accuracy: 0.536 ; loss: 166.353
2018-11-23 12:55:52,440:INFO: - Eval metrics: accuracy: 0.545 ; loss: 121.698
2018-11-23 12:55:53,119:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-225
2018-11-23 12:55:53,119:INFO: Epoch 226/10000
2018-11-23 13:00:53,347:INFO: - Train metrics: accuracy: 0.536 ; loss: 166.215
2018-11-23 13:01:35,843:INFO: - Eval metrics: accuracy: 0.545 ; loss: 121.601
2018-11-23 13:01:36,532:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-226
2018-11-23 13:01:36,533:INFO: Epoch 227/10000
2018-11-23 13:06:35,706:INFO: - Train metrics: accuracy: 0.537 ; loss: 166.078
2018-11-23 13:07:18,477:INFO: - Eval metrics: accuracy: 0.545 ; loss: 121.506
2018-11-23 13:07:19,191:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-227
2018-11-23 13:07:19,192:INFO: Epoch 228/10000
2018-11-23 13:12:19,607:INFO: - Train metrics: accuracy: 0.537 ; loss: 165.941
2018-11-23 13:13:02,217:INFO: - Eval metrics: accuracy: 0.546 ; loss: 121.411
2018-11-23 13:13:02,944:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-228
2018-11-23 13:13:02,945:INFO: Epoch 229/10000
2018-11-23 13:17:56,341:INFO: - Train metrics: accuracy: 0.538 ; loss: 165.805
2018-11-23 13:18:39,021:INFO: - Eval metrics: accuracy: 0.546 ; loss: 121.317
2018-11-23 13:18:39,747:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-229
2018-11-23 13:18:39,748:INFO: Epoch 230/10000
2018-11-23 13:23:44,186:INFO: - Train metrics: accuracy: 0.538 ; loss: 165.670
2018-11-23 13:24:28,733:INFO: - Eval metrics: accuracy: 0.547 ; loss: 121.222
2018-11-23 13:24:29,593:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-230
2018-11-23 13:24:29,593:INFO: Epoch 231/10000
2018-11-23 13:29:30,946:INFO: - Train metrics: accuracy: 0.538 ; loss: 165.536
2018-11-23 13:30:13,032:INFO: - Eval metrics: accuracy: 0.547 ; loss: 121.129
2018-11-23 13:30:13,701:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-231
2018-11-23 13:30:13,701:INFO: Epoch 232/10000
2018-11-23 13:35:14,029:INFO: - Train metrics: accuracy: 0.539 ; loss: 165.403
2018-11-23 13:35:56,341:INFO: - Eval metrics: accuracy: 0.547 ; loss: 121.036
2018-11-23 13:35:57,010:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-232
2018-11-23 13:35:57,011:INFO: Epoch 233/10000
2018-11-23 13:41:01,222:INFO: - Train metrics: accuracy: 0.539 ; loss: 165.270
2018-11-23 13:41:43,872:INFO: - Eval metrics: accuracy: 0.548 ; loss: 120.944
2018-11-23 13:41:44,585:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-233
2018-11-23 13:41:44,585:INFO: Epoch 234/10000
2018-11-23 13:46:41,886:INFO: - Train metrics: accuracy: 0.539 ; loss: 165.139
2018-11-23 13:47:23,715:INFO: - Eval metrics: accuracy: 0.548 ; loss: 120.853
2018-11-23 13:47:24,398:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-234
2018-11-23 13:47:24,398:INFO: Epoch 235/10000
2018-11-23 13:52:22,506:INFO: - Train metrics: accuracy: 0.540 ; loss: 165.008
2018-11-23 13:53:04,687:INFO: - Eval metrics: accuracy: 0.548 ; loss: 120.762
2018-11-23 13:53:05,350:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-235
2018-11-23 13:53:05,350:INFO: Epoch 236/10000
2018-11-23 13:57:59,076:INFO: - Train metrics: accuracy: 0.540 ; loss: 164.878
2018-11-23 13:58:40,711:INFO: - Eval metrics: accuracy: 0.549 ; loss: 120.672
2018-11-23 13:58:41,373:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-236
2018-11-23 13:58:41,382:INFO: Epoch 237/10000
2018-11-23 14:03:37,423:INFO: - Train metrics: accuracy: 0.540 ; loss: 164.748
2018-11-23 14:04:22,232:INFO: - Eval metrics: accuracy: 0.549 ; loss: 120.583
2018-11-23 14:04:23,044:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-237
2018-11-23 14:04:23,053:INFO: Epoch 238/10000
2018-11-23 14:09:30,103:INFO: - Train metrics: accuracy: 0.541 ; loss: 164.620
2018-11-23 14:10:10,053:INFO: - Eval metrics: accuracy: 0.549 ; loss: 120.494
2018-11-23 14:10:10,710:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-238
2018-11-23 14:10:10,711:INFO: Epoch 239/10000
2018-11-23 14:15:07,848:INFO: - Train metrics: accuracy: 0.541 ; loss: 164.492
2018-11-23 14:15:50,799:INFO: - Eval metrics: accuracy: 0.550 ; loss: 120.405
2018-11-23 14:15:51,488:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-239
2018-11-23 14:15:51,488:INFO: Epoch 240/10000
2018-11-23 14:20:46,752:INFO: - Train metrics: accuracy: 0.541 ; loss: 164.365
2018-11-23 14:21:29,321:INFO: - Eval metrics: accuracy: 0.550 ; loss: 120.318
2018-11-23 14:21:30,037:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-240
2018-11-23 14:21:30,038:INFO: Epoch 241/10000
2018-11-23 14:26:30,090:INFO: - Train metrics: accuracy: 0.542 ; loss: 164.239
2018-11-23 14:27:13,786:INFO: - Eval metrics: accuracy: 0.550 ; loss: 120.229
2018-11-23 14:27:23,637:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-241
2018-11-23 14:27:23,637:INFO: Epoch 242/10000
2018-11-23 14:32:19,016:INFO: - Train metrics: accuracy: 0.542 ; loss: 164.114
2018-11-23 14:33:04,246:INFO: - Eval metrics: accuracy: 0.551 ; loss: 120.143
2018-11-23 14:33:05,194:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-242
2018-11-23 14:33:05,209:INFO: Epoch 243/10000
2018-11-23 14:38:05,740:INFO: - Train metrics: accuracy: 0.542 ; loss: 163.989
2018-11-23 14:38:46,821:INFO: - Eval metrics: accuracy: 0.551 ; loss: 120.057
2018-11-23 14:38:47,508:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-243
2018-11-23 14:38:47,509:INFO: Epoch 244/10000
2018-11-23 14:43:46,390:INFO: - Train metrics: accuracy: 0.543 ; loss: 163.865
2018-11-23 14:44:30,961:INFO: - Eval metrics: accuracy: 0.551 ; loss: 119.972
2018-11-23 14:44:32,378:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-244
2018-11-23 14:44:32,410:INFO: Epoch 245/10000
2018-11-23 14:49:28,495:INFO: - Train metrics: accuracy: 0.543 ; loss: 163.742
2018-11-23 14:50:10,179:INFO: - Eval metrics: accuracy: 0.552 ; loss: 119.885
2018-11-23 14:50:10,841:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-245
2018-11-23 14:50:10,841:INFO: Epoch 246/10000
2018-11-23 14:55:03,411:INFO: - Train metrics: accuracy: 0.543 ; loss: 163.620
2018-11-23 14:55:44,543:INFO: - Eval metrics: accuracy: 0.552 ; loss: 119.801
2018-11-23 14:55:45,192:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-246
2018-11-23 14:55:45,193:INFO: Epoch 247/10000
2018-11-23 15:00:40,014:INFO: - Train metrics: accuracy: 0.544 ; loss: 163.498
2018-11-23 15:01:21,610:INFO: - Eval metrics: accuracy: 0.552 ; loss: 119.717
2018-11-23 15:01:22,271:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-247
2018-11-23 15:01:22,272:INFO: Epoch 248/10000
2018-11-23 15:06:16,545:INFO: - Train metrics: accuracy: 0.544 ; loss: 163.378
2018-11-23 15:06:58,272:INFO: - Eval metrics: accuracy: 0.553 ; loss: 119.633
2018-11-23 15:06:58,932:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-248
2018-11-23 15:06:58,932:INFO: Epoch 249/10000
2018-11-23 15:11:52,188:INFO: - Train metrics: accuracy: 0.544 ; loss: 163.258
2018-11-23 15:12:33,889:INFO: - Eval metrics: accuracy: 0.553 ; loss: 119.550
2018-11-23 15:12:34,539:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-249
2018-11-23 15:12:34,547:INFO: Epoch 250/10000
2018-11-23 15:17:26,666:INFO: - Train metrics: accuracy: 0.544 ; loss: 163.138
2018-11-23 15:18:08,071:INFO: - Eval metrics: accuracy: 0.553 ; loss: 119.467
2018-11-23 15:18:08,763:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-250
2018-11-23 15:18:08,764:INFO: Epoch 251/10000
2018-11-23 15:23:01,958:INFO: - Train metrics: accuracy: 0.545 ; loss: 163.020
2018-11-23 15:23:45,421:INFO: - Eval metrics: accuracy: 0.554 ; loss: 119.385
2018-11-23 15:23:46,636:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-251
2018-11-23 15:23:46,660:INFO: Epoch 252/10000
2018-11-23 15:28:42,440:INFO: - Train metrics: accuracy: 0.545 ; loss: 162.902
2018-11-23 15:29:26,687:INFO: - Eval metrics: accuracy: 0.554 ; loss: 119.303
2018-11-23 15:29:27,394:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-252
2018-11-23 15:29:27,394:INFO: Epoch 253/10000
2018-11-23 15:34:27,059:INFO: - Train metrics: accuracy: 0.545 ; loss: 162.784
2018-11-23 15:35:14,171:INFO: - Eval metrics: accuracy: 0.554 ; loss: 119.222
2018-11-23 15:35:14,991:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-253
2018-11-23 15:35:14,992:INFO: Epoch 254/10000
2018-11-23 15:40:11,584:INFO: - Train metrics: accuracy: 0.546 ; loss: 162.668
2018-11-23 15:40:53,104:INFO: - Eval metrics: accuracy: 0.555 ; loss: 119.141
2018-11-23 15:40:53,751:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-254
2018-11-23 15:40:53,752:INFO: Epoch 255/10000
2018-11-23 15:45:46,190:INFO: - Train metrics: accuracy: 0.546 ; loss: 162.552
2018-11-23 15:46:28,118:INFO: - Eval metrics: accuracy: 0.555 ; loss: 119.061
2018-11-23 15:46:28,784:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-255
2018-11-23 15:46:28,784:INFO: Epoch 256/10000
2018-11-23 15:51:22,263:INFO: - Train metrics: accuracy: 0.546 ; loss: 162.437
2018-11-23 15:52:04,282:INFO: - Eval metrics: accuracy: 0.555 ; loss: 118.981
2018-11-23 15:52:04,970:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-256
2018-11-23 15:52:04,971:INFO: Epoch 257/10000
2018-11-23 15:56:58,454:INFO: - Train metrics: accuracy: 0.547 ; loss: 162.322
2018-11-23 15:57:43,646:INFO: - Eval metrics: accuracy: 0.556 ; loss: 118.901
2018-11-23 15:57:44,339:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-257
2018-11-23 15:57:44,339:INFO: Epoch 258/10000
2018-11-23 16:02:44,139:INFO: - Train metrics: accuracy: 0.547 ; loss: 162.209
2018-11-23 16:03:26,031:INFO: - Eval metrics: accuracy: 0.556 ; loss: 118.822
2018-11-23 16:03:26,725:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-258
2018-11-23 16:03:26,725:INFO: Epoch 259/10000
2018-11-23 16:08:20,550:INFO: - Train metrics: accuracy: 0.547 ; loss: 162.095
2018-11-23 16:09:02,116:INFO: - Eval metrics: accuracy: 0.556 ; loss: 118.743
2018-11-23 16:09:02,771:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-259
2018-11-23 16:09:02,771:INFO: Epoch 260/10000
2018-11-23 16:13:58,517:INFO: - Train metrics: accuracy: 0.548 ; loss: 161.983
2018-11-23 16:14:43,739:INFO: - Eval metrics: accuracy: 0.556 ; loss: 118.666
2018-11-23 16:14:44,424:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-260
2018-11-23 16:14:44,424:INFO: Epoch 261/10000
2018-11-23 16:19:30,984:INFO: - Train metrics: accuracy: 0.548 ; loss: 161.871
2018-11-23 16:20:09,227:INFO: - Eval metrics: accuracy: 0.557 ; loss: 118.589
2018-11-23 16:20:09,839:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-261
2018-11-23 16:20:09,840:INFO: Epoch 262/10000
2018-11-23 16:24:44,144:INFO: - Train metrics: accuracy: 0.548 ; loss: 161.760
2018-11-23 16:25:23,266:INFO: - Eval metrics: accuracy: 0.557 ; loss: 118.512
2018-11-23 16:25:23,880:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-262
2018-11-23 16:25:23,880:INFO: Epoch 263/10000
2018-11-23 16:29:58,380:INFO: - Train metrics: accuracy: 0.548 ; loss: 161.650
2018-11-23 16:30:36,585:INFO: - Eval metrics: accuracy: 0.557 ; loss: 118.435
2018-11-23 16:30:37,199:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-263
2018-11-23 16:30:37,199:INFO: Epoch 264/10000
2018-11-23 16:35:11,634:INFO: - Train metrics: accuracy: 0.549 ; loss: 161.540
2018-11-23 16:35:50,720:INFO: - Eval metrics: accuracy: 0.558 ; loss: 118.359
2018-11-23 16:35:51,700:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-264
2018-11-23 16:35:51,701:INFO: Epoch 265/10000
2018-11-23 16:40:26,156:INFO: - Train metrics: accuracy: 0.549 ; loss: 161.431
2018-11-23 16:41:05,171:INFO: - Eval metrics: accuracy: 0.558 ; loss: 118.283
2018-11-23 16:41:05,800:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-265
2018-11-23 16:41:05,800:INFO: Epoch 266/10000
2018-11-23 16:45:40,280:INFO: - Train metrics: accuracy: 0.549 ; loss: 161.323
2018-11-23 16:46:19,292:INFO: - Eval metrics: accuracy: 0.558 ; loss: 118.208
2018-11-23 16:46:19,910:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-266
2018-11-23 16:46:19,911:INFO: Epoch 267/10000
2018-11-23 16:50:54,555:INFO: - Train metrics: accuracy: 0.550 ; loss: 161.214
2018-11-23 16:51:33,551:INFO: - Eval metrics: accuracy: 0.559 ; loss: 118.133
2018-11-23 16:51:34,165:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-267
2018-11-23 16:51:34,166:INFO: Epoch 268/10000
2018-11-23 16:56:14,770:INFO: - Train metrics: accuracy: 0.550 ; loss: 161.107
2018-11-23 16:56:57,461:INFO: - Eval metrics: accuracy: 0.559 ; loss: 118.058
2018-11-23 16:56:58,156:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-268
2018-11-23 16:56:58,156:INFO: Epoch 269/10000
2018-11-23 17:01:57,028:INFO: - Train metrics: accuracy: 0.550 ; loss: 161.001
2018-11-23 17:02:40,245:INFO: - Eval metrics: accuracy: 0.559 ; loss: 117.984
2018-11-23 17:02:40,915:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-269
2018-11-23 17:02:40,915:INFO: Epoch 270/10000
2018-11-23 17:07:41,075:INFO: - Train metrics: accuracy: 0.550 ; loss: 160.895
2018-11-23 17:08:24,024:INFO: - Eval metrics: accuracy: 0.559 ; loss: 117.910
2018-11-23 17:08:24,696:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-270
2018-11-23 17:08:24,697:INFO: Epoch 271/10000
2018-11-23 17:13:19,470:INFO: - Train metrics: accuracy: 0.551 ; loss: 160.790
2018-11-23 17:14:01,358:INFO: - Eval metrics: accuracy: 0.560 ; loss: 117.837
2018-11-23 17:14:02,123:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-271
2018-11-23 17:14:02,123:INFO: Epoch 272/10000
2018-11-23 17:18:50,858:INFO: - Train metrics: accuracy: 0.551 ; loss: 160.685
2018-11-23 17:19:32,799:INFO: - Eval metrics: accuracy: 0.560 ; loss: 117.764
2018-11-23 17:19:33,486:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-272
2018-11-23 17:19:33,487:INFO: Epoch 273/10000
2018-11-23 17:19:39,684:INFO: Creating the datasets...
2018-11-23 17:19:45,253:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:19:45,605:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:19:45,653:INFO: - done.
2018-11-23 17:19:45,653:INFO: Creating the model...
2018-11-23 17:19:45,924:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:298: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:19:47,744:INFO: - done.
2018-11-23 17:19:47,744:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:19:48,065:INFO: Restoring parameters from experiments/last_weights
2018-11-23 17:19:48,102:INFO: Restoring parameters from experiments/last_weights/after-epoch-272
2018-11-23 17:19:48,903:INFO: Epoch 273/10272
2018-11-23 17:21:10,907:INFO: Creating the datasets...
2018-11-23 17:21:12,684:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:21:13,031:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:21:13,101:INFO: - done.
2018-11-23 17:21:13,101:INFO: Creating the model...
2018-11-23 17:21:13,372:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:311: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:21:15,337:INFO: - done.
2018-11-23 17:21:15,337:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:21:15,472:INFO: Restoring parameters from experiments/last_weights
2018-11-23 17:21:15,474:INFO: Restoring parameters from experiments/last_weights/after-epoch-272
2018-11-23 17:21:16,289:INFO: Epoch 273/10272
2018-11-23 17:22:37,978:INFO: Creating the datasets...
2018-11-23 17:22:39,782:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:22:40,107:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:22:40,154:INFO: - done.
2018-11-23 17:22:40,155:INFO: Creating the model...
2018-11-23 17:22:40,294:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:285: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:22:42,122:INFO: - done.
2018-11-23 17:22:42,122:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:22:42,245:INFO: Restoring parameters from experiments/last_weights
2018-11-23 17:22:42,248:INFO: Restoring parameters from experiments/last_weights/after-epoch-272
2018-11-23 17:22:43,046:INFO: Epoch 273/10272
2018-11-23 17:24:54,155:INFO: Creating the datasets...
2018-11-23 17:24:55,965:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:24:56,301:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:24:56,361:INFO: - done.
2018-11-23 17:24:56,362:INFO: Creating the model...
2018-11-23 17:25:24,607:INFO: Creating the datasets...
2018-11-23 17:25:26,424:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:25:26,750:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:25:26,796:INFO: - done.
2018-11-23 17:25:26,797:INFO: Creating the model...
2018-11-23 17:25:26,916:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:285: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:25:28,736:INFO: - done.
2018-11-23 17:25:28,736:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:25:28,855:INFO: Restoring parameters from experiments/last_weights
2018-11-23 17:25:28,866:INFO: Restoring parameters from experiments/last_weights/after-epoch-272
2018-11-23 17:25:29,656:INFO: Epoch 273/10272
2018-11-23 17:25:51,974:INFO: Creating the datasets...
2018-11-23 17:25:53,746:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:25:54,067:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:25:54,113:INFO: - done.
2018-11-23 17:25:54,114:INFO: Creating the model...
2018-11-23 17:25:54,234:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:285: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:25:56,064:INFO: - done.
2018-11-23 17:25:56,064:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:25:56,199:INFO: Restoring parameters from experiments/last_weights
2018-11-23 17:25:56,202:INFO: Restoring parameters from experiments/last_weights/after-epoch-272
2018-11-23 17:25:57,142:INFO: Epoch 273/10272
2018-11-23 17:26:09,813:INFO: Creating the datasets...
2018-11-23 17:26:11,602:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:26:11,959:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:26:12,006:INFO: - done.
2018-11-23 17:26:12,006:INFO: Creating the model...
2018-11-23 17:26:12,126:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:285: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:26:14,221:INFO: - done.
2018-11-23 17:26:14,221:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:26:14,349:INFO: Restoring parameters from experiments/last_weights
2018-11-23 17:26:14,352:INFO: Restoring parameters from experiments/last_weights/after-epoch-272
2018-11-23 17:26:15,187:INFO: Epoch 273/10272
2018-11-23 17:26:56,075:INFO: Creating the datasets...
2018-11-23 17:26:57,871:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:26:58,194:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:26:58,240:INFO: - done.
2018-11-23 17:26:58,240:INFO: Creating the model...
2018-11-23 17:26:58,359:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:285: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:27:00,169:INFO: - done.
2018-11-23 17:27:00,169:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:27:00,300:INFO: Restoring parameters from experiments/last_weights
2018-11-23 17:27:00,303:INFO: Restoring parameters from experiments/last_weights/after-epoch-272
2018-11-23 17:27:01,108:INFO: Epoch 273/10272
2018-11-23 17:30:18,568:INFO: Creating the datasets...
2018-11-23 17:30:20,448:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:30:20,773:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:30:20,821:INFO: - done.
2018-11-23 17:30:20,822:INFO: Creating the model...
2018-11-23 17:30:20,943:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:285: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:30:22,804:INFO: - done.
2018-11-23 17:30:22,804:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:30:22,928:INFO: Restoring parameters from experiments/last_weights
2018-11-23 17:30:22,936:INFO: Restoring parameters from experiments/last_weights/after-epoch-272
2018-11-23 17:30:23,751:INFO: Epoch 273/10272
2018-11-23 17:32:13,968:INFO: Creating the datasets...
2018-11-23 17:32:15,836:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:32:16,174:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:32:16,223:INFO: - done.
2018-11-23 17:32:16,223:INFO: Creating the model...
2018-11-23 17:32:16,393:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:304: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:32:18,185:INFO: - done.
2018-11-23 17:32:18,185:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:32:18,315:INFO: Restoring parameters from experiments/last_weights
2018-11-23 17:32:18,318:INFO: Restoring parameters from experiments/last_weights/after-epoch-272
2018-11-23 17:32:19,139:INFO: Epoch 273/10272
2018-11-23 17:37:21,245:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 17:38:04,710:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 17:38:05,298:INFO: Epoch 274/10272
2018-11-23 17:39:30,515:INFO: Creating the datasets...
2018-11-23 17:39:32,383:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:39:32,731:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:39:32,777:INFO: - done.
2018-11-23 17:39:32,777:INFO: Creating the model...
2018-11-23 17:39:32,948:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:307: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:39:34,886:INFO: - done.
2018-11-23 17:39:34,886:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:39:35,013:INFO: Restoring parameters from experiments/last_weights
2018-11-23 17:39:35,016:INFO: Restoring parameters from experiments/last_weights/after-epoch-273
2018-11-23 17:39:35,832:INFO: Epoch 274/10273
2018-11-23 17:40:10,684:INFO: Creating the datasets...
2018-11-23 17:40:12,494:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:40:12,820:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:40:12,868:INFO: - done.
2018-11-23 17:40:12,869:INFO: Creating the model...
2018-11-23 17:40:13,042:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:307: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:40:15,270:INFO: - done.
2018-11-23 17:40:15,271:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:40:16,181:INFO: Epoch 1/10000
2018-11-23 17:40:57,301:INFO: Creating the datasets...
2018-11-23 17:40:59,073:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:40:59,392:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:40:59,439:INFO: - done.
2018-11-23 17:40:59,440:INFO: Creating the model...
2018-11-23 17:40:59,610:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:307: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:41:01,562:INFO: - done.
2018-11-23 17:41:01,562:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:41:02,563:INFO: Epoch 1/10000
2018-11-23 17:42:41,176:INFO: Creating the datasets...
2018-11-23 17:42:43,137:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:42:43,458:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:42:43,505:INFO: - done.
2018-11-23 17:42:43,505:INFO: Creating the model...
2018-11-23 17:42:43,675:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:307: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:42:45,658:INFO: - done.
2018-11-23 17:42:45,658:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:42:46,570:INFO: Epoch 1/10000
2018-11-23 17:43:55,575:INFO: Creating the datasets...
2018-11-23 17:43:57,359:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:43:57,683:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:43:57,731:INFO: - done.
2018-11-23 17:43:57,731:INFO: Creating the model...
2018-11-23 17:43:57,905:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:307: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:44:00,012:INFO: - done.
2018-11-23 17:44:00,012:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:44:01,086:INFO: Epoch 1/10000
2018-11-23 17:44:24,976:INFO: Creating the datasets...
2018-11-23 17:44:26,772:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:44:27,185:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:44:27,232:INFO: - done.
2018-11-23 17:44:27,232:INFO: Creating the model...
2018-11-23 17:44:27,334:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:44:29,383:INFO: - done.
2018-11-23 17:44:29,383:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:44:30,330:INFO: Epoch 1/10000
2018-11-23 17:45:21,172:INFO: Creating the datasets...
2018-11-23 17:45:23,009:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:45:23,331:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:45:23,378:INFO: - done.
2018-11-23 17:45:23,378:INFO: Creating the model...
2018-11-23 17:45:23,479:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:45:25,514:INFO: - done.
2018-11-23 17:45:25,514:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:45:26,439:INFO: Epoch 1/10000
2018-11-23 17:46:06,283:INFO: Creating the datasets...
2018-11-23 17:46:08,112:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:46:08,445:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:46:08,493:INFO: - done.
2018-11-23 17:46:08,493:INFO: Creating the model...
2018-11-23 17:46:08,594:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:46:10,733:INFO: - done.
2018-11-23 17:46:10,734:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:46:11,664:INFO: Epoch 1/10000
2018-11-23 17:46:46,861:INFO: Creating the datasets...
2018-11-23 17:46:48,627:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:46:48,956:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:46:49,004:INFO: - done.
2018-11-23 17:46:49,004:INFO: Creating the model...
2018-11-23 17:46:49,106:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:46:51,174:INFO: - done.
2018-11-23 17:46:51,175:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:46:52,175:INFO: Epoch 1/10000
2018-11-23 17:47:41,383:INFO: Creating the datasets...
2018-11-23 17:47:43,362:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:47:43,699:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:47:43,746:INFO: - done.
2018-11-23 17:47:43,746:INFO: Creating the model...
2018-11-23 17:47:43,849:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:48:25,268:INFO: Creating the datasets...
2018-11-23 17:48:27,065:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:48:27,391:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:48:27,439:INFO: - done.
2018-11-23 17:48:27,439:INFO: Creating the model...
2018-11-23 17:48:27,540:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:48:29,623:INFO: - done.
2018-11-23 17:48:29,623:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:48:30,558:INFO: Epoch 1/10000
2018-11-23 17:49:37,102:INFO: Creating the datasets...
2018-11-23 17:49:38,877:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:49:39,223:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:49:39,282:INFO: - done.
2018-11-23 17:49:39,282:INFO: Creating the model...
2018-11-23 17:49:39,399:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:49:41,568:INFO: - done.
2018-11-23 17:49:41,568:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:49:42,519:INFO: Epoch 1/10000
2018-11-23 17:49:59,080:INFO: Creating the datasets...
2018-11-23 17:50:00,896:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:50:01,221:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:50:01,270:INFO: - done.
2018-11-23 17:50:01,270:INFO: Creating the model...
2018-11-23 17:50:01,372:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:50:03,435:INFO: - done.
2018-11-23 17:50:03,435:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:50:04,361:INFO: Epoch 1/10000
2018-11-23 17:50:40,295:INFO: Creating the datasets...
2018-11-23 17:50:42,157:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:50:42,514:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:50:42,569:INFO: - done.
2018-11-23 17:50:42,569:INFO: Creating the model...
2018-11-23 17:51:23,991:INFO: Creating the datasets...
2018-11-23 17:51:25,826:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:51:26,151:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:51:26,198:INFO: - done.
2018-11-23 17:51:26,198:INFO: Creating the model...
2018-11-23 17:51:59,252:INFO: Creating the datasets...
2018-11-23 17:52:01,047:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:52:01,373:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:52:01,422:INFO: - done.
2018-11-23 17:52:01,422:INFO: Creating the model...
2018-11-23 17:52:01,526:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:52:03,571:INFO: - done.
2018-11-23 17:52:03,571:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:52:04,494:INFO: Epoch 1/10000
2018-11-23 17:52:44,930:INFO: Creating the datasets...
2018-11-23 17:52:46,719:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:52:47,044:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:52:47,091:INFO: - done.
2018-11-23 17:52:47,091:INFO: Creating the model...
2018-11-23 17:52:47,195:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:52:49,318:INFO: - done.
2018-11-23 17:52:49,319:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:52:50,643:INFO: Epoch 1/10000
2018-11-23 17:53:40,975:INFO: Creating the datasets...
2018-11-23 17:53:42,845:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:53:43,190:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:53:43,259:INFO: - done.
2018-11-23 17:53:43,259:INFO: Creating the model...
2018-11-23 17:53:43,412:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:53:45,589:INFO: - done.
2018-11-23 17:53:45,589:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:53:46,645:INFO: Epoch 1/10000
2018-11-23 17:54:32,100:INFO: Creating the datasets...
2018-11-23 17:54:33,907:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:54:34,236:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:54:34,282:INFO: - done.
2018-11-23 17:54:34,282:INFO: Creating the model...
2018-11-23 17:54:34,386:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:54:36,454:INFO: - done.
2018-11-23 17:54:36,455:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:54:37,358:INFO: Epoch 1/10000
2018-11-23 17:58:30,335:INFO: Creating the datasets...
2018-11-23 17:58:32,164:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 17:58:32,485:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 17:58:32,532:INFO: - done.
2018-11-23 17:58:32,532:INFO: Creating the model...
2018-11-23 17:58:32,634:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 17:58:34,694:INFO: - done.
2018-11-23 17:58:34,694:INFO: Starting training for 10000 epoch(s)
2018-11-23 17:58:35,608:INFO: Epoch 1/10000
2018-11-23 18:02:29,381:INFO: Creating the datasets...
2018-11-23 18:02:31,209:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 18:02:31,533:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 18:02:31,585:INFO: - done.
2018-11-23 18:02:31,586:INFO: Creating the model...
2018-11-23 18:02:31,689:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 18:02:33,781:INFO: - done.
2018-11-23 18:02:33,781:INFO: Starting training for 10000 epoch(s)
2018-11-23 18:02:34,698:INFO: Epoch 1/10000
2018-11-23 18:03:42,195:INFO: Creating the datasets...
2018-11-23 18:03:43,982:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 18:03:44,302:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 18:03:44,348:INFO: - done.
2018-11-23 18:03:44,348:INFO: Creating the model...
2018-11-23 18:03:44,450:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 18:03:46,534:INFO: - done.
2018-11-23 18:03:46,534:INFO: Starting training for 10000 epoch(s)
2018-11-23 18:03:47,583:INFO: Epoch 1/10000
2018-11-23 18:09:24,134:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 18:09:36,026:INFO: Creating the datasets...
2018-11-23 18:09:37,819:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 18:09:38,150:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 18:09:38,199:INFO: - done.
2018-11-23 18:09:38,199:INFO: Creating the model...
2018-11-23 18:09:38,302:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 18:09:40,418:INFO: - done.
2018-11-23 18:09:40,418:INFO: Starting training for 10000 epoch(s)
2018-11-23 18:09:41,377:INFO: Epoch 1/10000
2018-11-23 18:15:13,567:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 18:16:03,232:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 18:16:03,847:INFO: Epoch 2/10000
2018-11-23 18:18:09,502:INFO: Creating the datasets...
2018-11-23 18:18:11,489:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-23 18:18:11,815:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-23 18:18:11,863:INFO: - done.
2018-11-23 18:18:11,863:INFO: Creating the model...
2018-11-23 18:18:11,966:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-23 18:18:14,203:INFO: - done.
2018-11-23 18:18:14,203:INFO: Starting training for 10000 epoch(s)
2018-11-23 18:18:15,222:INFO: Epoch 1/10000
2018-11-23 18:24:08,139:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.972
2018-11-23 18:25:05,122:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.925
2018-11-23 18:25:06,141:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-23 18:25:06,142:INFO: Epoch 2/10000
2018-11-23 18:30:55,072:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.525
2018-11-23 18:31:51,572:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.482
2018-11-23 18:31:52,400:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-23 18:31:52,400:INFO: Epoch 3/10000
2018-11-23 18:37:39,618:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.054
2018-11-23 18:38:36,130:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.017
2018-11-23 18:38:36,961:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-23 18:38:36,961:INFO: Epoch 4/10000
2018-11-23 18:44:23,855:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.538
2018-11-23 18:45:20,210:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1475.488
2018-11-23 18:45:21,037:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-23 18:45:21,038:INFO: Epoch 5/10000
2018-11-23 18:51:07,765:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.951
2018-11-23 18:52:04,207:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.851
2018-11-23 18:52:05,034:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-23 18:52:05,035:INFO: Epoch 6/10000
2018-11-23 18:57:51,760:INFO: - Train metrics: accuracy: 0.007 ; loss: 1556.271
2018-11-23 18:58:48,122:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.103
2018-11-23 18:58:48,963:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-23 18:58:48,963:INFO: Epoch 7/10000
2018-11-23 19:04:33,161:INFO: - Train metrics: accuracy: 0.008 ; loss: 1555.486
2018-11-23 19:05:29,408:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.250
2018-11-23 19:05:30,244:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-23 19:05:30,245:INFO: Epoch 8/10000
2018-11-23 19:11:18,211:INFO: - Train metrics: accuracy: 0.009 ; loss: 1554.610
2018-11-23 19:12:14,296:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.324
2018-11-23 19:12:15,102:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-23 19:12:15,102:INFO: Epoch 9/10000
2018-11-23 19:17:59,774:INFO: - Train metrics: accuracy: 0.010 ; loss: 1553.641
2018-11-23 19:18:55,974:INFO: - Eval metrics: accuracy: 0.010 ; loss: 1471.318
2018-11-23 19:18:56,807:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-23 19:18:56,807:INFO: Epoch 10/10000
2018-11-23 19:24:41,158:INFO: - Train metrics: accuracy: 0.011 ; loss: 1552.574
2018-11-23 19:25:37,367:INFO: - Eval metrics: accuracy: 0.012 ; loss: 1470.231
2018-11-23 19:25:38,220:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-23 19:25:38,220:INFO: Epoch 11/10000
2018-11-23 19:31:22,969:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 19:32:19,383:INFO: - Eval metrics: accuracy: 0.012 ; loss: 1469.521
2018-11-23 19:32:20,219:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-23 19:32:20,220:INFO: Epoch 12/10000
2018-11-23 19:38:06,126:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 19:39:02,336:INFO: - Eval metrics: accuracy: 0.013 ; loss: 1468.812
2018-11-23 19:39:03,141:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-23 19:39:03,142:INFO: Epoch 13/10000
2018-11-23 19:44:48,555:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 19:45:44,038:INFO: - Eval metrics: accuracy: 0.013 ; loss: 1468.397
2018-11-23 19:45:44,812:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-23 19:45:44,813:INFO: Epoch 14/10000
2018-11-23 19:51:24,869:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 19:52:18,638:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 19:52:19,214:INFO: Epoch 15/10000
2018-11-23 19:57:55,447:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 19:58:46,838:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 19:58:47,369:INFO: Epoch 16/10000
2018-11-23 20:04:14,882:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:05:03,896:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:05:04,362:INFO: Epoch 17/10000
2018-11-23 20:10:29,024:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:11:17,497:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:11:17,987:INFO: Epoch 18/10000
2018-11-23 20:16:41,506:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:17:29,152:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:17:29,637:INFO: Epoch 19/10000
2018-11-23 20:22:49,352:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:23:36,327:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:23:36,814:INFO: Epoch 20/10000
2018-11-23 20:28:53,986:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:29:40,104:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:29:40,607:INFO: Epoch 21/10000
2018-11-23 20:34:56,389:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:35:42,342:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:35:42,828:INFO: Epoch 22/10000
2018-11-23 20:40:56,560:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:41:41,473:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:41:41,954:INFO: Epoch 23/10000
2018-11-23 20:46:53,857:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:47:38,292:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:47:38,769:INFO: Epoch 24/10000
2018-11-23 20:52:48,567:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:53:32,385:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:53:32,859:INFO: Epoch 25/10000
2018-11-23 20:58:44,444:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:59:28,292:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 20:59:28,790:INFO: Epoch 26/10000
2018-11-23 21:04:40,426:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:05:23,976:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:05:24,453:INFO: Epoch 27/10000
2018-11-23 21:10:35,323:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:11:18,935:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:11:19,414:INFO: Epoch 28/10000
2018-11-23 21:16:31,105:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:17:14,848:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:17:15,333:INFO: Epoch 29/10000
2018-11-23 21:22:28,883:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:23:12,789:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:23:13,274:INFO: Epoch 30/10000
2018-11-23 21:28:24,987:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:29:08,629:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:29:09,128:INFO: Epoch 31/10000
2018-11-23 21:34:20,793:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:35:04,529:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:35:05,010:INFO: Epoch 32/10000
2018-11-23 21:40:15,513:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:40:59,172:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:40:59,640:INFO: Epoch 33/10000
2018-11-23 21:46:10,897:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:46:54,442:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:46:54,915:INFO: Epoch 34/10000
2018-11-23 21:52:04,070:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:52:47,497:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:52:47,967:INFO: Epoch 35/10000
2018-11-23 21:57:58,159:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:58:41,625:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 21:58:42,089:INFO: Epoch 36/10000
2018-11-23 22:03:51,177:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:04:34,566:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:04:35,042:INFO: Epoch 37/10000
2018-11-23 22:09:42,375:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:10:26,157:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:10:26,634:INFO: Epoch 38/10000
2018-11-23 22:15:35,597:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:16:19,079:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:16:19,567:INFO: Epoch 39/10000
2018-11-23 22:21:28,867:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:22:12,473:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:22:12,948:INFO: Epoch 40/10000
2018-11-23 22:27:21,663:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:28:05,118:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:28:05,600:INFO: Epoch 41/10000
2018-11-23 22:33:14,187:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:33:57,730:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:33:58,198:INFO: Epoch 42/10000
2018-11-23 22:39:06,775:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:39:50,481:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:39:50,989:INFO: Epoch 43/10000
2018-11-23 22:45:01,316:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:45:45,005:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:45:45,470:INFO: Epoch 44/10000
2018-11-23 22:50:54,585:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:51:38,204:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:51:38,681:INFO: Epoch 45/10000
2018-11-23 22:56:48,026:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:57:31,592:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 22:57:32,090:INFO: Epoch 46/10000
2018-11-23 23:02:42,864:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:03:26,579:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:03:27,061:INFO: Epoch 47/10000
2018-11-23 23:08:39,103:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:09:22,648:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:09:23,129:INFO: Epoch 48/10000
2018-11-23 23:14:33,484:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:15:17,242:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:15:17,726:INFO: Epoch 49/10000
2018-11-23 23:20:28,403:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:21:12,093:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:21:12,568:INFO: Epoch 50/10000
2018-11-23 23:26:23,380:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:27:07,026:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:27:07,492:INFO: Epoch 51/10000
2018-11-23 23:32:18,002:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:33:01,585:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:33:02,061:INFO: Epoch 52/10000
2018-11-23 23:38:12,493:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:38:56,037:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:38:56,524:INFO: Epoch 53/10000
2018-11-23 23:44:07,329:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:44:50,885:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:44:51,369:INFO: Epoch 54/10000
2018-11-23 23:50:01,149:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:50:44,885:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:50:45,354:INFO: Epoch 55/10000
2018-11-23 23:55:55,541:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:56:39,093:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-23 23:56:39,580:INFO: Epoch 56/10000
2018-11-24 00:01:50,245:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:02:34,034:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:02:34,526:INFO: Epoch 57/10000
2018-11-24 00:07:46,257:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:08:30,041:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:08:30,526:INFO: Epoch 58/10000
2018-11-24 00:13:39,639:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:14:23,097:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:14:23,583:INFO: Epoch 59/10000
2018-11-24 00:19:33,375:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:20:17,011:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:20:17,500:INFO: Epoch 60/10000
2018-11-24 00:25:28,602:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:26:12,351:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:26:12,826:INFO: Epoch 61/10000
2018-11-24 00:31:25,080:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:32:08,627:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:32:09,101:INFO: Epoch 62/10000
2018-11-24 00:37:18,263:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:38:01,831:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:38:02,318:INFO: Epoch 63/10000
2018-11-24 00:43:12,802:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:43:56,532:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:43:57,008:INFO: Epoch 64/10000
2018-11-24 00:49:06,457:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:49:50,093:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:49:50,576:INFO: Epoch 65/10000
2018-11-24 00:55:01,060:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:55:44,732:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 00:55:45,220:INFO: Epoch 66/10000
2018-11-24 01:00:54,347:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:01:38,085:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:01:38,578:INFO: Epoch 67/10000
2018-11-24 01:06:49,952:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:07:33,627:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:07:34,116:INFO: Epoch 68/10000
2018-11-24 01:12:45,594:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:13:29,307:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:13:29,781:INFO: Epoch 69/10000
2018-11-24 01:18:41,263:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:19:24,919:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:19:25,414:INFO: Epoch 70/10000
2018-11-24 01:24:37,514:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:25:21,425:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:25:21,886:INFO: Epoch 71/10000
2018-11-24 01:30:34,493:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:31:18,138:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:31:18,607:INFO: Epoch 72/10000
2018-11-24 01:36:30,159:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:37:13,940:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:37:14,423:INFO: Epoch 73/10000
2018-11-24 01:42:26,466:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:43:10,164:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:43:10,645:INFO: Epoch 74/10000
2018-11-24 01:48:21,348:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:49:05,109:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:49:05,588:INFO: Epoch 75/10000
2018-11-24 01:54:16,035:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:54:59,746:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 01:55:00,226:INFO: Epoch 76/10000
2018-11-24 02:00:12,551:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:00:56,304:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:00:56,780:INFO: Epoch 77/10000
2018-11-24 02:06:10,604:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:06:54,386:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:06:54,867:INFO: Epoch 78/10000
2018-11-24 02:12:07,685:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:12:51,462:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:12:51,953:INFO: Epoch 79/10000
2018-11-24 02:18:04,590:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:18:48,225:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:18:48,703:INFO: Epoch 80/10000
2018-11-24 02:24:00,520:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:24:44,127:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:24:44,609:INFO: Epoch 81/10000
2018-11-24 02:29:56,085:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:30:39,565:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:30:40,035:INFO: Epoch 82/10000
2018-11-24 02:35:53,371:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:36:37,184:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:36:37,662:INFO: Epoch 83/10000
2018-11-24 02:41:52,072:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:42:35,829:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:42:36,313:INFO: Epoch 84/10000
2018-11-24 02:47:50,178:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:48:34,132:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:48:34,617:INFO: Epoch 85/10000
2018-11-24 02:53:46,925:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:54:30,702:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 02:54:31,192:INFO: Epoch 86/10000
2018-11-24 02:59:41,280:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:00:24,813:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:00:25,297:INFO: Epoch 87/10000
2018-11-24 03:05:36,347:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:06:20,167:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:06:20,648:INFO: Epoch 88/10000
2018-11-24 03:11:30,278:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:12:13,890:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:12:14,381:INFO: Epoch 89/10000
2018-11-24 03:17:26,822:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:18:10,435:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:18:10,912:INFO: Epoch 90/10000
2018-11-24 03:23:22,654:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:24:06,162:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:24:06,652:INFO: Epoch 91/10000
2018-11-24 03:29:17,653:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:30:01,527:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:30:02,009:INFO: Epoch 92/10000
2018-11-24 03:35:12,942:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:35:56,428:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:35:56,904:INFO: Epoch 93/10000
2018-11-24 03:41:09,382:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:41:52,859:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:41:53,342:INFO: Epoch 94/10000
2018-11-24 03:47:02,755:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:47:46,184:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:47:46,661:INFO: Epoch 95/10000
2018-11-24 03:52:57,458:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:53:40,759:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:53:41,223:INFO: Epoch 96/10000
2018-11-24 03:58:51,451:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:59:35,143:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 03:59:35,627:INFO: Epoch 97/10000
2018-11-24 04:04:44,360:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:05:28,230:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:05:28,714:INFO: Epoch 98/10000
2018-11-24 04:10:38,627:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:11:22,058:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:11:22,557:INFO: Epoch 99/10000
2018-11-24 04:16:33,445:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:17:17,132:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:17:17,603:INFO: Epoch 100/10000
2018-11-24 04:22:26,211:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:23:09,949:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:23:10,438:INFO: Epoch 101/10000
2018-11-24 04:28:19,687:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:29:03,248:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:29:03,721:INFO: Epoch 102/10000
2018-11-24 04:34:13,022:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:34:56,505:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:34:56,979:INFO: Epoch 103/10000
2018-11-24 04:40:07,180:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:40:50,607:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:40:51,083:INFO: Epoch 104/10000
2018-11-24 04:46:00,406:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:46:44,256:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:46:44,741:INFO: Epoch 105/10000
2018-11-24 04:51:56,179:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:52:39,809:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:52:40,281:INFO: Epoch 106/10000
2018-11-24 04:57:53,225:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:58:37,086:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 04:58:37,580:INFO: Epoch 107/10000
2018-11-24 05:03:47,833:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:04:31,504:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:04:31,979:INFO: Epoch 108/10000
2018-11-24 05:09:42,477:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:10:26,370:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:10:26,864:INFO: Epoch 109/10000
2018-11-24 05:15:37,059:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:16:20,587:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:16:21,061:INFO: Epoch 110/10000
2018-11-24 05:21:32,426:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:22:16,014:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:22:16,496:INFO: Epoch 111/10000
2018-11-24 05:27:27,135:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:28:10,511:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:28:10,997:INFO: Epoch 112/10000
2018-11-24 05:33:19,528:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:34:02,911:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:34:03,399:INFO: Epoch 113/10000
2018-11-24 05:39:14,495:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:39:57,783:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:39:58,260:INFO: Epoch 114/10000
2018-11-24 05:45:09,853:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:45:53,280:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:45:53,762:INFO: Epoch 115/10000
2018-11-24 05:51:02,713:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:51:46,363:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:51:46,850:INFO: Epoch 116/10000
2018-11-24 05:56:55,967:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:57:39,634:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 05:57:40,126:INFO: Epoch 117/10000
2018-11-24 06:02:49,237:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:03:32,806:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:03:33,283:INFO: Epoch 118/10000
2018-11-24 06:08:40,725:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:09:24,120:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:09:24,599:INFO: Epoch 119/10000
2018-11-24 06:14:34,034:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:15:17,458:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:15:17,941:INFO: Epoch 120/10000
2018-11-24 06:20:26,906:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:21:10,608:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:21:11,084:INFO: Epoch 121/10000
2018-11-24 06:26:19,770:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:27:03,226:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:27:03,719:INFO: Epoch 122/10000
2018-11-24 06:32:11,324:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:32:54,742:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:32:55,222:INFO: Epoch 123/10000
2018-11-24 06:38:03,762:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:38:47,292:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:38:47,770:INFO: Epoch 124/10000
2018-11-24 06:43:58,120:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:44:41,478:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:44:41,970:INFO: Epoch 125/10000
2018-11-24 06:49:50,922:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:50:34,428:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:50:34,901:INFO: Epoch 126/10000
2018-11-24 06:55:45,334:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:56:28,728:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 06:56:29,191:INFO: Epoch 127/10000
2018-11-24 07:01:40,109:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:02:23,855:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:02:24,347:INFO: Epoch 128/10000
2018-11-24 07:07:34,884:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:08:18,574:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:08:19,054:INFO: Epoch 129/10000
2018-11-24 07:13:29,252:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:14:12,846:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:14:13,321:INFO: Epoch 130/10000
2018-11-24 07:19:24,659:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:20:08,364:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:20:08,843:INFO: Epoch 131/10000
2018-11-24 07:25:19,425:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:26:03,149:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:26:03,634:INFO: Epoch 132/10000
2018-11-24 07:31:15,432:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:31:59,177:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:31:59,657:INFO: Epoch 133/10000
2018-11-24 07:37:11,749:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:37:55,413:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:37:55,893:INFO: Epoch 134/10000
2018-11-24 07:43:09,420:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:43:53,329:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:43:53,809:INFO: Epoch 135/10000
2018-11-24 07:49:05,607:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:49:49,258:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:49:49,731:INFO: Epoch 136/10000
2018-11-24 07:54:49,143:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:55:32,260:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 07:55:32,825:INFO: Epoch 137/10000
2018-11-24 08:00:47,425:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:01:31,063:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:01:31,546:INFO: Epoch 138/10000
2018-11-24 08:06:43,956:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:07:27,689:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:07:28,164:INFO: Epoch 139/10000
2018-11-24 08:12:41,225:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:13:24,955:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:13:25,434:INFO: Epoch 140/10000
2018-11-24 08:18:38,919:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:19:22,441:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:19:22,914:INFO: Epoch 141/10000
2018-11-24 08:24:36,514:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:25:20,079:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:25:20,555:INFO: Epoch 142/10000
2018-11-24 08:30:32,424:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:31:16,273:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:31:16,765:INFO: Epoch 143/10000
2018-11-24 08:36:30,518:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:37:14,233:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:37:14,721:INFO: Epoch 144/10000
2018-11-24 08:42:28,353:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:43:12,022:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:43:12,499:INFO: Epoch 145/10000
2018-11-24 08:48:25,317:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:49:09,214:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:49:09,698:INFO: Epoch 146/10000
2018-11-24 08:54:20,465:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:55:03,609:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 08:55:04,095:INFO: Epoch 147/10000
2018-11-24 09:00:15,458:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:00:58,744:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:00:59,219:INFO: Epoch 148/10000
2018-11-24 09:06:07,669:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:06:51,013:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:06:51,498:INFO: Epoch 149/10000
2018-11-24 09:12:03,053:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:12:46,582:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:12:47,046:INFO: Epoch 150/10000
2018-11-24 09:17:57,580:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:18:41,143:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:18:41,618:INFO: Epoch 151/10000
2018-11-24 09:23:51,656:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:24:35,230:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:24:35,719:INFO: Epoch 152/10000
2018-11-24 09:29:48,963:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:30:32,243:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:30:32,718:INFO: Epoch 153/10000
2018-11-24 09:35:42,843:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:36:26,558:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:36:27,041:INFO: Epoch 154/10000
2018-11-24 09:41:40,015:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:42:23,306:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:42:23,793:INFO: Epoch 155/10000
2018-11-24 09:47:35,421:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:48:18,916:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:48:19,401:INFO: Epoch 156/10000
2018-11-24 09:53:31,486:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:54:15,113:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 09:54:15,585:INFO: Epoch 157/10000
2018-11-24 09:59:27,307:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:00:10,739:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:00:11,204:INFO: Epoch 158/10000
2018-11-24 10:05:24,948:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:06:07,572:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:06:08,011:INFO: Epoch 159/10000
2018-11-24 10:11:19,467:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:12:03,138:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:12:03,617:INFO: Epoch 160/10000
2018-11-24 10:17:16,384:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:18:00,175:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:18:00,661:INFO: Epoch 161/10000
2018-11-24 10:23:13,895:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:23:57,580:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:23:58,058:INFO: Epoch 162/10000
2018-11-24 10:29:11,409:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:29:54,853:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:29:55,334:INFO: Epoch 163/10000
2018-11-24 10:35:08,380:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:35:51,705:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:35:52,199:INFO: Epoch 164/10000
2018-11-24 10:41:06,008:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:41:49,556:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:41:50,029:INFO: Epoch 165/10000
2018-11-24 10:47:04,849:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:47:48,553:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:47:49,039:INFO: Epoch 166/10000
2018-11-24 10:53:03,810:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:53:47,341:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:53:47,820:INFO: Epoch 167/10000
2018-11-24 10:59:02,137:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:59:45,730:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 10:59:46,195:INFO: Epoch 168/10000
2018-11-24 11:04:57,863:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:05:41,537:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:05:42,004:INFO: Epoch 169/10000
2018-11-24 11:10:57,240:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:11:40,827:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:11:41,326:INFO: Epoch 170/10000
2018-11-24 11:16:55,175:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:17:38,585:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:17:39,056:INFO: Epoch 171/10000
2018-11-24 11:22:52,246:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:23:35,892:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:23:36,375:INFO: Epoch 172/10000
2018-11-24 11:28:49,353:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:29:33,085:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:29:33,579:INFO: Epoch 173/10000
2018-11-24 11:34:45,214:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:35:28,786:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:35:29,263:INFO: Epoch 174/10000
2018-11-24 11:40:39,376:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:41:22,837:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:41:23,323:INFO: Epoch 175/10000
2018-11-24 11:46:34,041:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:47:17,471:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:47:17,943:INFO: Epoch 176/10000
2018-11-24 11:52:28,906:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:53:12,304:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:53:12,783:INFO: Epoch 177/10000
2018-11-24 11:58:23,464:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:59:07,108:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 11:59:07,588:INFO: Epoch 178/10000
2018-11-24 12:10:59,272:INFO: Creating the datasets...
2018-11-24 12:11:04,508:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-24 12:11:04,844:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-24 12:11:04,892:INFO: - done.
2018-11-24 12:11:04,892:INFO: Creating the model...
2018-11-24 12:11:05,070:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-24 12:11:07,449:INFO: - done.
2018-11-24 12:11:07,449:INFO: Starting training for 10000 epoch(s)
2018-11-24 12:11:08,664:INFO: Epoch 1/10000
2018-11-24 12:11:53,753:INFO: Creating the datasets...
2018-11-24 12:11:55,584:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-24 12:11:56,005:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-24 12:11:56,076:INFO: - done.
2018-11-24 12:11:56,076:INFO: Creating the model...
2018-11-24 12:11:56,201:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-24 12:11:58,333:INFO: - done.
2018-11-24 12:11:58,333:INFO: Starting training for 10000 epoch(s)
2018-11-24 12:11:59,315:INFO: Epoch 1/10000
2018-11-24 12:17:53,971:INFO: - Train metrics: accuracy: 0.002 ; loss: 1559.169
2018-11-24 12:18:50,501:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1477.237
2018-11-24 12:18:51,488:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-24 12:18:51,489:INFO: Epoch 2/10000
2018-11-24 12:24:42,289:INFO: - Train metrics: accuracy: 0.002 ; loss: 1559.139
2018-11-24 12:25:38,535:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1477.211
2018-11-24 12:25:39,390:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-24 12:25:39,390:INFO: Epoch 3/10000
2018-11-24 12:31:31,119:INFO: - Train metrics: accuracy: 0.002 ; loss: 1559.109
2018-11-24 12:32:27,520:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1477.182
2018-11-24 12:32:28,378:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-24 12:32:28,379:INFO: Epoch 4/10000
2018-11-24 12:38:18,452:INFO: - Train metrics: accuracy: 0.002 ; loss: 1559.079
2018-11-24 12:39:14,992:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1477.155
2018-11-24 12:39:15,810:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-24 12:39:15,810:INFO: Epoch 5/10000
2018-11-24 12:45:06,770:INFO: - Train metrics: accuracy: 0.002 ; loss: 1559.048
2018-11-24 12:46:03,546:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1477.129
2018-11-24 12:46:04,378:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-24 12:46:04,379:INFO: Epoch 6/10000
2018-11-24 12:51:56,030:INFO: - Train metrics: accuracy: 0.002 ; loss: 1559.017
2018-11-24 12:52:52,326:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1477.100
2018-11-24 12:52:53,164:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-24 12:52:53,164:INFO: Epoch 7/10000
2018-11-24 12:58:44,697:INFO: - Train metrics: accuracy: 0.002 ; loss: 1558.984
2018-11-24 12:59:40,954:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1477.070
2018-11-24 12:59:41,795:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-24 12:59:41,795:INFO: Epoch 8/10000
2018-11-24 13:05:34,654:INFO: - Train metrics: accuracy: 0.002 ; loss: 1558.953
2018-11-24 13:06:31,023:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1477.042
2018-11-24 13:06:31,880:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-24 13:06:31,881:INFO: Epoch 9/10000
2018-11-24 13:12:23,769:INFO: - Train metrics: accuracy: 0.002 ; loss: 1558.921
2018-11-24 13:13:20,120:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1477.012
2018-11-24 13:13:20,963:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-24 13:13:20,963:INFO: Epoch 10/10000
2018-11-24 13:19:13,841:INFO: - Train metrics: accuracy: 0.002 ; loss: 1558.890
2018-11-24 13:20:10,118:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1476.983
2018-11-24 13:20:10,966:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-24 13:20:10,966:INFO: Epoch 11/10000
2018-11-24 13:26:02,949:INFO: - Train metrics: accuracy: 0.002 ; loss: 1558.860
2018-11-24 13:26:59,544:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1476.953
2018-11-24 13:27:00,404:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-24 13:27:00,404:INFO: Epoch 12/10000
2018-11-24 13:32:53,146:INFO: - Train metrics: accuracy: 0.002 ; loss: 1558.829
2018-11-24 13:33:49,595:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1476.926
2018-11-24 13:33:50,416:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-24 13:33:50,417:INFO: Epoch 13/10000
2018-11-24 13:39:43,835:INFO: - Train metrics: accuracy: 0.002 ; loss: 1558.797
2018-11-24 13:40:40,438:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1476.897
2018-11-24 13:40:41,274:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-24 13:40:41,274:INFO: Epoch 14/10000
2018-11-24 13:46:35,250:INFO: - Train metrics: accuracy: 0.002 ; loss: 1558.764
2018-11-24 13:47:31,550:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1476.866
2018-11-24 13:47:32,387:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-24 13:47:32,388:INFO: Epoch 15/10000
2018-11-24 13:53:26,093:INFO: - Train metrics: accuracy: 0.002 ; loss: 1558.732
2018-11-24 13:54:22,244:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1476.835
2018-11-24 13:54:23,110:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-24 13:54:23,110:INFO: Epoch 16/10000
2018-11-24 14:00:14,103:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.700
2018-11-24 14:01:10,349:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1476.806
2018-11-24 14:01:11,196:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-24 14:01:11,197:INFO: Epoch 17/10000
2018-11-24 14:07:00,500:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.668
2018-11-24 14:07:56,720:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1476.775
2018-11-24 14:07:57,551:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-24 14:07:57,551:INFO: Epoch 18/10000
2018-11-24 14:13:46,583:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.636
2018-11-24 14:14:42,581:INFO: - Eval metrics: accuracy: 0.002 ; loss: 1476.743
2018-11-24 14:14:43,515:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-24 14:14:43,516:INFO: Epoch 19/10000
2018-11-24 14:20:29,641:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.604
2018-11-24 14:21:25,231:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.714
2018-11-24 14:21:26,074:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-24 14:21:26,074:INFO: Epoch 20/10000
2018-11-24 14:27:11,888:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.571
2018-11-24 14:28:07,757:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.684
2018-11-24 14:28:08,600:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-20
2018-11-24 14:28:08,601:INFO: Epoch 21/10000
2018-11-24 14:33:54,920:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.539
2018-11-24 14:34:50,694:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.655
2018-11-24 14:34:51,536:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-24 14:34:51,536:INFO: Epoch 22/10000
2018-11-24 14:40:38,262:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.507
2018-11-24 14:41:34,188:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.624
2018-11-24 14:41:35,008:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-24 14:41:35,008:INFO: Epoch 23/10000
2018-11-24 14:47:21,769:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.475
2018-11-24 14:48:17,788:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.596
2018-11-24 14:48:18,730:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-24 14:48:18,730:INFO: Epoch 24/10000
2018-11-24 14:54:03,791:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.442
2018-11-24 14:54:59,754:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.564
2018-11-24 14:55:00,647:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-24 14:55:00,647:INFO: Epoch 25/10000
2018-11-24 15:00:46,564:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.409
2018-11-24 15:01:42,409:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.534
2018-11-24 15:01:43,249:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-24 15:01:43,250:INFO: Epoch 26/10000
2018-11-24 15:07:27,761:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.376
2018-11-24 15:08:23,380:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.505
2018-11-24 15:08:24,225:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-24 15:08:24,226:INFO: Epoch 27/10000
2018-11-24 15:14:09,543:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.344
2018-11-24 15:15:05,269:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.472
2018-11-24 15:15:06,096:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-24 15:15:06,097:INFO: Epoch 28/10000
2018-11-24 15:20:51,592:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.312
2018-11-24 15:21:47,556:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.442
2018-11-24 15:21:48,365:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-24 15:21:48,365:INFO: Epoch 29/10000
2018-11-24 15:27:33,006:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.279
2018-11-24 15:28:28,861:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.409
2018-11-24 15:28:29,689:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-24 15:28:29,690:INFO: Epoch 30/10000
2018-11-24 15:34:15,156:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.246
2018-11-24 15:35:10,725:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.375
2018-11-24 15:35:11,567:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-30
2018-11-24 15:35:11,568:INFO: Epoch 31/10000
2018-11-24 15:40:54,838:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.213
2018-11-24 15:41:50,477:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.343
2018-11-24 15:41:51,294:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-31
2018-11-24 15:41:51,294:INFO: Epoch 32/10000
2018-11-24 15:47:33,778:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.178
2018-11-24 15:48:29,433:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.311
2018-11-24 15:48:30,251:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-24 15:48:30,251:INFO: Epoch 33/10000
2018-11-24 15:54:13,427:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.145
2018-11-24 15:55:09,295:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.280
2018-11-24 15:55:10,119:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-33
2018-11-24 15:55:10,119:INFO: Epoch 34/10000
2018-11-24 16:00:57,211:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.112
2018-11-24 16:01:52,867:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.248
2018-11-24 16:01:53,821:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-34
2018-11-24 16:01:53,822:INFO: Epoch 35/10000
2018-11-24 16:07:39,908:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.079
2018-11-24 16:08:35,401:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.216
2018-11-24 16:08:36,227:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-35
2018-11-24 16:08:36,228:INFO: Epoch 36/10000
2018-11-24 16:14:21,766:INFO: - Train metrics: accuracy: 0.003 ; loss: 1558.045
2018-11-24 16:15:17,671:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.183
2018-11-24 16:15:18,500:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-36
2018-11-24 16:15:18,501:INFO: Epoch 37/10000
2018-11-24 16:21:07,519:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.011
2018-11-24 16:22:03,155:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.151
2018-11-24 16:22:04,030:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-37
2018-11-24 16:22:04,031:INFO: Epoch 38/10000
2018-11-24 16:27:52,014:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.977
2018-11-24 16:28:47,972:INFO: - Eval metrics: accuracy: 0.003 ; loss: 1476.118
2018-11-24 16:28:48,820:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-38
2018-11-24 16:28:48,820:INFO: Epoch 39/10000
2018-11-24 16:34:38,094:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.942
2018-11-24 16:35:34,010:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.087
2018-11-24 16:35:34,797:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-39
2018-11-24 16:35:34,798:INFO: Epoch 40/10000
2018-11-24 16:41:24,607:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.909
2018-11-24 16:42:20,532:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.054
2018-11-24 16:42:21,363:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-40
2018-11-24 16:42:21,363:INFO: Epoch 41/10000
2018-11-24 16:48:09,282:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.876
2018-11-24 16:49:05,155:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.019
2018-11-24 16:49:06,050:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-41
2018-11-24 16:49:06,051:INFO: Epoch 42/10000
2018-11-24 16:54:52,246:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.840
2018-11-24 16:55:47,874:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.986
2018-11-24 16:55:48,708:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-42
2018-11-24 16:55:48,708:INFO: Epoch 43/10000
2018-11-24 17:01:36,144:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.804
2018-11-24 17:02:31,976:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.952
2018-11-24 17:02:32,818:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-43
2018-11-24 17:02:32,819:INFO: Epoch 44/10000
2018-11-24 17:08:20,701:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.768
2018-11-24 17:09:16,769:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.919
2018-11-24 17:09:17,587:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-44
2018-11-24 17:09:17,588:INFO: Epoch 45/10000
2018-11-24 17:15:04,736:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.732
2018-11-24 17:16:00,617:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.884
2018-11-24 17:16:01,570:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-45
2018-11-24 17:16:01,570:INFO: Epoch 46/10000
2018-11-24 17:21:47,970:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.697
2018-11-24 17:22:43,943:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.854
2018-11-24 17:22:44,770:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-46
2018-11-24 17:22:44,771:INFO: Epoch 47/10000
2018-11-24 17:28:30,000:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.660
2018-11-24 17:29:25,664:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.819
2018-11-24 17:29:26,494:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-47
2018-11-24 17:29:26,494:INFO: Epoch 48/10000
2018-11-24 17:35:13,673:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.622
2018-11-24 17:36:09,578:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.786
2018-11-24 17:36:10,470:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-48
2018-11-24 17:36:10,470:INFO: Epoch 49/10000
2018-11-24 17:41:55,723:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.584
2018-11-24 17:42:51,391:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.752
2018-11-24 17:42:52,203:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-49
2018-11-24 17:42:52,203:INFO: Epoch 50/10000
2018-11-24 17:48:37,818:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.548
2018-11-24 17:49:33,460:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.719
2018-11-24 17:49:34,283:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-50
2018-11-24 17:49:34,283:INFO: Epoch 51/10000
2018-11-24 17:55:20,337:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.509
2018-11-24 17:56:16,088:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.683
2018-11-24 17:56:16,920:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-51
2018-11-24 17:56:16,920:INFO: Epoch 52/10000
2018-11-24 18:02:02,769:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.472
2018-11-24 18:02:58,526:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.644
2018-11-24 18:02:59,371:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-52
2018-11-24 18:02:59,371:INFO: Epoch 53/10000
2018-11-24 18:08:44,889:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.432
2018-11-24 18:09:40,533:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.608
2018-11-24 18:09:41,287:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-53
2018-11-24 18:09:41,288:INFO: Epoch 54/10000
2018-11-24 18:15:27,888:INFO: - Train metrics: accuracy: 0.004 ; loss: 1557.394
2018-11-24 18:16:23,912:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.570
2018-11-24 18:16:24,730:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-54
2018-11-24 18:16:24,731:INFO: Epoch 55/10000
2018-11-24 18:22:13,565:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.355
2018-11-24 18:23:09,544:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1475.535
2018-11-24 18:23:10,376:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-55
2018-11-24 18:23:10,376:INFO: Epoch 56/10000
2018-11-24 18:28:59,029:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.316
2018-11-24 18:29:54,750:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.499
2018-11-24 18:29:55,588:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-56
2018-11-24 18:29:55,589:INFO: Epoch 57/10000
2018-11-24 18:35:42,204:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.276
2018-11-24 18:36:38,001:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.462
2018-11-24 18:36:38,835:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-57
2018-11-24 18:36:38,836:INFO: Epoch 58/10000
2018-11-24 18:42:25,780:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.236
2018-11-24 18:43:21,900:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.426
2018-11-24 18:43:22,763:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-58
2018-11-24 18:43:22,763:INFO: Epoch 59/10000
2018-11-24 18:49:08,425:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.196
2018-11-24 18:50:04,238:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.389
2018-11-24 18:50:05,136:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-59
2018-11-24 18:50:05,137:INFO: Epoch 60/10000
2018-11-24 18:55:52,981:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.155
2018-11-24 18:56:48,851:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.350
2018-11-24 18:56:49,669:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-60
2018-11-24 18:56:49,669:INFO: Epoch 61/10000
2018-11-24 19:02:38,155:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.115
2018-11-24 19:03:34,105:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.310
2018-11-24 19:03:34,946:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-61
2018-11-24 19:03:34,947:INFO: Epoch 62/10000
2018-11-24 19:09:22,944:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.074
2018-11-24 19:10:18,964:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.272
2018-11-24 19:10:19,794:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-62
2018-11-24 19:10:19,795:INFO: Epoch 63/10000
2018-11-24 19:16:07,404:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.033
2018-11-24 19:17:03,162:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.232
2018-11-24 19:17:04,097:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-63
2018-11-24 19:17:04,097:INFO: Epoch 64/10000
2018-11-24 19:22:51,742:INFO: - Train metrics: accuracy: 0.005 ; loss: 1556.990
2018-11-24 19:23:47,420:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.192
2018-11-24 19:23:48,249:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-64
2018-11-24 19:23:48,250:INFO: Epoch 65/10000
2018-11-24 19:29:35,537:INFO: - Train metrics: accuracy: 0.005 ; loss: 1556.947
2018-11-24 19:30:31,047:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.151
2018-11-24 19:30:31,879:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-65
2018-11-24 19:30:31,880:INFO: Epoch 66/10000
2018-11-24 19:36:18,640:INFO: - Train metrics: accuracy: 0.005 ; loss: 1556.904
2018-11-24 19:37:14,721:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.110
2018-11-24 19:37:15,540:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-66
2018-11-24 19:37:15,540:INFO: Epoch 67/10000
2018-11-24 19:43:04,792:INFO: - Train metrics: accuracy: 0.005 ; loss: 1556.860
2018-11-24 19:44:00,860:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.070
2018-11-24 19:44:01,687:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-67
2018-11-24 19:44:01,688:INFO: Epoch 68/10000
2018-11-24 19:49:48,545:INFO: - Train metrics: accuracy: 0.005 ; loss: 1556.817
2018-11-24 19:50:44,421:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.030
2018-11-24 19:50:45,244:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-68
2018-11-24 19:50:45,245:INFO: Epoch 69/10000
2018-11-24 19:56:32,832:INFO: - Train metrics: accuracy: 0.005 ; loss: 1556.772
2018-11-24 19:57:28,700:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1474.989
2018-11-24 19:57:29,531:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-69
2018-11-24 19:57:29,531:INFO: Epoch 70/10000
2018-11-24 20:03:17,485:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.728
2018-11-24 20:04:13,218:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1474.946
2018-11-24 20:04:14,131:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-70
2018-11-24 20:04:14,132:INFO: Epoch 71/10000
2018-11-24 20:10:02,940:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.681
2018-11-24 20:10:59,078:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.903
2018-11-24 20:10:59,907:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-71
2018-11-24 20:10:59,907:INFO: Epoch 72/10000
2018-11-24 20:16:50,815:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.635
2018-11-24 20:17:46,427:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.862
2018-11-24 20:17:47,260:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-72
2018-11-24 20:17:47,261:INFO: Epoch 73/10000
2018-11-24 20:23:36,483:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.590
2018-11-24 20:24:32,576:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.819
2018-11-24 20:24:33,397:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-73
2018-11-24 20:24:33,398:INFO: Epoch 74/10000
2018-11-24 20:30:23,886:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.543
2018-11-24 20:31:19,811:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.774
2018-11-24 20:31:20,588:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-74
2018-11-24 20:31:20,589:INFO: Epoch 75/10000
2018-11-24 20:37:11,382:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.497
2018-11-24 20:38:07,520:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.730
2018-11-24 20:38:08,360:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-75
2018-11-24 20:38:08,360:INFO: Epoch 76/10000
2018-11-24 20:43:59,432:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.451
2018-11-24 20:44:55,291:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.686
2018-11-24 20:44:56,130:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-76
2018-11-24 20:44:56,131:INFO: Epoch 77/10000
2018-11-24 20:50:39,809:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.404
2018-11-24 20:51:35,294:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.640
2018-11-24 20:51:36,119:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-77
2018-11-24 20:51:36,119:INFO: Epoch 78/10000
2018-11-24 20:57:21,042:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.357
2018-11-24 20:58:16,693:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.595
2018-11-24 20:58:17,519:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-78
2018-11-24 20:58:17,519:INFO: Epoch 79/10000
2018-11-24 21:04:03,941:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.310
2018-11-24 21:04:59,646:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.548
2018-11-24 21:05:00,506:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-79
2018-11-24 21:05:00,506:INFO: Epoch 80/10000
2018-11-24 21:10:46,531:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 21:11:42,273:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.517
2018-11-24 21:11:43,123:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-80
2018-11-24 21:11:43,124:INFO: Epoch 81/10000
2018-11-24 21:17:30,365:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 21:18:25,984:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.484
2018-11-24 21:18:26,808:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-81
2018-11-24 21:18:26,809:INFO: Epoch 82/10000
2018-11-24 21:24:11,685:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 21:25:07,442:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.451
2018-11-24 21:25:08,268:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-82
2018-11-24 21:25:08,268:INFO: Epoch 83/10000
2018-11-24 21:30:51,351:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 21:31:47,092:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.419
2018-11-24 21:31:48,037:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-83
2018-11-24 21:31:48,037:INFO: Epoch 84/10000
2018-11-24 21:37:32,055:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 21:38:27,835:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.386
2018-11-24 21:38:28,677:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-84
2018-11-24 21:38:28,678:INFO: Epoch 85/10000
2018-11-24 21:44:13,443:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 21:45:09,243:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.352
2018-11-24 21:45:10,074:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-85
2018-11-24 21:45:10,075:INFO: Epoch 86/10000
2018-11-24 21:50:56,530:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 21:51:52,016:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.317
2018-11-24 21:51:52,855:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-86
2018-11-24 21:51:52,856:INFO: Epoch 87/10000
2018-11-24 21:57:39,653:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 21:58:35,308:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.283
2018-11-24 21:58:36,122:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-87
2018-11-24 21:58:36,123:INFO: Epoch 88/10000
2018-11-24 22:04:25,046:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 22:05:21,071:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.248
2018-11-24 22:05:21,972:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-88
2018-11-24 22:05:21,973:INFO: Epoch 89/10000
2018-11-24 22:11:12,587:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 22:12:08,468:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.211
2018-11-24 22:12:09,305:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-89
2018-11-24 22:12:09,306:INFO: Epoch 90/10000
2018-11-24 22:17:55,567:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 22:18:51,263:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.175
2018-11-24 22:18:52,097:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-90
2018-11-24 22:18:52,098:INFO: Epoch 91/10000
2018-11-24 22:24:40,893:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 22:25:36,547:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.138
2018-11-24 22:25:37,393:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-91
2018-11-24 22:25:37,394:INFO: Epoch 92/10000
2018-11-24 22:31:24,258:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 22:32:20,229:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.101
2018-11-24 22:32:21,068:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-92
2018-11-24 22:32:21,069:INFO: Epoch 93/10000
2018-11-24 22:38:07,549:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 22:39:03,818:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.065
2018-11-24 22:39:04,633:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-93
2018-11-24 22:39:04,634:INFO: Epoch 94/10000
2018-11-24 22:44:53,951:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 22:45:50,063:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.028
2018-11-24 22:45:50,889:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-94
2018-11-24 22:45:50,890:INFO: Epoch 95/10000
2018-11-24 22:51:39,269:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 22:52:35,234:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1473.988
2018-11-24 22:52:36,054:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-95
2018-11-24 22:52:36,055:INFO: Epoch 96/10000
2018-11-24 22:58:26,032:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 22:59:21,878:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1473.950
2018-11-24 22:59:22,689:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-96
2018-11-24 22:59:22,690:INFO: Epoch 97/10000
2018-11-24 23:05:09,981:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 23:06:05,895:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1473.913
2018-11-24 23:06:06,757:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-97
2018-11-24 23:06:06,757:INFO: Epoch 98/10000
2018-11-24 23:11:55,406:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 23:12:51,246:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1473.874
2018-11-24 23:12:52,076:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-98
2018-11-24 23:12:52,076:INFO: Epoch 99/10000
2018-11-24 23:18:42,445:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 23:19:38,356:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1473.836
2018-11-24 23:19:39,178:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-99
2018-11-24 23:19:39,178:INFO: Epoch 100/10000
2018-11-24 23:25:27,468:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 23:26:23,320:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1473.797
2018-11-24 23:26:24,148:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-100
2018-11-24 23:26:24,148:INFO: Epoch 101/10000
2018-11-24 23:32:11,902:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 23:33:07,748:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1473.754
2018-11-24 23:33:08,576:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-101
2018-11-24 23:33:08,576:INFO: Epoch 102/10000
2018-11-24 23:38:57,328:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 23:39:53,210:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1473.713
2018-11-24 23:39:53,966:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-102
2018-11-24 23:39:53,966:INFO: Epoch 103/10000
2018-11-24 23:45:42,423:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 23:46:38,373:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.672
2018-11-24 23:46:39,376:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-103
2018-11-24 23:46:39,376:INFO: Epoch 104/10000
2018-11-24 23:52:26,376:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-24 23:53:22,137:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.628
2018-11-24 23:53:23,042:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-104
2018-11-24 23:53:23,042:INFO: Epoch 105/10000
2018-11-24 23:59:12,956:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 00:00:09,011:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.583
2018-11-25 00:00:09,970:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-105
2018-11-25 00:00:09,970:INFO: Epoch 106/10000
2018-11-25 00:05:59,212:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 00:06:55,294:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.538
2018-11-25 00:06:56,170:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-106
2018-11-25 00:06:56,170:INFO: Epoch 107/10000
2018-11-25 00:12:46,612:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 00:13:42,690:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.493
2018-11-25 00:13:43,520:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-107
2018-11-25 00:13:43,520:INFO: Epoch 108/10000
2018-11-25 00:19:33,204:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 00:20:29,252:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.443
2018-11-25 00:20:30,070:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-108
2018-11-25 00:20:30,071:INFO: Epoch 109/10000
2018-11-25 00:26:20,353:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 00:27:16,156:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.394
2018-11-25 00:27:16,993:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-109
2018-11-25 00:27:16,994:INFO: Epoch 110/10000
2018-11-25 00:33:06,443:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 00:34:02,391:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.345
2018-11-25 00:34:03,226:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-110
2018-11-25 00:34:03,227:INFO: Epoch 111/10000
2018-11-25 00:39:50,435:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 00:40:46,292:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.297
2018-11-25 00:40:47,102:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-111
2018-11-25 00:40:47,103:INFO: Epoch 112/10000
2018-11-25 00:46:35,904:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 00:47:31,658:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.250
2018-11-25 00:47:32,484:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-112
2018-11-25 00:47:32,484:INFO: Epoch 113/10000
2018-11-25 00:53:21,190:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 00:54:17,005:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.199
2018-11-25 00:54:17,829:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-113
2018-11-25 00:54:17,830:INFO: Epoch 114/10000
2018-11-25 01:00:05,412:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 01:01:01,101:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.147
2018-11-25 01:01:02,031:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-114
2018-11-25 01:01:02,032:INFO: Epoch 115/10000
2018-11-25 01:06:51,164:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 01:07:46,906:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.099
2018-11-25 01:07:47,730:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-115
2018-11-25 01:07:47,731:INFO: Epoch 116/10000
2018-11-25 01:13:37,627:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 01:14:33,503:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.046
2018-11-25 01:14:34,326:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-116
2018-11-25 01:14:34,326:INFO: Epoch 117/10000
2018-11-25 01:20:22,835:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 01:21:18,667:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1472.992
2018-11-25 01:21:19,503:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-117
2018-11-25 01:21:19,503:INFO: Epoch 118/10000
2018-11-25 01:27:08,951:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 01:28:04,735:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1472.938
2018-11-25 01:28:05,627:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-118
2018-11-25 01:28:05,628:INFO: Epoch 119/10000
2018-11-25 01:33:53,488:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 01:34:49,498:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.882
2018-11-25 01:34:50,332:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-119
2018-11-25 01:34:50,332:INFO: Epoch 120/10000
2018-11-25 01:40:40,652:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 01:41:36,551:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.828
2018-11-25 01:41:37,362:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-120
2018-11-25 01:41:37,363:INFO: Epoch 121/10000
2018-11-25 01:47:28,732:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 01:48:24,688:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.769
2018-11-25 01:48:25,513:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-121
2018-11-25 01:48:25,514:INFO: Epoch 122/10000
2018-11-25 01:54:15,011:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 01:55:10,942:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.713
2018-11-25 01:55:11,762:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-122
2018-11-25 01:55:11,763:INFO: Epoch 123/10000
2018-11-25 02:01:00,599:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 02:01:56,528:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.656
2018-11-25 02:01:57,452:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-123
2018-11-25 02:01:57,453:INFO: Epoch 124/10000
2018-11-25 02:07:45,903:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 02:08:41,666:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.612
2018-11-25 02:08:42,479:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-124
2018-11-25 02:08:42,480:INFO: Epoch 125/10000
2018-11-25 02:14:31,141:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 02:15:27,163:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.565
2018-11-25 02:15:28,087:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-125
2018-11-25 02:15:28,087:INFO: Epoch 126/10000
2018-11-25 02:21:17,752:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 02:22:13,699:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.519
2018-11-25 02:22:14,518:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-126
2018-11-25 02:22:14,519:INFO: Epoch 127/10000
2018-11-25 02:28:05,341:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 02:29:01,407:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.469
2018-11-25 02:29:02,232:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-127
2018-11-25 02:29:02,233:INFO: Epoch 128/10000
2018-11-25 02:34:51,040:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 02:35:46,568:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.420
2018-11-25 02:35:47,375:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-128
2018-11-25 02:35:47,375:INFO: Epoch 129/10000
2018-11-25 02:41:34,259:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 02:42:29,902:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.371
2018-11-25 02:42:30,738:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-129
2018-11-25 02:42:30,738:INFO: Epoch 130/10000
2018-11-25 02:48:17,752:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 02:49:13,874:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.321
2018-11-25 02:49:14,804:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-130
2018-11-25 02:49:14,805:INFO: Epoch 131/10000
2018-11-25 02:55:02,424:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 02:55:58,522:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.293
2018-11-25 02:55:59,363:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-131
2018-11-25 02:55:59,363:INFO: Epoch 132/10000
2018-11-25 03:01:48,054:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 03:02:44,025:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.276
2018-11-25 03:02:44,865:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-132
2018-11-25 03:02:44,865:INFO: Epoch 133/10000
2018-11-25 03:08:33,627:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 03:09:29,715:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.270
2018-11-25 03:09:30,339:INFO: Epoch 134/10000
2018-11-25 03:15:19,490:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 03:16:15,247:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.265
2018-11-25 03:16:15,864:INFO: Epoch 135/10000
2018-11-25 03:22:05,882:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 03:23:01,922:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.264
2018-11-25 03:23:02,539:INFO: Epoch 136/10000
2018-11-25 03:28:50,720:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 03:29:46,449:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.268
2018-11-25 03:29:47,066:INFO: Epoch 137/10000
2018-11-25 03:35:35,097:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 03:36:31,217:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.275
2018-11-25 03:36:31,839:INFO: Epoch 138/10000
2018-11-25 03:42:21,638:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 03:43:17,926:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.284
2018-11-25 03:43:18,541:INFO: Epoch 139/10000
2018-11-25 03:49:07,583:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 03:50:03,696:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.302
2018-11-25 03:50:04,327:INFO: Epoch 140/10000
2018-11-25 03:55:54,031:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 03:56:50,028:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.320
2018-11-25 03:56:50,657:INFO: Epoch 141/10000
2018-11-25 04:02:40,015:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 04:03:36,051:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.339
2018-11-25 04:03:36,684:INFO: Epoch 142/10000
2018-11-25 04:09:24,880:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 04:10:20,965:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.360
2018-11-25 04:10:21,607:INFO: Epoch 143/10000
2018-11-25 04:16:11,116:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 04:17:07,083:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.385
2018-11-25 04:17:07,695:INFO: Epoch 144/10000
2018-11-25 04:22:56,568:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 04:23:52,444:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.412
2018-11-25 04:23:53,067:INFO: Epoch 145/10000
2018-11-25 04:29:40,192:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 04:30:35,853:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.442
2018-11-25 04:30:36,509:INFO: Epoch 146/10000
2018-11-25 04:36:24,240:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 04:37:20,093:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.473
2018-11-25 04:37:20,688:INFO: Epoch 147/10000
2018-11-25 04:43:09,193:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 04:44:05,131:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.510
2018-11-25 04:44:05,750:INFO: Epoch 148/10000
2018-11-25 04:49:53,412:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 04:50:49,519:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.550
2018-11-25 04:50:50,135:INFO: Epoch 149/10000
2018-11-25 04:56:37,495:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 04:57:33,523:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.603
2018-11-25 04:57:34,150:INFO: Epoch 150/10000
2018-11-25 05:03:22,159:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:04:18,345:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.656
2018-11-25 05:04:18,973:INFO: Epoch 151/10000
2018-11-25 05:10:07,456:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:11:03,566:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.716
2018-11-25 05:11:04,181:INFO: Epoch 152/10000
2018-11-25 05:16:53,983:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:17:49,943:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1472.801
2018-11-25 05:17:50,553:INFO: Epoch 153/10000
2018-11-25 05:23:40,420:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:24:36,300:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1472.889
2018-11-25 05:24:36,904:INFO: Epoch 154/10000
2018-11-25 05:30:23,675:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:31:19,544:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:31:20,158:INFO: Epoch 155/10000
2018-11-25 05:37:09,836:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:38:05,677:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:38:06,304:INFO: Epoch 156/10000
2018-11-25 05:43:54,640:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:44:50,455:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:44:51,083:INFO: Epoch 157/10000
2018-11-25 05:50:38,837:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:51:34,234:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:51:34,834:INFO: Epoch 158/10000
2018-11-25 05:57:21,820:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:58:17,355:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 05:58:17,981:INFO: Epoch 159/10000
2018-11-25 06:04:04,503:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:04:59,785:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:05:00,408:INFO: Epoch 160/10000
2018-11-25 06:10:47,391:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:11:42,479:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:11:43,104:INFO: Epoch 161/10000
2018-11-25 06:17:28,540:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:18:23,321:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:18:23,922:INFO: Epoch 162/10000
2018-11-25 06:24:06,314:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:25:01,088:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:25:01,687:INFO: Epoch 163/10000
2018-11-25 06:30:44,997:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:31:39,241:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:31:39,853:INFO: Epoch 164/10000
2018-11-25 06:37:23,696:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:38:18,155:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:38:18,748:INFO: Epoch 165/10000
2018-11-25 06:44:01,941:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:44:56,001:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:44:56,601:INFO: Epoch 166/10000
2018-11-25 06:50:38,417:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:51:31,891:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:51:32,497:INFO: Epoch 167/10000
2018-11-25 06:57:14,529:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:58:07,837:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 06:58:08,438:INFO: Epoch 168/10000
2018-11-25 07:03:48,827:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:04:41,849:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:04:42,422:INFO: Epoch 169/10000
2018-11-25 07:10:22,051:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:11:15,038:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:11:15,610:INFO: Epoch 170/10000
2018-11-25 07:16:55,517:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:17:48,071:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:17:48,649:INFO: Epoch 171/10000
2018-11-25 07:23:27,664:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:24:19,730:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:24:20,304:INFO: Epoch 172/10000
2018-11-25 07:29:58,411:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:30:49,486:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:30:50,052:INFO: Epoch 173/10000
2018-11-25 07:36:27,220:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:37:18,883:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:37:19,441:INFO: Epoch 174/10000
2018-11-25 07:42:46,641:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:43:38,509:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:43:39,157:INFO: Epoch 175/10000
2018-11-25 07:49:15,581:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:50:06,577:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:50:07,135:INFO: Epoch 176/10000
2018-11-25 07:55:41,363:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:56:31,855:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 07:56:32,389:INFO: Epoch 177/10000
2018-11-25 08:02:06,675:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:02:57,102:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:02:57,626:INFO: Epoch 178/10000
2018-11-25 08:08:31,295:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:09:21,489:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:09:21,991:INFO: Epoch 179/10000
2018-11-25 08:14:55,754:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:15:45,983:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:15:46,522:INFO: Epoch 180/10000
2018-11-25 08:21:18,521:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:22:08,268:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:22:08,800:INFO: Epoch 181/10000
2018-11-25 08:27:41,570:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:28:31,389:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:28:31,922:INFO: Epoch 182/10000
2018-11-25 08:34:00,697:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:34:49,910:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:34:50,423:INFO: Epoch 183/10000
2018-11-25 08:40:19,625:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:41:08,795:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:41:09,319:INFO: Epoch 184/10000
2018-11-25 08:46:37,535:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:47:25,942:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:47:26,445:INFO: Epoch 185/10000
2018-11-25 08:52:54,661:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:53:43,469:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 08:53:43,985:INFO: Epoch 186/10000
2018-11-25 08:59:11,483:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:00:00,041:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:00:00,543:INFO: Epoch 187/10000
2018-11-25 09:05:27,266:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:06:15,493:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:06:16,015:INFO: Epoch 188/10000
2018-11-25 09:11:42,420:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:12:30,819:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:12:31,337:INFO: Epoch 189/10000
2018-11-25 09:18:00,607:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:18:48,411:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:18:48,931:INFO: Epoch 190/10000
2018-11-25 09:24:14,660:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:25:02,791:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:25:03,308:INFO: Epoch 191/10000
2018-11-25 09:30:30,288:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:31:18,123:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:31:18,574:INFO: Epoch 192/10000
2018-11-25 09:36:44,150:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:37:31,954:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:37:32,448:INFO: Epoch 193/10000
2018-11-25 09:42:57,893:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:43:44,988:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:43:45,474:INFO: Epoch 194/10000
2018-11-25 09:49:09,656:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:49:57,230:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:49:57,726:INFO: Epoch 195/10000
2018-11-25 09:55:25,979:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:56:13,527:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 09:56:14,004:INFO: Epoch 196/10000
2018-11-25 10:01:42,630:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:02:30,092:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:02:30,571:INFO: Epoch 197/10000
2018-11-25 10:07:55,641:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:08:43,030:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:08:43,550:INFO: Epoch 198/10000
2018-11-25 10:14:11,145:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:14:58,395:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:14:58,877:INFO: Epoch 199/10000
2018-11-25 10:20:25,684:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:21:12,781:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:21:13,272:INFO: Epoch 200/10000
2018-11-25 10:26:39,364:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:27:26,236:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:27:26,715:INFO: Epoch 201/10000
2018-11-25 10:32:50,539:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:33:37,253:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:33:37,742:INFO: Epoch 202/10000
2018-11-25 10:39:01,428:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:39:48,071:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:39:48,565:INFO: Epoch 203/10000
2018-11-25 10:45:13,270:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:46:00,262:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:46:00,750:INFO: Epoch 204/10000
2018-11-25 10:51:23,355:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:52:09,643:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:52:10,114:INFO: Epoch 205/10000
2018-11-25 10:57:34,105:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:58:20,758:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 10:58:21,234:INFO: Epoch 206/10000
2018-11-25 11:03:44,688:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:04:30,969:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:04:31,449:INFO: Epoch 207/10000
2018-11-25 11:09:55,309:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:10:41,904:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:10:42,404:INFO: Epoch 208/10000
2018-11-25 11:16:05,620:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:16:51,896:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:16:52,371:INFO: Epoch 209/10000
2018-11-25 11:22:15,422:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:23:01,732:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:23:02,154:INFO: Epoch 210/10000
2018-11-25 11:28:24,406:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:29:10,892:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:29:11,378:INFO: Epoch 211/10000
2018-11-25 11:34:33,278:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:35:19,423:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:35:19,911:INFO: Epoch 212/10000
2018-11-25 11:40:40,646:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:41:26,884:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:41:27,369:INFO: Epoch 213/10000
2018-11-25 11:46:48,348:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:47:34,556:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:47:35,031:INFO: Epoch 214/10000
2018-11-25 11:52:55,342:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:53:41,319:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:53:41,821:INFO: Epoch 215/10000
2018-11-25 11:59:02,641:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:59:48,532:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 11:59:48,997:INFO: Epoch 216/10000
2018-11-25 12:05:11,397:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:05:57,036:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:05:57,522:INFO: Epoch 217/10000
2018-11-25 12:11:20,574:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:12:06,375:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:12:06,847:INFO: Epoch 218/10000
2018-11-25 12:17:29,777:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:18:15,475:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:18:15,946:INFO: Epoch 219/10000
2018-11-25 12:23:36,947:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:24:22,538:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:24:23,003:INFO: Epoch 220/10000
2018-11-25 12:29:43,448:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:30:28,823:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:30:29,301:INFO: Epoch 221/10000
2018-11-25 12:35:52,052:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:36:37,607:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:36:38,083:INFO: Epoch 222/10000
2018-11-25 12:42:00,156:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:42:45,375:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:42:45,850:INFO: Epoch 223/10000
2018-11-25 12:48:09,099:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:48:54,567:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:48:55,060:INFO: Epoch 224/10000
2018-11-25 12:54:15,326:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:55:00,836:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 12:55:01,331:INFO: Epoch 225/10000
2018-11-25 13:00:22,192:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:01:07,370:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:01:07,851:INFO: Epoch 226/10000
2018-11-25 13:06:28,484:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:07:13,339:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:07:13,818:INFO: Epoch 227/10000
2018-11-25 13:12:35,055:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:13:19,839:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:13:20,316:INFO: Epoch 228/10000
2018-11-25 13:18:40,244:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:19:25,333:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:19:25,823:INFO: Epoch 229/10000
2018-11-25 13:24:47,446:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:25:32,174:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:25:32,646:INFO: Epoch 230/10000
2018-11-25 13:30:53,166:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:31:37,998:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:31:38,480:INFO: Epoch 231/10000
2018-11-25 13:36:59,486:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:37:44,297:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:37:44,783:INFO: Epoch 232/10000
2018-11-25 13:43:07,180:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:43:51,917:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:43:52,394:INFO: Epoch 233/10000
2018-11-25 13:49:12,819:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:49:57,484:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:49:57,951:INFO: Epoch 234/10000
2018-11-25 13:55:19,101:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:56:03,421:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 13:56:03,908:INFO: Epoch 235/10000
2018-11-25 14:01:24,024:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:02:08,546:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:02:09,028:INFO: Epoch 236/10000
2018-11-25 14:07:30,640:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:08:15,035:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:08:15,523:INFO: Epoch 237/10000
2018-11-25 14:13:36,675:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:14:20,808:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:14:21,302:INFO: Epoch 238/10000
2018-11-25 14:19:42,985:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:20:27,266:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:20:27,740:INFO: Epoch 239/10000
2018-11-25 14:25:47,761:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:26:31,911:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:26:32,407:INFO: Epoch 240/10000
2018-11-25 14:31:53,489:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:32:37,802:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:32:38,274:INFO: Epoch 241/10000
2018-11-25 14:38:00,712:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:38:44,997:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:38:45,480:INFO: Epoch 242/10000
2018-11-25 14:44:06,539:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:44:50,699:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:44:51,184:INFO: Epoch 243/10000
2018-11-25 14:50:12,934:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:50:56,621:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:50:57,096:INFO: Epoch 244/10000
2018-11-25 14:56:17,246:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:57:01,050:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 14:57:01,513:INFO: Epoch 245/10000
2018-11-25 15:02:21,124:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:03:05,090:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:03:05,555:INFO: Epoch 246/10000
2018-11-25 15:08:24,286:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:09:07,923:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:09:08,392:INFO: Epoch 247/10000
2018-11-25 15:14:26,644:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:15:10,327:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:15:10,810:INFO: Epoch 248/10000
2018-11-25 15:20:31,477:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:21:15,026:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:21:15,500:INFO: Epoch 249/10000
2018-11-25 15:26:34,371:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:27:18,035:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:27:18,502:INFO: Epoch 250/10000
2018-11-25 15:32:37,000:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:33:20,698:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:33:21,174:INFO: Epoch 251/10000
2018-11-25 15:38:37,275:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:39:20,839:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:39:21,311:INFO: Epoch 252/10000
2018-11-25 15:44:37,743:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:45:21,454:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:45:21,919:INFO: Epoch 253/10000
2018-11-25 15:50:37,432:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:51:20,956:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:51:21,435:INFO: Epoch 254/10000
2018-11-25 15:56:35,523:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:57:19,160:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 15:57:19,641:INFO: Epoch 255/10000
2018-11-25 16:02:34,128:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:03:17,779:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:03:18,253:INFO: Epoch 256/10000
2018-11-25 16:08:32,142:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:09:15,763:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:09:16,232:INFO: Epoch 257/10000
2018-11-25 16:14:31,490:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:15:14,835:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:15:15,311:INFO: Epoch 258/10000
2018-11-25 16:20:30,435:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:21:14,138:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:21:14,608:INFO: Epoch 259/10000
2018-11-25 16:26:30,217:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:27:13,820:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:27:14,303:INFO: Epoch 260/10000
2018-11-25 16:32:29,262:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:33:12,581:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:33:13,060:INFO: Epoch 261/10000
2018-11-25 16:38:28,029:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:39:11,460:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:39:11,930:INFO: Epoch 262/10000
2018-11-25 16:44:27,236:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:45:10,579:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:45:11,053:INFO: Epoch 263/10000
2018-11-25 16:50:24,478:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:51:08,048:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:51:08,534:INFO: Epoch 264/10000
2018-11-25 16:56:23,559:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:57:07,113:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 16:57:07,587:INFO: Epoch 265/10000
2018-11-25 17:02:22,179:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:03:05,870:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:03:06,358:INFO: Epoch 266/10000
2018-11-25 17:08:21,688:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:09:04,786:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:09:05,230:INFO: Epoch 267/10000
2018-11-25 17:14:21,187:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:15:04,854:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:15:05,349:INFO: Epoch 268/10000
2018-11-25 17:20:20,232:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:21:03,468:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:21:03,968:INFO: Epoch 269/10000
2018-11-25 17:26:18,751:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:27:02,082:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:27:02,547:INFO: Epoch 270/10000
2018-11-25 17:32:16,950:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:33:00,655:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:33:01,122:INFO: Epoch 271/10000
2018-11-25 17:38:16,862:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:39:00,612:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:39:01,101:INFO: Epoch 272/10000
2018-11-25 17:44:15,983:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:44:59,676:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:45:00,159:INFO: Epoch 273/10000
2018-11-25 17:50:15,877:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:50:59,646:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:51:00,134:INFO: Epoch 274/10000
2018-11-25 17:56:16,234:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:57:00,161:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 17:57:00,639:INFO: Epoch 275/10000
2018-11-25 18:02:16,021:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:02:59,690:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:03:00,178:INFO: Epoch 276/10000
2018-11-25 18:08:16,062:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:08:59,544:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:09:00,026:INFO: Epoch 277/10000
2018-11-25 18:14:17,115:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:15:00,640:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:15:01,120:INFO: Epoch 278/10000
2018-11-25 18:20:17,838:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:21:01,478:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:21:01,946:INFO: Epoch 279/10000
2018-11-25 18:26:18,076:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:27:01,771:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:27:02,248:INFO: Epoch 280/10000
2018-11-25 18:32:16,132:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:32:59,866:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:33:00,342:INFO: Epoch 281/10000
2018-11-25 18:38:15,537:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:38:58,967:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:38:59,440:INFO: Epoch 282/10000
2018-11-25 18:44:14,538:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:44:57,883:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:44:58,365:INFO: Epoch 283/10000
2018-11-25 18:50:13,004:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:50:56,362:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:50:56,832:INFO: Epoch 284/10000
2018-11-25 18:56:11,514:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:56:54,995:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 18:56:55,470:INFO: Epoch 285/10000
2018-11-25 19:02:09,860:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:02:53,503:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:02:53,987:INFO: Epoch 286/10000
2018-11-25 19:08:08,374:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:08:51,674:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:08:52,144:INFO: Epoch 287/10000
2018-11-25 19:14:07,584:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:14:50,887:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:14:51,351:INFO: Epoch 288/10000
2018-11-25 19:20:06,948:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:20:50,422:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:20:50,896:INFO: Epoch 289/10000
2018-11-25 19:26:06,002:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:26:49,655:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:26:50,117:INFO: Epoch 290/10000
2018-11-25 19:32:05,703:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:32:49,462:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:32:49,939:INFO: Epoch 291/10000
2018-11-25 19:38:03,838:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:38:47,083:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:38:47,565:INFO: Epoch 292/10000
2018-11-25 19:44:01,545:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:44:44,884:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:44:45,355:INFO: Epoch 293/10000
2018-11-25 19:50:00,939:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:50:44,292:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:50:44,773:INFO: Epoch 294/10000
2018-11-25 19:55:59,750:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:56:43,499:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 19:56:43,976:INFO: Epoch 295/10000
2018-11-25 20:01:58,717:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:02:42,189:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:02:42,663:INFO: Epoch 296/10000
2018-11-25 20:07:57,760:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:08:41,277:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:08:41,737:INFO: Epoch 297/10000
2018-11-25 20:13:56,472:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:14:40,009:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:14:40,484:INFO: Epoch 298/10000
2018-11-25 20:19:56,385:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:20:39,734:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:20:40,213:INFO: Epoch 299/10000
2018-11-25 20:25:56,033:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:26:39,153:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:26:39,635:INFO: Epoch 300/10000
2018-11-25 20:31:54,725:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:32:38,107:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:32:38,579:INFO: Epoch 301/10000
2018-11-25 20:37:55,212:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:38:38,941:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:38:39,412:INFO: Epoch 302/10000
2018-11-25 20:43:54,715:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:44:38,151:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:44:38,620:INFO: Epoch 303/10000
2018-11-25 20:49:52,777:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:50:36,160:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:50:36,650:INFO: Epoch 304/10000
2018-11-25 20:55:50,626:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:56:33,837:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 20:56:34,306:INFO: Epoch 305/10000
2018-11-25 21:01:49,105:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:02:32,366:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:02:32,845:INFO: Epoch 306/10000
2018-11-25 21:07:46,808:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:08:30,049:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:08:30,523:INFO: Epoch 307/10000
2018-11-25 21:13:44,328:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:14:27,644:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:14:28,118:INFO: Epoch 308/10000
2018-11-25 21:19:41,222:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:20:24,577:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:20:25,018:INFO: Epoch 309/10000
2018-11-25 21:25:39,128:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:26:22,744:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:26:23,222:INFO: Epoch 310/10000
2018-11-25 21:31:36,902:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:32:20,330:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:32:20,801:INFO: Epoch 311/10000
2018-11-25 21:37:35,042:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:38:18,707:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:38:19,183:INFO: Epoch 312/10000
2018-11-25 21:43:33,962:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:44:17,340:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:44:17,823:INFO: Epoch 313/10000
2018-11-25 21:49:31,757:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:50:15,152:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:50:15,653:INFO: Epoch 314/10000
2018-11-25 21:55:28,156:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:56:11,341:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 21:56:11,811:INFO: Epoch 315/10000
2018-11-25 22:01:25,430:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-25 22:07:41,753:INFO: Creating the datasets...
2018-11-25 22:07:47,497:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:07:47,870:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:07:47,958:INFO: - done.
2018-11-25 22:07:47,958:INFO: Creating the model...
2018-11-25 22:07:48,142:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:07:50,340:INFO: - done.
2018-11-25 22:07:50,340:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:07:51,381:INFO: Epoch 1/10000
2018-11-25 22:09:28,255:INFO: Creating the datasets...
2018-11-25 22:09:30,153:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:09:30,521:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:09:30,582:INFO: - done.
2018-11-25 22:09:30,582:INFO: Creating the model...
2018-11-25 22:09:30,697:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:09:32,806:INFO: - done.
2018-11-25 22:09:32,806:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:09:33,732:INFO: Epoch 1/10000
2018-11-25 22:12:35,388:INFO: Creating the datasets...
2018-11-25 22:12:37,271:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:12:37,609:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:12:37,658:INFO: - done.
2018-11-25 22:12:37,658:INFO: Creating the model...
2018-11-25 22:12:37,765:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:12:40,030:INFO: - done.
2018-11-25 22:12:40,030:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:12:41,067:INFO: Epoch 1/10000
2018-11-25 22:18:39,391:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.586
2018-11-25 22:19:36,540:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.232
2018-11-25 22:19:37,559:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-25 22:19:37,560:INFO: Epoch 2/10000
2018-11-25 22:25:33,451:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.656
2018-11-25 22:26:30,618:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.383
2018-11-25 22:26:31,480:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-25 22:26:31,480:INFO: Epoch 3/10000
2018-11-25 22:30:50,969:INFO: Creating the datasets...
2018-11-25 22:30:52,896:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:30:53,340:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:30:53,388:INFO: - done.
2018-11-25 22:30:53,388:INFO: Creating the model...
2018-11-25 22:30:53,491:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:30:55,631:INFO: - done.
2018-11-25 22:30:55,631:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:30:56,656:INFO: Epoch 1/10000
2018-11-25 22:32:05,917:INFO: Creating the datasets...
2018-11-25 22:32:07,813:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:32:08,150:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:32:08,200:INFO: - done.
2018-11-25 22:32:08,200:INFO: Creating the model...
2018-11-25 22:32:08,326:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:32:10,495:INFO: - done.
2018-11-25 22:32:10,495:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:32:11,453:INFO: Epoch 1/10000
2018-11-25 22:34:13,610:INFO: Creating the datasets...
2018-11-25 22:34:15,530:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:34:15,857:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:34:15,911:INFO: - done.
2018-11-25 22:34:15,911:INFO: Creating the model...
2018-11-25 22:34:16,021:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:34:18,204:INFO: - done.
2018-11-25 22:34:18,205:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:34:19,224:INFO: Epoch 1/10000
2018-11-25 22:36:02,922:INFO: Creating the datasets...
2018-11-25 22:36:04,810:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:36:05,238:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:36:05,308:INFO: - done.
2018-11-25 22:36:05,308:INFO: Creating the model...
2018-11-25 22:36:05,458:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:36:40,563:INFO: Creating the datasets...
2018-11-25 22:36:42,411:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:36:42,744:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:36:42,792:INFO: - done.
2018-11-25 22:36:42,792:INFO: Creating the model...
2018-11-25 22:36:42,911:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:36:45,096:INFO: - done.
2018-11-25 22:36:45,096:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:36:46,383:INFO: Epoch 1/10000
2018-11-25 22:38:05,667:INFO: Creating the datasets...
2018-11-25 22:38:07,614:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:38:07,956:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:38:08,009:INFO: - done.
2018-11-25 22:38:08,009:INFO: Creating the model...
2018-11-25 22:38:08,114:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:38:10,314:INFO: - done.
2018-11-25 22:38:10,315:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:38:11,574:INFO: Epoch 1/10000
2018-11-25 22:42:03,284:INFO: Creating the datasets...
2018-11-25 22:42:05,175:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:42:05,526:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:42:05,587:INFO: - done.
2018-11-25 22:42:05,587:INFO: Creating the model...
2018-11-25 22:42:05,701:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:42:08,127:INFO: - done.
2018-11-25 22:42:08,127:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:42:09,179:INFO: Epoch 1/10000
2018-11-25 22:44:20,022:INFO: Creating the datasets...
2018-11-25 22:44:21,974:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:44:22,314:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:44:22,365:INFO: - done.
2018-11-25 22:44:22,365:INFO: Creating the model...
2018-11-25 22:44:22,474:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:44:24,660:INFO: - done.
2018-11-25 22:44:24,661:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:44:25,726:INFO: Epoch 1/10000
2018-11-25 22:45:09,305:INFO: Creating the datasets...
2018-11-25 22:45:11,119:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:45:11,458:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:45:11,505:INFO: - done.
2018-11-25 22:45:11,505:INFO: Creating the model...
2018-11-25 22:45:11,608:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:45:13,751:INFO: - done.
2018-11-25 22:45:13,751:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:45:14,810:INFO: Epoch 1/10000
2018-11-25 22:46:04,392:INFO: Creating the datasets...
2018-11-25 22:46:06,217:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:46:06,545:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:46:06,593:INFO: - done.
2018-11-25 22:46:06,593:INFO: Creating the model...
2018-11-25 22:46:06,698:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:46:08,930:INFO: - done.
2018-11-25 22:46:08,930:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:46:09,898:INFO: Epoch 1/10000
2018-11-25 22:46:50,198:INFO: Creating the datasets...
2018-11-25 22:46:52,178:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:46:52,510:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:46:52,559:INFO: - done.
2018-11-25 22:46:52,559:INFO: Creating the model...
2018-11-25 22:46:52,669:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:46:54,893:INFO: - done.
2018-11-25 22:46:54,893:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:46:55,876:INFO: Epoch 1/10000
2018-11-25 22:47:31,823:INFO: Creating the datasets...
2018-11-25 22:47:33,658:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:47:33,986:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:47:34,039:INFO: - done.
2018-11-25 22:47:34,039:INFO: Creating the model...
2018-11-25 22:47:34,187:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:47:36,469:INFO: - done.
2018-11-25 22:47:36,469:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:47:37,574:INFO: Epoch 1/10000
2018-11-25 22:48:13,072:INFO: Creating the datasets...
2018-11-25 22:48:15,044:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:48:15,392:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:48:15,449:INFO: - done.
2018-11-25 22:48:15,450:INFO: Creating the model...
2018-11-25 22:48:15,564:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:48:47,810:INFO: Creating the datasets...
2018-11-25 22:48:49,761:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:48:50,152:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:48:50,210:INFO: - done.
2018-11-25 22:48:50,210:INFO: Creating the model...
2018-11-25 22:48:50,336:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:48:52,533:INFO: - done.
2018-11-25 22:48:52,534:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:48:53,517:INFO: Epoch 1/10000
2018-11-25 22:49:32,970:INFO: Creating the datasets...
2018-11-25 22:49:34,871:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:49:35,214:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:49:35,263:INFO: - done.
2018-11-25 22:49:35,263:INFO: Creating the model...
2018-11-25 22:49:35,386:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:49:37,831:INFO: - done.
2018-11-25 22:49:37,831:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:49:38,837:INFO: Epoch 1/10000
2018-11-25 22:50:09,098:INFO: Creating the datasets...
2018-11-25 22:50:11,018:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:50:11,355:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:50:11,405:INFO: - done.
2018-11-25 22:50:11,405:INFO: Creating the model...
2018-11-25 22:50:11,508:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:50:13,693:INFO: - done.
2018-11-25 22:50:13,694:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:50:14,739:INFO: Epoch 1/10000
2018-11-25 22:51:57,515:INFO: Creating the datasets...
2018-11-25 22:51:59,549:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:51:59,904:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:51:59,954:INFO: - done.
2018-11-25 22:51:59,954:INFO: Creating the model...
2018-11-25 22:52:00,064:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:52:02,225:INFO: - done.
2018-11-25 22:52:02,225:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:52:03,206:INFO: Epoch 1/10000
2018-11-25 22:53:23,479:INFO: Creating the datasets...
2018-11-25 22:53:25,336:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:53:25,673:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:53:25,721:INFO: - done.
2018-11-25 22:53:25,721:INFO: Creating the model...
2018-11-25 22:53:25,824:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:53:27,975:INFO: - done.
2018-11-25 22:53:27,975:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:53:28,931:INFO: Epoch 1/10000
2018-11-25 22:56:47,440:INFO: Creating the datasets...
2018-11-25 22:56:49,300:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:56:49,627:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:56:49,676:INFO: - done.
2018-11-25 22:56:49,676:INFO: Creating the model...
2018-11-25 22:56:49,780:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:56:52,001:INFO: - done.
2018-11-25 22:56:52,001:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:56:52,968:INFO: Epoch 1/10000
2018-11-25 22:57:24,588:INFO: Creating the datasets...
2018-11-25 22:57:26,493:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:57:26,824:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:57:26,877:INFO: - done.
2018-11-25 22:57:26,877:INFO: Creating the model...
2018-11-25 22:57:26,985:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:57:29,156:INFO: - done.
2018-11-25 22:57:29,156:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:57:30,183:INFO: Epoch 1/10000
2018-11-25 22:58:23,379:INFO: Creating the datasets...
2018-11-25 22:58:25,396:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:58:25,739:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:58:25,811:INFO: - done.
2018-11-25 22:58:25,811:INFO: Creating the model...
2018-11-25 22:58:25,945:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:58:43,579:INFO: Creating the datasets...
2018-11-25 22:58:45,633:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 22:58:45,962:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 22:58:46,013:INFO: - done.
2018-11-25 22:58:46,013:INFO: Creating the model...
2018-11-25 22:58:46,120:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 22:58:48,343:INFO: - done.
2018-11-25 22:58:48,343:INFO: Starting training for 10000 epoch(s)
2018-11-25 22:58:49,415:INFO: Epoch 1/10000
2018-11-25 23:01:59,288:INFO: Creating the datasets...
2018-11-25 23:02:01,130:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:02:01,456:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:02:01,504:INFO: - done.
2018-11-25 23:02:01,505:INFO: Creating the model...
2018-11-25 23:02:01,609:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:02:03,732:INFO: - done.
2018-11-25 23:02:03,733:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:02:04,690:INFO: Epoch 1/10000
2018-11-25 23:02:26,744:INFO: Creating the datasets...
2018-11-25 23:02:28,612:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:02:29,010:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:02:29,057:INFO: - done.
2018-11-25 23:02:29,057:INFO: Creating the model...
2018-11-25 23:02:29,183:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:02:31,376:INFO: - done.
2018-11-25 23:02:31,376:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:02:32,422:INFO: Epoch 1/10000
2018-11-25 23:03:33,488:INFO: Creating the datasets...
2018-11-25 23:03:35,434:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:03:35,762:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:03:35,809:INFO: - done.
2018-11-25 23:03:35,809:INFO: Creating the model...
2018-11-25 23:03:35,916:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:03:51,641:INFO: Creating the datasets...
2018-11-25 23:03:53,737:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:03:54,168:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:03:54,216:INFO: - done.
2018-11-25 23:03:54,216:INFO: Creating the model...
2018-11-25 23:03:54,318:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:03:56,523:INFO: - done.
2018-11-25 23:03:56,523:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:03:57,535:INFO: Epoch 1/10000
2018-11-25 23:05:12,685:INFO: Creating the datasets...
2018-11-25 23:05:14,533:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:05:14,864:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:05:14,915:INFO: - done.
2018-11-25 23:05:14,915:INFO: Creating the model...
2018-11-25 23:05:15,021:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:05:17,495:INFO: - done.
2018-11-25 23:05:17,495:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:05:18,505:INFO: Epoch 1/10000
2018-11-25 23:08:14,497:INFO: Creating the datasets...
2018-11-25 23:08:16,393:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:08:16,729:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:08:16,788:INFO: - done.
2018-11-25 23:08:16,788:INFO: Creating the model...
2018-11-25 23:08:16,908:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:08:19,076:INFO: - done.
2018-11-25 23:08:19,076:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:08:20,065:INFO: Epoch 1/10000
2018-11-25 23:09:20,595:INFO: Creating the datasets...
2018-11-25 23:09:22,545:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:09:22,882:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:09:22,929:INFO: - done.
2018-11-25 23:09:22,929:INFO: Creating the model...
2018-11-25 23:09:23,049:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:09:25,353:INFO: - done.
2018-11-25 23:09:25,353:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:09:26,338:INFO: Epoch 1/10000
2018-11-25 23:10:41,056:INFO: Creating the datasets...
2018-11-25 23:10:42,930:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:10:43,260:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:10:43,313:INFO: - done.
2018-11-25 23:10:43,313:INFO: Creating the model...
2018-11-25 23:10:43,422:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:11:07,870:INFO: Creating the datasets...
2018-11-25 23:11:09,771:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:11:10,099:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:11:10,147:INFO: - done.
2018-11-25 23:11:10,147:INFO: Creating the model...
2018-11-25 23:11:10,251:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:11:12,381:INFO: - done.
2018-11-25 23:11:12,381:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:11:13,483:INFO: Epoch 1/10000
2018-11-25 23:12:55,169:INFO: Creating the datasets...
2018-11-25 23:12:57,045:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:12:57,368:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:12:57,415:INFO: - done.
2018-11-25 23:12:57,415:INFO: Creating the model...
2018-11-25 23:12:57,517:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:12:59,861:INFO: - done.
2018-11-25 23:12:59,861:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:13:00,890:INFO: Epoch 1/10000
2018-11-25 23:15:59,195:INFO: Creating the datasets...
2018-11-25 23:16:01,085:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:16:01,439:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:16:01,488:INFO: - done.
2018-11-25 23:16:01,488:INFO: Creating the model...
2018-11-25 23:16:01,593:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:16:03,943:INFO: - done.
2018-11-25 23:16:03,943:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:16:04,886:INFO: Epoch 1/10000
2018-11-25 23:18:23,795:INFO: Creating the datasets...
2018-11-25 23:18:25,697:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:18:26,036:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:18:26,084:INFO: - done.
2018-11-25 23:18:26,084:INFO: Creating the model...
2018-11-25 23:18:26,188:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:18:28,434:INFO: - done.
2018-11-25 23:18:28,434:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:18:29,420:INFO: Epoch 1/10000
2018-11-25 23:19:37,967:INFO: Creating the datasets...
2018-11-25 23:19:39,837:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:19:40,189:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:19:40,238:INFO: - done.
2018-11-25 23:19:40,238:INFO: Creating the model...
2018-11-25 23:19:40,342:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:19:42,474:INFO: - done.
2018-11-25 23:19:42,474:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:19:43,590:INFO: Epoch 1/10000
2018-11-25 23:21:09,834:INFO: Creating the datasets...
2018-11-25 23:21:11,716:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:21:12,044:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:21:12,092:INFO: - done.
2018-11-25 23:21:12,092:INFO: Creating the model...
2018-11-25 23:21:12,203:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:21:14,431:INFO: - done.
2018-11-25 23:21:14,431:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:21:15,644:INFO: Epoch 1/10000
2018-11-25 23:22:21,403:INFO: Creating the datasets...
2018-11-25 23:22:23,394:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:22:23,775:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:22:23,824:INFO: - done.
2018-11-25 23:22:23,824:INFO: Creating the model...
2018-11-25 23:22:23,931:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:22:26,574:INFO: - done.
2018-11-25 23:22:26,574:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:22:27,602:INFO: Epoch 1/10000
2018-11-25 23:24:04,320:INFO: Creating the datasets...
2018-11-25 23:24:06,225:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:24:06,563:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:24:06,609:INFO: - done.
2018-11-25 23:24:06,610:INFO: Creating the model...
2018-11-25 23:24:06,717:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:24:08,932:INFO: - done.
2018-11-25 23:24:08,932:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:24:10,123:INFO: Epoch 1/10000
2018-11-25 23:26:42,729:INFO: Creating the datasets...
2018-11-25 23:26:44,623:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:26:44,985:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:26:45,033:INFO: - done.
2018-11-25 23:26:45,033:INFO: Creating the model...
2018-11-25 23:26:45,138:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:26:47,634:INFO: - done.
2018-11-25 23:26:47,634:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:26:48,943:INFO: Epoch 1/10000
2018-11-25 23:28:05,071:INFO: Creating the datasets...
2018-11-25 23:28:07,089:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-25 23:28:07,430:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-25 23:28:07,478:INFO: - done.
2018-11-25 23:28:07,478:INFO: Creating the model...
2018-11-25 23:28:07,592:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-25 23:28:09,763:INFO: - done.
2018-11-25 23:28:09,763:INFO: Starting training for 10000 epoch(s)
2018-11-25 23:28:10,726:INFO: Epoch 1/10000
2018-11-25 23:34:03,813:INFO: - Train metrics: accuracy: 0.004 ; loss: 1559.173
2018-11-25 23:35:00,390:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1477.287
2018-11-25 23:35:01,350:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-25 23:35:01,351:INFO: Epoch 2/10000
2018-11-25 23:40:54,769:INFO: - Train metrics: accuracy: 0.004 ; loss: 1559.132
2018-11-25 23:41:51,060:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1477.250
2018-11-25 23:41:51,899:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-25 23:41:51,900:INFO: Epoch 3/10000
2018-11-25 23:47:44,424:INFO: - Train metrics: accuracy: 0.004 ; loss: 1559.090
2018-11-25 23:48:40,945:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1477.212
2018-11-25 23:48:41,782:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-25 23:48:41,782:INFO: Epoch 4/10000
2018-11-25 23:54:35,537:INFO: - Train metrics: accuracy: 0.004 ; loss: 1559.049
2018-11-25 23:55:31,707:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1477.175
2018-11-25 23:55:32,547:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-25 23:55:32,548:INFO: Epoch 5/10000
2018-11-26 00:01:23,440:INFO: - Train metrics: accuracy: 0.004 ; loss: 1559.007
2018-11-26 00:02:19,824:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1477.138
2018-11-26 00:02:20,715:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-26 00:02:20,715:INFO: Epoch 6/10000
2018-11-26 00:08:12,931:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.966
2018-11-26 00:09:09,390:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1477.102
2018-11-26 00:09:10,213:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-26 00:09:10,213:INFO: Epoch 7/10000
2018-11-26 00:15:03,889:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.924
2018-11-26 00:16:00,113:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1477.063
2018-11-26 00:16:00,933:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-26 00:16:00,933:INFO: Epoch 8/10000
2018-11-26 00:21:53,580:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.882
2018-11-26 00:22:50,206:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1477.025
2018-11-26 00:22:51,063:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-26 00:22:51,064:INFO: Epoch 9/10000
2018-11-26 00:28:43,436:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.841
2018-11-26 00:29:39,609:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.987
2018-11-26 00:29:40,430:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-26 00:29:40,430:INFO: Epoch 10/10000
2018-11-26 00:35:32,078:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.799
2018-11-26 00:36:28,346:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.949
2018-11-26 00:36:29,208:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-26 00:36:29,209:INFO: Epoch 11/10000
2018-11-26 00:42:19,379:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.758
2018-11-26 00:43:15,644:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.913
2018-11-26 00:43:16,536:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-26 00:43:16,537:INFO: Epoch 12/10000
2018-11-26 00:49:09,073:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.717
2018-11-26 00:50:05,696:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.876
2018-11-26 00:50:06,541:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-26 00:50:06,541:INFO: Epoch 13/10000
2018-11-26 00:55:58,272:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.675
2018-11-26 00:56:54,305:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.837
2018-11-26 00:56:55,274:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-26 00:56:55,275:INFO: Epoch 14/10000
2018-11-26 01:02:45,450:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.633
2018-11-26 01:03:41,684:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.800
2018-11-26 01:03:42,496:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-26 01:03:42,496:INFO: Epoch 15/10000
2018-11-26 01:09:31,920:INFO: - Train metrics: accuracy: 0.004 ; loss: 1558.594
2018-11-26 01:10:28,401:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.763
2018-11-26 01:10:29,221:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-26 01:10:29,222:INFO: Epoch 16/10000
2018-11-26 01:16:20,047:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.551
2018-11-26 01:17:16,503:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.725
2018-11-26 01:17:17,380:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-26 01:17:17,380:INFO: Epoch 17/10000
2018-11-26 01:23:08,218:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.509
2018-11-26 01:24:04,502:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.687
2018-11-26 01:24:05,330:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-26 01:24:05,331:INFO: Epoch 18/10000
2018-11-26 01:29:57,156:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.467
2018-11-26 01:30:52,954:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.649
2018-11-26 01:30:53,794:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-26 01:30:53,795:INFO: Epoch 19/10000
2018-11-26 01:36:44,497:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.426
2018-11-26 01:37:40,751:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.610
2018-11-26 01:37:41,603:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-26 01:37:41,604:INFO: Epoch 20/10000
2018-11-26 01:43:34,077:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.385
2018-11-26 01:44:30,608:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.571
2018-11-26 01:44:31,572:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-20
2018-11-26 01:44:31,573:INFO: Epoch 21/10000
2018-11-26 01:50:25,280:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.341
2018-11-26 01:51:22,080:INFO: - Eval metrics: accuracy: 0.004 ; loss: 1476.533
2018-11-26 01:51:22,909:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-26 01:51:22,910:INFO: Epoch 22/10000
2018-11-26 01:57:14,519:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.299
2018-11-26 01:58:10,777:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.491
2018-11-26 01:58:11,619:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-26 01:58:11,619:INFO: Epoch 23/10000
2018-11-26 02:04:02,273:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.257
2018-11-26 02:04:58,991:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.452
2018-11-26 02:04:59,761:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-26 02:04:59,761:INFO: Epoch 24/10000
2018-11-26 02:10:50,645:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.213
2018-11-26 02:11:46,769:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.411
2018-11-26 02:11:47,593:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-26 02:11:47,594:INFO: Epoch 25/10000
2018-11-26 02:17:39,074:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.170
2018-11-26 02:18:35,378:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.369
2018-11-26 02:18:36,220:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-26 02:18:36,220:INFO: Epoch 26/10000
2018-11-26 02:24:29,164:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.126
2018-11-26 02:25:25,528:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.328
2018-11-26 02:25:26,366:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-26 02:25:26,367:INFO: Epoch 27/10000
2018-11-26 02:31:19,411:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.082
2018-11-26 02:32:15,853:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.289
2018-11-26 02:32:16,733:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-26 02:32:16,733:INFO: Epoch 28/10000
2018-11-26 02:38:10,377:INFO: - Train metrics: accuracy: 0.005 ; loss: 1558.037
2018-11-26 02:39:06,858:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.247
2018-11-26 02:39:07,678:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-26 02:39:07,678:INFO: Epoch 29/10000
2018-11-26 02:44:58,631:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.992
2018-11-26 02:45:54,953:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.206
2018-11-26 02:45:55,794:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-26 02:45:55,795:INFO: Epoch 30/10000
2018-11-26 02:51:48,249:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.945
2018-11-26 02:52:44,393:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.162
2018-11-26 02:52:45,235:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-30
2018-11-26 02:52:45,235:INFO: Epoch 31/10000
2018-11-26 02:58:37,406:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.899
2018-11-26 02:59:33,571:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.118
2018-11-26 02:59:34,405:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-31
2018-11-26 02:59:34,405:INFO: Epoch 32/10000
2018-11-26 03:05:27,108:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.854
2018-11-26 03:06:23,247:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.076
2018-11-26 03:06:24,103:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-26 03:06:24,104:INFO: Epoch 33/10000
2018-11-26 03:12:12,583:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.807
2018-11-26 03:13:08,635:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1476.031
2018-11-26 03:13:09,456:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-33
2018-11-26 03:13:09,456:INFO: Epoch 34/10000
2018-11-26 03:18:56,668:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.760
2018-11-26 03:19:52,526:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.985
2018-11-26 03:19:53,424:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-34
2018-11-26 03:19:53,424:INFO: Epoch 35/10000
2018-11-26 03:25:41,715:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.712
2018-11-26 03:26:37,996:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.940
2018-11-26 03:26:38,838:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-35
2018-11-26 03:26:38,839:INFO: Epoch 36/10000
2018-11-26 03:32:28,552:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.665
2018-11-26 03:33:24,444:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.893
2018-11-26 03:33:25,293:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-36
2018-11-26 03:33:25,294:INFO: Epoch 37/10000
2018-11-26 03:39:15,146:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.616
2018-11-26 03:40:11,056:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.849
2018-11-26 03:40:11,892:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-37
2018-11-26 03:40:11,892:INFO: Epoch 38/10000
2018-11-26 03:46:01,456:INFO: - Train metrics: accuracy: 0.005 ; loss: 1557.567
2018-11-26 03:46:57,384:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.801
2018-11-26 03:46:58,225:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-38
2018-11-26 03:46:58,226:INFO: Epoch 39/10000
2018-11-26 03:52:47,146:INFO: - Train metrics: accuracy: 0.006 ; loss: 1557.518
2018-11-26 03:53:43,264:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.753
2018-11-26 03:53:44,095:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-39
2018-11-26 03:53:44,096:INFO: Epoch 40/10000
2018-11-26 03:59:32,784:INFO: - Train metrics: accuracy: 0.006 ; loss: 1557.467
2018-11-26 04:00:28,930:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.704
2018-11-26 04:00:29,856:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-40
2018-11-26 04:00:29,857:INFO: Epoch 41/10000
2018-11-26 04:06:20,203:INFO: - Train metrics: accuracy: 0.006 ; loss: 1557.416
2018-11-26 04:07:16,013:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.654
2018-11-26 04:07:16,817:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-41
2018-11-26 04:07:16,817:INFO: Epoch 42/10000
2018-11-26 04:13:06,886:INFO: - Train metrics: accuracy: 0.006 ; loss: 1557.365
2018-11-26 04:14:03,204:INFO: - Eval metrics: accuracy: 0.005 ; loss: 1475.604
2018-11-26 04:14:04,049:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-42
2018-11-26 04:14:04,050:INFO: Epoch 43/10000
2018-11-26 04:19:55,076:INFO: - Train metrics: accuracy: 0.006 ; loss: 1557.314
2018-11-26 04:20:51,174:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1475.553
2018-11-26 04:20:52,002:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-43
2018-11-26 04:20:52,003:INFO: Epoch 44/10000
2018-11-26 04:26:41,680:INFO: - Train metrics: accuracy: 0.006 ; loss: 1557.261
2018-11-26 04:27:37,611:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1475.501
2018-11-26 04:27:38,513:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-44
2018-11-26 04:27:38,514:INFO: Epoch 45/10000
2018-11-26 04:33:26,745:INFO: - Train metrics: accuracy: 0.006 ; loss: 1557.207
2018-11-26 04:34:22,667:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1475.448
2018-11-26 04:34:23,512:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-45
2018-11-26 04:34:23,513:INFO: Epoch 46/10000
2018-11-26 04:40:12,441:INFO: - Train metrics: accuracy: 0.006 ; loss: 1557.152
2018-11-26 04:41:08,490:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1475.393
2018-11-26 04:41:09,331:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-46
2018-11-26 04:41:09,332:INFO: Epoch 47/10000
2018-11-26 04:46:58,674:INFO: - Train metrics: accuracy: 0.006 ; loss: 1557.097
2018-11-26 04:47:54,656:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1475.339
2018-11-26 04:47:55,479:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-47
2018-11-26 04:47:55,480:INFO: Epoch 48/10000
2018-11-26 04:53:45,559:INFO: - Train metrics: accuracy: 0.006 ; loss: 1557.040
2018-11-26 04:54:41,189:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1475.284
2018-11-26 04:54:42,070:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-48
2018-11-26 04:54:42,071:INFO: Epoch 49/10000
2018-11-26 05:00:31,662:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.983
2018-11-26 05:01:27,761:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1475.229
2018-11-26 05:01:28,598:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-49
2018-11-26 05:01:28,599:INFO: Epoch 50/10000
2018-11-26 05:07:16,829:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.925
2018-11-26 05:08:12,993:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1475.172
2018-11-26 05:08:13,808:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-50
2018-11-26 05:08:13,809:INFO: Epoch 51/10000
2018-11-26 05:14:03,263:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.867
2018-11-26 05:14:59,447:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1475.116
2018-11-26 05:15:00,291:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-51
2018-11-26 05:15:00,292:INFO: Epoch 52/10000
2018-11-26 05:20:51,253:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.808
2018-11-26 05:21:47,576:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1475.057
2018-11-26 05:21:48,416:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-52
2018-11-26 05:21:48,416:INFO: Epoch 53/10000
2018-11-26 05:27:37,736:INFO: - Train metrics: accuracy: 0.006 ; loss: 1556.748
2018-11-26 05:28:33,823:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.997
2018-11-26 05:28:34,647:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-53
2018-11-26 05:28:34,647:INFO: Epoch 54/10000
2018-11-26 05:34:25,712:INFO: - Train metrics: accuracy: 0.007 ; loss: 1556.687
2018-11-26 05:35:21,847:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.936
2018-11-26 05:35:22,683:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-54
2018-11-26 05:35:22,684:INFO: Epoch 55/10000
2018-11-26 05:41:13,250:INFO: - Train metrics: accuracy: 0.007 ; loss: 1556.625
2018-11-26 05:42:09,146:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.874
2018-11-26 05:42:09,964:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-55
2018-11-26 05:42:09,965:INFO: Epoch 56/10000
2018-11-26 05:48:01,841:INFO: - Train metrics: accuracy: 0.007 ; loss: 1556.563
2018-11-26 05:48:57,583:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.812
2018-11-26 05:48:58,376:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-56
2018-11-26 05:48:58,376:INFO: Epoch 57/10000
2018-11-26 05:54:49,493:INFO: - Train metrics: accuracy: 0.007 ; loss: 1556.500
2018-11-26 05:55:45,795:INFO: - Eval metrics: accuracy: 0.006 ; loss: 1474.749
2018-11-26 05:55:46,727:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-57
2018-11-26 05:55:46,727:INFO: Epoch 58/10000
2018-11-26 06:01:37,724:INFO: - Train metrics: accuracy: 0.007 ; loss: 1556.437
2018-11-26 06:02:33,802:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.686
2018-11-26 06:02:34,631:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-58
2018-11-26 06:02:34,632:INFO: Epoch 59/10000
2018-11-26 06:08:25,083:INFO: - Train metrics: accuracy: 0.007 ; loss: 1556.372
2018-11-26 06:09:21,178:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.619
2018-11-26 06:09:22,063:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-59
2018-11-26 06:09:22,064:INFO: Epoch 60/10000
2018-11-26 06:15:13,458:INFO: - Train metrics: accuracy: 0.007 ; loss: 1556.307
2018-11-26 06:16:09,362:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.554
2018-11-26 06:16:10,177:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-60
2018-11-26 06:16:10,178:INFO: Epoch 61/10000
2018-11-26 06:22:00,382:INFO: - Train metrics: accuracy: 0.007 ; loss: 1556.241
2018-11-26 06:22:56,361:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.489
2018-11-26 06:22:57,181:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-61
2018-11-26 06:22:57,181:INFO: Epoch 62/10000
2018-11-26 06:28:48,201:INFO: - Train metrics: accuracy: 0.007 ; loss: 1556.173
2018-11-26 06:29:44,394:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.424
2018-11-26 06:29:45,237:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-62
2018-11-26 06:29:45,238:INFO: Epoch 63/10000
2018-11-26 06:35:38,146:INFO: - Train metrics: accuracy: 0.007 ; loss: 1556.105
2018-11-26 06:36:34,346:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.356
2018-11-26 06:36:35,163:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-63
2018-11-26 06:36:35,164:INFO: Epoch 64/10000
2018-11-26 06:42:25,125:INFO: - Train metrics: accuracy: 0.007 ; loss: 1556.037
2018-11-26 06:43:21,036:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.287
2018-11-26 06:43:21,870:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-64
2018-11-26 06:43:21,870:INFO: Epoch 65/10000
2018-11-26 06:49:13,876:INFO: - Train metrics: accuracy: 0.007 ; loss: 1555.967
2018-11-26 06:50:09,882:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.219
2018-11-26 06:50:10,707:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-65
2018-11-26 06:50:10,707:INFO: Epoch 66/10000
2018-11-26 06:56:02,366:INFO: - Train metrics: accuracy: 0.007 ; loss: 1555.897
2018-11-26 06:56:58,382:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.150
2018-11-26 06:56:59,303:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-66
2018-11-26 06:56:59,304:INFO: Epoch 67/10000
2018-11-26 07:02:50,580:INFO: - Train metrics: accuracy: 0.008 ; loss: 1555.825
2018-11-26 07:03:46,298:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.079
2018-11-26 07:03:47,148:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-67
2018-11-26 07:03:47,149:INFO: Epoch 68/10000
2018-11-26 07:09:39,029:INFO: - Train metrics: accuracy: 0.008 ; loss: 1555.755
2018-11-26 07:10:34,994:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1474.006
2018-11-26 07:10:35,854:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-68
2018-11-26 07:10:35,854:INFO: Epoch 69/10000
2018-11-26 07:16:27,201:INFO: - Train metrics: accuracy: 0.008 ; loss: 1555.680
2018-11-26 07:17:23,328:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1473.934
2018-11-26 07:17:24,161:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-69
2018-11-26 07:17:24,161:INFO: Epoch 70/10000
2018-11-26 07:23:15,191:INFO: - Train metrics: accuracy: 0.008 ; loss: 1555.607
2018-11-26 07:24:11,212:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.860
2018-11-26 07:24:12,133:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-70
2018-11-26 07:24:12,133:INFO: Epoch 71/10000
2018-11-26 07:30:04,771:INFO: - Train metrics: accuracy: 0.008 ; loss: 1555.531
2018-11-26 07:31:00,612:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.787
2018-11-26 07:31:01,435:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-71
2018-11-26 07:31:01,436:INFO: Epoch 72/10000
2018-11-26 07:36:51,768:INFO: - Train metrics: accuracy: 0.008 ; loss: 1555.455
2018-11-26 07:37:47,636:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.714
2018-11-26 07:37:48,500:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-72
2018-11-26 07:37:48,500:INFO: Epoch 73/10000
2018-11-26 07:43:40,616:INFO: - Train metrics: accuracy: 0.008 ; loss: 1555.378
2018-11-26 07:44:36,645:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.637
2018-11-26 07:44:37,457:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-73
2018-11-26 07:44:37,457:INFO: Epoch 74/10000
2018-11-26 07:50:13,016:INFO: - Train metrics: accuracy: 0.008 ; loss: 1555.301
2018-11-26 07:51:03,285:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.563
2018-11-26 07:51:04,191:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-74
2018-11-26 07:51:04,192:INFO: Epoch 75/10000
2018-11-26 07:56:56,691:INFO: - Train metrics: accuracy: 0.008 ; loss: 1555.223
2018-11-26 07:57:52,643:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.487
2018-11-26 07:57:53,520:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-75
2018-11-26 07:57:53,520:INFO: Epoch 76/10000
2018-11-26 08:03:45,450:INFO: - Train metrics: accuracy: 0.008 ; loss: 1555.143
2018-11-26 08:04:41,476:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.409
2018-11-26 08:04:42,293:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-76
2018-11-26 08:04:42,294:INFO: Epoch 77/10000
2018-11-26 08:10:30,767:INFO: - Train metrics: accuracy: 0.008 ; loss: 1555.064
2018-11-26 08:11:26,607:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.329
2018-11-26 08:11:27,453:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-77
2018-11-26 08:11:27,454:INFO: Epoch 78/10000
2018-11-26 08:17:18,631:INFO: - Train metrics: accuracy: 0.009 ; loss: 1554.982
2018-11-26 08:18:14,542:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.252
2018-11-26 08:18:15,365:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-78
2018-11-26 08:18:15,365:INFO: Epoch 79/10000
2018-11-26 08:24:04,134:INFO: - Train metrics: accuracy: 0.009 ; loss: 1554.900
2018-11-26 08:25:00,178:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.171
2018-11-26 08:25:00,987:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-79
2018-11-26 08:25:00,987:INFO: Epoch 80/10000
2018-11-26 08:30:50,598:INFO: - Train metrics: accuracy: 0.009 ; loss: 1554.817
2018-11-26 08:31:46,159:INFO: - Eval metrics: accuracy: 0.008 ; loss: 1473.093
2018-11-26 08:31:47,062:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-80
2018-11-26 08:31:47,063:INFO: Epoch 81/10000
2018-11-26 08:37:36,914:INFO: - Train metrics: accuracy: 0.009 ; loss: 1554.732
2018-11-26 08:38:32,821:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1473.013
2018-11-26 08:38:33,648:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-81
2018-11-26 08:38:33,648:INFO: Epoch 82/10000
2018-11-26 08:44:23,407:INFO: - Train metrics: accuracy: 0.009 ; loss: 1554.647
2018-11-26 08:45:19,406:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.933
2018-11-26 08:45:20,231:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-82
2018-11-26 08:45:20,232:INFO: Epoch 83/10000
2018-11-26 08:51:10,682:INFO: - Train metrics: accuracy: 0.009 ; loss: 1554.561
2018-11-26 08:52:06,889:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.851
2018-11-26 08:52:07,685:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-83
2018-11-26 08:52:07,686:INFO: Epoch 84/10000
2018-11-26 08:57:58,858:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 08:58:54,947:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.771
2018-11-26 08:58:55,780:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-84
2018-11-26 08:58:55,781:INFO: Epoch 85/10000
2018-11-26 09:04:48,038:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 09:05:44,272:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.708
2018-11-26 09:05:45,090:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-85
2018-11-26 09:05:45,091:INFO: Epoch 86/10000
2018-11-26 09:11:33,387:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 09:12:29,025:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.643
2018-11-26 09:12:29,875:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-86
2018-11-26 09:12:29,876:INFO: Epoch 87/10000
2018-11-26 09:18:18,776:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 09:19:15,213:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.580
2018-11-26 09:19:16,110:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-87
2018-11-26 09:19:16,111:INFO: Epoch 88/10000
2018-11-26 09:25:06,199:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 09:25:52,249:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.516
2018-11-26 09:25:52,931:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-88
2018-11-26 09:25:52,932:INFO: Epoch 89/10000
2018-11-26 09:31:19,434:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 09:32:13,746:INFO: - Eval metrics: accuracy: 0.009 ; loss: 1472.449
2018-11-26 09:32:14,546:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-89
2018-11-26 09:32:14,546:INFO: Epoch 90/10000
2018-11-26 09:36:49,781:INFO: Creating the datasets...
2018-11-26 09:36:54,047:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 09:36:54,351:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 09:36:54,395:INFO: - done.
2018-11-26 09:36:54,395:INFO: Creating the model...
2018-11-26 09:36:54,489:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 09:36:56,406:INFO: - done.
2018-11-26 09:36:56,406:INFO: Starting training for 10000 epoch(s)
2018-11-26 09:36:57,338:INFO: Epoch 1/10000
2018-11-26 09:38:21,910:INFO: Creating the datasets...
2018-11-26 09:38:23,570:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 09:38:23,874:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 09:38:23,918:INFO: - done.
2018-11-26 09:38:23,918:INFO: Creating the model...
2018-11-26 09:38:24,014:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 09:38:25,936:INFO: - done.
2018-11-26 09:38:25,936:INFO: Starting training for 10000 epoch(s)
2018-11-26 09:38:26,775:INFO: Epoch 1/10000
2018-11-26 09:44:01,056:INFO: - Train metrics: accuracy: 0.007 ; loss: 1559.245
2018-11-26 09:44:55,827:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1477.406
2018-11-26 09:44:56,742:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 09:44:56,742:INFO: Epoch 2/10000
2018-11-26 09:50:29,369:INFO: - Train metrics: accuracy: 0.007 ; loss: 1559.171
2018-11-26 09:51:23,934:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1477.337
2018-11-26 09:51:24,781:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-26 09:51:24,781:INFO: Epoch 3/10000
2018-11-26 09:56:56,691:INFO: - Train metrics: accuracy: 0.007 ; loss: 1559.094
2018-11-26 09:57:47,486:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1477.264
2018-11-26 09:57:48,350:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-26 09:57:48,364:INFO: Epoch 4/10000
2018-11-26 10:03:19,481:INFO: - Train metrics: accuracy: 0.007 ; loss: 1559.020
2018-11-26 10:04:14,118:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1477.192
2018-11-26 10:04:14,915:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-26 10:04:14,916:INFO: Epoch 5/10000
2018-11-26 10:09:44,337:INFO: - Train metrics: accuracy: 0.007 ; loss: 1558.945
2018-11-26 10:10:38,668:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1477.117
2018-11-26 10:10:39,501:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-26 10:10:39,501:INFO: Epoch 6/10000
2018-11-26 10:16:09,633:INFO: - Train metrics: accuracy: 0.007 ; loss: 1558.870
2018-11-26 10:17:02,944:INFO: - Eval metrics: accuracy: 0.007 ; loss: 1477.045
2018-11-26 10:17:03,602:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-26 10:17:03,603:INFO: Epoch 7/10000
2018-11-26 10:22:40,196:INFO: Creating the datasets...
2018-11-26 10:22:44,210:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 10:22:44,520:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 10:22:44,564:INFO: - done.
2018-11-26 10:22:44,564:INFO: Creating the model...
2018-11-26 10:22:44,661:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 10:22:46,619:INFO: - done.
2018-11-26 10:22:46,619:INFO: Starting training for 10000 epoch(s)
2018-11-26 10:22:47,549:INFO: Epoch 1/10000
2018-11-26 10:28:18,536:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 10:29:12,592:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 10:29:13,219:INFO: Epoch 2/10000
2018-11-26 10:34:41,331:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 10:35:35,865:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 10:35:36,553:INFO: Epoch 3/10000
2018-11-26 10:41:09,086:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 10:42:03,518:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 10:42:04,113:INFO: Epoch 4/10000
2018-11-26 10:47:35,304:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 10:48:29,840:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 10:48:30,444:INFO: Epoch 5/10000
2018-11-26 10:53:59,732:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 10:54:52,299:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 10:54:52,906:INFO: Epoch 6/10000
2018-11-26 11:00:23,024:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 11:01:17,832:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 11:01:18,461:INFO: Epoch 7/10000
2018-11-26 11:06:50,672:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 11:07:44,958:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 11:07:45,575:INFO: Epoch 8/10000
2018-11-26 11:13:17,816:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 11:14:12,294:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 11:14:12,893:INFO: Epoch 9/10000
2018-11-26 11:19:43,422:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 11:20:37,685:INFO: - Eval metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 11:20:38,292:INFO: Epoch 10/10000
2018-11-26 11:26:09,623:INFO: - Train metrics: accuracy: 00nan ; loss: 00nan
2018-11-26 11:26:56,652:INFO: Creating the datasets...
2018-11-26 11:27:01,116:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 11:27:01,424:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 11:27:01,471:INFO: - done.
2018-11-26 11:27:01,471:INFO: Creating the model...
2018-11-26 11:27:01,583:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 11:27:03,584:INFO: - done.
2018-11-26 11:27:03,584:INFO: Starting training for 10000 epoch(s)
2018-11-26 11:27:04,544:INFO: Epoch 1/10000
2018-11-26 11:28:40,213:INFO: Creating the datasets...
2018-11-26 11:28:41,902:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 11:28:42,206:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 11:28:42,270:INFO: - done.
2018-11-26 11:28:42,270:INFO: Creating the model...
2018-11-26 11:28:42,364:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 11:28:44,331:INFO: - done.
2018-11-26 11:28:44,331:INFO: Starting training for 10000 epoch(s)
2018-11-26 11:28:45,202:INFO: Epoch 1/10000
2018-11-26 11:34:19,609:INFO: - Train metrics: accuracy: 0.115 ; loss: 1563.030
2018-11-26 11:35:14,503:INFO: - Eval metrics: accuracy: 0.115 ; loss: 1479.335
2018-11-26 11:35:15,467:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 11:35:15,468:INFO: Epoch 2/10000
2018-11-26 11:40:49,534:INFO: - Train metrics: accuracy: 0.117 ; loss: 1555.527
2018-11-26 11:41:44,370:INFO: - Eval metrics: accuracy: 0.118 ; loss: 1471.692
2018-11-26 11:41:45,277:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-26 11:41:45,278:INFO: Epoch 3/10000
2018-11-26 11:47:19,666:INFO: - Train metrics: accuracy: 0.120 ; loss: 1548.081
2018-11-26 11:48:14,316:INFO: - Eval metrics: accuracy: 0.120 ; loss: 1464.116
2018-11-26 11:48:15,143:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-26 11:48:15,144:INFO: Epoch 4/10000
2018-11-26 11:53:49,547:INFO: - Train metrics: accuracy: 0.122 ; loss: 1540.678
2018-11-26 11:54:44,487:INFO: - Eval metrics: accuracy: 0.123 ; loss: 1456.580
2018-11-26 11:54:45,316:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-26 11:54:45,317:INFO: Epoch 5/10000
2018-11-26 12:00:20,982:INFO: - Train metrics: accuracy: 0.125 ; loss: 1533.315
2018-11-26 12:01:15,763:INFO: - Eval metrics: accuracy: 0.126 ; loss: 1449.070
2018-11-26 12:01:16,564:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-26 12:01:16,565:INFO: Epoch 6/10000
2018-11-26 12:05:48,478:INFO: Creating the datasets...
2018-11-26 12:05:53,530:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:05:53,838:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:05:53,883:INFO: - done.
2018-11-26 12:05:53,883:INFO: Creating the model...
2018-11-26 12:05:54,001:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:05:56,134:INFO: - done.
2018-11-26 12:05:56,134:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:05:57,130:INFO: Epoch 1/10000
2018-11-26 12:07:04,039:INFO: Creating the datasets...
2018-11-26 12:07:05,726:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:07:06,031:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:07:06,075:INFO: - done.
2018-11-26 12:07:06,075:INFO: Creating the model...
2018-11-26 12:07:06,171:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:267: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:07:08,299:INFO: - done.
2018-11-26 12:07:08,299:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:07:09,233:INFO: Epoch 1/10000
2018-11-26 12:09:36,300:INFO: Creating the datasets...
2018-11-26 12:09:37,976:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:09:38,283:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:09:38,327:INFO: - done.
2018-11-26 12:09:38,327:INFO: Creating the model...
2018-11-26 12:09:38,423:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:268: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:09:40,599:INFO: - done.
2018-11-26 12:09:40,599:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:09:41,530:INFO: Epoch 1/10000
2018-11-26 12:11:15,203:INFO: Creating the datasets...
2018-11-26 12:11:16,896:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:11:17,207:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:11:17,251:INFO: - done.
2018-11-26 12:11:17,252:INFO: Creating the model...
2018-11-26 12:11:17,350:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:268: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:11:19,514:INFO: - done.
2018-11-26 12:11:19,515:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:11:20,439:INFO: Epoch 1/10000
2018-11-26 12:12:18,044:INFO: Creating the datasets...
2018-11-26 12:12:19,734:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:12:20,044:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:12:20,089:INFO: - done.
2018-11-26 12:12:20,089:INFO: Creating the model...
2018-11-26 12:12:20,187:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:268: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:12:22,336:INFO: - done.
2018-11-26 12:12:22,336:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:12:23,271:INFO: Epoch 1/10000
2018-11-26 12:14:23,479:INFO: Creating the datasets...
2018-11-26 12:14:25,187:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:14:25,494:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:14:25,539:INFO: - done.
2018-11-26 12:14:25,539:INFO: Creating the model...
2018-11-26 12:14:25,635:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:268: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:14:27,751:INFO: - done.
2018-11-26 12:14:27,751:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:14:28,676:INFO: Epoch 1/10000
2018-11-26 12:15:01,691:INFO: Creating the datasets...
2018-11-26 12:15:03,454:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:15:03,769:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:15:03,818:INFO: - done.
2018-11-26 12:15:03,818:INFO: Creating the model...
2018-11-26 12:15:03,921:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:268: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:15:06,082:INFO: - done.
2018-11-26 12:15:06,082:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:15:07,037:INFO: Epoch 1/10000
2018-11-26 12:19:31,965:INFO: Creating the datasets...
2018-11-26 12:19:33,791:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:19:34,103:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:19:34,148:INFO: - done.
2018-11-26 12:19:34,148:INFO: Creating the model...
2018-11-26 12:19:34,246:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:19:36,399:INFO: - done.
2018-11-26 12:19:36,399:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:19:37,322:INFO: Epoch 1/10000
2018-11-26 12:20:12,207:INFO: Creating the datasets...
2018-11-26 12:20:13,894:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:20:14,202:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:20:14,247:INFO: - done.
2018-11-26 12:20:14,247:INFO: Creating the model...
2018-11-26 12:20:14,343:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:20:16,470:INFO: - done.
2018-11-26 12:20:16,470:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:20:17,401:INFO: Epoch 1/10000
2018-11-26 12:21:17,594:INFO: Creating the datasets...
2018-11-26 12:21:19,308:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:21:19,612:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:21:19,656:INFO: - done.
2018-11-26 12:21:19,656:INFO: Creating the model...
2018-11-26 12:21:19,753:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:21:21,866:INFO: - done.
2018-11-26 12:21:21,867:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:21:22,803:INFO: Epoch 1/10000
2018-11-26 12:22:05,287:INFO: Creating the datasets...
2018-11-26 12:22:06,953:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:22:07,255:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:22:07,298:INFO: - done.
2018-11-26 12:22:07,298:INFO: Creating the model...
2018-11-26 12:22:07,394:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:22:09,500:INFO: - done.
2018-11-26 12:22:09,500:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:22:10,409:INFO: Epoch 1/10000
2018-11-26 12:22:53,681:INFO: Creating the datasets...
2018-11-26 12:22:55,368:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:22:55,674:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:22:55,719:INFO: - done.
2018-11-26 12:22:55,720:INFO: Creating the model...
2018-11-26 12:22:55,817:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:22:57,958:INFO: - done.
2018-11-26 12:22:57,958:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:22:58,885:INFO: Epoch 1/10000
2018-11-26 12:24:22,734:INFO: Creating the datasets...
2018-11-26 12:24:24,410:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:24:24,720:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:24:24,765:INFO: - done.
2018-11-26 12:24:24,765:INFO: Creating the model...
2018-11-26 12:24:24,863:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:24:26,996:INFO: - done.
2018-11-26 12:24:26,996:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:24:27,926:INFO: Epoch 1/10000
2018-11-26 12:24:51,415:INFO: Creating the datasets...
2018-11-26 12:24:53,127:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:24:53,433:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:24:53,477:INFO: - done.
2018-11-26 12:24:53,477:INFO: Creating the model...
2018-11-26 12:24:53,576:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:24:55,701:INFO: - done.
2018-11-26 12:24:55,702:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:24:56,639:INFO: Epoch 1/10000
2018-11-26 12:25:28,821:INFO: Creating the datasets...
2018-11-26 12:25:30,558:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:25:30,865:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:25:30,910:INFO: - done.
2018-11-26 12:25:30,910:INFO: Creating the model...
2018-11-26 12:25:31,007:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:25:33,138:INFO: - done.
2018-11-26 12:25:33,138:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:25:34,065:INFO: Epoch 1/10000
2018-11-26 12:26:22,172:INFO: Creating the datasets...
2018-11-26 12:26:23,868:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:26:24,177:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:26:24,221:INFO: - done.
2018-11-26 12:26:24,221:INFO: Creating the model...
2018-11-26 12:26:24,318:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:26:26,452:INFO: - done.
2018-11-26 12:26:26,452:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:26:27,411:INFO: Epoch 1/10000
2018-11-26 12:26:58,897:INFO: Creating the datasets...
2018-11-26 12:27:00,568:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:27:00,876:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:27:00,920:INFO: - done.
2018-11-26 12:27:00,920:INFO: Creating the model...
2018-11-26 12:27:01,017:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:27:03,203:INFO: - done.
2018-11-26 12:27:03,203:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:27:04,136:INFO: Epoch 1/10000
2018-11-26 12:29:19,955:INFO: Creating the datasets...
2018-11-26 12:29:21,617:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:29:21,922:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:29:21,966:INFO: - done.
2018-11-26 12:29:21,966:INFO: Creating the model...
2018-11-26 12:29:22,062:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:29:24,182:INFO: - done.
2018-11-26 12:29:24,183:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:29:25,111:INFO: Epoch 1/10000
2018-11-26 12:30:11,263:INFO: Creating the datasets...
2018-11-26 12:30:12,929:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:30:13,231:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:30:13,274:INFO: - done.
2018-11-26 12:30:13,275:INFO: Creating the model...
2018-11-26 12:30:13,370:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:30:15,497:INFO: - done.
2018-11-26 12:30:15,497:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:30:16,434:INFO: Epoch 1/10000
2018-11-26 12:30:57,914:INFO: Creating the datasets...
2018-11-26 12:30:59,628:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:30:59,932:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:30:59,977:INFO: - done.
2018-11-26 12:30:59,977:INFO: Creating the model...
2018-11-26 12:31:00,095:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:31:02,224:INFO: - done.
2018-11-26 12:31:02,224:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:31:03,154:INFO: Epoch 1/10000
2018-11-26 12:32:13,976:INFO: Creating the datasets...
2018-11-26 12:32:15,823:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:32:16,134:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:32:16,180:INFO: - done.
2018-11-26 12:32:16,180:INFO: Creating the model...
2018-11-26 12:32:16,277:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:269: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:32:18,413:INFO: - done.
2018-11-26 12:32:18,413:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:32:19,335:INFO: Epoch 1/10000
2018-11-26 12:33:59,644:INFO: Creating the datasets...
2018-11-26 12:34:01,396:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:34:01,705:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:34:01,751:INFO: - done.
2018-11-26 12:34:01,751:INFO: Creating the model...
2018-11-26 12:34:01,846:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:266: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:34:04,031:INFO: - done.
2018-11-26 12:34:04,031:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:34:04,993:INFO: Epoch 1/10000
2018-11-26 12:35:04,212:INFO: Creating the datasets...
2018-11-26 12:35:05,933:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:35:06,245:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:35:06,289:INFO: - done.
2018-11-26 12:35:06,289:INFO: Creating the model...
2018-11-26 12:35:06,385:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:266: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:35:08,547:INFO: - done.
2018-11-26 12:35:08,547:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:35:09,491:INFO: Epoch 1/10000
2018-11-26 12:40:58,125:INFO: - Train metrics: accuracy: 0.043 ; loss: 1561.706
2018-11-26 12:41:55,543:INFO: - Eval metrics: accuracy: 0.041 ; loss: 1479.742
2018-11-26 12:41:56,702:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 12:41:56,703:INFO: Epoch 2/10000
2018-11-26 12:46:04,859:INFO: Creating the datasets...
2018-11-26 12:46:10,037:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:46:10,343:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:46:10,387:INFO: - done.
2018-11-26 12:46:10,387:INFO: Creating the model...
2018-11-26 12:46:10,507:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:266: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:46:12,650:INFO: - done.
2018-11-26 12:46:12,651:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:46:13,650:INFO: Epoch 1/10000
2018-11-26 12:49:03,701:INFO: Creating the datasets...
2018-11-26 12:49:05,373:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:49:05,679:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:49:05,723:INFO: - done.
2018-11-26 12:49:05,723:INFO: Creating the model...
2018-11-26 12:49:05,816:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:266: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:49:07,967:INFO: - done.
2018-11-26 12:49:07,967:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:49:08,904:INFO: Epoch 1/10000
2018-11-26 12:54:56,907:INFO: - Train metrics: accuracy: 0.035 ; loss: 1553.561
2018-11-26 12:55:53,788:INFO: - Eval metrics: accuracy: 0.034 ; loss: 1471.631
2018-11-26 12:55:54,959:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 12:55:54,959:INFO: Epoch 2/10000
2018-11-26 12:56:45,616:INFO: Creating the datasets...
2018-11-26 12:56:50,743:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:56:51,055:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:56:51,101:INFO: - done.
2018-11-26 12:56:51,101:INFO: Creating the model...
2018-11-26 12:56:51,222:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:266: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:56:53,380:INFO: - done.
2018-11-26 12:56:53,380:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:56:54,431:INFO: Epoch 1/10000
2018-11-26 12:57:39,706:INFO: Creating the datasets...
2018-11-26 12:57:41,537:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 12:57:41,869:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 12:57:41,925:INFO: - done.
2018-11-26 12:57:41,925:INFO: Creating the model...
2018-11-26 12:57:42,033:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:266: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 12:57:44,230:INFO: - done.
2018-11-26 12:57:44,230:INFO: Starting training for 10000 epoch(s)
2018-11-26 12:57:45,186:INFO: Epoch 1/10000
2018-11-26 13:03:35,949:INFO: - Train metrics: accuracy: 0.062 ; loss: 1564.278
2018-11-26 13:04:21,286:INFO: Creating the datasets...
2018-11-26 13:04:23,139:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 13:04:23,445:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 13:04:23,489:INFO: - done.
2018-11-26 13:04:23,489:INFO: Creating the model...
2018-11-26 13:04:23,583:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:266: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 13:04:25,727:INFO: - done.
2018-11-26 13:04:25,727:INFO: Starting training for 10000 epoch(s)
2018-11-26 13:04:26,706:INFO: Epoch 1/10000
2018-11-26 13:07:28,896:INFO: Creating the datasets...
2018-11-26 13:07:30,572:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 13:07:30,876:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 13:07:30,920:INFO: - done.
2018-11-26 13:07:30,920:INFO: Creating the model...
2018-11-26 13:07:31,013:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:266: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 13:07:33,145:INFO: - done.
2018-11-26 13:07:33,145:INFO: Starting training for 10000 epoch(s)
2018-11-26 13:07:34,090:INFO: Epoch 1/10000
2018-11-26 13:13:23,757:INFO: - Train metrics: accuracy: 0.051 ; loss: 1548.924
2018-11-26 13:14:21,063:INFO: - Eval metrics: accuracy: 0.050 ; loss: 1466.639
2018-11-26 13:14:22,168:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 13:14:22,179:INFO: Epoch 2/10000
2018-11-26 13:20:13,284:INFO: - Train metrics: accuracy: 0.051 ; loss: 1547.693
2018-11-26 13:21:02,133:INFO: Creating the datasets...
2018-11-26 13:21:07,236:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 13:21:07,544:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 13:21:07,589:INFO: - done.
2018-11-26 13:21:07,589:INFO: Creating the model...
2018-11-26 13:21:07,740:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 13:21:10,185:INFO: - done.
2018-11-26 13:21:10,185:INFO: Starting training for 10000 epoch(s)
2018-11-26 13:21:11,227:INFO: Epoch 1/10000
2018-11-26 13:26:42,943:INFO: - Train metrics: accuracy: 0.059 ; loss: 1550.143
2018-11-26 13:27:27,306:INFO: - Eval metrics: accuracy: 0.064 ; loss: 1461.751
2018-11-26 13:27:28,216:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 13:27:28,216:INFO: Epoch 2/10000
2018-11-26 13:29:36,689:INFO: Creating the datasets...
2018-11-26 13:29:40,606:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 13:29:40,930:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 13:29:40,975:INFO: - done.
2018-11-26 13:29:40,975:INFO: Creating the model...
2018-11-26 13:29:41,128:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 13:29:43,368:INFO: - done.
2018-11-26 13:29:43,368:INFO: Starting training for 10000 epoch(s)
2018-11-26 13:29:44,432:INFO: Epoch 1/10000
2018-11-26 13:32:55,194:INFO: Creating the datasets...
2018-11-26 13:32:56,890:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 13:32:57,203:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 13:32:57,248:INFO: - done.
2018-11-26 13:32:57,248:INFO: Creating the model...
2018-11-26 13:32:57,347:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 13:32:59,515:INFO: - done.
2018-11-26 13:32:59,515:INFO: Starting training for 10000 epoch(s)
2018-11-26 13:33:00,445:INFO: Epoch 1/10000
2018-11-26 13:35:06,965:INFO: Creating the datasets...
2018-11-26 13:35:08,692:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 13:35:09,009:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 13:35:09,063:INFO: - done.
2018-11-26 13:35:09,063:INFO: Creating the model...
2018-11-26 13:35:09,167:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 13:35:11,380:INFO: - done.
2018-11-26 13:35:11,380:INFO: Starting training for 10000 epoch(s)
2018-11-26 13:35:12,344:INFO: Epoch 1/10000
2018-11-26 13:36:24,370:INFO: Creating the datasets...
2018-11-26 13:36:26,135:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 13:36:26,455:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 13:36:26,501:INFO: - done.
2018-11-26 13:36:26,501:INFO: Creating the model...
2018-11-26 13:36:26,600:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 13:36:28,738:INFO: - done.
2018-11-26 13:36:28,738:INFO: Starting training for 10000 epoch(s)
2018-11-26 13:36:29,664:INFO: Epoch 1/10000
2018-11-26 13:36:47,950:INFO: Creating the datasets...
2018-11-26 13:36:49,644:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 13:36:49,950:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 13:36:49,994:INFO: - done.
2018-11-26 13:36:49,994:INFO: Creating the model...
2018-11-26 13:36:50,091:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 13:36:52,224:INFO: - done.
2018-11-26 13:36:52,224:INFO: Starting training for 10000 epoch(s)
2018-11-26 13:36:53,160:INFO: Epoch 1/10000
2018-11-26 13:42:56,058:INFO: - Train metrics: accuracy: 0.076 ; loss: 1548.503
2018-11-26 13:43:55,044:INFO: Creating the datasets...
2018-11-26 13:44:01,897:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 13:44:02,229:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 13:44:02,305:INFO: - done.
2018-11-26 13:44:02,305:INFO: Creating the model...
2018-11-26 13:44:02,442:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 13:44:04,784:INFO: - done.
2018-11-26 13:44:04,784:INFO: Starting training for 10000 epoch(s)
2018-11-26 13:44:05,906:INFO: Epoch 1/10000
2018-11-26 13:46:34,281:INFO: Creating the datasets...
2018-11-26 13:46:38,150:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 13:46:38,469:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 13:46:38,515:INFO: - done.
2018-11-26 13:46:38,515:INFO: Creating the model...
2018-11-26 13:46:38,637:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 13:46:40,827:INFO: - done.
2018-11-26 13:46:40,827:INFO: Starting training for 10000 epoch(s)
2018-11-26 13:46:41,807:INFO: Epoch 1/10000
2018-11-26 13:52:36,293:INFO: - Train metrics: accuracy: 0.072 ; loss: 1548.704
2018-11-26 13:53:32,356:INFO: - Eval metrics: accuracy: 0.077 ; loss: 1458.517
2018-11-26 13:53:33,371:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 13:53:33,371:INFO: Epoch 2/10000
2018-11-26 13:57:36,214:INFO: Creating the datasets...
2018-11-26 13:57:39,590:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 13:57:39,894:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 13:57:39,938:INFO: - done.
2018-11-26 13:57:39,938:INFO: Creating the model...
2018-11-26 13:57:40,059:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 13:57:42,276:INFO: - done.
2018-11-26 13:57:42,276:INFO: Starting training for 10000 epoch(s)
2018-11-26 13:57:43,249:INFO: Epoch 1/10000
2018-11-26 13:58:35,043:INFO: Creating the datasets...
2018-11-26 13:58:36,737:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 13:58:37,045:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 13:58:37,090:INFO: - done.
2018-11-26 13:58:37,090:INFO: Creating the model...
2018-11-26 13:58:37,187:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 13:58:39,409:INFO: - done.
2018-11-26 13:58:39,409:INFO: Starting training for 10000 epoch(s)
2018-11-26 13:58:40,392:INFO: Epoch 1/10000
2018-11-26 14:00:14,127:INFO: Creating the datasets...
2018-11-26 14:00:15,857:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 14:00:16,160:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 14:00:16,203:INFO: - done.
2018-11-26 14:00:16,203:INFO: Creating the model...
2018-11-26 14:00:16,298:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 14:00:18,507:INFO: - done.
2018-11-26 14:00:18,508:INFO: Starting training for 10000 epoch(s)
2018-11-26 14:00:19,466:INFO: Epoch 1/10000
2018-11-26 14:01:03,371:INFO: Creating the datasets...
2018-11-26 14:01:05,099:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 14:01:05,411:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 14:01:05,455:INFO: - done.
2018-11-26 14:01:05,456:INFO: Creating the model...
2018-11-26 14:01:05,553:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 14:01:07,786:INFO: - done.
2018-11-26 14:01:07,786:INFO: Starting training for 10000 epoch(s)
2018-11-26 14:01:08,754:INFO: Epoch 1/10000
2018-11-26 14:02:42,893:INFO: Creating the datasets...
2018-11-26 14:02:44,591:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 14:02:44,897:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 14:02:44,941:INFO: - done.
2018-11-26 14:02:44,941:INFO: Creating the model...
2018-11-26 14:02:45,041:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:270: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 14:02:47,272:INFO: - done.
2018-11-26 14:02:47,272:INFO: Starting training for 10000 epoch(s)
2018-11-26 14:02:48,236:INFO: Epoch 1/10000
2018-11-26 14:08:46,785:INFO: - Train metrics: accuracy: 0.056 ; loss: 1550.233
2018-11-26 14:09:43,452:INFO: - Eval metrics: accuracy: 0.057 ; loss: 1460.645
2018-11-26 14:09:44,500:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 14:09:44,501:INFO: Epoch 2/10000
2018-11-26 14:15:44,907:INFO: - Train metrics: accuracy: 0.067 ; loss: 1533.957
2018-11-26 14:16:40,950:INFO: - Eval metrics: accuracy: 0.074 ; loss: 1444.358
2018-11-26 14:16:41,853:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-26 14:16:41,854:INFO: Epoch 3/10000
2018-11-26 14:22:38,280:INFO: - Train metrics: accuracy: 0.086 ; loss: 1517.271
2018-11-26 14:23:11,156:INFO: Creating the datasets...
2018-11-26 14:23:14,148:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 14:23:14,469:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 14:23:14,527:INFO: - done.
2018-11-26 14:23:14,527:INFO: Creating the model...
2018-11-26 14:23:14,632:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:251: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 14:23:38,853:INFO: Creating the datasets...
2018-11-26 14:23:40,640:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 14:23:40,975:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 14:23:41,025:INFO: - done.
2018-11-26 14:23:41,025:INFO: Creating the model...
2018-11-26 14:23:41,120:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:251: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 14:23:43,443:INFO: - done.
2018-11-26 14:23:43,443:INFO: Starting training for 10000 epoch(s)
2018-11-26 14:23:44,536:INFO: Epoch 1/10000
2018-11-26 14:26:23,903:INFO: Creating the datasets...
2018-11-26 14:26:25,644:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 14:26:25,963:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 14:26:26,008:INFO: - done.
2018-11-26 14:26:26,008:INFO: Creating the model...
2018-11-26 14:26:26,096:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:251: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 14:26:39,108:INFO: Creating the datasets...
2018-11-26 14:26:40,795:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 14:26:41,116:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 14:26:41,167:INFO: - done.
2018-11-26 14:26:41,167:INFO: Creating the model...
2018-11-26 14:26:41,266:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 14:29:53,297:INFO: Creating the datasets...
2018-11-26 14:29:54,974:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 14:29:55,280:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 14:29:55,324:INFO: - done.
2018-11-26 14:29:55,324:INFO: Creating the model...
2018-11-26 14:29:55,410:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 14:30:28,616:INFO: Creating the datasets...
2018-11-26 14:30:30,289:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 14:30:30,601:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 14:30:30,646:INFO: - done.
2018-11-26 14:30:30,646:INFO: Creating the model...
2018-11-26 14:30:30,733:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 14:30:33,056:INFO: - done.
2018-11-26 14:30:33,056:INFO: Starting training for 10000 epoch(s)
2018-11-26 14:30:34,064:INFO: Epoch 1/10000
2018-11-26 14:33:48,523:INFO: Creating the datasets...
2018-11-26 14:33:50,214:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 14:33:50,523:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 14:33:50,567:INFO: - done.
2018-11-26 14:33:50,568:INFO: Creating the model...
2018-11-26 14:33:50,654:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 14:33:52,933:INFO: - done.
2018-11-26 14:33:52,933:INFO: Starting training for 10000 epoch(s)
2018-11-26 14:33:53,944:INFO: Epoch 1/10000
2018-11-26 14:34:38,065:INFO: Creating the datasets...
2018-11-26 14:34:39,719:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 14:34:40,023:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 14:34:40,068:INFO: - done.
2018-11-26 14:34:40,068:INFO: Creating the model...
2018-11-26 14:34:40,163:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 14:34:42,419:INFO: - done.
2018-11-26 14:34:42,419:INFO: Starting training for 10000 epoch(s)
2018-11-26 14:34:43,396:INFO: Epoch 1/10000
2018-11-26 14:35:47,698:INFO: Creating the datasets...
2018-11-26 14:35:49,398:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 14:35:49,710:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 14:35:49,755:INFO: - done.
2018-11-26 14:35:49,755:INFO: Creating the model...
2018-11-26 14:35:49,841:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 14:35:52,138:INFO: - done.
2018-11-26 14:35:52,138:INFO: Starting training for 10000 epoch(s)
2018-11-26 14:35:53,140:INFO: Epoch 1/10000
2018-11-26 14:39:07,990:INFO: - Train metrics: accuracy: 0.064 ; loss: 1551.696
2018-11-26 14:39:38,194:INFO: - Eval metrics: accuracy: 0.072 ; loss: 1459.716
2018-11-26 14:39:38,986:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 14:39:38,986:INFO: Epoch 2/10000
2018-11-26 14:42:52,185:INFO: - Train metrics: accuracy: 0.080 ; loss: 1531.098
2018-11-26 14:43:22,196:INFO: - Eval metrics: accuracy: 0.085 ; loss: 1440.944
2018-11-26 14:43:22,770:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-26 14:43:22,771:INFO: Epoch 3/10000
2018-11-26 14:46:36,206:INFO: - Train metrics: accuracy: 0.096 ; loss: 1510.921
2018-11-26 14:47:05,558:INFO: - Eval metrics: accuracy: 0.105 ; loss: 1419.798
2018-11-26 14:47:06,087:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-26 14:47:06,088:INFO: Epoch 4/10000
2018-11-26 14:50:18,504:INFO: - Train metrics: accuracy: 0.119 ; loss: 1484.114
2018-11-26 14:50:48,564:INFO: - Eval metrics: accuracy: 0.129 ; loss: 1388.322
2018-11-26 14:50:49,134:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-26 14:50:49,135:INFO: Epoch 5/10000
2018-11-26 14:54:01,615:INFO: - Train metrics: accuracy: 0.142 ; loss: 1452.522
2018-11-26 14:54:31,727:INFO: - Eval metrics: accuracy: 0.151 ; loss: 1355.968
2018-11-26 14:54:32,318:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-26 14:54:32,319:INFO: Epoch 6/10000
2018-11-26 14:57:45,924:INFO: - Train metrics: accuracy: 0.166 ; loss: 1417.594
2018-11-26 14:58:16,176:INFO: - Eval metrics: accuracy: 0.177 ; loss: 1319.253
2018-11-26 14:58:16,745:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-26 14:58:16,746:INFO: Epoch 7/10000
2018-11-26 15:01:30,913:INFO: - Train metrics: accuracy: 0.193 ; loss: 1377.962
2018-11-26 15:02:01,317:INFO: - Eval metrics: accuracy: 0.203 ; loss: 1277.891
2018-11-26 15:02:01,905:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-26 15:02:01,906:INFO: Epoch 8/10000
2018-11-26 15:05:15,341:INFO: - Train metrics: accuracy: 0.216 ; loss: 1333.838
2018-11-26 15:05:45,450:INFO: - Eval metrics: accuracy: 0.222 ; loss: 1232.389
2018-11-26 15:05:46,010:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-26 15:05:46,011:INFO: Epoch 9/10000
2018-11-26 15:08:59,149:INFO: - Train metrics: accuracy: 0.235 ; loss: 1285.539
2018-11-26 15:09:29,145:INFO: - Eval metrics: accuracy: 0.241 ; loss: 1182.747
2018-11-26 15:09:29,713:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-26 15:09:29,714:INFO: Epoch 10/10000
2018-11-26 15:12:42,540:INFO: - Train metrics: accuracy: 0.255 ; loss: 1233.625
2018-11-26 15:13:13,689:INFO: - Eval metrics: accuracy: 0.259 ; loss: 1129.996
2018-11-26 15:13:14,278:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-26 15:13:14,279:INFO: Epoch 11/10000
2018-11-26 15:16:29,649:INFO: - Train metrics: accuracy: 0.270 ; loss: 1178.898
2018-11-26 15:17:01,905:INFO: - Eval metrics: accuracy: 0.273 ; loss: 1075.014
2018-11-26 15:17:02,510:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-26 15:17:02,511:INFO: Epoch 12/10000
2018-11-26 15:20:19,659:INFO: - Train metrics: accuracy: 0.286 ; loss: 1122.286
2018-11-26 15:20:52,155:INFO: - Eval metrics: accuracy: 0.290 ; loss: 1018.712
2018-11-26 15:20:52,772:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-26 15:20:52,773:INFO: Epoch 13/10000
2018-11-26 15:24:13,287:INFO: - Train metrics: accuracy: 0.303 ; loss: 1064.726
2018-11-26 15:24:46,092:INFO: - Eval metrics: accuracy: 0.305 ; loss: 962.222
2018-11-26 15:24:46,690:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-26 15:24:46,690:INFO: Epoch 14/10000
2018-11-26 15:28:08,181:INFO: - Train metrics: accuracy: 0.318 ; loss: 1007.437
2018-11-26 15:28:40,917:INFO: - Eval metrics: accuracy: 0.318 ; loss: 906.488
2018-11-26 15:28:41,514:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-26 15:28:41,515:INFO: Epoch 15/10000
2018-11-26 15:32:01,709:INFO: - Train metrics: accuracy: 0.331 ; loss: 951.497
2018-11-26 15:32:34,160:INFO: - Eval metrics: accuracy: 0.330 ; loss: 853.008
2018-11-26 15:32:34,782:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-26 15:32:34,782:INFO: Epoch 16/10000
2018-11-26 15:35:53,663:INFO: - Train metrics: accuracy: 0.346 ; loss: 898.108
2018-11-26 15:36:26,607:INFO: - Eval metrics: accuracy: 0.346 ; loss: 802.670
2018-11-26 15:36:27,245:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-26 15:36:27,246:INFO: Epoch 17/10000
2018-11-26 15:39:49,158:INFO: - Train metrics: accuracy: 0.359 ; loss: 848.344
2018-11-26 15:40:21,143:INFO: - Eval metrics: accuracy: 0.357 ; loss: 756.547
2018-11-26 15:40:21,795:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-26 15:40:21,796:INFO: Epoch 18/10000
2018-11-26 15:43:41,463:INFO: - Train metrics: accuracy: 0.368 ; loss: 803.078
2018-11-26 15:44:14,592:INFO: - Eval metrics: accuracy: 0.365 ; loss: 715.312
2018-11-26 15:44:15,205:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-26 15:44:15,206:INFO: Epoch 19/10000
2018-11-26 15:47:34,783:INFO: - Train metrics: accuracy: 0.376 ; loss: 762.986
2018-11-26 15:48:07,284:INFO: - Eval metrics: accuracy: 0.372 ; loss: 679.560
2018-11-26 15:48:07,833:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-26 15:48:07,833:INFO: Epoch 20/10000
2018-11-26 15:51:23,890:INFO: - Train metrics: accuracy: 0.382 ; loss: 728.309
2018-11-26 15:51:56,295:INFO: - Eval metrics: accuracy: 0.378 ; loss: 649.326
2018-11-26 15:51:56,881:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-20
2018-11-26 15:51:56,881:INFO: Epoch 21/10000
2018-11-26 15:55:15,961:INFO: - Train metrics: accuracy: 0.387 ; loss: 699.093
2018-11-26 15:55:48,599:INFO: - Eval metrics: accuracy: 0.382 ; loss: 624.337
2018-11-26 15:55:49,204:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-26 15:55:49,205:INFO: Epoch 22/10000
2018-11-26 15:59:06,477:INFO: - Train metrics: accuracy: 0.390 ; loss: 674.823
2018-11-26 15:59:39,056:INFO: - Eval metrics: accuracy: 0.386 ; loss: 603.950
2018-11-26 15:59:39,654:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-26 15:59:39,654:INFO: Epoch 23/10000
2018-11-26 16:02:55,837:INFO: - Train metrics: accuracy: 0.393 ; loss: 654.956
2018-11-26 16:03:27,278:INFO: - Eval metrics: accuracy: 0.388 ; loss: 587.589
2018-11-26 16:03:27,919:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-26 16:03:27,920:INFO: Epoch 24/10000
2018-11-26 16:06:48,752:INFO: - Train metrics: accuracy: 0.396 ; loss: 638.834
2018-11-26 16:07:21,629:INFO: - Eval metrics: accuracy: 0.390 ; loss: 574.438
2018-11-26 16:07:22,270:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-26 16:07:22,271:INFO: Epoch 25/10000
2018-11-26 16:10:43,438:INFO: - Train metrics: accuracy: 0.397 ; loss: 625.711
2018-11-26 16:11:15,880:INFO: - Eval metrics: accuracy: 0.391 ; loss: 563.805
2018-11-26 16:11:16,495:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-26 16:11:16,506:INFO: Epoch 26/10000
2018-11-26 16:14:25,001:INFO: - Train metrics: accuracy: 0.398 ; loss: 614.941
2018-11-26 16:14:53,622:INFO: - Eval metrics: accuracy: 0.392 ; loss: 555.050
2018-11-26 16:14:54,523:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-26 16:14:54,523:INFO: Epoch 27/10000
2018-11-26 16:18:10,625:INFO: - Train metrics: accuracy: 0.399 ; loss: 605.957
2018-11-26 16:18:44,496:INFO: - Eval metrics: accuracy: 0.393 ; loss: 547.707
2018-11-26 16:18:46,262:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-26 16:18:46,284:INFO: Epoch 28/10000
2018-11-26 16:21:52,200:INFO: - Train metrics: accuracy: 0.400 ; loss: 598.380
2018-11-26 16:22:25,353:INFO: - Eval metrics: accuracy: 0.393 ; loss: 541.503
2018-11-26 16:22:26,214:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-26 16:22:26,225:INFO: Epoch 29/10000
2018-11-26 16:25:46,525:INFO: - Train metrics: accuracy: 0.400 ; loss: 591.844
2018-11-26 16:26:19,834:INFO: - Eval metrics: accuracy: 0.393 ; loss: 536.111
2018-11-26 16:26:20,580:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-26 16:26:20,589:INFO: Epoch 30/10000
2018-11-26 16:29:28,744:INFO: - Train metrics: accuracy: 0.401 ; loss: 586.172
2018-11-26 16:30:02,177:INFO: - Eval metrics: accuracy: 0.393 ; loss: 531.457
2018-11-26 16:30:03,437:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-30
2018-11-26 16:30:03,451:INFO: Epoch 31/10000
2018-11-26 16:33:23,134:INFO: - Train metrics: accuracy: 0.401 ; loss: 581.235
2018-11-26 16:33:53,331:INFO: - Eval metrics: accuracy: 0.393 ; loss: 527.332
2018-11-26 16:33:54,181:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-31
2018-11-26 16:33:54,181:INFO: Epoch 32/10000
2018-11-26 16:37:12,925:INFO: - Train metrics: accuracy: 0.401 ; loss: 576.892
2018-11-26 16:37:45,222:INFO: - Eval metrics: accuracy: 0.394 ; loss: 523.722
2018-11-26 16:37:45,851:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-26 16:37:45,852:INFO: Epoch 33/10000
2018-11-26 16:40:13,022:INFO: Creating the datasets...
2018-11-26 16:40:18,783:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 16:40:19,141:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 16:40:19,186:INFO: - done.
2018-11-26 16:40:19,186:INFO: Creating the model...
2018-11-26 16:40:19,353:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 16:40:21,723:INFO: - done.
2018-11-26 16:40:21,724:INFO: Starting training for 10000 epoch(s)
2018-11-26 16:40:22,911:INFO: Epoch 1/10000
2018-11-26 16:43:43,740:INFO: - Train metrics: accuracy: 0.067 ; loss: 1548.685
2018-11-26 16:44:14,638:INFO: - Eval metrics: accuracy: 0.077 ; loss: 1457.022
2018-11-26 16:44:15,466:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 16:44:15,467:INFO: Epoch 2/10000
2018-11-26 16:47:29,003:INFO: - Train metrics: accuracy: 0.089 ; loss: 1528.130
2018-11-26 16:47:59,117:INFO: - Eval metrics: accuracy: 0.097 ; loss: 1437.327
2018-11-26 16:47:59,859:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-26 16:47:59,860:INFO: Epoch 3/10000
2018-11-26 16:51:21,673:INFO: - Train metrics: accuracy: 0.109 ; loss: 1507.143
2018-11-26 16:51:51,722:INFO: - Eval metrics: accuracy: 0.117 ; loss: 1415.319
2018-11-26 16:51:52,399:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-26 16:51:52,400:INFO: Epoch 4/10000
2018-11-26 16:52:18,784:INFO: Creating the datasets...
2018-11-26 16:52:24,386:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 16:52:24,728:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 16:52:24,778:INFO: - done.
2018-11-26 16:52:24,778:INFO: Creating the model...
2018-11-26 16:52:24,982:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 16:52:27,348:INFO: - done.
2018-11-26 16:52:27,348:INFO: Starting training for 10000 epoch(s)
2018-11-26 16:52:28,519:INFO: Epoch 1/10000
2018-11-26 16:55:49,606:INFO: - Train metrics: accuracy: 0.067 ; loss: 1548.718
2018-11-26 16:56:20,159:INFO: - Eval metrics: accuracy: 0.076 ; loss: 1457.303
2018-11-26 16:56:20,994:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 16:56:20,994:INFO: Epoch 2/10000
2018-11-26 16:59:37,925:INFO: - Train metrics: accuracy: 0.088 ; loss: 1528.477
2018-11-26 17:00:08,412:INFO: - Eval metrics: accuracy: 0.097 ; loss: 1437.552
2018-11-26 17:00:09,056:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-26 17:00:09,056:INFO: Epoch 3/10000
2018-11-26 17:03:27,866:INFO: - Train metrics: accuracy: 0.109 ; loss: 1507.356
2018-11-26 17:03:58,596:INFO: - Eval metrics: accuracy: 0.117 ; loss: 1415.403
2018-11-26 17:03:59,234:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-26 17:03:59,260:INFO: Epoch 4/10000
2018-11-26 17:07:20,021:INFO: - Train metrics: accuracy: 0.130 ; loss: 1482.546
2018-11-26 17:07:50,203:INFO: - Eval metrics: accuracy: 0.140 ; loss: 1388.863
2018-11-26 17:07:50,779:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-26 17:07:50,795:INFO: Epoch 5/10000
2018-11-26 17:10:38,774:INFO: Creating the datasets...
2018-11-26 17:10:42,785:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 17:10:43,109:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 17:10:43,154:INFO: - done.
2018-11-26 17:10:43,154:INFO: Creating the model...
2018-11-26 17:10:43,297:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 17:10:45,564:INFO: - done.
2018-11-26 17:10:45,564:INFO: Starting training for 10000 epoch(s)
2018-11-26 17:10:46,657:INFO: Epoch 1/10000
2018-11-26 17:14:01,066:INFO: - Train metrics: accuracy: 0.054 ; loss: 1559.885
2018-11-26 17:15:41,191:INFO: Creating the datasets...
2018-11-26 17:15:42,921:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 17:15:43,238:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 17:15:43,287:INFO: - done.
2018-11-26 17:15:43,288:INFO: Creating the model...
2018-11-26 17:15:43,378:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 17:15:45,733:INFO: - done.
2018-11-26 17:15:45,734:INFO: Starting training for 10000 epoch(s)
2018-11-26 17:15:46,754:INFO: Epoch 1/10000
2018-11-26 17:19:03,427:INFO: - Train metrics: accuracy: 0.070 ; loss: 1544.050
2018-11-26 17:19:35,545:INFO: - Eval metrics: accuracy: 0.077 ; loss: 1452.427
2018-11-26 17:19:36,322:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 17:19:36,323:INFO: Epoch 2/10000
2018-11-26 17:21:43,590:INFO: Creating the datasets...
2018-11-26 17:21:49,801:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 17:21:50,118:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 17:21:50,163:INFO: - done.
2018-11-26 17:21:50,163:INFO: Creating the model...
2018-11-26 17:21:50,338:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 17:21:52,713:INFO: - done.
2018-11-26 17:21:52,713:INFO: Starting training for 10000 epoch(s)
2018-11-26 17:21:53,842:INFO: Epoch 1/10000
2018-11-26 17:25:12,270:INFO: - Train metrics: accuracy: 0.055 ; loss: 1554.890
2018-11-26 17:25:41,413:INFO: - Eval metrics: accuracy: 0.058 ; loss: 1466.922
2018-11-26 17:25:42,210:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 17:25:42,211:INFO: Epoch 2/10000
2018-11-26 17:28:59,295:INFO: - Train metrics: accuracy: 0.064 ; loss: 1544.092
2018-11-26 17:29:29,864:INFO: - Eval metrics: accuracy: 0.066 ; loss: 1459.782
2018-11-26 17:29:30,558:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-26 17:29:30,558:INFO: Epoch 3/10000
2018-11-26 17:32:45,861:INFO: - Train metrics: accuracy: 0.071 ; loss: 1536.640
2018-11-26 17:33:16,146:INFO: - Eval metrics: accuracy: 0.073 ; loss: 1451.181
2018-11-26 17:33:16,769:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-26 17:33:16,769:INFO: Epoch 4/10000
2018-11-26 17:36:31,346:INFO: - Train metrics: accuracy: 0.080 ; loss: 1526.551
2018-11-26 17:37:02,077:INFO: - Eval metrics: accuracy: 0.083 ; loss: 1439.704
2018-11-26 17:37:02,737:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-26 17:37:02,738:INFO: Epoch 5/10000
2018-11-26 17:40:16,477:INFO: - Train metrics: accuracy: 0.091 ; loss: 1513.731
2018-11-26 17:40:44,954:INFO: - Eval metrics: accuracy: 0.095 ; loss: 1426.194
2018-11-26 17:40:45,499:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-26 17:40:45,500:INFO: Epoch 6/10000
2018-11-26 17:44:01,486:INFO: - Train metrics: accuracy: 0.104 ; loss: 1499.248
2018-11-26 17:44:32,342:INFO: - Eval metrics: accuracy: 0.109 ; loss: 1411.315
2018-11-26 17:44:32,973:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-26 17:44:32,974:INFO: Epoch 7/10000
2018-11-26 17:47:50,380:INFO: - Train metrics: accuracy: 0.118 ; loss: 1483.815
2018-11-26 17:48:21,335:INFO: - Eval metrics: accuracy: 0.122 ; loss: 1396.146
2018-11-26 17:48:21,905:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-26 17:48:21,906:INFO: Epoch 8/10000
2018-11-26 17:51:41,119:INFO: - Train metrics: accuracy: 0.131 ; loss: 1468.392
2018-11-26 17:52:11,099:INFO: - Eval metrics: accuracy: 0.134 ; loss: 1381.379
2018-11-26 17:52:11,815:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-26 17:52:11,816:INFO: Epoch 9/10000
2018-11-26 17:55:30,453:INFO: - Train metrics: accuracy: 0.143 ; loss: 1453.226
2018-11-26 17:56:01,436:INFO: - Eval metrics: accuracy: 0.146 ; loss: 1366.299
2018-11-26 17:56:02,139:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-26 17:56:02,140:INFO: Epoch 10/10000
2018-11-26 17:59:16,956:INFO: - Train metrics: accuracy: 0.156 ; loss: 1437.256
2018-11-26 17:59:47,296:INFO: - Eval metrics: accuracy: 0.159 ; loss: 1349.775
2018-11-26 17:59:47,906:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-26 17:59:47,907:INFO: Epoch 11/10000
2018-11-26 18:03:03,699:INFO: - Train metrics: accuracy: 0.169 ; loss: 1418.135
2018-11-26 18:03:34,292:INFO: - Eval metrics: accuracy: 0.173 ; loss: 1328.100
2018-11-26 18:03:34,879:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-26 18:03:34,880:INFO: Epoch 12/10000
2018-11-26 18:06:51,893:INFO: - Train metrics: accuracy: 0.184 ; loss: 1393.891
2018-11-26 18:07:23,385:INFO: - Eval metrics: accuracy: 0.188 ; loss: 1304.366
2018-11-26 18:07:24,152:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-26 18:07:24,172:INFO: Epoch 13/10000
2018-11-26 18:10:43,346:INFO: - Train metrics: accuracy: 0.197 ; loss: 1370.292
2018-11-26 18:11:14,225:INFO: - Eval metrics: accuracy: 0.200 ; loss: 1282.958
2018-11-26 18:11:14,962:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-26 18:11:14,989:INFO: Epoch 14/10000
2018-11-26 18:14:29,015:INFO: - Train metrics: accuracy: 0.209 ; loss: 1348.415
2018-11-26 18:14:58,409:INFO: - Eval metrics: accuracy: 0.210 ; loss: 1263.125
2018-11-26 18:14:59,093:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-26 18:14:59,093:INFO: Epoch 15/10000
2018-11-26 18:18:12,942:INFO: - Train metrics: accuracy: 0.219 ; loss: 1327.549
2018-11-26 18:18:42,831:INFO: - Eval metrics: accuracy: 0.219 ; loss: 1243.763
2018-11-26 18:18:43,433:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-26 18:18:43,434:INFO: Epoch 16/10000
2018-11-26 18:22:01,389:INFO: - Train metrics: accuracy: 0.227 ; loss: 1307.541
2018-11-26 18:22:31,775:INFO: - Eval metrics: accuracy: 0.226 ; loss: 1225.132
2018-11-26 18:22:32,355:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-26 18:22:32,356:INFO: Epoch 17/10000
2018-11-26 18:25:51,109:INFO: - Train metrics: accuracy: 0.234 ; loss: 1288.146
2018-11-26 18:26:21,813:INFO: - Eval metrics: accuracy: 0.233 ; loss: 1206.168
2018-11-26 18:26:22,423:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-26 18:26:22,424:INFO: Epoch 18/10000
2018-11-26 18:29:40,838:INFO: - Train metrics: accuracy: 0.241 ; loss: 1268.566
2018-11-26 18:30:10,212:INFO: - Eval metrics: accuracy: 0.240 ; loss: 1186.647
2018-11-26 18:30:10,735:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-26 18:30:10,736:INFO: Epoch 19/10000
2018-11-26 18:33:32,939:INFO: - Train metrics: accuracy: 0.247 ; loss: 1248.583
2018-11-26 18:34:03,398:INFO: - Eval metrics: accuracy: 0.246 ; loss: 1167.326
2018-11-26 18:34:03,973:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-26 18:34:03,974:INFO: Epoch 20/10000
2018-11-26 18:37:21,804:INFO: - Train metrics: accuracy: 0.253 ; loss: 1228.261
2018-11-26 18:37:51,974:INFO: - Eval metrics: accuracy: 0.252 ; loss: 1147.866
2018-11-26 18:37:52,555:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-20
2018-11-26 18:37:52,556:INFO: Epoch 21/10000
2018-11-26 18:41:09,850:INFO: - Train metrics: accuracy: 0.259 ; loss: 1207.653
2018-11-26 18:41:40,448:INFO: - Eval metrics: accuracy: 0.258 ; loss: 1129.190
2018-11-26 18:41:41,264:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-26 18:41:41,264:INFO: Epoch 22/10000
2018-11-26 18:44:57,596:INFO: - Train metrics: accuracy: 0.266 ; loss: 1186.812
2018-11-26 18:45:27,920:INFO: - Eval metrics: accuracy: 0.263 ; loss: 1111.194
2018-11-26 18:45:28,487:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-26 18:45:28,488:INFO: Epoch 23/10000
2018-11-26 18:48:55,274:INFO: - Train metrics: accuracy: 0.271 ; loss: 1166.323
2018-11-26 18:49:24,909:INFO: - Eval metrics: accuracy: 0.268 ; loss: 1093.599
2018-11-26 18:49:25,586:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-26 18:49:25,587:INFO: Epoch 24/10000
2018-11-26 18:52:40,464:INFO: - Train metrics: accuracy: 0.276 ; loss: 1147.115
2018-11-26 18:53:10,706:INFO: - Eval metrics: accuracy: 0.272 ; loss: 1077.132
2018-11-26 18:53:11,290:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-26 18:53:11,291:INFO: Epoch 25/10000
2018-11-26 18:56:32,798:INFO: - Train metrics: accuracy: 0.280 ; loss: 1129.500
2018-11-26 18:57:03,905:INFO: - Eval metrics: accuracy: 0.275 ; loss: 1062.245
2018-11-26 18:57:04,539:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-26 18:57:04,539:INFO: Epoch 26/10000
2018-11-26 19:00:26,213:INFO: - Train metrics: accuracy: 0.284 ; loss: 1113.668
2018-11-26 19:00:57,278:INFO: - Eval metrics: accuracy: 0.278 ; loss: 1048.529
2018-11-26 19:00:57,906:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-26 19:00:57,907:INFO: Epoch 27/10000
2018-11-26 19:04:19,817:INFO: - Train metrics: accuracy: 0.287 ; loss: 1099.373
2018-11-26 19:04:50,616:INFO: - Eval metrics: accuracy: 0.280 ; loss: 1035.932
2018-11-26 19:04:51,285:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-26 19:04:51,286:INFO: Epoch 28/10000
2018-11-26 19:08:13,287:INFO: - Train metrics: accuracy: 0.289 ; loss: 1086.180
2018-11-26 19:08:43,894:INFO: - Eval metrics: accuracy: 0.282 ; loss: 1024.630
2018-11-26 19:08:44,473:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-26 19:08:44,474:INFO: Epoch 29/10000
2018-11-26 19:12:08,025:INFO: - Train metrics: accuracy: 0.291 ; loss: 1074.241
2018-11-26 19:12:38,240:INFO: - Eval metrics: accuracy: 0.283 ; loss: 1014.149
2018-11-26 19:12:38,818:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-26 19:12:38,819:INFO: Epoch 30/10000
2018-11-26 19:15:55,643:INFO: - Train metrics: accuracy: 0.292 ; loss: 1063.539
2018-11-26 19:16:25,892:INFO: - Eval metrics: accuracy: 0.284 ; loss: 1004.934
2018-11-26 19:16:26,888:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-30
2018-11-26 19:16:26,889:INFO: Epoch 31/10000
2018-11-26 19:19:43,426:INFO: - Train metrics: accuracy: 0.293 ; loss: 1053.860
2018-11-26 19:20:12,285:INFO: - Eval metrics: accuracy: 0.284 ; loss: 996.726
2018-11-26 19:20:12,849:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-31
2018-11-26 19:20:12,850:INFO: Epoch 32/10000
2018-11-26 19:23:34,032:INFO: - Train metrics: accuracy: 0.294 ; loss: 1045.524
2018-11-26 19:24:04,807:INFO: - Eval metrics: accuracy: 0.285 ; loss: 989.622
2018-11-26 19:24:05,485:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-26 19:24:05,485:INFO: Epoch 33/10000
2018-11-26 19:27:25,483:INFO: - Train metrics: accuracy: 0.295 ; loss: 1038.121
2018-11-26 19:27:55,902:INFO: - Eval metrics: accuracy: 0.285 ; loss: 983.727
2018-11-26 19:27:56,251:INFO: Epoch 34/10000
2018-11-26 19:31:13,160:INFO: - Train metrics: accuracy: 0.295 ; loss: 1031.782
2018-11-26 19:31:42,683:INFO: - Eval metrics: accuracy: 0.285 ; loss: 978.592
2018-11-26 19:31:43,051:INFO: Epoch 35/10000
2018-11-26 19:34:59,730:INFO: - Train metrics: accuracy: 0.295 ; loss: 1026.466
2018-11-26 19:35:30,185:INFO: - Eval metrics: accuracy: 0.284 ; loss: 974.349
2018-11-26 19:35:30,534:INFO: Epoch 36/10000
2018-11-26 19:38:49,296:INFO: - Train metrics: accuracy: 0.295 ; loss: 1021.940
2018-11-26 19:39:18,195:INFO: - Eval metrics: accuracy: 0.284 ; loss: 971.504
2018-11-26 19:39:18,691:INFO: Epoch 37/10000
2018-11-26 19:42:29,976:INFO: - Train metrics: accuracy: 0.294 ; loss: 1018.539
2018-11-26 19:43:00,501:INFO: - Eval metrics: accuracy: 0.283 ; loss: 969.466
2018-11-26 19:43:00,985:INFO: Epoch 38/10000
2018-11-26 19:46:17,381:INFO: - Train metrics: accuracy: 0.294 ; loss: 1015.996
2018-11-26 19:46:48,353:INFO: - Eval metrics: accuracy: 0.282 ; loss: 968.362
2018-11-26 19:46:48,718:INFO: Epoch 39/10000
2018-11-26 19:50:07,418:INFO: - Train metrics: accuracy: 0.293 ; loss: 1014.547
2018-11-26 19:50:37,947:INFO: - Eval metrics: accuracy: 0.281 ; loss: 968.216
2018-11-26 19:50:38,310:INFO: Epoch 40/10000
2018-11-26 19:53:55,364:INFO: - Train metrics: accuracy: 0.292 ; loss: 1014.036
2018-11-26 19:54:25,689:INFO: - Eval metrics: accuracy: 0.279 ; loss: 969.058
2018-11-26 19:54:26,033:INFO: Epoch 41/10000
2018-11-26 19:57:47,272:INFO: - Train metrics: accuracy: 0.290 ; loss: 1014.261
2018-11-26 19:58:17,675:INFO: - Eval metrics: accuracy: 0.278 ; loss: 970.879
2018-11-26 19:58:18,024:INFO: Epoch 42/10000
2018-11-26 20:01:37,486:INFO: - Train metrics: accuracy: 0.289 ; loss: 1015.474
2018-11-26 20:02:07,945:INFO: - Eval metrics: accuracy: 0.276 ; loss: 973.193
2018-11-26 20:02:08,299:INFO: Epoch 43/10000
2018-11-26 20:05:28,926:INFO: - Train metrics: accuracy: 0.287 ; loss: 1017.702
2018-11-26 20:05:59,302:INFO: - Eval metrics: accuracy: 0.274 ; loss: 976.223
2018-11-26 20:05:59,646:INFO: Epoch 44/10000
2018-11-26 20:09:20,707:INFO: - Train metrics: accuracy: 0.285 ; loss: 1020.951
2018-11-26 20:09:51,306:INFO: - Eval metrics: accuracy: 0.272 ; loss: 980.386
2018-11-26 20:09:51,723:INFO: Epoch 45/10000
2018-11-26 20:13:16,671:INFO: - Train metrics: accuracy: 0.283 ; loss: 1025.185
2018-11-26 20:13:47,882:INFO: - Eval metrics: accuracy: 0.270 ; loss: 985.229
2018-11-26 20:13:48,224:INFO: Epoch 46/10000
2018-11-26 20:14:49,902:INFO: Creating the datasets...
2018-11-26 20:14:55,404:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 20:14:55,725:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 20:14:55,769:INFO: - done.
2018-11-26 20:14:55,769:INFO: Creating the model...
2018-11-26 20:14:55,949:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 20:14:58,276:INFO: - done.
2018-11-26 20:14:58,276:INFO: Starting training for 10000 epoch(s)
2018-11-26 20:14:58,580:INFO: Restoring parameters from experiments/best_weights
2018-11-26 20:14:58,658:INFO: Restoring parameters from experiments/best_weights/after-epoch-32
2018-11-26 20:14:59,587:INFO: Epoch 33/10032
2018-11-26 20:18:20,250:INFO: - Train metrics: accuracy: 0.295 ; loss: 1038.121
2018-11-26 20:18:50,784:INFO: - Eval metrics: accuracy: 0.285 ; loss: 983.727
2018-11-26 20:18:51,639:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-33
2018-11-26 20:18:51,650:INFO: Epoch 34/10032
2018-11-26 20:22:07,690:INFO: - Train metrics: accuracy: 0.295 ; loss: 1031.782
2018-11-26 20:22:38,034:INFO: - Eval metrics: accuracy: 0.285 ; loss: 978.592
2018-11-26 20:22:38,377:INFO: Epoch 35/10032
2018-11-26 20:25:53,429:INFO: - Train metrics: accuracy: 0.295 ; loss: 1026.466
2018-11-26 20:26:23,521:INFO: - Eval metrics: accuracy: 0.284 ; loss: 974.349
2018-11-26 20:26:23,858:INFO: Epoch 36/10032
2018-11-26 20:29:39,483:INFO: - Train metrics: accuracy: 0.295 ; loss: 1021.940
2018-11-26 20:30:09,812:INFO: - Eval metrics: accuracy: 0.284 ; loss: 971.504
2018-11-26 20:30:10,201:INFO: Epoch 37/10032
2018-11-26 20:33:31,323:INFO: - Train metrics: accuracy: 0.294 ; loss: 1018.539
2018-11-26 20:34:01,328:INFO: - Eval metrics: accuracy: 0.283 ; loss: 969.466
2018-11-26 20:34:01,665:INFO: Epoch 38/10032
2018-11-26 20:37:54,639:INFO: - Train metrics: accuracy: 0.294 ; loss: 1015.996
2018-11-26 20:38:28,009:INFO: - Eval metrics: accuracy: 0.282 ; loss: 968.362
2018-11-26 20:38:28,690:INFO: Epoch 39/10032
2018-11-26 20:42:11,499:INFO: - Train metrics: accuracy: 0.293 ; loss: 1014.547
2018-11-26 20:42:43,359:INFO: - Eval metrics: accuracy: 0.281 ; loss: 968.216
2018-11-26 21:13:13,498:INFO: Creating the datasets...
2018-11-26 21:13:29,260:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 21:13:29,655:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 21:13:29,746:INFO: - done.
2018-11-26 21:13:29,746:INFO: Creating the model...
2018-11-26 21:13:30,330:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 21:13:33,128:INFO: - done.
2018-11-26 21:13:33,128:INFO: Starting training for 10000 epoch(s)
2018-11-26 21:13:34,390:INFO: Restoring parameters from experiments/best_weights
2018-11-26 21:13:34,500:INFO: Restoring parameters from experiments/best_weights/after-epoch-33
2018-11-26 21:13:35,546:INFO: Epoch 34/10033
2018-11-26 21:14:18,320:INFO: Creating the datasets...
2018-11-26 21:14:21,945:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-26 21:14:22,277:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-26 21:14:22,324:INFO: - done.
2018-11-26 21:14:22,324:INFO: Creating the model...
2018-11-26 21:14:22,415:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-26 21:14:24,952:INFO: - done.
2018-11-26 21:14:24,952:INFO: Starting training for 10000 epoch(s)
2018-11-26 21:14:25,993:INFO: Epoch 1/10000
2018-11-26 21:17:25,858:INFO: - Train metrics: accuracy: 0.054 ; loss: 1555.059
2018-11-26 21:17:52,868:INFO: - Eval metrics: accuracy: 0.058 ; loss: 1467.521
2018-11-26 21:17:54,038:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-26 21:17:54,039:INFO: Epoch 2/10000
2018-11-26 21:20:45,114:INFO: - Train metrics: accuracy: 0.063 ; loss: 1545.525
2018-11-26 21:21:11,705:INFO: - Eval metrics: accuracy: 0.065 ; loss: 1460.827
2018-11-26 21:21:12,486:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-26 21:21:12,487:INFO: Epoch 3/10000
2018-11-26 21:24:05,308:INFO: - Train metrics: accuracy: 0.070 ; loss: 1537.011
2018-11-26 21:24:31,577:INFO: - Eval metrics: accuracy: 0.073 ; loss: 1450.637
2018-11-26 21:24:32,199:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-26 21:24:32,200:INFO: Epoch 4/10000
2018-11-26 21:27:23,860:INFO: - Train metrics: accuracy: 0.080 ; loss: 1525.646
2018-11-26 21:27:50,132:INFO: - Eval metrics: accuracy: 0.084 ; loss: 1438.354
2018-11-26 21:27:50,696:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-26 21:27:50,697:INFO: Epoch 5/10000
2018-11-26 21:30:45,531:INFO: - Train metrics: accuracy: 0.092 ; loss: 1512.021
2018-11-26 21:31:12,619:INFO: - Eval metrics: accuracy: 0.096 ; loss: 1424.041
2018-11-26 21:31:13,258:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-26 21:31:13,259:INFO: Epoch 6/10000
2018-11-26 21:34:07,177:INFO: - Train metrics: accuracy: 0.105 ; loss: 1496.876
2018-11-26 21:34:34,693:INFO: - Eval metrics: accuracy: 0.109 ; loss: 1408.984
2018-11-26 21:34:35,244:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-26 21:34:35,245:INFO: Epoch 7/10000
2018-11-26 21:37:29,767:INFO: - Train metrics: accuracy: 0.118 ; loss: 1481.246
2018-11-26 21:37:55,322:INFO: - Eval metrics: accuracy: 0.123 ; loss: 1393.457
2018-11-26 21:37:55,985:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-26 21:37:55,986:INFO: Epoch 8/10000
2018-11-26 21:41:09,964:INFO: - Train metrics: accuracy: 0.132 ; loss: 1465.142
2018-11-26 21:41:38,099:INFO: - Eval metrics: accuracy: 0.136 ; loss: 1377.655
2018-11-26 21:41:38,722:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-26 21:41:38,722:INFO: Epoch 9/10000
2018-11-26 21:44:57,421:INFO: - Train metrics: accuracy: 0.145 ; loss: 1448.599
2018-11-26 21:45:24,781:INFO: - Eval metrics: accuracy: 0.149 ; loss: 1361.133
2018-11-26 21:45:25,389:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-26 21:45:25,390:INFO: Epoch 10/10000
2018-11-26 21:48:36,888:INFO: - Train metrics: accuracy: 0.158 ; loss: 1431.146
2018-11-26 21:49:03,416:INFO: - Eval metrics: accuracy: 0.162 ; loss: 1343.302
2018-11-26 21:49:04,000:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-26 21:49:04,001:INFO: Epoch 11/10000
2018-11-26 21:52:17,510:INFO: - Train metrics: accuracy: 0.172 ; loss: 1411.235
2018-11-26 21:52:44,945:INFO: - Eval metrics: accuracy: 0.176 ; loss: 1321.876
2018-11-26 21:52:45,529:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-26 21:52:45,530:INFO: Epoch 12/10000
2018-11-26 21:56:05,729:INFO: - Train metrics: accuracy: 0.187 ; loss: 1387.833
2018-11-26 21:56:32,476:INFO: - Eval metrics: accuracy: 0.191 ; loss: 1298.534
2018-11-26 21:56:33,051:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-26 21:56:33,052:INFO: Epoch 13/10000
2018-11-26 21:59:47,798:INFO: - Train metrics: accuracy: 0.200 ; loss: 1364.188
2018-11-26 22:00:14,253:INFO: - Eval metrics: accuracy: 0.203 ; loss: 1276.666
2018-11-26 22:00:14,810:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-26 22:00:14,811:INFO: Epoch 14/10000
2018-11-26 22:03:31,643:INFO: - Train metrics: accuracy: 0.212 ; loss: 1342.127
2018-11-26 22:03:59,346:INFO: - Eval metrics: accuracy: 0.213 ; loss: 1256.508
2018-11-26 22:03:59,901:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-26 22:03:59,902:INFO: Epoch 15/10000
2018-11-26 22:07:19,461:INFO: - Train metrics: accuracy: 0.222 ; loss: 1321.712
2018-11-26 22:07:47,926:INFO: - Eval metrics: accuracy: 0.222 ; loss: 1238.093
2018-11-26 22:07:48,521:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-26 22:07:48,522:INFO: Epoch 16/10000
2018-11-26 22:11:03,191:INFO: - Train metrics: accuracy: 0.230 ; loss: 1302.668
2018-11-26 22:11:32,328:INFO: - Eval metrics: accuracy: 0.229 ; loss: 1220.852
2018-11-26 22:11:33,287:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-26 22:11:33,321:INFO: Epoch 17/10000
2018-11-26 22:14:46,203:INFO: - Train metrics: accuracy: 0.236 ; loss: 1284.207
2018-11-26 22:15:14,843:INFO: - Eval metrics: accuracy: 0.236 ; loss: 1203.687
2018-11-26 22:15:15,531:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-26 22:15:15,532:INFO: Epoch 18/10000
2018-11-26 22:18:20,211:INFO: - Train metrics: accuracy: 0.243 ; loss: 1265.901
2018-11-26 22:18:51,843:INFO: - Eval metrics: accuracy: 0.242 ; loss: 1186.511
2018-11-26 22:18:53,047:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-26 22:18:53,061:INFO: Epoch 19/10000
2018-11-26 22:22:15,248:INFO: - Train metrics: accuracy: 0.249 ; loss: 1247.721
2018-11-26 22:22:44,144:INFO: - Eval metrics: accuracy: 0.248 ; loss: 1169.434
2018-11-26 22:22:44,767:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-26 22:22:44,768:INFO: Epoch 20/10000
2018-11-26 22:26:00,127:INFO: - Train metrics: accuracy: 0.255 ; loss: 1229.511
2018-11-26 22:26:30,531:INFO: - Eval metrics: accuracy: 0.253 ; loss: 1152.521
2018-11-26 22:26:31,577:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-20
2018-11-26 22:26:31,587:INFO: Epoch 21/10000
2018-11-26 22:29:52,155:INFO: - Train metrics: accuracy: 0.260 ; loss: 1211.618
2018-11-26 22:30:20,865:INFO: - Eval metrics: accuracy: 0.258 ; loss: 1135.889
2018-11-26 22:30:21,425:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-26 22:30:21,425:INFO: Epoch 22/10000
2018-11-26 22:33:40,779:INFO: - Train metrics: accuracy: 0.265 ; loss: 1193.985
2018-11-26 22:34:11,339:INFO: - Eval metrics: accuracy: 0.262 ; loss: 1119.578
2018-11-26 22:34:11,969:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-26 22:34:11,970:INFO: Epoch 23/10000
2018-11-26 22:37:29,884:INFO: - Train metrics: accuracy: 0.270 ; loss: 1176.661
2018-11-26 22:38:00,410:INFO: - Eval metrics: accuracy: 0.266 ; loss: 1103.410
2018-11-26 22:38:00,997:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-26 22:38:00,998:INFO: Epoch 24/10000
2018-11-26 22:41:19,854:INFO: - Train metrics: accuracy: 0.274 ; loss: 1159.661
2018-11-26 22:41:50,028:INFO: - Eval metrics: accuracy: 0.269 ; loss: 1088.151
2018-11-26 22:41:50,646:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-26 22:41:50,647:INFO: Epoch 25/10000
2018-11-26 22:45:09,210:INFO: - Train metrics: accuracy: 0.277 ; loss: 1143.217
2018-11-26 22:45:39,791:INFO: - Eval metrics: accuracy: 0.272 ; loss: 1073.384
2018-11-26 22:45:40,380:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-26 22:45:40,381:INFO: Epoch 26/10000
2018-11-26 22:48:58,642:INFO: - Train metrics: accuracy: 0.280 ; loss: 1127.484
2018-11-26 22:49:29,045:INFO: - Eval metrics: accuracy: 0.275 ; loss: 1059.336
2018-11-26 22:49:29,626:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-26 22:49:29,627:INFO: Epoch 27/10000
2018-11-26 22:52:46,264:INFO: - Train metrics: accuracy: 0.283 ; loss: 1112.366
2018-11-26 22:53:16,778:INFO: - Eval metrics: accuracy: 0.277 ; loss: 1045.597
2018-11-26 22:53:17,369:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-26 22:53:17,369:INFO: Epoch 28/10000
2018-11-26 22:56:33,430:INFO: - Train metrics: accuracy: 0.286 ; loss: 1098.093
2018-11-26 22:57:03,827:INFO: - Eval metrics: accuracy: 0.280 ; loss: 1032.609
2018-11-26 22:57:04,410:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-26 22:57:04,410:INFO: Epoch 29/10000
2018-11-26 23:00:17,723:INFO: - Train metrics: accuracy: 0.288 ; loss: 1084.827
2018-11-26 23:00:48,444:INFO: - Eval metrics: accuracy: 0.282 ; loss: 1020.446
2018-11-26 23:00:49,024:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-26 23:00:49,025:INFO: Epoch 30/10000
2018-11-26 23:04:05,960:INFO: - Train metrics: accuracy: 0.290 ; loss: 1072.517
2018-11-26 23:04:36,257:INFO: - Eval metrics: accuracy: 0.283 ; loss: 1009.398
2018-11-26 23:04:37,116:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-30
2018-11-26 23:04:37,116:INFO: Epoch 31/10000
2018-11-26 23:07:56,244:INFO: - Train metrics: accuracy: 0.292 ; loss: 1061.540
2018-11-26 23:08:26,685:INFO: - Eval metrics: accuracy: 0.284 ; loss: 999.549
2018-11-26 23:08:27,270:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-31
2018-11-26 23:08:27,270:INFO: Epoch 32/10000
2018-11-26 23:11:42,383:INFO: - Train metrics: accuracy: 0.293 ; loss: 1051.539
2018-11-26 23:12:12,531:INFO: - Eval metrics: accuracy: 0.286 ; loss: 990.416
2018-11-26 23:12:13,169:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-26 23:12:13,187:INFO: Epoch 33/10000
2018-11-26 23:15:30,658:INFO: - Train metrics: accuracy: 0.295 ; loss: 1042.328
2018-11-26 23:16:00,862:INFO: - Eval metrics: accuracy: 0.286 ; loss: 982.069
2018-11-26 23:16:01,441:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-33
2018-11-26 23:16:01,442:INFO: Epoch 34/10000
2018-11-26 23:19:16,385:INFO: - Train metrics: accuracy: 0.296 ; loss: 1033.954
2018-11-26 23:19:46,630:INFO: - Eval metrics: accuracy: 0.287 ; loss: 974.563
2018-11-26 23:19:47,222:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-34
2018-11-26 23:19:47,223:INFO: Epoch 35/10000
2018-11-26 23:23:03,842:INFO: - Train metrics: accuracy: 0.296 ; loss: 1026.489
2018-11-26 23:23:34,125:INFO: - Eval metrics: accuracy: 0.288 ; loss: 968.168
2018-11-26 23:23:34,706:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-35
2018-11-26 23:23:34,707:INFO: Epoch 36/10000
2018-11-26 23:26:50,845:INFO: - Train metrics: accuracy: 0.297 ; loss: 1019.770
2018-11-26 23:27:21,254:INFO: - Eval metrics: accuracy: 0.288 ; loss: 962.883
2018-11-26 23:27:21,831:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-36
2018-11-26 23:27:21,832:INFO: Epoch 37/10000
2018-11-26 23:30:37,366:INFO: - Train metrics: accuracy: 0.298 ; loss: 1013.915
2018-11-26 23:31:07,855:INFO: - Eval metrics: accuracy: 0.288 ; loss: 958.429
2018-11-26 23:31:08,434:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-37
2018-11-26 23:31:08,435:INFO: Epoch 38/10000
2018-11-26 23:34:24,817:INFO: - Train metrics: accuracy: 0.298 ; loss: 1009.046
2018-11-26 23:34:55,525:INFO: - Eval metrics: accuracy: 0.288 ; loss: 955.157
2018-11-26 23:34:55,869:INFO: Epoch 39/10000
2018-11-26 23:38:13,239:INFO: - Train metrics: accuracy: 0.298 ; loss: 1005.039
2018-11-26 23:38:43,528:INFO: - Eval metrics: accuracy: 0.287 ; loss: 952.978
2018-11-26 23:38:43,853:INFO: Epoch 40/10000
2018-11-26 23:42:00,763:INFO: - Train metrics: accuracy: 0.298 ; loss: 1001.918
2018-11-26 23:42:31,144:INFO: - Eval metrics: accuracy: 0.287 ; loss: 951.297
2018-11-26 23:42:31,493:INFO: Epoch 41/10000
2018-11-26 23:45:45,629:INFO: - Train metrics: accuracy: 0.297 ; loss: 999.603
2018-11-26 23:46:16,136:INFO: - Eval metrics: accuracy: 0.286 ; loss: 950.694
2018-11-26 23:46:16,474:INFO: Epoch 42/10000
2018-11-26 23:49:31,201:INFO: - Train metrics: accuracy: 0.297 ; loss: 998.151
2018-11-26 23:50:01,762:INFO: - Eval metrics: accuracy: 0.285 ; loss: 951.177
2018-11-26 23:50:02,102:INFO: Epoch 43/10000
2018-11-26 23:53:18,309:INFO: - Train metrics: accuracy: 0.296 ; loss: 997.681
2018-11-26 23:53:48,926:INFO: - Eval metrics: accuracy: 0.284 ; loss: 952.456
2018-11-26 23:53:49,269:INFO: Epoch 44/10000
2018-11-26 23:57:05,380:INFO: - Train metrics: accuracy: 0.295 ; loss: 998.207
2018-11-26 23:57:35,911:INFO: - Eval metrics: accuracy: 0.282 ; loss: 955.102
2018-11-26 23:57:36,255:INFO: Epoch 45/10000
2018-11-27 00:00:51,281:INFO: - Train metrics: accuracy: 0.294 ; loss: 999.931
2018-11-27 00:01:21,706:INFO: - Eval metrics: accuracy: 0.280 ; loss: 958.491
2018-11-27 00:01:22,045:INFO: Epoch 46/10000
2018-11-27 00:04:38,306:INFO: - Train metrics: accuracy: 0.292 ; loss: 1002.694
2018-11-27 00:05:09,025:INFO: - Eval metrics: accuracy: 0.278 ; loss: 962.917
2018-11-27 00:05:09,369:INFO: Epoch 47/10000
2018-11-27 00:08:25,681:INFO: - Train metrics: accuracy: 0.290 ; loss: 1006.835
2018-11-27 00:08:56,296:INFO: - Eval metrics: accuracy: 0.276 ; loss: 968.222
2018-11-27 00:08:56,644:INFO: Epoch 48/10000
2018-11-27 00:12:12,131:INFO: - Train metrics: accuracy: 0.288 ; loss: 1012.203
2018-11-27 00:12:42,804:INFO: - Eval metrics: accuracy: 0.273 ; loss: 974.237
2018-11-27 00:12:43,154:INFO: Epoch 49/10000
2018-11-27 00:16:00,611:INFO: - Train metrics: accuracy: 0.285 ; loss: 1018.601
2018-11-27 00:16:31,421:INFO: - Eval metrics: accuracy: 0.270 ; loss: 981.514
2018-11-27 00:16:31,763:INFO: Epoch 50/10000
2018-11-27 00:19:48,779:INFO: - Train metrics: accuracy: 0.282 ; loss: 1026.159
2018-11-27 00:20:19,575:INFO: - Eval metrics: accuracy: 0.268 ; loss: 989.370
2018-11-27 00:20:19,923:INFO: Epoch 51/10000
2018-11-27 00:23:34,781:INFO: - Train metrics: accuracy: 0.279 ; loss: 1034.750
2018-11-27 00:24:05,439:INFO: - Eval metrics: accuracy: 0.264 ; loss: 998.129
2018-11-27 00:24:05,784:INFO: Epoch 52/10000
2018-11-27 00:27:22,010:INFO: - Train metrics: accuracy: 0.275 ; loss: 1044.080
2018-11-27 00:27:52,635:INFO: - Eval metrics: accuracy: 0.261 ; loss: 1007.659
2018-11-27 00:27:52,976:INFO: Epoch 53/10000
2018-11-27 00:31:09,698:INFO: - Train metrics: accuracy: 0.272 ; loss: 1053.915
2018-11-27 00:31:40,244:INFO: - Eval metrics: accuracy: 0.258 ; loss: 1017.826
2018-11-27 00:31:40,575:INFO: Epoch 54/10000
2018-11-27 00:34:56,969:INFO: - Train metrics: accuracy: 0.268 ; loss: 1064.779
2018-11-27 00:35:27,420:INFO: - Eval metrics: accuracy: 0.254 ; loss: 1028.766
2018-11-27 00:35:27,773:INFO: Epoch 55/10000
2018-11-27 00:38:45,050:INFO: - Train metrics: accuracy: 0.264 ; loss: 1075.901
2018-11-27 00:39:15,808:INFO: - Eval metrics: accuracy: 0.250 ; loss: 1040.457
2018-11-27 00:39:16,162:INFO: Epoch 56/10000
2018-11-27 00:42:32,854:INFO: - Train metrics: accuracy: 0.260 ; loss: 1087.504
2018-11-27 00:43:03,514:INFO: - Eval metrics: accuracy: 0.246 ; loss: 1052.255
2018-11-27 00:43:03,862:INFO: Epoch 57/10000
2018-11-27 00:46:22,725:INFO: - Train metrics: accuracy: 0.256 ; loss: 1099.376
2018-11-27 00:46:53,493:INFO: - Eval metrics: accuracy: 0.242 ; loss: 1064.632
2018-11-27 00:46:53,836:INFO: Epoch 58/10000
2018-11-27 00:50:11,634:INFO: - Train metrics: accuracy: 0.252 ; loss: 1111.406
2018-11-27 00:50:42,432:INFO: - Eval metrics: accuracy: 0.238 ; loss: 1077.042
2018-11-27 00:50:42,784:INFO: Epoch 59/10000
2018-11-27 00:53:59,179:INFO: - Train metrics: accuracy: 0.248 ; loss: 1123.419
2018-11-27 00:54:29,833:INFO: - Eval metrics: accuracy: 0.234 ; loss: 1089.466
2018-11-27 00:54:30,172:INFO: Epoch 60/10000
2018-11-27 00:57:45,411:INFO: - Train metrics: accuracy: 0.244 ; loss: 1135.265
2018-11-27 00:58:16,012:INFO: - Eval metrics: accuracy: 0.230 ; loss: 1101.839
2018-11-27 00:58:16,352:INFO: Epoch 61/10000
2018-11-27 01:01:31,474:INFO: - Train metrics: accuracy: 0.240 ; loss: 1147.006
2018-11-27 01:02:02,027:INFO: - Eval metrics: accuracy: 0.226 ; loss: 1113.898
2018-11-27 01:02:02,364:INFO: Epoch 62/10000
2018-11-27 01:05:18,731:INFO: - Train metrics: accuracy: 0.236 ; loss: 1158.726
2018-11-27 01:05:49,555:INFO: - Eval metrics: accuracy: 0.223 ; loss: 1125.489
2018-11-27 01:05:49,903:INFO: Epoch 63/10000
2018-11-27 01:09:04,924:INFO: - Train metrics: accuracy: 0.233 ; loss: 1170.248
2018-11-27 01:09:35,542:INFO: - Eval metrics: accuracy: 0.219 ; loss: 1136.708
2018-11-27 01:09:35,894:INFO: Epoch 64/10000
2018-11-27 01:12:51,503:INFO: - Train metrics: accuracy: 0.229 ; loss: 1181.680
2018-11-27 01:13:22,127:INFO: - Eval metrics: accuracy: 0.216 ; loss: 1147.395
2018-11-27 01:13:22,471:INFO: Epoch 65/10000
2018-11-27 01:16:39,670:INFO: - Train metrics: accuracy: 0.226 ; loss: 1192.935
2018-11-27 01:17:10,268:INFO: - Eval metrics: accuracy: 0.213 ; loss: 1157.790
2018-11-27 01:17:10,609:INFO: Epoch 66/10000
2018-11-27 01:20:28,071:INFO: - Train metrics: accuracy: 0.222 ; loss: 1204.020
2018-11-27 01:20:58,904:INFO: - Eval metrics: accuracy: 0.210 ; loss: 1167.421
2018-11-27 01:20:59,254:INFO: Epoch 67/10000
2018-11-27 01:24:16,995:INFO: - Train metrics: accuracy: 0.219 ; loss: 1215.026
2018-11-27 01:24:47,814:INFO: - Eval metrics: accuracy: 0.207 ; loss: 1176.630
2018-11-27 01:24:48,160:INFO: Epoch 68/10000
2018-11-27 01:28:05,805:INFO: - Train metrics: accuracy: 0.215 ; loss: 1225.989
2018-11-27 01:28:36,907:INFO: - Eval metrics: accuracy: 0.204 ; loss: 1185.471
2018-11-27 01:28:37,248:INFO: Epoch 69/10000
2018-11-27 01:31:54,322:INFO: - Train metrics: accuracy: 0.212 ; loss: 1236.515
2018-11-27 01:32:25,050:INFO: - Eval metrics: accuracy: 0.202 ; loss: 1193.651
2018-11-27 01:32:25,399:INFO: Epoch 70/10000
2018-11-27 01:35:41,485:INFO: - Train metrics: accuracy: 0.209 ; loss: 1247.033
2018-11-27 01:36:12,294:INFO: - Eval metrics: accuracy: 0.199 ; loss: 1201.427
2018-11-27 01:36:12,644:INFO: Epoch 71/10000
2018-11-27 01:39:30,211:INFO: - Train metrics: accuracy: 0.206 ; loss: 1257.111
2018-11-27 01:40:01,161:INFO: - Eval metrics: accuracy: 0.197 ; loss: 1208.988
2018-11-27 01:40:01,513:INFO: Epoch 72/10000
2018-11-27 01:43:18,493:INFO: - Train metrics: accuracy: 0.203 ; loss: 1266.758
2018-11-27 01:43:49,633:INFO: - Eval metrics: accuracy: 0.195 ; loss: 1216.329
2018-11-27 01:43:49,983:INFO: Epoch 73/10000
2018-11-27 01:47:06,379:INFO: - Train metrics: accuracy: 0.201 ; loss: 1275.781
2018-11-27 01:47:37,498:INFO: - Eval metrics: accuracy: 0.193 ; loss: 1223.576
2018-11-27 01:47:37,856:INFO: Epoch 74/10000
2018-11-27 01:50:53,505:INFO: - Train metrics: accuracy: 0.199 ; loss: 1284.311
2018-11-27 01:51:24,594:INFO: - Eval metrics: accuracy: 0.191 ; loss: 1230.718
2018-11-27 01:51:24,946:INFO: Epoch 75/10000
2018-11-27 01:54:40,527:INFO: - Train metrics: accuracy: 0.197 ; loss: 1292.262
2018-11-27 01:55:11,401:INFO: - Eval metrics: accuracy: 0.190 ; loss: 1237.979
2018-11-27 01:55:11,751:INFO: Epoch 76/10000
2018-11-27 01:58:26,406:INFO: - Train metrics: accuracy: 0.195 ; loss: 1299.504
2018-11-27 01:58:57,575:INFO: - Eval metrics: accuracy: 0.188 ; loss: 1244.746
2018-11-27 01:58:57,936:INFO: Epoch 77/10000
2018-11-27 02:02:13,416:INFO: - Train metrics: accuracy: 0.193 ; loss: 1306.241
2018-11-27 02:02:44,585:INFO: - Eval metrics: accuracy: 0.187 ; loss: 1250.906
2018-11-27 02:02:44,937:INFO: Epoch 78/10000
2018-11-27 02:06:01,555:INFO: - Train metrics: accuracy: 0.192 ; loss: 1312.636
2018-11-27 02:06:32,710:INFO: - Eval metrics: accuracy: 0.186 ; loss: 1256.264
2018-11-27 02:06:33,061:INFO: Epoch 79/10000
2018-11-27 02:09:49,341:INFO: - Train metrics: accuracy: 0.191 ; loss: 1318.722
2018-11-27 02:10:20,594:INFO: - Eval metrics: accuracy: 0.185 ; loss: 1260.597
2018-11-27 02:10:20,943:INFO: Epoch 80/10000
2018-11-27 02:13:37,334:INFO: - Train metrics: accuracy: 0.189 ; loss: 1324.472
2018-11-27 02:14:08,830:INFO: - Eval metrics: accuracy: 0.184 ; loss: 1264.296
2018-11-27 02:14:09,193:INFO: Epoch 81/10000
2018-11-27 02:17:26,168:INFO: - Train metrics: accuracy: 0.188 ; loss: 1330.029
2018-11-27 02:17:57,552:INFO: - Eval metrics: accuracy: 0.183 ; loss: 1267.265
2018-11-27 02:17:57,914:INFO: Epoch 82/10000
2018-11-27 02:21:15,208:INFO: - Train metrics: accuracy: 0.187 ; loss: 1335.279
2018-11-27 02:21:46,828:INFO: - Eval metrics: accuracy: 0.183 ; loss: 1269.833
2018-11-27 02:21:47,173:INFO: Epoch 83/10000
2018-11-27 02:25:05,035:INFO: - Train metrics: accuracy: 0.186 ; loss: 1340.075
2018-11-27 02:25:36,630:INFO: - Eval metrics: accuracy: 0.183 ; loss: 1271.819
2018-11-27 02:25:36,983:INFO: Epoch 84/10000
2018-11-27 02:28:53,891:INFO: - Train metrics: accuracy: 0.185 ; loss: 1344.245
2018-11-27 02:29:25,266:INFO: - Eval metrics: accuracy: 0.182 ; loss: 1273.516
2018-11-27 02:29:25,618:INFO: Epoch 85/10000
2018-11-27 02:32:44,428:INFO: - Train metrics: accuracy: 0.184 ; loss: 1347.598
2018-11-27 02:33:15,862:INFO: - Eval metrics: accuracy: 0.182 ; loss: 1274.687
2018-11-27 02:33:16,218:INFO: Epoch 86/10000
2018-11-27 02:36:34,819:INFO: - Train metrics: accuracy: 0.184 ; loss: 1350.200
2018-11-27 02:37:06,237:INFO: - Eval metrics: accuracy: 0.182 ; loss: 1275.555
2018-11-27 02:37:06,591:INFO: Epoch 87/10000
2018-11-27 02:40:25,077:INFO: - Train metrics: accuracy: 0.184 ; loss: 1351.942
2018-11-27 02:40:56,889:INFO: - Eval metrics: accuracy: 0.182 ; loss: 1276.315
2018-11-27 02:40:57,258:INFO: Epoch 88/10000
2018-11-27 02:44:16,732:INFO: - Train metrics: accuracy: 0.184 ; loss: 1352.933
2018-11-27 02:44:48,339:INFO: - Eval metrics: accuracy: 0.182 ; loss: 1276.418
2018-11-27 02:44:48,684:INFO: Epoch 89/10000
2018-11-27 02:48:08,359:INFO: - Train metrics: accuracy: 0.184 ; loss: 1353.280
2018-11-27 02:48:39,981:INFO: - Eval metrics: accuracy: 0.183 ; loss: 1276.109
2018-11-27 02:48:40,339:INFO: Epoch 90/10000
2018-11-27 02:51:59,198:INFO: - Train metrics: accuracy: 0.184 ; loss: 1352.938
2018-11-27 02:52:30,877:INFO: - Eval metrics: accuracy: 0.183 ; loss: 1275.191
2018-11-27 02:52:31,247:INFO: Epoch 91/10000
2018-11-27 02:55:49,893:INFO: - Train metrics: accuracy: 0.185 ; loss: 1352.056
2018-11-27 02:56:21,676:INFO: - Eval metrics: accuracy: 0.184 ; loss: 1273.979
2018-11-27 02:56:22,042:INFO: Epoch 92/10000
2018-11-27 02:59:39,965:INFO: - Train metrics: accuracy: 0.186 ; loss: 1350.681
2018-11-27 03:00:11,493:INFO: - Eval metrics: accuracy: 0.185 ; loss: 1272.332
2018-11-27 03:00:11,855:INFO: Epoch 93/10000
2018-11-27 03:03:29,942:INFO: - Train metrics: accuracy: 0.187 ; loss: 1349.116
2018-11-27 03:04:01,646:INFO: - Eval metrics: accuracy: 0.186 ; loss: 1270.348
2018-11-27 03:04:02,013:INFO: Epoch 94/10000
2018-11-27 03:07:20,370:INFO: - Train metrics: accuracy: 0.188 ; loss: 1347.112
2018-11-27 03:07:51,956:INFO: - Eval metrics: accuracy: 0.187 ; loss: 1268.080
2018-11-27 03:07:52,311:INFO: Epoch 95/10000
2018-11-27 03:11:09,434:INFO: - Train metrics: accuracy: 0.189 ; loss: 1344.875
2018-11-27 03:11:40,871:INFO: - Eval metrics: accuracy: 0.189 ; loss: 1265.729
2018-11-27 03:11:41,247:INFO: Epoch 96/10000
2018-11-27 03:15:00,648:INFO: - Train metrics: accuracy: 0.191 ; loss: 1342.515
2018-11-27 03:15:32,192:INFO: - Eval metrics: accuracy: 0.190 ; loss: 1263.320
2018-11-27 03:15:32,551:INFO: Epoch 97/10000
2018-11-27 03:18:51,592:INFO: - Train metrics: accuracy: 0.192 ; loss: 1339.986
2018-11-27 03:19:23,151:INFO: - Eval metrics: accuracy: 0.191 ; loss: 1260.669
2018-11-27 03:19:23,518:INFO: Epoch 98/10000
2018-11-27 03:22:42,791:INFO: - Train metrics: accuracy: 0.194 ; loss: 1337.388
2018-11-27 03:23:14,604:INFO: - Eval metrics: accuracy: 0.192 ; loss: 1257.968
2018-11-27 03:23:14,980:INFO: Epoch 99/10000
2018-11-27 03:26:32,893:INFO: - Train metrics: accuracy: 0.195 ; loss: 1334.606
2018-11-27 03:27:04,422:INFO: - Eval metrics: accuracy: 0.194 ; loss: 1255.142
2018-11-27 03:27:04,777:INFO: Epoch 100/10000
2018-11-27 03:30:21,698:INFO: - Train metrics: accuracy: 0.197 ; loss: 1331.688
2018-11-27 03:30:53,496:INFO: - Eval metrics: accuracy: 0.195 ; loss: 1252.260
2018-11-27 03:30:53,864:INFO: Epoch 101/10000
2018-11-27 03:34:13,638:INFO: - Train metrics: accuracy: 0.198 ; loss: 1328.751
2018-11-27 03:34:45,521:INFO: - Eval metrics: accuracy: 0.197 ; loss: 1249.229
2018-11-27 03:34:45,898:INFO: Epoch 102/10000
2018-11-27 03:38:05,538:INFO: - Train metrics: accuracy: 0.200 ; loss: 1325.631
2018-11-27 03:38:37,363:INFO: - Eval metrics: accuracy: 0.198 ; loss: 1246.093
2018-11-27 03:38:37,728:INFO: Epoch 103/10000
2018-11-27 03:41:56,802:INFO: - Train metrics: accuracy: 0.202 ; loss: 1322.437
2018-11-27 03:42:28,473:INFO: - Eval metrics: accuracy: 0.200 ; loss: 1242.986
2018-11-27 03:42:28,848:INFO: Epoch 104/10000
2018-11-27 03:45:48,005:INFO: - Train metrics: accuracy: 0.203 ; loss: 1319.132
2018-11-27 03:46:19,780:INFO: - Eval metrics: accuracy: 0.202 ; loss: 1239.564
2018-11-27 03:46:20,150:INFO: Epoch 105/10000
2018-11-27 03:49:39,185:INFO: - Train metrics: accuracy: 0.205 ; loss: 1315.833
2018-11-27 03:50:11,064:INFO: - Eval metrics: accuracy: 0.203 ; loss: 1236.140
2018-11-27 03:50:11,429:INFO: Epoch 106/10000
2018-11-27 03:53:30,131:INFO: - Train metrics: accuracy: 0.207 ; loss: 1312.349
2018-11-27 03:54:01,809:INFO: - Eval metrics: accuracy: 0.205 ; loss: 1232.647
2018-11-27 03:54:02,181:INFO: Epoch 107/10000
2018-11-27 03:57:21,375:INFO: - Train metrics: accuracy: 0.208 ; loss: 1308.890
2018-11-27 03:57:53,195:INFO: - Eval metrics: accuracy: 0.207 ; loss: 1229.012
2018-11-27 03:57:53,553:INFO: Epoch 108/10000
2018-11-27 04:01:13,850:INFO: - Train metrics: accuracy: 0.210 ; loss: 1305.242
2018-11-27 04:01:45,825:INFO: - Eval metrics: accuracy: 0.209 ; loss: 1225.478
2018-11-27 04:01:46,199:INFO: Epoch 109/10000
2018-11-27 04:05:04,263:INFO: - Train metrics: accuracy: 0.212 ; loss: 1301.633
2018-11-27 04:05:36,019:INFO: - Eval metrics: accuracy: 0.210 ; loss: 1221.880
2018-11-27 04:05:36,376:INFO: Epoch 110/10000
2018-11-27 04:08:54,872:INFO: - Train metrics: accuracy: 0.214 ; loss: 1297.974
2018-11-27 04:09:26,595:INFO: - Eval metrics: accuracy: 0.212 ; loss: 1218.245
2018-11-27 04:09:26,964:INFO: Epoch 111/10000
2018-11-27 04:12:46,271:INFO: - Train metrics: accuracy: 0.216 ; loss: 1294.200
2018-11-27 04:13:18,057:INFO: - Eval metrics: accuracy: 0.214 ; loss: 1214.342
2018-11-27 04:13:18,432:INFO: Epoch 112/10000
2018-11-27 04:16:37,807:INFO: - Train metrics: accuracy: 0.217 ; loss: 1290.174
2018-11-27 04:17:09,435:INFO: - Eval metrics: accuracy: 0.216 ; loss: 1210.558
2018-11-27 04:17:09,798:INFO: Epoch 113/10000
2018-11-27 04:20:28,610:INFO: - Train metrics: accuracy: 0.219 ; loss: 1286.198
2018-11-27 04:21:00,620:INFO: - Eval metrics: accuracy: 0.218 ; loss: 1206.598
2018-11-27 04:21:00,987:INFO: Epoch 114/10000
2018-11-27 04:24:20,438:INFO: - Train metrics: accuracy: 0.221 ; loss: 1282.123
2018-11-27 04:24:52,399:INFO: - Eval metrics: accuracy: 0.219 ; loss: 1202.599
2018-11-27 04:24:52,763:INFO: Epoch 115/10000
2018-11-27 04:28:12,967:INFO: - Train metrics: accuracy: 0.223 ; loss: 1278.054
2018-11-27 04:28:44,670:INFO: - Eval metrics: accuracy: 0.221 ; loss: 1198.640
2018-11-27 04:28:45,025:INFO: Epoch 116/10000
2018-11-27 04:32:05,983:INFO: - Train metrics: accuracy: 0.224 ; loss: 1273.832
2018-11-27 04:32:37,751:INFO: - Eval metrics: accuracy: 0.223 ; loss: 1194.504
2018-11-27 04:32:38,119:INFO: Epoch 117/10000
2018-11-27 04:35:58,719:INFO: - Train metrics: accuracy: 0.226 ; loss: 1269.626
2018-11-27 04:36:30,443:INFO: - Eval metrics: accuracy: 0.225 ; loss: 1190.461
2018-11-27 04:36:30,809:INFO: Epoch 118/10000
2018-11-27 04:39:50,049:INFO: - Train metrics: accuracy: 0.228 ; loss: 1265.448
2018-11-27 04:40:21,897:INFO: - Eval metrics: accuracy: 0.226 ; loss: 1186.104
2018-11-27 04:40:22,263:INFO: Epoch 119/10000
2018-11-27 04:43:41,764:INFO: - Train metrics: accuracy: 0.230 ; loss: 1261.167
2018-11-27 04:44:13,714:INFO: - Eval metrics: accuracy: 0.228 ; loss: 1182.027
2018-11-27 04:44:14,079:INFO: Epoch 120/10000
2018-11-27 04:47:34,518:INFO: - Train metrics: accuracy: 0.231 ; loss: 1256.869
2018-11-27 04:48:06,344:INFO: - Eval metrics: accuracy: 0.230 ; loss: 1177.714
2018-11-27 04:48:06,728:INFO: Epoch 121/10000
2018-11-27 04:51:27,315:INFO: - Train metrics: accuracy: 0.233 ; loss: 1252.522
2018-11-27 04:51:59,029:INFO: - Eval metrics: accuracy: 0.232 ; loss: 1173.394
2018-11-27 04:51:59,389:INFO: Epoch 122/10000
2018-11-27 04:55:19,144:INFO: - Train metrics: accuracy: 0.235 ; loss: 1248.162
2018-11-27 04:55:51,141:INFO: - Eval metrics: accuracy: 0.233 ; loss: 1168.947
2018-11-27 04:55:51,515:INFO: Epoch 123/10000
2018-11-27 04:59:11,813:INFO: - Train metrics: accuracy: 0.236 ; loss: 1243.759
2018-11-27 04:59:43,588:INFO: - Eval metrics: accuracy: 0.235 ; loss: 1164.546
2018-11-27 04:59:43,971:INFO: Epoch 124/10000
2018-11-27 05:03:02,926:INFO: - Train metrics: accuracy: 0.238 ; loss: 1239.208
2018-11-27 05:03:34,628:INFO: - Eval metrics: accuracy: 0.237 ; loss: 1160.189
2018-11-27 05:03:34,990:INFO: Epoch 125/10000
2018-11-27 05:06:53,965:INFO: - Train metrics: accuracy: 0.240 ; loss: 1234.662
2018-11-27 05:07:25,761:INFO: - Eval metrics: accuracy: 0.238 ; loss: 1155.740
2018-11-27 05:07:26,133:INFO: Epoch 126/10000
2018-11-27 05:10:44,452:INFO: - Train metrics: accuracy: 0.241 ; loss: 1230.167
2018-11-27 05:11:16,384:INFO: - Eval metrics: accuracy: 0.240 ; loss: 1151.409
2018-11-27 05:11:16,755:INFO: Epoch 127/10000
2018-11-27 05:14:34,230:INFO: - Train metrics: accuracy: 0.243 ; loss: 1225.601
2018-11-27 05:15:06,143:INFO: - Eval metrics: accuracy: 0.242 ; loss: 1146.925
2018-11-27 05:15:06,515:INFO: Epoch 128/10000
2018-11-27 05:18:25,883:INFO: - Train metrics: accuracy: 0.244 ; loss: 1220.980
2018-11-27 05:18:57,809:INFO: - Eval metrics: accuracy: 0.243 ; loss: 1142.374
2018-11-27 05:18:58,193:INFO: Epoch 129/10000
2018-11-27 05:22:17,465:INFO: - Train metrics: accuracy: 0.246 ; loss: 1216.285
2018-11-27 05:22:49,291:INFO: - Eval metrics: accuracy: 0.245 ; loss: 1137.868
2018-11-27 05:22:49,661:INFO: Epoch 130/10000
2018-11-27 05:26:08,943:INFO: - Train metrics: accuracy: 0.247 ; loss: 1211.492
2018-11-27 05:26:40,846:INFO: - Eval metrics: accuracy: 0.246 ; loss: 1133.245
2018-11-27 05:26:41,224:INFO: Epoch 131/10000
2018-11-27 05:29:59,732:INFO: - Train metrics: accuracy: 0.249 ; loss: 1206.721
2018-11-27 05:30:31,539:INFO: - Eval metrics: accuracy: 0.248 ; loss: 1128.378
2018-11-27 05:30:31,904:INFO: Epoch 132/10000
2018-11-27 05:33:50,947:INFO: - Train metrics: accuracy: 0.250 ; loss: 1201.890
2018-11-27 05:34:22,934:INFO: - Eval metrics: accuracy: 0.249 ; loss: 1123.734
2018-11-27 05:34:23,309:INFO: Epoch 133/10000
2018-11-27 05:37:41,882:INFO: - Train metrics: accuracy: 0.252 ; loss: 1197.141
2018-11-27 05:38:13,689:INFO: - Eval metrics: accuracy: 0.250 ; loss: 1119.027
2018-11-27 05:38:14,053:INFO: Epoch 134/10000
2018-11-27 05:41:32,541:INFO: - Train metrics: accuracy: 0.253 ; loss: 1192.297
2018-11-27 05:42:04,270:INFO: - Eval metrics: accuracy: 0.252 ; loss: 1114.269
2018-11-27 05:42:04,647:INFO: Epoch 135/10000
2018-11-27 05:45:22,461:INFO: - Train metrics: accuracy: 0.255 ; loss: 1187.425
2018-11-27 05:45:54,150:INFO: - Eval metrics: accuracy: 0.253 ; loss: 1109.448
2018-11-27 05:45:54,521:INFO: Epoch 136/10000
2018-11-27 05:49:13,253:INFO: - Train metrics: accuracy: 0.256 ; loss: 1182.513
2018-11-27 05:49:44,909:INFO: - Eval metrics: accuracy: 0.255 ; loss: 1104.538
2018-11-27 05:49:45,291:INFO: Epoch 137/10000
2018-11-27 05:53:04,852:INFO: - Train metrics: accuracy: 0.257 ; loss: 1177.533
2018-11-27 05:53:36,566:INFO: - Eval metrics: accuracy: 0.256 ; loss: 1099.704
2018-11-27 05:53:36,942:INFO: Epoch 138/10000
2018-11-27 05:56:55,542:INFO: - Train metrics: accuracy: 0.259 ; loss: 1172.606
2018-11-27 05:57:27,206:INFO: - Eval metrics: accuracy: 0.257 ; loss: 1094.939
2018-11-27 05:57:27,584:INFO: Epoch 139/10000
2018-11-27 06:00:46,730:INFO: - Train metrics: accuracy: 0.260 ; loss: 1167.567
2018-11-27 06:01:18,401:INFO: - Eval metrics: accuracy: 0.259 ; loss: 1090.050
2018-11-27 06:01:18,784:INFO: Epoch 140/10000
2018-11-27 06:04:38,908:INFO: - Train metrics: accuracy: 0.262 ; loss: 1162.524
2018-11-27 06:05:10,941:INFO: - Eval metrics: accuracy: 0.260 ; loss: 1085.132
2018-11-27 06:05:11,276:INFO: Epoch 141/10000
2018-11-27 06:08:30,535:INFO: - Train metrics: accuracy: 0.263 ; loss: 1157.450
2018-11-27 06:09:02,567:INFO: - Eval metrics: accuracy: 0.261 ; loss: 1080.047
2018-11-27 06:09:02,935:INFO: Epoch 142/10000
2018-11-27 06:12:21,053:INFO: - Train metrics: accuracy: 0.264 ; loss: 1152.301
2018-11-27 06:12:52,585:INFO: - Eval metrics: accuracy: 0.262 ; loss: 1075.017
2018-11-27 06:12:52,962:INFO: Epoch 143/10000
2018-11-27 06:16:12,728:INFO: - Train metrics: accuracy: 0.265 ; loss: 1147.141
2018-11-27 06:16:44,563:INFO: - Eval metrics: accuracy: 0.264 ; loss: 1070.050
2018-11-27 06:16:44,927:INFO: Epoch 144/10000
2018-11-27 06:20:05,387:INFO: - Train metrics: accuracy: 0.267 ; loss: 1141.973
2018-11-27 06:20:37,330:INFO: - Eval metrics: accuracy: 0.265 ; loss: 1065.046
2018-11-27 06:20:37,707:INFO: Epoch 145/10000
2018-11-27 06:23:57,114:INFO: - Train metrics: accuracy: 0.268 ; loss: 1136.735
2018-11-27 06:24:28,971:INFO: - Eval metrics: accuracy: 0.266 ; loss: 1059.922
2018-11-27 06:24:29,345:INFO: Epoch 146/10000
2018-11-27 06:27:49,339:INFO: - Train metrics: accuracy: 0.269 ; loss: 1131.589
2018-11-27 06:28:21,113:INFO: - Eval metrics: accuracy: 0.268 ; loss: 1054.763
2018-11-27 06:28:21,491:INFO: Epoch 147/10000
2018-11-27 06:31:42,817:INFO: - Train metrics: accuracy: 0.271 ; loss: 1126.263
2018-11-27 06:32:14,744:INFO: - Eval metrics: accuracy: 0.269 ; loss: 1049.578
2018-11-27 06:32:15,117:INFO: Epoch 148/10000
2018-11-27 06:35:37,229:INFO: - Train metrics: accuracy: 0.272 ; loss: 1120.973
2018-11-27 06:36:09,396:INFO: - Eval metrics: accuracy: 0.270 ; loss: 1044.421
2018-11-27 06:36:09,768:INFO: Epoch 149/10000
2018-11-27 06:39:29,784:INFO: - Train metrics: accuracy: 0.273 ; loss: 1115.619
2018-11-27 06:40:01,576:INFO: - Eval metrics: accuracy: 0.271 ; loss: 1039.162
2018-11-27 06:40:01,914:INFO: Epoch 150/10000
2018-11-27 06:43:22,770:INFO: - Train metrics: accuracy: 0.274 ; loss: 1110.308
2018-11-27 06:43:54,547:INFO: - Eval metrics: accuracy: 0.272 ; loss: 1033.964
2018-11-27 06:43:54,910:INFO: Epoch 151/10000
2018-11-27 06:47:15,300:INFO: - Train metrics: accuracy: 0.276 ; loss: 1105.018
2018-11-27 06:47:46,965:INFO: - Eval metrics: accuracy: 0.274 ; loss: 1028.704
2018-11-27 06:47:47,339:INFO: Epoch 152/10000
2018-11-27 06:51:06,625:INFO: - Train metrics: accuracy: 0.277 ; loss: 1099.615
2018-11-27 06:51:38,628:INFO: - Eval metrics: accuracy: 0.275 ; loss: 1023.541
2018-11-27 06:51:39,007:INFO: Epoch 153/10000
2018-11-27 06:55:00,074:INFO: - Train metrics: accuracy: 0.278 ; loss: 1094.217
2018-11-27 06:55:31,944:INFO: - Eval metrics: accuracy: 0.276 ; loss: 1018.323
2018-11-27 06:55:32,310:INFO: Epoch 154/10000
2018-11-27 06:58:53,346:INFO: - Train metrics: accuracy: 0.279 ; loss: 1088.862
2018-11-27 06:59:24,961:INFO: - Eval metrics: accuracy: 0.277 ; loss: 1013.009
2018-11-27 06:59:25,328:INFO: Epoch 155/10000
2018-11-27 07:02:44,010:INFO: - Train metrics: accuracy: 0.281 ; loss: 1083.400
2018-11-27 07:03:15,881:INFO: - Eval metrics: accuracy: 0.278 ; loss: 1007.723
2018-11-27 07:03:16,250:INFO: Epoch 156/10000
2018-11-27 07:06:34,235:INFO: - Train metrics: accuracy: 0.282 ; loss: 1077.902
2018-11-27 07:07:06,129:INFO: - Eval metrics: accuracy: 0.279 ; loss: 1002.419
2018-11-27 07:07:06,505:INFO: Epoch 157/10000
2018-11-27 07:10:23,818:INFO: - Train metrics: accuracy: 0.283 ; loss: 1072.461
2018-11-27 07:10:55,716:INFO: - Eval metrics: accuracy: 0.281 ; loss: 997.117
2018-11-27 07:10:56,081:INFO: Epoch 158/10000
2018-11-27 07:14:15,762:INFO: - Train metrics: accuracy: 0.284 ; loss: 1066.947
2018-11-27 07:14:47,633:INFO: - Eval metrics: accuracy: 0.282 ; loss: 991.644
2018-11-27 07:14:48,005:INFO: Epoch 159/10000
2018-11-27 07:18:07,492:INFO: - Train metrics: accuracy: 0.285 ; loss: 1061.428
2018-11-27 07:18:39,409:INFO: - Eval metrics: accuracy: 0.283 ; loss: 986.275
2018-11-27 07:18:39,774:INFO: Epoch 160/10000
2018-11-27 07:21:58,890:INFO: - Train metrics: accuracy: 0.287 ; loss: 1055.904
2018-11-27 07:22:30,624:INFO: - Eval metrics: accuracy: 0.284 ; loss: 980.801
2018-11-27 07:22:30,997:INFO: Epoch 161/10000
2018-11-27 07:25:48,540:INFO: - Train metrics: accuracy: 0.288 ; loss: 1050.303
2018-11-27 07:26:20,170:INFO: - Eval metrics: accuracy: 0.285 ; loss: 975.301
2018-11-27 07:26:20,546:INFO: Epoch 162/10000
2018-11-27 07:29:39,456:INFO: - Train metrics: accuracy: 0.289 ; loss: 1044.705
2018-11-27 07:30:11,130:INFO: - Eval metrics: accuracy: 0.286 ; loss: 969.833
2018-11-27 07:30:11,516:INFO: Epoch 163/10000
2018-11-27 07:33:30,124:INFO: - Train metrics: accuracy: 0.290 ; loss: 1039.012
2018-11-27 07:34:02,018:INFO: - Eval metrics: accuracy: 0.287 ; loss: 964.192
2018-11-27 07:34:02,384:INFO: Epoch 164/10000
2018-11-27 07:37:21,627:INFO: - Train metrics: accuracy: 0.291 ; loss: 1033.375
2018-11-27 07:37:53,569:INFO: - Eval metrics: accuracy: 0.288 ; loss: 958.659
2018-11-27 07:37:54,220:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-164
2018-11-27 07:37:54,232:INFO: Epoch 165/10000
2018-11-27 07:41:13,038:INFO: - Train metrics: accuracy: 0.293 ; loss: 1027.727
2018-11-27 07:41:44,700:INFO: - Eval metrics: accuracy: 0.289 ; loss: 953.181
2018-11-27 07:41:45,304:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-165
2018-11-27 07:41:45,304:INFO: Epoch 166/10000
2018-11-27 07:45:03,445:INFO: - Train metrics: accuracy: 0.294 ; loss: 1022.066
2018-11-27 07:45:35,341:INFO: - Eval metrics: accuracy: 0.291 ; loss: 947.678
2018-11-27 07:45:35,939:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-166
2018-11-27 07:45:35,940:INFO: Epoch 167/10000
2018-11-27 07:48:53,243:INFO: - Train metrics: accuracy: 0.295 ; loss: 1016.387
2018-11-27 07:49:25,062:INFO: - Eval metrics: accuracy: 0.292 ; loss: 942.212
2018-11-27 07:49:25,667:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-167
2018-11-27 07:49:25,668:INFO: Epoch 168/10000
2018-11-27 07:52:42,462:INFO: - Train metrics: accuracy: 0.296 ; loss: 1010.624
2018-11-27 07:53:14,337:INFO: - Eval metrics: accuracy: 0.293 ; loss: 936.610
2018-11-27 07:53:14,940:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-168
2018-11-27 07:53:14,941:INFO: Epoch 169/10000
2018-11-27 07:56:31,792:INFO: - Train metrics: accuracy: 0.297 ; loss: 1004.888
2018-11-27 07:57:03,579:INFO: - Eval metrics: accuracy: 0.294 ; loss: 930.980
2018-11-27 07:57:04,186:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-169
2018-11-27 07:57:04,186:INFO: Epoch 170/10000
2018-11-27 08:00:21,537:INFO: - Train metrics: accuracy: 0.298 ; loss: 999.070
2018-11-27 08:00:52,627:INFO: - Eval metrics: accuracy: 0.295 ; loss: 925.402
2018-11-27 08:00:53,243:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-170
2018-11-27 08:00:53,243:INFO: Epoch 171/10000
2018-11-27 08:03:48,898:INFO: - Train metrics: accuracy: 0.300 ; loss: 993.231
2018-11-27 08:04:18,551:INFO: - Eval metrics: accuracy: 0.296 ; loss: 919.792
2018-11-27 08:04:19,818:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-171
2018-11-27 08:04:19,893:INFO: Epoch 172/10000
2018-11-27 08:07:29,943:INFO: - Train metrics: accuracy: 0.301 ; loss: 987.509
2018-11-27 08:08:02,408:INFO: - Eval metrics: accuracy: 0.297 ; loss: 914.295
2018-11-27 08:08:03,096:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-172
2018-11-27 08:08:03,096:INFO: Epoch 173/10000
2018-11-27 08:11:21,416:INFO: - Train metrics: accuracy: 0.302 ; loss: 981.740
2018-11-27 08:11:53,182:INFO: - Eval metrics: accuracy: 0.298 ; loss: 908.643
2018-11-27 08:11:53,792:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-173
2018-11-27 08:11:53,793:INFO: Epoch 174/10000
2018-11-27 08:15:12,492:INFO: - Train metrics: accuracy: 0.303 ; loss: 976.019
2018-11-27 08:15:44,207:INFO: - Eval metrics: accuracy: 0.299 ; loss: 903.131
2018-11-27 08:15:44,801:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-174
2018-11-27 08:15:44,802:INFO: Epoch 175/10000
2018-11-27 08:19:04,807:INFO: - Train metrics: accuracy: 0.304 ; loss: 970.322
2018-11-27 08:19:36,788:INFO: - Eval metrics: accuracy: 0.300 ; loss: 897.528
2018-11-27 08:19:37,403:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-175
2018-11-27 08:19:37,404:INFO: Epoch 176/10000
2018-11-27 08:22:56,580:INFO: - Train metrics: accuracy: 0.305 ; loss: 964.492
2018-11-27 08:23:28,408:INFO: - Eval metrics: accuracy: 0.301 ; loss: 892.110
2018-11-27 08:23:29,010:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-176
2018-11-27 08:23:29,010:INFO: Epoch 177/10000
2018-11-27 08:26:49,611:INFO: - Train metrics: accuracy: 0.307 ; loss: 958.702
2018-11-27 08:27:21,570:INFO: - Eval metrics: accuracy: 0.302 ; loss: 886.424
2018-11-27 08:27:22,179:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-177
2018-11-27 08:27:22,180:INFO: Epoch 178/10000
2018-11-27 08:30:41,954:INFO: - Train metrics: accuracy: 0.308 ; loss: 952.904
2018-11-27 08:31:14,205:INFO: - Eval metrics: accuracy: 0.304 ; loss: 880.749
2018-11-27 08:31:14,821:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-178
2018-11-27 08:31:14,822:INFO: Epoch 179/10000
2018-11-27 08:34:35,266:INFO: - Train metrics: accuracy: 0.309 ; loss: 947.082
2018-11-27 08:35:07,357:INFO: - Eval metrics: accuracy: 0.305 ; loss: 875.164
2018-11-27 08:35:07,968:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-179
2018-11-27 08:35:07,968:INFO: Epoch 180/10000
2018-11-27 08:38:28,401:INFO: - Train metrics: accuracy: 0.310 ; loss: 941.298
2018-11-27 08:39:00,435:INFO: - Eval metrics: accuracy: 0.306 ; loss: 869.581
2018-11-27 08:39:01,055:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-180
2018-11-27 08:39:01,055:INFO: Epoch 181/10000
2018-11-27 08:42:20,108:INFO: - Train metrics: accuracy: 0.311 ; loss: 935.535
2018-11-27 08:42:52,021:INFO: - Eval metrics: accuracy: 0.307 ; loss: 864.050
2018-11-27 08:42:52,743:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-181
2018-11-27 08:42:52,744:INFO: Epoch 182/10000
2018-11-27 08:46:13,079:INFO: - Train metrics: accuracy: 0.312 ; loss: 929.771
2018-11-27 08:46:44,890:INFO: - Eval metrics: accuracy: 0.308 ; loss: 858.469
2018-11-27 08:46:45,491:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-182
2018-11-27 08:46:45,492:INFO: Epoch 183/10000
2018-11-27 08:50:05,289:INFO: - Train metrics: accuracy: 0.313 ; loss: 923.975
2018-11-27 08:50:37,422:INFO: - Eval metrics: accuracy: 0.309 ; loss: 852.912
2018-11-27 08:50:38,036:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-183
2018-11-27 08:50:38,037:INFO: Epoch 184/10000
2018-11-27 08:53:59,142:INFO: - Train metrics: accuracy: 0.314 ; loss: 918.192
2018-11-27 08:54:31,011:INFO: - Eval metrics: accuracy: 0.310 ; loss: 847.364
2018-11-27 08:54:31,628:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-184
2018-11-27 08:54:31,628:INFO: Epoch 185/10000
2018-11-27 08:57:52,342:INFO: - Train metrics: accuracy: 0.315 ; loss: 912.429
2018-11-27 08:58:24,481:INFO: - Eval metrics: accuracy: 0.311 ; loss: 841.750
2018-11-27 08:58:25,083:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-185
2018-11-27 08:58:25,084:INFO: Epoch 186/10000
2018-11-27 09:01:45,059:INFO: - Train metrics: accuracy: 0.317 ; loss: 906.691
2018-11-27 09:02:17,129:INFO: - Eval metrics: accuracy: 0.312 ; loss: 836.227
2018-11-27 09:02:17,732:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-186
2018-11-27 09:02:17,733:INFO: Epoch 187/10000
2018-11-27 09:05:36,960:INFO: - Train metrics: accuracy: 0.318 ; loss: 900.962
2018-11-27 09:06:09,081:INFO: - Eval metrics: accuracy: 0.313 ; loss: 830.591
2018-11-27 09:06:09,705:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-187
2018-11-27 09:06:09,706:INFO: Epoch 188/10000
2018-11-27 09:09:28,019:INFO: - Train metrics: accuracy: 0.319 ; loss: 895.246
2018-11-27 09:09:59,746:INFO: - Eval metrics: accuracy: 0.314 ; loss: 825.085
2018-11-27 09:10:00,354:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-188
2018-11-27 09:10:00,354:INFO: Epoch 189/10000
2018-11-27 09:13:18,409:INFO: - Train metrics: accuracy: 0.320 ; loss: 889.532
2018-11-27 09:13:50,214:INFO: - Eval metrics: accuracy: 0.315 ; loss: 819.428
2018-11-27 09:13:50,808:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-189
2018-11-27 09:13:50,809:INFO: Epoch 190/10000
2018-11-27 09:14:50,885:INFO: Creating the datasets...
2018-11-27 09:14:56,571:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 09:14:56,913:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 09:14:56,960:INFO: - done.
2018-11-27 09:14:56,960:INFO: Creating the model...
2018-11-27 09:14:57,150:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 09:14:59,645:INFO: - done.
2018-11-27 09:14:59,645:INFO: Starting training for 10000 epoch(s)
2018-11-27 09:15:01,011:INFO: Epoch 1/10000
2018-11-27 09:15:29,891:INFO: Creating the datasets...
2018-11-27 09:15:31,636:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 09:15:31,948:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 09:15:31,994:INFO: - done.
2018-11-27 09:15:31,995:INFO: Creating the model...
2018-11-27 09:15:32,084:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 09:15:34,520:INFO: - done.
2018-11-27 09:15:34,520:INFO: Starting training for 10000 epoch(s)
2018-11-27 09:15:34,704:INFO: Restoring parameters from experiments/best_weights
2018-11-27 09:15:34,738:INFO: Restoring parameters from experiments/best_weights/after-epoch-189
2018-11-27 09:17:23,000:INFO: Creating the datasets...
2018-11-27 09:17:24,766:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 09:17:25,079:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 09:17:25,126:INFO: - done.
2018-11-27 09:17:25,126:INFO: Creating the model...
2018-11-27 09:17:25,215:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 09:17:27,682:INFO: - done.
2018-11-27 09:17:27,683:INFO: Starting training for 10000 epoch(s)
2018-11-27 09:17:27,874:INFO: Restoring parameters from experiments/best_weights
2018-11-27 09:17:27,876:INFO: Restoring parameters from experiments/best_weights/after-epoch-189
2018-11-27 09:18:17,064:INFO: Creating the datasets...
2018-11-27 09:18:18,783:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 09:18:19,093:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 09:18:19,139:INFO: - done.
2018-11-27 09:18:19,139:INFO: Creating the model...
2018-11-27 09:18:19,227:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 09:18:21,676:INFO: - done.
2018-11-27 09:18:21,676:INFO: Starting training for 10000 epoch(s)
2018-11-27 09:18:21,863:INFO: Restoring parameters from experiments/best_weights
2018-11-27 09:18:21,865:INFO: Restoring parameters from experiments/best_weights/after-epoch-189
2018-11-27 09:18:41,763:INFO: Creating the datasets...
2018-11-27 09:18:43,514:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 09:18:43,826:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 09:18:43,870:INFO: - done.
2018-11-27 09:18:43,870:INFO: Creating the model...
2018-11-27 09:18:43,959:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 09:18:46,404:INFO: - done.
2018-11-27 09:18:46,404:INFO: Starting training for 10000 epoch(s)
2018-11-27 09:18:46,588:INFO: Restoring parameters from experiments/last_weights
2018-11-27 09:18:46,598:INFO: Restoring parameters from experiments/last_weights/after-epoch-189
2018-11-27 09:21:24,965:INFO: Creating the datasets...
2018-11-27 09:21:26,674:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 09:21:26,987:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 09:21:27,032:INFO: - done.
2018-11-27 09:21:27,032:INFO: Creating the model...
2018-11-27 09:21:27,121:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 09:21:29,598:INFO: - done.
2018-11-27 09:21:29,598:INFO: Starting training for 10000 epoch(s)
2018-11-27 09:21:30,807:INFO: Epoch 1/10000
2018-11-27 09:22:53,449:INFO: Creating the datasets...
2018-11-27 09:22:55,439:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:24: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 09:22:55,753:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 09:22:55,797:INFO: - done.
2018-11-27 09:22:55,797:INFO: Creating the model...
2018-11-27 09:22:55,886:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 09:22:58,312:INFO: - done.
2018-11-27 09:22:58,312:INFO: Starting training for 10000 epoch(s)
2018-11-27 09:22:59,530:INFO: Epoch 1/10000
2018-11-27 09:26:17,121:INFO: - Train metrics: accuracy: 0.247 ; loss: 1314.076
2018-11-27 09:26:48,919:INFO: - Eval metrics: accuracy: 0.297 ; loss: 1184.042
2018-11-27 09:26:49,917:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 09:26:49,917:INFO: Epoch 2/10000
2018-11-27 09:30:15,788:INFO: - Train metrics: accuracy: 0.356 ; loss: 981.850
2018-11-27 09:30:49,970:INFO: - Eval metrics: accuracy: 0.379 ; loss: 668.210
2018-11-27 09:30:51,096:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 09:30:51,097:INFO: Epoch 3/10000
2018-11-27 09:34:13,333:INFO: - Train metrics: accuracy: 0.396 ; loss: 629.494
2018-11-27 09:34:46,382:INFO: - Eval metrics: accuracy: 0.392 ; loss: 526.115
2018-11-27 09:34:47,065:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-27 09:34:47,065:INFO: Epoch 4/10000
2018-11-27 09:38:07,206:INFO: - Train metrics: accuracy: 0.399 ; loss: 562.937
2018-11-27 09:38:40,335:INFO: - Eval metrics: accuracy: 0.391 ; loss: 507.094
2018-11-27 09:38:40,762:INFO: Epoch 5/10000
2018-11-27 09:42:10,668:INFO: - Train metrics: accuracy: 0.399 ; loss: 551.850
2018-11-27 09:42:43,618:INFO: - Eval metrics: accuracy: 0.391 ; loss: 503.925
2018-11-27 09:42:44,009:INFO: Epoch 6/10000
2018-11-27 09:46:07,439:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.838
2018-11-27 09:46:39,074:INFO: - Eval metrics: accuracy: 0.391 ; loss: 503.758
2018-11-27 09:46:39,429:INFO: Epoch 7/10000
2018-11-27 09:50:01,415:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.594
2018-11-27 09:50:32,713:INFO: - Eval metrics: accuracy: 0.391 ; loss: 503.940
2018-11-27 09:50:33,080:INFO: Epoch 8/10000
2018-11-27 09:53:54,263:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.596
2018-11-27 09:54:25,256:INFO: - Eval metrics: accuracy: 0.391 ; loss: 503.995
2018-11-27 09:54:25,582:INFO: Epoch 9/10000
2018-11-27 09:57:43,801:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.617
2018-11-27 09:58:14,545:INFO: - Eval metrics: accuracy: 0.391 ; loss: 504.021
2018-11-27 09:58:14,888:INFO: Epoch 10/10000
2018-11-27 10:01:30,866:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.633
2018-11-27 10:02:01,745:INFO: - Eval metrics: accuracy: 0.391 ; loss: 504.018
2018-11-27 10:02:02,118:INFO: Epoch 11/10000
2018-11-27 10:05:18,727:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.651
2018-11-27 10:05:49,002:INFO: - Eval metrics: accuracy: 0.391 ; loss: 504.065
2018-11-27 10:05:49,347:INFO: Epoch 12/10000
2018-11-27 10:09:09,840:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.650
2018-11-27 10:09:40,214:INFO: - Eval metrics: accuracy: 0.391 ; loss: 504.049
2018-11-27 10:09:40,570:INFO: Epoch 13/10000
2018-11-27 10:12:57,486:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.608
2018-11-27 10:13:27,906:INFO: - Eval metrics: accuracy: 0.391 ; loss: 504.072
2018-11-27 10:13:28,284:INFO: Epoch 14/10000
2018-11-27 10:16:37,705:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.543
2018-11-27 10:17:07,915:INFO: - Eval metrics: accuracy: 0.391 ; loss: 504.122
2018-11-27 10:17:08,267:INFO: Epoch 15/10000
2018-11-27 10:20:21,950:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.469
2018-11-27 10:20:50,526:INFO: - Eval metrics: accuracy: 0.391 ; loss: 504.080
2018-11-27 10:20:50,884:INFO: Epoch 16/10000
2018-11-27 10:24:03,455:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.440
2018-11-27 10:24:34,039:INFO: - Eval metrics: accuracy: 0.391 ; loss: 504.092
2018-11-27 10:24:34,421:INFO: Epoch 17/10000
2018-11-27 10:27:54,640:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.428
2018-11-27 10:28:25,647:INFO: - Eval metrics: accuracy: 0.391 ; loss: 504.099
2018-11-27 10:28:26,002:INFO: Epoch 18/10000
2018-11-27 10:31:42,244:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.417
2018-11-27 10:32:12,808:INFO: - Eval metrics: accuracy: 0.391 ; loss: 504.096
2018-11-27 10:32:13,160:INFO: Epoch 19/10000
2018-11-27 10:35:30,603:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.318
2018-11-27 10:36:01,265:INFO: - Eval metrics: accuracy: 0.391 ; loss: 504.006
2018-11-27 10:36:01,624:INFO: Epoch 20/10000
2018-11-27 10:39:21,129:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.219
2018-11-27 10:39:50,654:INFO: - Eval metrics: accuracy: 0.391 ; loss: 503.958
2018-11-27 10:39:51,002:INFO: Epoch 21/10000
2018-11-27 10:43:15,008:INFO: - Train metrics: accuracy: 0.398 ; loss: 549.063
2018-11-27 10:43:46,604:INFO: - Eval metrics: accuracy: 0.391 ; loss: 503.698
2018-11-27 10:43:46,913:INFO: Epoch 22/10000
2018-11-27 10:47:00,142:INFO: - Train metrics: accuracy: 0.398 ; loss: 548.864
2018-11-27 10:47:30,568:INFO: - Eval metrics: accuracy: 0.391 ; loss: 503.473
2018-11-27 10:47:31,135:INFO: Epoch 23/10000
2018-11-27 10:50:44,821:INFO: - Train metrics: accuracy: 0.399 ; loss: 548.577
2018-11-27 10:51:14,571:INFO: - Eval metrics: accuracy: 0.391 ; loss: 503.277
2018-11-27 10:51:15,026:INFO: Epoch 24/10000
2018-11-27 10:54:33,543:INFO: - Train metrics: accuracy: 0.399 ; loss: 548.303
2018-11-27 10:55:04,207:INFO: - Eval metrics: accuracy: 0.391 ; loss: 503.021
2018-11-27 10:55:04,601:INFO: Epoch 25/10000
2018-11-27 10:58:28,401:INFO: - Train metrics: accuracy: 0.399 ; loss: 548.112
2018-11-27 10:58:59,617:INFO: - Eval metrics: accuracy: 0.391 ; loss: 502.850
2018-11-27 10:58:59,976:INFO: Epoch 26/10000
2018-11-27 11:02:28,235:INFO: - Train metrics: accuracy: 0.399 ; loss: 547.899
2018-11-27 11:02:59,226:INFO: - Eval metrics: accuracy: 0.391 ; loss: 502.484
2018-11-27 11:02:59,574:INFO: Epoch 27/10000
2018-11-27 11:06:18,639:INFO: - Train metrics: accuracy: 0.399 ; loss: 547.716
2018-11-27 11:06:49,490:INFO: - Eval metrics: accuracy: 0.391 ; loss: 502.208
2018-11-27 11:06:49,835:INFO: Epoch 28/10000
2018-11-27 11:10:03,269:INFO: - Train metrics: accuracy: 0.399 ; loss: 547.636
2018-11-27 11:10:32,189:INFO: - Eval metrics: accuracy: 0.391 ; loss: 502.056
2018-11-27 11:10:33,403:INFO: Epoch 29/10000
2018-11-27 11:17:04,996:INFO: Creating the datasets...
2018-11-27 11:17:10,518:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 11:17:10,859:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 11:17:10,917:INFO: - done.
2018-11-27 11:17:10,917:INFO: Creating the model...
2018-11-27 11:17:11,105:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:252: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 11:17:13,525:INFO: - done.
2018-11-27 11:17:13,525:INFO: Starting training for 10000 epoch(s)
2018-11-27 11:17:14,854:INFO: Epoch 1/10000
2018-11-27 11:19:12,160:INFO: Creating the datasets...
2018-11-27 11:19:13,940:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 11:19:14,256:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 11:19:14,301:INFO: - done.
2018-11-27 11:19:14,302:INFO: Creating the model...
2018-11-27 11:19:14,392:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:275: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 11:19:16,772:INFO: - done.
2018-11-27 11:19:16,772:INFO: Starting training for 10000 epoch(s)
2018-11-27 11:19:17,890:INFO: Epoch 1/10000
2018-11-27 11:20:32,943:INFO: Creating the datasets...
2018-11-27 11:20:40,859:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 11:20:41,184:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 11:20:41,231:INFO: - done.
2018-11-27 11:20:41,231:INFO: Creating the model...
2018-11-27 11:20:41,598:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:275: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 11:20:44,033:INFO: - done.
2018-11-27 11:20:44,033:INFO: Starting training for 10000 epoch(s)
2018-11-27 11:20:45,156:INFO: Epoch 1/10000
2018-11-27 11:21:22,507:INFO: - Train metrics: accuracy: 0.072 ; loss: 477323.469
2018-11-27 11:21:28,442:INFO: - Eval metrics: accuracy: 0.212 ; loss: 288118.469
2018-11-27 11:23:54,500:INFO: Creating the datasets...
2018-11-27 11:23:59,532:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 11:23:59,854:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 11:23:59,901:INFO: - done.
2018-11-27 11:23:59,901:INFO: Creating the model...
2018-11-27 11:24:00,037:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:275: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 11:24:02,386:INFO: - done.
2018-11-27 11:24:02,387:INFO: Starting training for 10000 epoch(s)
2018-11-27 11:24:03,481:INFO: Epoch 1/10000
2018-11-27 11:24:41,405:INFO: - Train metrics: accuracy: 0.072 ; loss: 477323.469
2018-11-27 11:24:47,082:INFO: - Eval metrics: accuracy: 0.212 ; loss: 288118.469
2018-11-27 11:27:02,148:INFO: Creating the datasets...
2018-11-27 11:27:03,994:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 11:27:04,314:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 11:27:04,361:INFO: - done.
2018-11-27 11:27:04,361:INFO: Creating the model...
2018-11-27 11:27:04,451:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:275: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 11:27:06,801:INFO: - done.
2018-11-27 11:27:06,801:INFO: Starting training for 10000 epoch(s)
2018-11-27 11:27:07,876:INFO: Epoch 1/10000
2018-11-27 11:27:45,518:INFO: - Train metrics: accuracy: 0.080 ; loss: 456070.094
2018-11-27 11:27:50,733:INFO: - Eval metrics: accuracy: 0.120 ; loss: 710079.375
2018-11-27 11:27:51,806:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 11:27:51,834:INFO: Epoch 2/10000
2018-11-27 11:28:27,837:INFO: - Train metrics: accuracy: 0.220 ; loss: 448564.562
2018-11-27 11:28:34,912:INFO: - Eval metrics: accuracy: 0.430 ; loss: 693443.875
2018-11-27 11:28:35,989:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 11:28:36,016:INFO: Epoch 3/10000
2018-11-27 11:29:11,529:INFO: - Train metrics: accuracy: 0.330 ; loss: 433548.531
2018-11-27 11:29:20,446:INFO: - Eval metrics: accuracy: 0.425 ; loss: 657186.125
2018-11-27 11:29:22,208:INFO: Epoch 4/10000
2018-11-27 11:29:59,965:INFO: - Train metrics: accuracy: 0.347 ; loss: 390108.250
2018-11-27 11:30:06,209:INFO: - Eval metrics: accuracy: 0.488 ; loss: 573869.812
2018-11-27 11:30:07,263:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-27 11:30:07,264:INFO: Epoch 5/10000
2018-11-27 11:30:44,243:INFO: - Train metrics: accuracy: 0.305 ; loss: 332617.031
2018-11-27 11:30:49,996:INFO: - Eval metrics: accuracy: 0.529 ; loss: 478464.062
2018-11-27 11:30:50,873:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-27 11:30:50,881:INFO: Epoch 6/10000
2018-11-27 11:31:27,097:INFO: - Train metrics: accuracy: 0.321 ; loss: 272953.531
2018-11-27 11:31:33,163:INFO: - Eval metrics: accuracy: 0.575 ; loss: 386832.438
2018-11-27 11:31:34,018:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-27 11:31:34,019:INFO: Epoch 7/10000
2018-11-27 11:32:09,322:INFO: - Train metrics: accuracy: 0.353 ; loss: 223109.469
2018-11-27 11:32:15,348:INFO: - Eval metrics: accuracy: 0.619 ; loss: 300666.625
2018-11-27 11:32:16,243:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-27 11:32:16,244:INFO: Epoch 8/10000
2018-11-27 11:32:53,223:INFO: - Train metrics: accuracy: 0.369 ; loss: 187930.625
2018-11-27 11:32:59,187:INFO: - Eval metrics: accuracy: 0.611 ; loss: 249897.406
2018-11-27 11:32:59,731:INFO: Epoch 9/10000
2018-11-27 11:33:34,620:INFO: - Train metrics: accuracy: 0.373 ; loss: 220925.859
2018-11-27 11:33:39,488:INFO: - Eval metrics: accuracy: 0.509 ; loss: 357492.969
2018-11-27 11:33:40,006:INFO: Epoch 10/10000
2018-11-27 11:34:14,280:INFO: - Train metrics: accuracy: 0.405 ; loss: 197407.828
2018-11-27 11:34:19,480:INFO: - Eval metrics: accuracy: 0.655 ; loss: 220596.250
2018-11-27 11:34:20,317:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-27 11:34:20,318:INFO: Epoch 11/10000
2018-11-27 11:34:56,079:INFO: - Train metrics: accuracy: 0.417 ; loss: 145080.609
2018-11-27 11:35:02,262:INFO: - Eval metrics: accuracy: 0.708 ; loss: 167853.297
2018-11-27 11:35:03,123:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-27 11:35:03,124:INFO: Epoch 12/10000
2018-11-27 11:35:39,146:INFO: - Train metrics: accuracy: 0.477 ; loss: 109712.656
2018-11-27 11:35:44,582:INFO: - Eval metrics: accuracy: 0.737 ; loss: 135338.031
2018-11-27 11:35:45,455:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-27 11:35:45,456:INFO: Epoch 13/10000
2018-11-27 11:36:18,463:INFO: - Train metrics: accuracy: 0.490 ; loss: 85574.711
2018-11-27 11:36:23,382:INFO: - Eval metrics: accuracy: 0.745 ; loss: 94958.586
2018-11-27 11:36:24,129:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-27 11:36:24,130:INFO: Epoch 14/10000
2018-11-27 11:36:58,188:INFO: - Train metrics: accuracy: 0.464 ; loss: 105324.750
2018-11-27 11:37:03,638:INFO: - Eval metrics: accuracy: 0.622 ; loss: 249620.844
2018-11-27 11:37:04,245:INFO: Epoch 15/10000
2018-11-27 11:37:40,681:INFO: - Train metrics: accuracy: 0.494 ; loss: 128755.234
2018-11-27 11:37:46,558:INFO: - Eval metrics: accuracy: 0.730 ; loss: 117143.273
2018-11-27 11:37:47,183:INFO: Epoch 16/10000
2018-11-27 11:38:22,816:INFO: - Train metrics: accuracy: 0.520 ; loss: 73997.281
2018-11-27 11:38:28,622:INFO: - Eval metrics: accuracy: 0.771 ; loss: 54155.148
2018-11-27 11:38:29,489:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-27 11:38:29,490:INFO: Epoch 17/10000
2018-11-27 11:39:07,228:INFO: - Train metrics: accuracy: 0.576 ; loss: 43177.242
2018-11-27 11:39:13,106:INFO: - Eval metrics: accuracy: 0.798 ; loss: 33423.055
2018-11-27 11:39:13,960:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-27 11:39:13,961:INFO: Epoch 18/10000
2018-11-27 11:39:49,253:INFO: - Train metrics: accuracy: 0.312 ; loss: 193677.891
2018-11-27 11:39:54,188:INFO: - Eval metrics: accuracy: 0.560 ; loss: 253211.344
2018-11-27 11:39:54,699:INFO: Epoch 19/10000
2018-11-27 11:40:31,032:INFO: - Train metrics: accuracy: 0.366 ; loss: 194756.344
2018-11-27 11:40:36,165:INFO: - Eval metrics: accuracy: 0.498 ; loss: 244378.547
2018-11-27 11:40:36,678:INFO: Epoch 20/10000
2018-11-27 11:41:12,667:INFO: - Train metrics: accuracy: 0.401 ; loss: 174856.406
2018-11-27 11:41:17,633:INFO: - Eval metrics: accuracy: 0.705 ; loss: 138447.844
2018-11-27 11:41:18,142:INFO: Epoch 21/10000
2018-11-27 11:41:53,712:INFO: - Train metrics: accuracy: 0.421 ; loss: 137864.672
2018-11-27 11:41:58,766:INFO: - Eval metrics: accuracy: 0.710 ; loss: 119416.047
2018-11-27 11:41:59,262:INFO: Epoch 22/10000
2018-11-27 11:42:34,859:INFO: - Train metrics: accuracy: 0.440 ; loss: 127838.711
2018-11-27 11:42:39,835:INFO: - Eval metrics: accuracy: 0.751 ; loss: 92267.914
2018-11-27 11:42:40,340:INFO: Epoch 23/10000
2018-11-27 11:43:17,970:INFO: - Train metrics: accuracy: 0.469 ; loss: 115483.430
2018-11-27 11:43:23,009:INFO: - Eval metrics: accuracy: 0.762 ; loss: 79502.109
2018-11-27 11:43:23,537:INFO: Epoch 24/10000
2018-11-27 11:43:58,021:INFO: - Train metrics: accuracy: 0.476 ; loss: 110188.383
2018-11-27 11:44:03,127:INFO: - Eval metrics: accuracy: 0.798 ; loss: 56951.074
2018-11-27 11:44:03,640:INFO: Epoch 25/10000
2018-11-27 11:44:38,481:INFO: - Train metrics: accuracy: 0.470 ; loss: 113870.266
2018-11-27 11:44:43,539:INFO: - Eval metrics: accuracy: 0.803 ; loss: 52821.613
2018-11-27 11:44:44,393:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-27 11:44:44,394:INFO: Epoch 26/10000
2018-11-27 11:45:24,579:INFO: - Train metrics: accuracy: 0.480 ; loss: 112068.797
2018-11-27 11:45:29,255:INFO: - Eval metrics: accuracy: 0.806 ; loss: 54073.363
2018-11-27 11:45:29,952:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-27 11:45:29,997:INFO: Epoch 27/10000
2018-11-27 11:46:05,413:INFO: - Train metrics: accuracy: 0.491 ; loss: 106648.141
2018-11-27 11:46:10,594:INFO: - Eval metrics: accuracy: 0.808 ; loss: 52421.703
2018-11-27 11:46:11,361:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-27 11:46:11,362:INFO: Epoch 28/10000
2018-11-27 11:46:46,016:INFO: - Train metrics: accuracy: 0.481 ; loss: 108535.938
2018-11-27 11:46:50,128:INFO: - Eval metrics: accuracy: 0.792 ; loss: 60622.305
2018-11-27 11:46:50,649:INFO: Epoch 29/10000
2018-11-27 11:47:24,975:INFO: - Train metrics: accuracy: 0.501 ; loss: 85090.086
2018-11-27 11:47:29,882:INFO: - Eval metrics: accuracy: 0.780 ; loss: 60348.312
2018-11-27 11:47:30,380:INFO: Epoch 30/10000
2018-11-27 11:48:04,337:INFO: - Train metrics: accuracy: 0.519 ; loss: 78415.648
2018-11-27 11:48:09,215:INFO: - Eval metrics: accuracy: 0.805 ; loss: 47590.219
2018-11-27 11:48:09,699:INFO: Epoch 31/10000
2018-11-27 11:48:43,743:INFO: - Train metrics: accuracy: 0.508 ; loss: 87180.312
2018-11-27 11:48:48,748:INFO: - Eval metrics: accuracy: 0.794 ; loss: 58080.699
2018-11-27 11:48:49,248:INFO: Epoch 32/10000
2018-11-27 11:49:23,827:INFO: - Train metrics: accuracy: 0.496 ; loss: 92525.664
2018-11-27 11:49:28,358:INFO: - Eval metrics: accuracy: 0.717 ; loss: 117664.484
2018-11-27 11:49:28,754:INFO: Epoch 33/10000
2018-11-27 11:50:03,372:INFO: - Train metrics: accuracy: 0.473 ; loss: 122386.914
2018-11-27 11:50:08,903:INFO: - Eval metrics: accuracy: 0.785 ; loss: 73904.977
2018-11-27 11:50:09,455:INFO: Epoch 34/10000
2018-11-27 11:50:48,650:INFO: - Train metrics: accuracy: 0.568 ; loss: 78082.289
2018-11-27 11:50:54,154:INFO: - Eval metrics: accuracy: 0.705 ; loss: 155748.156
2018-11-27 11:50:54,749:INFO: Epoch 35/10000
2018-11-27 11:51:29,009:INFO: - Train metrics: accuracy: 0.556 ; loss: 106583.133
2018-11-27 11:51:34,716:INFO: - Eval metrics: accuracy: 0.749 ; loss: 106262.727
2018-11-27 11:51:35,321:INFO: Epoch 36/10000
2018-11-27 11:52:13,699:INFO: - Train metrics: accuracy: 0.549 ; loss: 67922.844
2018-11-27 11:52:19,591:INFO: - Eval metrics: accuracy: 0.745 ; loss: 98062.273
2018-11-27 11:52:20,170:INFO: Epoch 37/10000
2018-11-27 11:52:57,062:INFO: - Train metrics: accuracy: 0.531 ; loss: 80564.703
2018-11-27 11:53:02,270:INFO: - Eval metrics: accuracy: 0.776 ; loss: 24479.969
2018-11-27 11:53:02,796:INFO: Epoch 38/10000
2018-11-27 11:53:39,312:INFO: - Train metrics: accuracy: 0.641 ; loss: 24362.908
2018-11-27 11:53:44,396:INFO: - Eval metrics: accuracy: 0.901 ; loss: 8955.094
2018-11-27 11:53:45,231:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-38
2018-11-27 11:53:45,232:INFO: Epoch 39/10000
2018-11-27 11:54:21,902:INFO: - Train metrics: accuracy: 0.676 ; loss: 25051.260
2018-11-27 11:54:26,999:INFO: - Eval metrics: accuracy: 0.874 ; loss: 21387.859
2018-11-27 11:54:27,502:INFO: Epoch 40/10000
2018-11-27 11:55:03,093:INFO: - Train metrics: accuracy: 0.620 ; loss: 46218.461
2018-11-27 11:55:07,679:INFO: - Eval metrics: accuracy: 0.750 ; loss: 95657.188
2018-11-27 11:55:08,127:INFO: Epoch 41/10000
2018-11-27 11:55:44,504:INFO: - Train metrics: accuracy: 0.489 ; loss: 111286.961
2018-11-27 11:55:50,038:INFO: - Eval metrics: accuracy: 0.725 ; loss: 98406.195
2018-11-27 11:55:50,593:INFO: Epoch 42/10000
2018-11-27 11:56:26,684:INFO: - Train metrics: accuracy: 0.528 ; loss: 79379.000
2018-11-27 11:56:32,057:INFO: - Eval metrics: accuracy: 0.796 ; loss: 75388.891
2018-11-27 11:56:32,583:INFO: Epoch 43/10000
2018-11-27 11:57:15,646:INFO: - Train metrics: accuracy: 0.575 ; loss: 73644.156
2018-11-27 11:57:21,590:INFO: - Eval metrics: accuracy: 0.828 ; loss: 42222.371
2018-11-27 11:57:22,097:INFO: Epoch 44/10000
2018-11-27 11:57:57,666:INFO: - Train metrics: accuracy: 0.613 ; loss: 63108.855
2018-11-27 11:58:03,761:INFO: - Eval metrics: accuracy: 0.868 ; loss: 13961.580
2018-11-27 11:58:04,346:INFO: Epoch 45/10000
2018-11-27 11:58:40,138:INFO: - Train metrics: accuracy: 0.596 ; loss: 23527.646
2018-11-27 11:58:46,006:INFO: - Eval metrics: accuracy: 0.916 ; loss: 7247.494
2018-11-27 11:58:46,846:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-45
2018-11-27 11:58:46,847:INFO: Epoch 46/10000
2018-11-27 11:59:22,262:INFO: - Train metrics: accuracy: 0.638 ; loss: 28973.018
2018-11-27 11:59:27,641:INFO: - Eval metrics: accuracy: 0.891 ; loss: 11645.212
2018-11-27 11:59:28,204:INFO: Epoch 47/10000
2018-11-27 12:00:02,553:INFO: - Train metrics: accuracy: 0.639 ; loss: 18180.863
2018-11-27 12:00:07,633:INFO: - Eval metrics: accuracy: 0.754 ; loss: 65442.207
2018-11-27 12:00:08,150:INFO: Epoch 48/10000
2018-11-27 12:00:42,720:INFO: - Train metrics: accuracy: 0.458 ; loss: 121135.289
2018-11-27 12:00:47,642:INFO: - Eval metrics: accuracy: 0.673 ; loss: 170607.391
2018-11-27 12:00:48,122:INFO: Epoch 49/10000
2018-11-27 12:01:23,129:INFO: - Train metrics: accuracy: 0.467 ; loss: 110767.594
2018-11-27 12:01:28,135:INFO: - Eval metrics: accuracy: 0.764 ; loss: 80938.891
2018-11-27 12:01:28,635:INFO: Epoch 50/10000
2018-11-27 12:02:02,780:INFO: - Train metrics: accuracy: 0.558 ; loss: 58332.145
2018-11-27 12:02:07,783:INFO: - Eval metrics: accuracy: 0.873 ; loss: 12199.292
2018-11-27 12:02:08,310:INFO: Epoch 51/10000
2018-11-27 12:02:44,988:INFO: - Train metrics: accuracy: 0.600 ; loss: 61959.262
2018-11-27 12:02:49,319:INFO: - Eval metrics: accuracy: 0.862 ; loss: 16741.316
2018-11-27 12:02:49,805:INFO: Epoch 52/10000
2018-11-27 12:03:27,422:INFO: - Train metrics: accuracy: 0.637 ; loss: 59561.441
2018-11-27 12:03:32,398:INFO: - Eval metrics: accuracy: 0.898 ; loss: 8873.084
2018-11-27 12:03:32,921:INFO: Epoch 53/10000
2018-11-27 12:04:23,102:INFO: - Train metrics: accuracy: 0.628 ; loss: 38217.250
2018-11-27 12:04:28,715:INFO: - Eval metrics: accuracy: 0.872 ; loss: 13773.472
2018-11-27 12:04:29,416:INFO: Epoch 54/10000
2018-11-27 12:05:07,048:INFO: - Train metrics: accuracy: 0.609 ; loss: 35963.875
2018-11-27 12:05:12,063:INFO: - Eval metrics: accuracy: 0.882 ; loss: 8654.076
2018-11-27 12:05:12,552:INFO: Epoch 55/10000
2018-11-27 12:05:44,755:INFO: - Train metrics: accuracy: 0.552 ; loss: 86836.227
2018-11-27 12:05:49,006:INFO: - Eval metrics: accuracy: 0.817 ; loss: 25358.641
2018-11-27 12:05:49,470:INFO: Epoch 56/10000
2018-11-27 12:06:26,677:INFO: - Train metrics: accuracy: 0.555 ; loss: 64106.023
2018-11-27 12:06:31,614:INFO: - Eval metrics: accuracy: 0.737 ; loss: 37351.555
2018-11-27 12:06:32,158:INFO: Epoch 57/10000
2018-11-27 12:07:03,270:INFO: - Train metrics: accuracy: 0.388 ; loss: 142010.734
2018-11-27 12:07:08,477:INFO: - Eval metrics: accuracy: 0.522 ; loss: 202922.031
2018-11-27 12:07:08,984:INFO: Epoch 58/10000
2018-11-27 12:08:00,460:INFO: - Train metrics: accuracy: 0.468 ; loss: 37334.078
2018-11-27 12:08:06,337:INFO: - Eval metrics: accuracy: 0.586 ; loss: 61441.938
2018-11-27 12:08:06,875:INFO: Epoch 59/10000
2018-11-27 12:08:43,512:INFO: - Train metrics: accuracy: 0.406 ; loss: 152939.000
2018-11-27 12:08:48,485:INFO: - Eval metrics: accuracy: 0.523 ; loss: 306242.625
2018-11-27 12:08:48,944:INFO: Epoch 60/10000
2018-11-27 12:09:22,878:INFO: - Train metrics: accuracy: 0.473 ; loss: 168270.984
2018-11-27 12:09:28,032:INFO: - Eval metrics: accuracy: 0.577 ; loss: 234914.656
2018-11-27 12:09:28,561:INFO: Epoch 61/10000
2018-11-27 12:10:08,261:INFO: - Train metrics: accuracy: 0.458 ; loss: 146193.812
2018-11-27 12:10:13,385:INFO: - Eval metrics: accuracy: 0.765 ; loss: 57131.562
2018-11-27 12:10:13,924:INFO: Epoch 62/10000
2018-11-27 12:10:47,392:INFO: - Train metrics: accuracy: 0.603 ; loss: 48500.305
2018-11-27 12:10:58,050:INFO: - Eval metrics: accuracy: 0.803 ; loss: 61404.418
2018-11-27 12:10:58,529:INFO: Epoch 63/10000
2018-11-27 12:11:33,816:INFO: - Train metrics: accuracy: 0.605 ; loss: 57226.043
2018-11-27 12:11:38,738:INFO: - Eval metrics: accuracy: 0.822 ; loss: 7976.062
2018-11-27 12:11:39,189:INFO: Epoch 64/10000
2018-11-27 12:12:12,829:INFO: - Train metrics: accuracy: 0.605 ; loss: 39509.184
2018-11-27 12:12:17,700:INFO: - Eval metrics: accuracy: 0.860 ; loss: 7871.416
2018-11-27 12:12:18,158:INFO: Epoch 65/10000
2018-11-27 12:12:52,771:INFO: - Train metrics: accuracy: 0.546 ; loss: 62147.719
2018-11-27 12:12:57,704:INFO: - Eval metrics: accuracy: 0.741 ; loss: 101401.750
2018-11-27 12:12:58,200:INFO: Epoch 66/10000
2018-11-27 12:13:32,778:INFO: - Train metrics: accuracy: 0.550 ; loss: 55632.715
2018-11-27 12:13:37,680:INFO: - Eval metrics: accuracy: 0.774 ; loss: 27350.510
2018-11-27 12:13:38,172:INFO: Epoch 67/10000
2018-11-27 12:14:12,760:INFO: - Train metrics: accuracy: 0.625 ; loss: 32535.352
2018-11-27 12:14:17,670:INFO: - Eval metrics: accuracy: 0.885 ; loss: 8142.573
2018-11-27 12:14:18,159:INFO: Epoch 68/10000
2018-11-27 12:14:52,567:INFO: - Train metrics: accuracy: 0.582 ; loss: 28309.619
2018-11-27 12:14:57,475:INFO: - Eval metrics: accuracy: 0.814 ; loss: 25960.736
2018-11-27 12:14:57,972:INFO: Epoch 69/10000
2018-11-27 12:15:32,523:INFO: - Train metrics: accuracy: 0.654 ; loss: 20541.533
2018-11-27 12:15:37,670:INFO: - Eval metrics: accuracy: 0.660 ; loss: 153278.156
2018-11-27 12:15:38,183:INFO: Epoch 70/10000
2018-11-27 12:16:12,753:INFO: - Train metrics: accuracy: 0.591 ; loss: 48439.484
2018-11-27 12:16:17,697:INFO: - Eval metrics: accuracy: 0.891 ; loss: 11041.706
2018-11-27 12:16:18,191:INFO: Epoch 71/10000
2018-11-27 12:16:52,753:INFO: - Train metrics: accuracy: 0.662 ; loss: 9544.999
2018-11-27 12:16:57,724:INFO: - Eval metrics: accuracy: 0.872 ; loss: 17346.203
2018-11-27 12:16:58,224:INFO: Epoch 72/10000
2018-11-27 12:17:32,728:INFO: - Train metrics: accuracy: 0.717 ; loss: 13576.357
2018-11-27 12:17:37,580:INFO: - Eval metrics: accuracy: 0.890 ; loss: 10691.482
2018-11-27 12:17:38,056:INFO: Epoch 73/10000
2018-11-27 12:18:12,688:INFO: - Train metrics: accuracy: 0.651 ; loss: 16612.178
2018-11-27 12:18:17,615:INFO: - Eval metrics: accuracy: 0.858 ; loss: 7215.595
2018-11-27 12:18:18,111:INFO: Epoch 74/10000
2018-11-27 12:18:52,457:INFO: - Train metrics: accuracy: 0.620 ; loss: 15396.278
2018-11-27 12:18:57,410:INFO: - Eval metrics: accuracy: 0.891 ; loss: 13197.317
2018-11-27 12:18:57,906:INFO: Epoch 75/10000
2018-11-27 12:19:32,123:INFO: - Train metrics: accuracy: 0.694 ; loss: 8898.479
2018-11-27 12:19:37,052:INFO: - Eval metrics: accuracy: 0.887 ; loss: 7141.914
2018-11-27 12:19:37,733:INFO: Epoch 76/10000
2018-11-27 12:20:12,334:INFO: - Train metrics: accuracy: 0.722 ; loss: 14243.432
2018-11-27 12:20:17,258:INFO: - Eval metrics: accuracy: 0.881 ; loss: 12095.955
2018-11-27 12:20:17,758:INFO: Epoch 77/10000
2018-11-27 12:20:52,632:INFO: - Train metrics: accuracy: 0.689 ; loss: 7599.906
2018-11-27 12:20:57,468:INFO: - Eval metrics: accuracy: 0.896 ; loss: 8390.987
2018-11-27 12:20:57,954:INFO: Epoch 78/10000
2018-11-27 12:21:32,780:INFO: - Train metrics: accuracy: 0.680 ; loss: 14337.665
2018-11-27 12:21:38,113:INFO: - Eval metrics: accuracy: 0.884 ; loss: 18436.975
2018-11-27 12:21:38,645:INFO: Epoch 79/10000
2018-11-27 12:22:14,130:INFO: - Train metrics: accuracy: 0.697 ; loss: 10297.833
2018-11-27 12:22:19,523:INFO: - Eval metrics: accuracy: 0.854 ; loss: 20168.996
2018-11-27 12:22:20,050:INFO: Epoch 80/10000
2018-11-27 12:22:56,135:INFO: - Train metrics: accuracy: 0.582 ; loss: 73257.516
2018-11-27 12:23:01,724:INFO: - Eval metrics: accuracy: 0.686 ; loss: 176638.703
2018-11-27 12:23:02,300:INFO: Epoch 81/10000
2018-11-27 12:23:38,301:INFO: - Train metrics: accuracy: 0.433 ; loss: 174428.078
2018-11-27 12:23:43,947:INFO: - Eval metrics: accuracy: 0.669 ; loss: 177057.891
2018-11-27 12:23:44,519:INFO: Epoch 82/10000
2018-11-27 12:24:20,740:INFO: - Train metrics: accuracy: 0.557 ; loss: 68495.742
2018-11-27 12:24:25,871:INFO: - Eval metrics: accuracy: 0.870 ; loss: 19202.252
2018-11-27 12:24:26,382:INFO: Epoch 83/10000
2018-11-27 12:25:01,613:INFO: - Train metrics: accuracy: 0.477 ; loss: 103750.039
2018-11-27 12:25:06,631:INFO: - Eval metrics: accuracy: 0.679 ; loss: 193526.266
2018-11-27 12:25:07,126:INFO: Epoch 84/10000
2018-11-27 12:25:42,087:INFO: - Train metrics: accuracy: 0.557 ; loss: 74489.859
2018-11-27 12:25:47,062:INFO: - Eval metrics: accuracy: 0.850 ; loss: 25945.910
2018-11-27 12:25:47,567:INFO: Epoch 85/10000
2018-11-27 12:26:22,643:INFO: - Train metrics: accuracy: 0.632 ; loss: 31601.260
2018-11-27 12:26:27,599:INFO: - Eval metrics: accuracy: 0.923 ; loss: 5158.876
2018-11-27 12:26:28,374:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-85
2018-11-27 12:26:28,375:INFO: Epoch 86/10000
2018-11-27 12:27:02,939:INFO: - Train metrics: accuracy: 0.637 ; loss: 35800.387
2018-11-27 12:27:07,898:INFO: - Eval metrics: accuracy: 0.856 ; loss: 21861.129
2018-11-27 12:27:08,365:INFO: Epoch 87/10000
2018-11-27 12:27:43,715:INFO: - Train metrics: accuracy: 0.579 ; loss: 48263.188
2018-11-27 12:27:48,974:INFO: - Eval metrics: accuracy: 0.790 ; loss: 63906.418
2018-11-27 12:27:49,519:INFO: Epoch 88/10000
2018-11-27 12:28:25,454:INFO: - Train metrics: accuracy: 0.578 ; loss: 65189.684
2018-11-27 12:28:31,055:INFO: - Eval metrics: accuracy: 0.830 ; loss: 38363.367
2018-11-27 12:28:31,605:INFO: Epoch 89/10000
2018-11-27 12:29:07,673:INFO: - Train metrics: accuracy: 0.525 ; loss: 72137.539
2018-11-27 12:29:13,373:INFO: - Eval metrics: accuracy: 0.775 ; loss: 51657.867
2018-11-27 12:29:13,947:INFO: Epoch 90/10000
2018-11-27 12:29:49,960:INFO: - Train metrics: accuracy: 0.592 ; loss: 23553.635
2018-11-27 12:29:55,474:INFO: - Eval metrics: accuracy: 0.836 ; loss: 21146.643
2018-11-27 12:29:56,029:INFO: Epoch 91/10000
2018-11-27 12:30:32,616:INFO: - Train metrics: accuracy: 0.655 ; loss: 12711.130
2018-11-27 12:30:38,040:INFO: - Eval metrics: accuracy: 0.910 ; loss: 5536.282
2018-11-27 12:30:38,578:INFO: Epoch 92/10000
2018-11-27 12:31:14,145:INFO: - Train metrics: accuracy: 0.663 ; loss: 13047.989
2018-11-27 12:31:19,554:INFO: - Eval metrics: accuracy: 0.761 ; loss: 54947.863
2018-11-27 12:31:20,083:INFO: Epoch 93/10000
2018-11-27 12:31:55,873:INFO: - Train metrics: accuracy: 0.647 ; loss: 18110.285
2018-11-27 12:32:00,955:INFO: - Eval metrics: accuracy: 0.818 ; loss: 30957.641
2018-11-27 12:32:01,462:INFO: Epoch 94/10000
2018-11-27 12:32:36,634:INFO: - Train metrics: accuracy: 0.613 ; loss: 35266.809
2018-11-27 12:32:41,827:INFO: - Eval metrics: accuracy: 0.867 ; loss: 17088.914
2018-11-27 12:32:42,344:INFO: Epoch 95/10000
2018-11-27 12:33:17,673:INFO: - Train metrics: accuracy: 0.627 ; loss: 23067.293
2018-11-27 12:33:22,556:INFO: - Eval metrics: accuracy: 0.861 ; loss: 14278.342
2018-11-27 12:33:23,053:INFO: Epoch 96/10000
2018-11-27 12:33:57,817:INFO: - Train metrics: accuracy: 0.578 ; loss: 44899.570
2018-11-27 12:34:02,701:INFO: - Eval metrics: accuracy: 0.900 ; loss: 10334.412
2018-11-27 12:34:03,171:INFO: Epoch 97/10000
2018-11-27 12:34:36,687:INFO: - Train metrics: accuracy: 0.615 ; loss: 33782.293
2018-11-27 12:34:40,841:INFO: - Eval metrics: accuracy: 0.831 ; loss: 19572.412
2018-11-27 12:34:41,243:INFO: Epoch 98/10000
2018-11-27 12:35:14,853:INFO: - Train metrics: accuracy: 0.616 ; loss: 37297.492
2018-11-27 12:35:19,243:INFO: - Eval metrics: accuracy: 0.896 ; loss: 4939.718
2018-11-27 12:35:19,665:INFO: Epoch 99/10000
2018-11-27 12:36:03,410:INFO: - Train metrics: accuracy: 0.619 ; loss: 26305.766
2018-11-27 12:36:07,437:INFO: - Eval metrics: accuracy: 0.826 ; loss: 10952.005
2018-11-27 12:36:08,056:INFO: Epoch 100/10000
2018-11-27 12:36:45,883:INFO: - Train metrics: accuracy: 0.677 ; loss: 9822.905
2018-11-27 12:36:50,678:INFO: - Eval metrics: accuracy: 0.907 ; loss: 6810.629
2018-11-27 12:36:51,168:INFO: Epoch 101/10000
2018-11-27 12:37:31,884:INFO: - Train metrics: accuracy: 0.713 ; loss: 10402.903
2018-11-27 12:37:36,789:INFO: - Eval metrics: accuracy: 0.902 ; loss: 10541.854
2018-11-27 12:37:37,281:INFO: Epoch 102/10000
2018-11-27 12:38:12,055:INFO: - Train metrics: accuracy: 0.728 ; loss: 9185.349
2018-11-27 12:38:16,762:INFO: - Eval metrics: accuracy: 0.861 ; loss: 16550.328
2018-11-27 12:38:17,259:INFO: Epoch 103/10000
2018-11-27 12:38:51,827:INFO: - Train metrics: accuracy: 0.697 ; loss: 10439.387
2018-11-27 12:38:56,770:INFO: - Eval metrics: accuracy: 0.908 ; loss: 4984.660
2018-11-27 12:38:57,259:INFO: Epoch 104/10000
2018-11-27 12:39:32,559:INFO: - Train metrics: accuracy: 0.692 ; loss: 8439.562
2018-11-27 12:39:37,848:INFO: - Eval metrics: accuracy: 0.898 ; loss: 5144.105
2018-11-27 12:39:38,357:INFO: Epoch 105/10000
2018-11-27 12:40:13,722:INFO: - Train metrics: accuracy: 0.714 ; loss: 13712.393
2018-11-27 12:40:18,699:INFO: - Eval metrics: accuracy: 0.920 ; loss: 7638.587
2018-11-27 12:40:19,172:INFO: Epoch 106/10000
2018-11-27 12:40:54,087:INFO: - Train metrics: accuracy: 0.681 ; loss: 13701.276
2018-11-27 12:40:59,027:INFO: - Eval metrics: accuracy: 0.921 ; loss: 5664.002
2018-11-27 12:40:59,535:INFO: Epoch 107/10000
2018-11-27 12:41:34,715:INFO: - Train metrics: accuracy: 0.647 ; loss: 31128.191
2018-11-27 12:41:39,947:INFO: - Eval metrics: accuracy: 0.923 ; loss: 6371.727
2018-11-27 12:41:40,475:INFO: Epoch 108/10000
2018-11-27 12:42:16,744:INFO: - Train metrics: accuracy: 0.610 ; loss: 44777.770
2018-11-27 12:42:22,457:INFO: - Eval metrics: accuracy: 0.651 ; loss: 133550.781
2018-11-27 12:42:22,975:INFO: Epoch 109/10000
2018-11-27 12:42:59,988:INFO: - Train metrics: accuracy: 0.399 ; loss: 141206.328
2018-11-27 12:43:05,799:INFO: - Eval metrics: accuracy: 0.686 ; loss: 67261.859
2018-11-27 12:43:06,389:INFO: Epoch 110/10000
2018-11-27 12:43:44,391:INFO: - Train metrics: accuracy: 0.577 ; loss: 25938.875
2018-11-27 12:43:49,591:INFO: - Eval metrics: accuracy: 0.710 ; loss: 27697.350
2018-11-27 12:43:50,131:INFO: Epoch 111/10000
2018-11-27 12:44:25,573:INFO: - Train metrics: accuracy: 0.653 ; loss: 29053.592
2018-11-27 12:44:30,535:INFO: - Eval metrics: accuracy: 0.833 ; loss: 39931.695
2018-11-27 12:44:31,027:INFO: Epoch 112/10000
2018-11-27 12:45:06,423:INFO: - Train metrics: accuracy: 0.647 ; loss: 13437.214
2018-11-27 12:45:11,364:INFO: - Eval metrics: accuracy: 0.878 ; loss: 14150.315
2018-11-27 12:45:11,872:INFO: Epoch 113/10000
2018-11-27 12:45:46,870:INFO: - Train metrics: accuracy: 0.674 ; loss: 11021.677
2018-11-27 12:45:52,073:INFO: - Eval metrics: accuracy: 0.903 ; loss: 9810.161
2018-11-27 12:45:52,571:INFO: Epoch 114/10000
2018-11-27 12:46:44,712:INFO: Creating the datasets...
2018-11-27 12:46:50,282:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 12:46:50,626:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 12:46:50,673:INFO: - done.
2018-11-27 12:46:50,673:INFO: Creating the model...
2018-11-27 12:47:57,005:INFO: Creating the datasets...
2018-11-27 12:47:58,737:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 12:47:59,051:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 12:47:59,096:INFO: - done.
2018-11-27 12:47:59,096:INFO: Creating the model...
2018-11-27 12:47:59,205:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 12:49:31,102:INFO: Creating the datasets...
2018-11-27 12:49:32,813:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 12:49:33,127:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 12:49:33,172:INFO: - done.
2018-11-27 12:49:33,172:INFO: Creating the model...
2018-11-27 12:49:33,262:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 12:49:34,779:INFO: - done.
2018-11-27 12:49:34,779:INFO: Starting training for 10000 epoch(s)
2018-11-27 12:49:35,795:INFO: Epoch 1/10000
2018-11-27 12:49:59,993:INFO: - Train metrics: accuracy: 0.088 ; loss: 455830.000
2018-11-27 12:50:04,287:INFO: - Eval metrics: accuracy: 0.144 ; loss: 709087.875
2018-11-27 12:50:05,017:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 12:50:05,018:INFO: Epoch 2/10000
2018-11-27 12:50:29,654:INFO: - Train metrics: accuracy: 0.239 ; loss: 447794.812
2018-11-27 12:50:33,710:INFO: - Eval metrics: accuracy: 0.420 ; loss: 690654.125
2018-11-27 12:50:34,277:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 12:50:34,277:INFO: Epoch 3/10000
2018-11-27 12:50:56,909:INFO: - Train metrics: accuracy: 0.318 ; loss: 430475.938
2018-11-27 12:51:00,955:INFO: - Eval metrics: accuracy: 0.445 ; loss: 657740.375
2018-11-27 12:51:01,567:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-27 12:51:01,568:INFO: Epoch 4/10000
2018-11-27 12:51:23,943:INFO: - Train metrics: accuracy: 0.350 ; loss: 403843.094
2018-11-27 12:51:28,041:INFO: - Eval metrics: accuracy: 0.484 ; loss: 611737.000
2018-11-27 12:51:28,630:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-27 12:51:28,630:INFO: Epoch 5/10000
2018-11-27 12:51:51,007:INFO: - Train metrics: accuracy: 0.405 ; loss: 369695.250
2018-11-27 12:51:58,314:INFO: Creating the datasets...
2018-11-27 12:52:00,170:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 12:52:00,485:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 12:52:00,530:INFO: - done.
2018-11-27 12:52:00,531:INFO: Creating the model...
2018-11-27 12:52:00,619:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 12:52:02,167:INFO: - done.
2018-11-27 12:52:02,167:INFO: Starting training for 10000 epoch(s)
2018-11-27 12:52:02,988:INFO: Epoch 1/10000
2018-11-27 12:52:30,567:INFO: - Train metrics: accuracy: 0.095 ; loss: 455591.438
2018-11-27 12:52:36,242:INFO: - Eval metrics: accuracy: 0.174 ; loss: 708035.312
2018-11-27 12:52:37,092:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 12:52:37,092:INFO: Epoch 2/10000
2018-11-27 12:53:02,533:INFO: - Train metrics: accuracy: 0.249 ; loss: 446233.938
2018-11-27 12:53:06,849:INFO: - Eval metrics: accuracy: 0.398 ; loss: 687403.750
2018-11-27 12:53:07,560:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 12:53:07,560:INFO: Epoch 3/10000
2018-11-27 12:53:33,030:INFO: - Train metrics: accuracy: 0.321 ; loss: 427773.625
2018-11-27 12:53:38,547:INFO: - Eval metrics: accuracy: 0.419 ; loss: 654181.500
2018-11-27 12:53:39,272:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-27 12:53:39,273:INFO: Epoch 4/10000
2018-11-27 12:54:05,340:INFO: - Train metrics: accuracy: 0.349 ; loss: 401306.625
2018-11-27 12:54:10,750:INFO: - Eval metrics: accuracy: 0.477 ; loss: 609503.250
2018-11-27 12:54:11,477:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-27 12:54:11,478:INFO: Epoch 5/10000
2018-11-27 12:54:37,571:INFO: - Train metrics: accuracy: 0.393 ; loss: 367671.750
2018-11-27 12:54:43,142:INFO: - Eval metrics: accuracy: 0.500 ; loss: 553817.750
2018-11-27 12:54:43,853:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-27 12:54:43,854:INFO: Epoch 6/10000
2018-11-27 12:55:09,933:INFO: - Train metrics: accuracy: 0.376 ; loss: 327043.750
2018-11-27 12:55:15,286:INFO: - Eval metrics: accuracy: 0.528 ; loss: 487513.344
2018-11-27 12:55:16,020:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-27 12:55:16,021:INFO: Epoch 7/10000
2018-11-27 12:55:42,179:INFO: - Train metrics: accuracy: 0.359 ; loss: 282079.750
2018-11-27 12:55:47,612:INFO: - Eval metrics: accuracy: 0.560 ; loss: 415404.438
2018-11-27 12:55:48,386:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-27 12:55:48,386:INFO: Epoch 8/10000
2018-11-27 12:56:13,778:INFO: - Train metrics: accuracy: 0.370 ; loss: 238433.672
2018-11-27 12:56:18,111:INFO: - Eval metrics: accuracy: 0.559 ; loss: 349620.031
2018-11-27 12:56:18,540:INFO: Epoch 9/10000
2018-11-27 12:56:51,631:INFO: - Train metrics: accuracy: 0.422 ; loss: 202038.375
2018-11-27 12:56:57,081:INFO: - Eval metrics: accuracy: 0.608 ; loss: 299480.375
2018-11-27 12:56:57,947:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-27 12:56:57,948:INFO: Epoch 10/10000
2018-11-27 12:57:22,353:INFO: - Train metrics: accuracy: 0.430 ; loss: 169377.719
2018-11-27 12:57:27,549:INFO: - Eval metrics: accuracy: 0.637 ; loss: 244123.125
2018-11-27 12:57:28,280:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-27 12:57:28,281:INFO: Epoch 11/10000
2018-11-27 12:57:41,086:INFO: Creating the datasets...
2018-11-27 12:57:46,364:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 12:57:46,683:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 12:57:46,729:INFO: - done.
2018-11-27 12:57:46,729:INFO: Creating the model...
2018-11-27 12:57:46,853:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 12:57:48,403:INFO: - done.
2018-11-27 12:57:48,403:INFO: Starting training for 10000 epoch(s)
2018-11-27 12:57:48,700:INFO: Restoring parameters from experiments/best_weights
2018-11-27 12:57:48,745:INFO: Restoring parameters from experiments/best_weights/after-epoch-10
2018-11-27 12:57:49,475:INFO: Epoch 11/10010
2018-11-27 12:58:15,606:INFO: - Train metrics: accuracy: 0.443 ; loss: 135601.703
2018-11-27 12:58:21,106:INFO: - Eval metrics: accuracy: 0.675 ; loss: 186737.641
2018-11-27 12:58:21,893:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-27 12:58:21,893:INFO: Epoch 12/10010
2018-11-27 12:58:46,204:INFO: - Train metrics: accuracy: 0.478 ; loss: 101532.594
2018-11-27 12:58:51,668:INFO: - Eval metrics: accuracy: 0.689 ; loss: 128400.609
2018-11-27 12:58:52,395:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-27 12:58:52,395:INFO: Epoch 13/10010
2018-11-27 12:59:16,891:INFO: - Train metrics: accuracy: 0.523 ; loss: 71350.477
2018-11-27 12:59:22,168:INFO: - Eval metrics: accuracy: 0.715 ; loss: 78680.547
2018-11-27 12:59:22,830:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-27 12:59:22,831:INFO: Epoch 14/10010
2018-11-27 12:59:30,362:INFO: Creating the datasets...
2018-11-27 12:59:32,108:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 12:59:32,427:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 12:59:32,473:INFO: - done.
2018-11-27 12:59:32,473:INFO: Creating the model...
2018-11-27 12:59:32,562:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 12:59:34,088:INFO: - done.
2018-11-27 12:59:34,088:INFO: Starting training for 10000 epoch(s)
2018-11-27 12:59:34,919:INFO: Epoch 1/10000
2018-11-27 13:00:01,569:INFO: - Train metrics: accuracy: 0.095 ; loss: 455585.906
2018-11-27 13:00:07,245:INFO: - Eval metrics: accuracy: 0.174 ; loss: 708022.750
2018-11-27 13:00:08,104:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 13:00:08,105:INFO: Epoch 2/10000
2018-11-27 13:00:31,352:INFO: Creating the datasets...
2018-11-27 13:00:33,289:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 13:00:33,627:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 13:00:33,681:INFO: - done.
2018-11-27 13:00:33,682:INFO: Creating the model...
2018-11-27 13:00:33,777:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 13:00:35,350:INFO: - done.
2018-11-27 13:00:35,350:INFO: Starting training for 10000 epoch(s)
2018-11-27 13:00:36,238:INFO: Epoch 1/10000
2018-11-27 13:01:03,977:INFO: - Train metrics: accuracy: 0.030 ; loss: 457301.062
2018-11-27 13:01:09,607:INFO: - Eval metrics: accuracy: 0.008 ; loss: 714894.125
2018-11-27 13:01:10,492:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 13:01:10,492:INFO: Epoch 2/10000
2018-11-27 13:01:36,855:INFO: - Train metrics: accuracy: 0.048 ; loss: 457066.438
2018-11-27 13:01:42,185:INFO: - Eval metrics: accuracy: 0.014 ; loss: 714524.438
2018-11-27 13:01:42,903:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 13:01:42,904:INFO: Epoch 3/10000
2018-11-27 13:02:09,033:INFO: - Train metrics: accuracy: 0.067 ; loss: 456786.438
2018-11-27 13:02:14,432:INFO: - Eval metrics: accuracy: 0.024 ; loss: 714048.812
2018-11-27 13:02:15,183:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-27 13:02:15,183:INFO: Epoch 4/10000
2018-11-27 13:02:41,499:INFO: - Train metrics: accuracy: 0.082 ; loss: 456442.094
2018-11-27 13:02:46,897:INFO: - Eval metrics: accuracy: 0.038 ; loss: 713480.562
2018-11-27 13:02:47,687:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-27 13:02:47,688:INFO: Epoch 5/10000
2018-11-27 13:03:13,666:INFO: - Train metrics: accuracy: 0.093 ; loss: 456012.625
2018-11-27 13:03:19,080:INFO: - Eval metrics: accuracy: 0.058 ; loss: 712770.438
2018-11-27 13:03:21,624:INFO: Creating the datasets...
2018-11-27 13:03:23,441:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 13:03:23,857:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 13:03:23,904:INFO: - done.
2018-11-27 13:03:23,905:INFO: Creating the model...
2018-11-27 13:03:23,999:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 13:03:25,565:INFO: - done.
2018-11-27 13:03:25,565:INFO: Starting training for 10000 epoch(s)
2018-11-27 13:03:26,435:INFO: Epoch 1/10000
2018-11-27 13:03:53,480:INFO: - Train metrics: accuracy: 0.035 ; loss: 457416.938
2018-11-27 13:03:59,154:INFO: - Eval metrics: accuracy: 0.007 ; loss: 715221.938
2018-11-27 13:04:00,016:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 13:04:00,016:INFO: Epoch 2/10000
2018-11-27 13:04:25,645:INFO: - Train metrics: accuracy: 0.035 ; loss: 457402.625
2018-11-27 13:04:30,880:INFO: - Eval metrics: accuracy: 0.007 ; loss: 715185.750
2018-11-27 13:04:31,634:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 13:04:31,635:INFO: Epoch 3/10000
2018-11-27 13:04:47,110:INFO: Creating the datasets...
2018-11-27 13:04:49,138:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 13:04:49,453:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 13:04:49,498:INFO: - done.
2018-11-27 13:04:49,498:INFO: Creating the model...
2018-11-27 13:04:49,590:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 13:04:51,131:INFO: - done.
2018-11-27 13:04:51,131:INFO: Starting training for 10000 epoch(s)
2018-11-27 13:04:51,977:INFO: Epoch 1/10000
2018-11-27 13:05:19,357:INFO: - Train metrics: accuracy: 0.104 ; loss: 455433.281
2018-11-27 13:05:24,791:INFO: - Eval metrics: accuracy: 0.193 ; loss: 707486.750
2018-11-27 13:05:25,609:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 13:05:25,610:INFO: Epoch 2/10000
2018-11-27 13:05:51,428:INFO: - Train metrics: accuracy: 0.255 ; loss: 445365.531
2018-11-27 13:05:56,744:INFO: - Eval metrics: accuracy: 0.385 ; loss: 685053.000
2018-11-27 13:05:57,464:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 13:05:57,464:INFO: Epoch 3/10000
2018-11-27 13:06:22,953:INFO: - Train metrics: accuracy: 0.324 ; loss: 425166.656
2018-11-27 13:06:28,494:INFO: - Eval metrics: accuracy: 0.409 ; loss: 648713.062
2018-11-27 13:06:29,228:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-27 13:06:29,229:INFO: Epoch 4/10000
2018-11-27 13:06:55,545:INFO: - Train metrics: accuracy: 0.360 ; loss: 396047.750
2018-11-27 13:07:01,028:INFO: - Eval metrics: accuracy: 0.478 ; loss: 599059.375
2018-11-27 13:07:01,789:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-27 13:07:01,790:INFO: Epoch 5/10000
2018-11-27 13:07:27,286:INFO: - Train metrics: accuracy: 0.390 ; loss: 358635.656
2018-11-27 13:07:32,799:INFO: - Eval metrics: accuracy: 0.506 ; loss: 537182.188
2018-11-27 13:07:33,529:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-27 13:07:33,530:INFO: Epoch 6/10000
2018-11-27 13:08:02,052:INFO: - Train metrics: accuracy: 0.364 ; loss: 313984.188
2018-11-27 13:08:07,582:INFO: - Eval metrics: accuracy: 0.537 ; loss: 464415.000
2018-11-27 13:08:08,344:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-27 13:08:08,345:INFO: Epoch 7/10000
2018-11-27 13:08:34,521:INFO: - Train metrics: accuracy: 0.359 ; loss: 265990.250
2018-11-27 13:08:39,832:INFO: - Eval metrics: accuracy: 0.572 ; loss: 388135.844
2018-11-27 13:08:40,584:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-27 13:08:40,585:INFO: Epoch 8/10000
2018-11-27 13:09:06,814:INFO: - Train metrics: accuracy: 0.378 ; loss: 218981.000
2018-11-27 13:09:12,350:INFO: - Eval metrics: accuracy: 0.611 ; loss: 316101.969
2018-11-27 13:09:13,117:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-27 13:09:13,118:INFO: Epoch 9/10000
2018-11-27 13:09:39,548:INFO: - Train metrics: accuracy: 0.412 ; loss: 178025.328
2018-11-27 13:09:45,158:INFO: - Eval metrics: accuracy: 0.645 ; loss: 256077.422
2018-11-27 13:09:45,931:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-27 13:09:45,932:INFO: Epoch 10/10000
2018-11-27 13:10:07,992:INFO: - Train metrics: accuracy: 0.445 ; loss: 142092.000
2018-11-27 13:10:12,417:INFO: - Eval metrics: accuracy: 0.665 ; loss: 195651.000
2018-11-27 13:10:13,109:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-27 13:10:13,109:INFO: Epoch 11/10000
2018-11-27 13:10:38,377:INFO: - Train metrics: accuracy: 0.470 ; loss: 105595.766
2018-11-27 13:10:43,870:INFO: - Eval metrics: accuracy: 0.664 ; loss: 132394.938
2018-11-27 13:10:44,416:INFO: Epoch 12/10000
2018-11-27 13:11:09,732:INFO: - Train metrics: accuracy: 0.517 ; loss: 72158.242
2018-11-27 13:11:15,247:INFO: - Eval metrics: accuracy: 0.701 ; loss: 76287.789
2018-11-27 13:11:15,996:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-27 13:11:15,996:INFO: Epoch 13/10000
2018-11-27 13:11:41,197:INFO: - Train metrics: accuracy: 0.582 ; loss: 46957.047
2018-11-27 13:11:46,689:INFO: - Eval metrics: accuracy: 0.829 ; loss: 34082.598
2018-11-27 13:11:47,396:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-27 13:11:47,396:INFO: Epoch 14/10000
2018-11-27 13:12:12,684:INFO: - Train metrics: accuracy: 0.621 ; loss: 34169.133
2018-11-27 13:12:17,038:INFO: - Eval metrics: accuracy: 0.875 ; loss: 14388.372
2018-11-27 13:12:17,670:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-27 13:12:17,671:INFO: Epoch 15/10000
2018-11-27 13:12:42,594:INFO: - Train metrics: accuracy: 0.646 ; loss: 30079.521
2018-11-27 13:12:47,984:INFO: - Eval metrics: accuracy: 0.892 ; loss: 8018.536
2018-11-27 13:12:48,728:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-27 13:12:48,729:INFO: Epoch 16/10000
2018-11-27 13:13:14,032:INFO: - Train metrics: accuracy: 0.658 ; loss: 28420.979
2018-11-27 13:13:19,442:INFO: - Eval metrics: accuracy: 0.911 ; loss: 5999.794
2018-11-27 13:13:20,167:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-27 13:13:20,168:INFO: Epoch 17/10000
2018-11-27 13:13:45,365:INFO: - Train metrics: accuracy: 0.664 ; loss: 26758.834
2018-11-27 13:13:50,714:INFO: - Eval metrics: accuracy: 0.917 ; loss: 5043.902
2018-11-27 13:13:51,468:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-27 13:13:51,469:INFO: Epoch 18/10000
2018-11-27 13:14:16,882:INFO: - Train metrics: accuracy: 0.670 ; loss: 24704.375
2018-11-27 13:14:22,344:INFO: - Eval metrics: accuracy: 0.915 ; loss: 4460.650
2018-11-27 13:14:22,931:INFO: Epoch 19/10000
2018-11-27 13:14:48,243:INFO: - Train metrics: accuracy: 0.678 ; loss: 22020.379
2018-11-27 13:14:53,653:INFO: - Eval metrics: accuracy: 0.920 ; loss: 4365.362
2018-11-27 13:14:54,368:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-27 13:14:54,369:INFO: Epoch 20/10000
2018-11-27 13:15:19,713:INFO: - Train metrics: accuracy: 0.682 ; loss: 20180.709
2018-11-27 13:15:25,176:INFO: - Eval metrics: accuracy: 0.918 ; loss: 4463.714
2018-11-27 13:15:25,738:INFO: Epoch 21/10000
2018-11-27 13:15:51,207:INFO: - Train metrics: accuracy: 0.686 ; loss: 18500.236
2018-11-27 13:15:56,682:INFO: - Eval metrics: accuracy: 0.925 ; loss: 4310.071
2018-11-27 13:15:57,412:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-27 13:15:57,413:INFO: Epoch 22/10000
2018-11-27 13:16:22,699:INFO: - Train metrics: accuracy: 0.691 ; loss: 16886.928
2018-11-27 13:16:28,198:INFO: - Eval metrics: accuracy: 0.933 ; loss: 3448.439
2018-11-27 13:16:28,939:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-27 13:16:28,940:INFO: Epoch 23/10000
2018-11-27 13:16:54,496:INFO: - Train metrics: accuracy: 0.697 ; loss: 15517.381
2018-11-27 13:16:59,668:INFO: - Eval metrics: accuracy: 0.937 ; loss: 3119.204
2018-11-27 13:17:00,410:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-27 13:17:00,410:INFO: Epoch 24/10000
2018-11-27 13:17:25,409:INFO: - Train metrics: accuracy: 0.701 ; loss: 14145.786
2018-11-27 13:17:30,822:INFO: - Eval metrics: accuracy: 0.930 ; loss: 3606.465
2018-11-27 13:17:31,396:INFO: Epoch 25/10000
2018-11-27 13:17:56,952:INFO: - Train metrics: accuracy: 0.702 ; loss: 12872.946
2018-11-27 13:18:02,320:INFO: - Eval metrics: accuracy: 0.933 ; loss: 3311.993
2018-11-27 13:18:02,882:INFO: Epoch 26/10000
2018-11-27 13:18:28,291:INFO: - Train metrics: accuracy: 0.707 ; loss: 11761.440
2018-11-27 13:18:33,767:INFO: - Eval metrics: accuracy: 0.937 ; loss: 2920.201
2018-11-27 13:18:34,358:INFO: Epoch 27/10000
2018-11-27 13:18:59,436:INFO: - Train metrics: accuracy: 0.709 ; loss: 10815.486
2018-11-27 13:19:04,939:INFO: - Eval metrics: accuracy: 0.936 ; loss: 2769.706
2018-11-27 13:19:05,507:INFO: Epoch 28/10000
2018-11-27 13:19:18,768:INFO: Creating the datasets...
2018-11-27 13:19:22,368:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 13:19:22,686:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 13:19:22,731:INFO: - done.
2018-11-27 13:19:22,731:INFO: Creating the model...
2018-11-27 13:19:22,847:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 13:19:24,185:INFO: - done.
2018-11-27 13:19:24,185:INFO: Starting training for 10000 epoch(s)
2018-11-27 13:19:24,329:INFO: Restoring parameters from experiments/best_weights
2018-11-27 13:19:24,391:INFO: Restoring parameters from experiments/best_weights/after-epoch-23
2018-11-27 13:19:25,097:INFO: Epoch 24/10023
2018-11-27 13:19:50,838:INFO: - Train metrics: accuracy: 0.701 ; loss: 13798.586
2018-11-27 13:19:56,434:INFO: - Eval metrics: accuracy: 0.934 ; loss: 3214.684
2018-11-27 13:19:57,259:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-27 13:19:57,259:INFO: Epoch 25/10023
2018-11-27 13:20:21,861:INFO: - Train metrics: accuracy: 0.704 ; loss: 11985.233
2018-11-27 13:20:27,326:INFO: - Eval metrics: accuracy: 0.927 ; loss: 3816.798
2018-11-27 13:20:27,881:INFO: Epoch 26/10023
2018-11-27 13:20:52,520:INFO: - Train metrics: accuracy: 0.705 ; loss: 10472.553
2018-11-27 13:20:57,973:INFO: - Eval metrics: accuracy: 0.934 ; loss: 3347.428
2018-11-27 13:20:58,713:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-26
2018-11-27 13:20:58,714:INFO: Epoch 27/10023
2018-11-27 13:21:23,146:INFO: - Train metrics: accuracy: 0.709 ; loss: 9213.346
2018-11-27 13:21:28,629:INFO: - Eval metrics: accuracy: 0.939 ; loss: 2738.334
2018-11-27 13:21:29,351:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-27 13:21:29,352:INFO: Epoch 28/10023
2018-11-27 13:21:54,045:INFO: - Train metrics: accuracy: 0.712 ; loss: 8270.961
2018-11-27 13:21:59,522:INFO: - Eval metrics: accuracy: 0.943 ; loss: 2417.696
2018-11-27 13:22:00,224:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-28
2018-11-27 13:22:00,225:INFO: Epoch 29/10023
2018-11-27 13:22:24,818:INFO: - Train metrics: accuracy: 0.712 ; loss: 7435.366
2018-11-27 13:22:30,165:INFO: - Eval metrics: accuracy: 0.943 ; loss: 2676.083
2018-11-27 13:22:30,879:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-27 13:22:30,880:INFO: Epoch 30/10023
2018-11-27 13:22:55,538:INFO: - Train metrics: accuracy: 0.715 ; loss: 6648.710
2018-11-27 13:23:00,971:INFO: - Eval metrics: accuracy: 0.940 ; loss: 2499.264
2018-11-27 13:23:01,533:INFO: Epoch 31/10023
2018-11-27 13:23:26,182:INFO: - Train metrics: accuracy: 0.716 ; loss: 6250.943
2018-11-27 13:23:31,614:INFO: - Eval metrics: accuracy: 0.943 ; loss: 2390.443
2018-11-27 13:23:32,145:INFO: Epoch 32/10023
2018-11-27 13:23:56,691:INFO: - Train metrics: accuracy: 0.717 ; loss: 5871.897
2018-11-27 13:24:02,099:INFO: - Eval metrics: accuracy: 0.941 ; loss: 2580.687
2018-11-27 13:24:02,644:INFO: Epoch 33/10023
2018-11-27 13:24:27,274:INFO: - Train metrics: accuracy: 0.718 ; loss: 5438.767
2018-11-27 13:24:32,718:INFO: - Eval metrics: accuracy: 0.946 ; loss: 2198.565
2018-11-27 13:24:33,419:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-33
2018-11-27 13:24:33,420:INFO: Epoch 34/10023
2018-11-27 13:24:56,614:INFO: - Train metrics: accuracy: 0.720 ; loss: 5094.753
2018-11-27 13:25:01,964:INFO: - Eval metrics: accuracy: 0.944 ; loss: 2209.885
2018-11-27 13:25:02,478:INFO: Epoch 35/10023
2018-11-27 13:25:26,802:INFO: - Train metrics: accuracy: 0.722 ; loss: 4640.779
2018-11-27 13:25:32,326:INFO: - Eval metrics: accuracy: 0.945 ; loss: 2069.178
2018-11-27 13:25:32,841:INFO: Epoch 36/10023
2018-11-27 13:25:56,760:INFO: - Train metrics: accuracy: 0.724 ; loss: 4121.826
2018-11-27 13:26:02,145:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1949.795
2018-11-27 13:26:02,843:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-36
2018-11-27 13:26:02,844:INFO: Epoch 37/10023
2018-11-27 13:26:27,427:INFO: - Train metrics: accuracy: 0.727 ; loss: 3799.381
2018-11-27 13:26:32,661:INFO: - Eval metrics: accuracy: 0.947 ; loss: 2022.020
2018-11-27 13:26:33,288:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-37
2018-11-27 13:26:33,289:INFO: Epoch 38/10023
2018-11-27 13:26:57,795:INFO: - Train metrics: accuracy: 0.730 ; loss: 3494.029
2018-11-27 13:27:03,265:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1982.387
2018-11-27 13:27:03,967:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-38
2018-11-27 13:27:03,967:INFO: Epoch 39/10023
2018-11-27 13:27:28,133:INFO: - Train metrics: accuracy: 0.733 ; loss: 3266.786
2018-11-27 13:27:33,030:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1927.536
2018-11-27 13:27:33,667:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-39
2018-11-27 13:27:33,667:INFO: Epoch 40/10023
2018-11-27 13:27:57,668:INFO: - Train metrics: accuracy: 0.734 ; loss: 3063.373
2018-11-27 13:28:03,226:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1839.733
2018-11-27 13:28:03,943:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-40
2018-11-27 13:28:03,943:INFO: Epoch 41/10023
2018-11-27 13:28:28,764:INFO: - Train metrics: accuracy: 0.735 ; loss: 2866.848
2018-11-27 13:28:34,206:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1778.335
2018-11-27 13:28:34,928:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-41
2018-11-27 13:28:34,929:INFO: Epoch 42/10023
2018-11-27 13:28:59,697:INFO: - Train metrics: accuracy: 0.741 ; loss: 2661.953
2018-11-27 13:29:04,855:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1780.384
2018-11-27 13:29:05,412:INFO: Epoch 43/10023
2018-11-27 13:29:29,572:INFO: - Train metrics: accuracy: 0.744 ; loss: 2485.259
2018-11-27 13:29:34,827:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1868.215
2018-11-27 13:29:35,281:INFO: Epoch 44/10023
2018-11-27 13:29:58,266:INFO: - Train metrics: accuracy: 0.748 ; loss: 2325.318
2018-11-27 13:30:03,795:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1818.322
2018-11-27 13:30:04,534:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-44
2018-11-27 13:30:04,534:INFO: Epoch 45/10023
2018-11-27 13:30:28,235:INFO: - Train metrics: accuracy: 0.750 ; loss: 2267.311
2018-11-27 13:30:33,112:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1767.719
2018-11-27 13:30:33,728:INFO: Epoch 46/10023
2018-11-27 13:30:57,622:INFO: - Train metrics: accuracy: 0.754 ; loss: 2206.775
2018-11-27 13:31:01,594:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1807.077
2018-11-27 13:31:02,002:INFO: Epoch 47/10023
2018-11-27 13:31:21,375:INFO: - Train metrics: accuracy: 0.755 ; loss: 2129.313
2018-11-27 13:31:25,438:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1790.198
2018-11-27 13:31:25,871:INFO: Epoch 48/10023
2018-11-27 13:31:46,403:INFO: - Train metrics: accuracy: 0.757 ; loss: 2038.039
2018-11-27 13:31:50,945:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1733.074
2018-11-27 13:31:51,397:INFO: Epoch 49/10023
2018-11-27 13:32:12,810:INFO: - Train metrics: accuracy: 0.757 ; loss: 1979.065
2018-11-27 13:32:17,233:INFO: - Eval metrics: accuracy: 0.946 ; loss: 1686.111
2018-11-27 13:32:17,694:INFO: Epoch 50/10023
2018-11-27 13:32:38,988:INFO: - Train metrics: accuracy: 0.759 ; loss: 1916.770
2018-11-27 13:32:43,407:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1696.634
2018-11-27 13:32:43,923:INFO: Epoch 51/10023
2018-11-27 13:33:03,506:INFO: - Train metrics: accuracy: 0.764 ; loss: 1846.595
2018-11-27 13:33:07,587:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1699.538
2018-11-27 13:33:08,286:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-51
2018-11-27 13:33:08,287:INFO: Epoch 52/10023
2018-11-27 13:33:27,645:INFO: - Train metrics: accuracy: 0.765 ; loss: 1787.489
2018-11-27 13:33:31,743:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1718.592
2018-11-27 13:33:32,174:INFO: Epoch 53/10023
2018-11-27 13:33:51,568:INFO: - Train metrics: accuracy: 0.770 ; loss: 1729.168
2018-11-27 13:33:55,753:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1721.647
2018-11-27 13:33:56,227:INFO: Epoch 54/10023
2018-11-27 13:34:15,528:INFO: - Train metrics: accuracy: 0.771 ; loss: 1670.873
2018-11-27 13:34:19,636:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1685.389
2018-11-27 13:34:20,058:INFO: Epoch 55/10023
2018-11-27 13:34:39,380:INFO: - Train metrics: accuracy: 0.762 ; loss: 1616.671
2018-11-27 13:34:43,484:INFO: - Eval metrics: accuracy: 0.918 ; loss: 1682.603
2018-11-27 13:34:43,898:INFO: Epoch 56/10023
2018-11-27 13:35:03,085:INFO: - Train metrics: accuracy: 0.757 ; loss: 1580.307
2018-11-27 13:35:07,207:INFO: - Eval metrics: accuracy: 0.925 ; loss: 1742.980
2018-11-27 13:35:07,630:INFO: Epoch 57/10023
2018-11-27 13:35:26,840:INFO: - Train metrics: accuracy: 0.772 ; loss: 1544.335
2018-11-27 13:35:30,792:INFO: - Eval metrics: accuracy: 0.944 ; loss: 1700.902
2018-11-27 13:35:31,210:INFO: Epoch 58/10023
2018-11-27 13:35:51,277:INFO: - Train metrics: accuracy: 0.784 ; loss: 1504.614
2018-11-27 13:35:55,586:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1747.719
2018-11-27 13:35:56,028:INFO: Epoch 59/10023
2018-11-27 13:36:16,066:INFO: - Train metrics: accuracy: 0.785 ; loss: 1492.552
2018-11-27 13:36:20,337:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1729.581
2018-11-27 13:36:20,795:INFO: Epoch 60/10023
2018-11-27 13:36:40,690:INFO: - Train metrics: accuracy: 0.786 ; loss: 1458.183
2018-11-27 13:36:45,036:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1679.587
2018-11-27 13:36:45,463:INFO: Epoch 61/10023
2018-11-27 13:37:05,869:INFO: - Train metrics: accuracy: 0.790 ; loss: 1399.332
2018-11-27 13:37:10,616:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1676.977
2018-11-27 13:37:11,068:INFO: Epoch 62/10023
2018-11-27 13:37:31,313:INFO: - Train metrics: accuracy: 0.791 ; loss: 1366.987
2018-11-27 13:37:35,567:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1677.273
2018-11-27 13:37:36,023:INFO: Epoch 63/10023
2018-11-27 13:37:56,054:INFO: - Train metrics: accuracy: 0.794 ; loss: 1344.609
2018-11-27 13:38:00,277:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1665.555
2018-11-27 13:38:00,891:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-63
2018-11-27 13:38:00,891:INFO: Epoch 64/10023
2018-11-27 13:38:21,234:INFO: - Train metrics: accuracy: 0.796 ; loss: 1322.922
2018-11-27 13:38:25,628:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1669.355
2018-11-27 13:38:26,089:INFO: Epoch 65/10023
2018-11-27 13:38:45,947:INFO: - Train metrics: accuracy: 0.798 ; loss: 1301.119
2018-11-27 13:38:50,168:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1676.116
2018-11-27 13:38:50,643:INFO: Epoch 66/10023
2018-11-27 13:39:10,794:INFO: - Train metrics: accuracy: 0.800 ; loss: 1285.772
2018-11-27 13:39:15,077:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1670.937
2018-11-27 13:39:15,505:INFO: Epoch 67/10023
2018-11-27 13:39:35,674:INFO: - Train metrics: accuracy: 0.802 ; loss: 1263.936
2018-11-27 13:39:39,924:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1669.598
2018-11-27 13:39:40,352:INFO: Epoch 68/10023
2018-11-27 13:40:00,699:INFO: - Train metrics: accuracy: 0.803 ; loss: 1248.697
2018-11-27 13:40:05,033:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1668.766
2018-11-27 13:40:05,463:INFO: Epoch 69/10023
2018-11-27 13:40:25,552:INFO: - Train metrics: accuracy: 0.806 ; loss: 1232.058
2018-11-27 13:40:29,867:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1731.635
2018-11-27 13:40:30,316:INFO: Epoch 70/10023
2018-11-27 13:40:50,967:INFO: - Train metrics: accuracy: 0.806 ; loss: 1261.483
2018-11-27 13:40:55,243:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1751.099
2018-11-27 13:40:55,687:INFO: Epoch 71/10023
2018-11-27 13:41:16,207:INFO: - Train metrics: accuracy: 0.807 ; loss: 1240.696
2018-11-27 13:41:21,487:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1813.639
2018-11-27 13:41:22,055:INFO: Epoch 72/10023
2018-11-27 13:41:46,631:INFO: - Train metrics: accuracy: 0.808 ; loss: 1236.571
2018-11-27 13:41:52,151:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1659.148
2018-11-27 13:41:52,880:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-72
2018-11-27 13:41:52,880:INFO: Epoch 73/10023
2018-11-27 13:42:17,390:INFO: - Train metrics: accuracy: 0.808 ; loss: 1207.656
2018-11-27 13:42:22,846:INFO: - Eval metrics: accuracy: 0.946 ; loss: 1760.866
2018-11-27 13:42:23,401:INFO: Epoch 74/10023
2018-11-27 13:42:47,929:INFO: - Train metrics: accuracy: 0.812 ; loss: 1195.619
2018-11-27 13:42:53,358:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1675.504
2018-11-27 13:42:53,914:INFO: Epoch 75/10023
2018-11-27 13:43:18,453:INFO: - Train metrics: accuracy: 0.814 ; loss: 1168.688
2018-11-27 13:43:23,946:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1671.402
2018-11-27 13:43:24,484:INFO: Epoch 76/10023
2018-11-27 13:43:49,107:INFO: - Train metrics: accuracy: 0.815 ; loss: 1165.638
2018-11-27 13:43:54,540:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1672.310
2018-11-27 13:43:55,100:INFO: Epoch 77/10023
2018-11-27 13:44:19,922:INFO: - Train metrics: accuracy: 0.818 ; loss: 1141.390
2018-11-27 13:44:25,380:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1666.599
2018-11-27 13:44:25,951:INFO: Epoch 78/10023
2018-11-27 13:44:50,437:INFO: - Train metrics: accuracy: 0.818 ; loss: 1134.354
2018-11-27 13:44:55,870:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1677.677
2018-11-27 13:44:56,407:INFO: Epoch 79/10023
2018-11-27 13:45:20,791:INFO: - Train metrics: accuracy: 0.822 ; loss: 1121.131
2018-11-27 13:45:26,252:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1727.086
2018-11-27 13:45:26,794:INFO: Epoch 80/10023
2018-11-27 13:45:51,255:INFO: - Train metrics: accuracy: 0.821 ; loss: 1111.635
2018-11-27 13:45:56,738:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1698.285
2018-11-27 13:45:57,269:INFO: Epoch 81/10023
2018-11-27 13:46:21,596:INFO: - Train metrics: accuracy: 0.824 ; loss: 1092.453
2018-11-27 13:46:26,933:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1684.792
2018-11-27 13:46:27,460:INFO: Epoch 82/10023
2018-11-27 13:46:51,762:INFO: - Train metrics: accuracy: 0.825 ; loss: 1089.157
2018-11-27 13:46:57,138:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1672.313
2018-11-27 13:46:57,703:INFO: Epoch 83/10023
2018-11-27 13:47:22,035:INFO: - Train metrics: accuracy: 0.826 ; loss: 1083.369
2018-11-27 13:47:27,536:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1704.447
2018-11-27 13:47:28,098:INFO: Epoch 84/10023
2018-11-27 13:47:51,398:INFO: - Train metrics: accuracy: 0.827 ; loss: 1077.390
2018-11-27 13:47:56,806:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1672.662
2018-11-27 13:47:57,347:INFO: Epoch 85/10023
2018-11-27 13:48:21,793:INFO: - Train metrics: accuracy: 0.828 ; loss: 1072.797
2018-11-27 13:48:27,250:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1703.156
2018-11-27 13:48:27,821:INFO: Epoch 86/10023
2018-11-27 13:48:52,469:INFO: - Train metrics: accuracy: 0.829 ; loss: 1067.006
2018-11-27 13:48:57,966:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1672.263
2018-11-27 13:48:58,532:INFO: Epoch 87/10023
2018-11-27 13:49:23,067:INFO: - Train metrics: accuracy: 0.829 ; loss: 1062.274
2018-11-27 13:49:28,497:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1700.437
2018-11-27 13:49:29,068:INFO: Epoch 88/10023
2018-11-27 13:49:53,495:INFO: - Train metrics: accuracy: 0.831 ; loss: 1056.790
2018-11-27 13:49:58,898:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1672.203
2018-11-27 13:49:59,437:INFO: Epoch 89/10023
2018-11-27 13:50:23,854:INFO: - Train metrics: accuracy: 0.831 ; loss: 1052.051
2018-11-27 13:50:29,352:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1698.832
2018-11-27 13:50:29,903:INFO: Epoch 90/10023
2018-11-27 13:50:54,486:INFO: - Train metrics: accuracy: 0.833 ; loss: 1047.044
2018-11-27 13:50:59,993:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1672.905
2018-11-27 13:51:00,559:INFO: Epoch 91/10023
2018-11-27 13:51:24,907:INFO: - Train metrics: accuracy: 0.833 ; loss: 1042.363
2018-11-27 13:51:30,342:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1698.711
2018-11-27 13:51:30,882:INFO: Epoch 92/10023
2018-11-27 13:51:55,373:INFO: - Train metrics: accuracy: 0.835 ; loss: 1037.884
2018-11-27 13:52:00,854:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1672.198
2018-11-27 13:52:01,414:INFO: Epoch 93/10023
2018-11-27 13:52:26,051:INFO: - Train metrics: accuracy: 0.835 ; loss: 1033.310
2018-11-27 13:52:31,525:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1698.448
2018-11-27 13:52:32,070:INFO: Epoch 94/10023
2018-11-27 13:52:56,563:INFO: - Train metrics: accuracy: 0.837 ; loss: 1028.895
2018-11-27 13:53:01,948:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1672.897
2018-11-27 13:53:02,499:INFO: Epoch 95/10023
2018-11-27 13:53:26,892:INFO: - Train metrics: accuracy: 0.837 ; loss: 1024.280
2018-11-27 13:53:32,402:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1697.013
2018-11-27 13:53:32,966:INFO: Epoch 96/10023
2018-11-27 13:53:57,422:INFO: - Train metrics: accuracy: 0.838 ; loss: 1020.372
2018-11-27 13:54:02,902:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1672.840
2018-11-27 13:54:03,473:INFO: Epoch 97/10023
2018-11-27 13:54:27,990:INFO: - Train metrics: accuracy: 0.839 ; loss: 1015.829
2018-11-27 13:54:33,522:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1695.567
2018-11-27 13:54:34,056:INFO: Epoch 98/10023
2018-11-27 13:54:58,735:INFO: - Train metrics: accuracy: 0.840 ; loss: 1012.154
2018-11-27 13:55:04,261:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1672.673
2018-11-27 13:55:04,805:INFO: Epoch 99/10023
2018-11-27 13:55:29,378:INFO: - Train metrics: accuracy: 0.841 ; loss: 1007.783
2018-11-27 13:55:34,904:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1694.270
2018-11-27 13:55:35,447:INFO: Epoch 100/10023
2018-11-27 13:56:00,071:INFO: - Train metrics: accuracy: 0.842 ; loss: 1004.298
2018-11-27 13:56:05,558:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1672.605
2018-11-27 13:56:06,089:INFO: Epoch 101/10023
2018-11-27 13:56:30,709:INFO: - Train metrics: accuracy: 0.843 ; loss: 1000.090
2018-11-27 13:56:36,142:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1692.662
2018-11-27 13:56:36,683:INFO: Epoch 102/10023
2018-11-27 13:57:01,177:INFO: - Train metrics: accuracy: 0.844 ; loss: 996.725
2018-11-27 13:57:06,656:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1672.354
2018-11-27 13:57:07,222:INFO: Epoch 103/10023
2018-11-27 13:57:31,856:INFO: - Train metrics: accuracy: 0.845 ; loss: 992.785
2018-11-27 13:57:37,254:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1691.256
2018-11-27 13:57:37,791:INFO: Epoch 104/10023
2018-11-27 13:58:02,114:INFO: - Train metrics: accuracy: 0.846 ; loss: 989.456
2018-11-27 13:58:07,469:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1672.163
2018-11-27 13:58:08,025:INFO: Epoch 105/10023
2018-11-27 13:58:31,968:INFO: - Train metrics: accuracy: 0.847 ; loss: 985.811
2018-11-27 13:58:37,441:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1689.966
2018-11-27 13:58:37,859:INFO: Epoch 106/10023
2018-11-27 13:59:00,137:INFO: - Train metrics: accuracy: 0.848 ; loss: 982.499
2018-11-27 13:59:05,384:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1671.948
2018-11-27 13:59:05,908:INFO: Epoch 107/10023
2018-11-27 13:59:29,536:INFO: - Train metrics: accuracy: 0.849 ; loss: 979.176
2018-11-27 13:59:34,973:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1689.264
2018-11-27 13:59:35,580:INFO: Epoch 108/10023
2018-11-27 13:59:59,301:INFO: - Train metrics: accuracy: 0.850 ; loss: 975.892
2018-11-27 14:00:04,542:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1671.565
2018-11-27 14:00:05,082:INFO: Epoch 109/10023
2018-11-27 14:00:29,530:INFO: - Train metrics: accuracy: 0.851 ; loss: 972.862
2018-11-27 14:00:35,109:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1689.334
2018-11-27 14:00:35,632:INFO: Epoch 110/10023
2018-11-27 14:00:59,934:INFO: - Train metrics: accuracy: 0.852 ; loss: 969.644
2018-11-27 14:01:05,480:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1670.957
2018-11-27 14:01:06,027:INFO: Epoch 111/10023
2018-11-27 14:01:30,158:INFO: - Train metrics: accuracy: 0.853 ; loss: 966.851
2018-11-27 14:01:35,725:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1689.782
2018-11-27 14:01:36,257:INFO: Epoch 112/10023
2018-11-27 14:02:00,526:INFO: - Train metrics: accuracy: 0.854 ; loss: 963.727
2018-11-27 14:02:05,950:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1670.549
2018-11-27 14:02:06,502:INFO: Epoch 113/10023
2018-11-27 14:02:31,023:INFO: - Train metrics: accuracy: 0.855 ; loss: 961.123
2018-11-27 14:02:36,532:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1689.814
2018-11-27 14:02:37,099:INFO: Epoch 114/10023
2018-11-27 14:03:01,521:INFO: - Train metrics: accuracy: 0.856 ; loss: 958.064
2018-11-27 14:03:06,972:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1670.332
2018-11-27 14:03:07,536:INFO: Epoch 115/10023
2018-11-27 14:03:31,788:INFO: - Train metrics: accuracy: 0.856 ; loss: 955.628
2018-11-27 14:03:37,227:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1689.582
2018-11-27 14:03:37,757:INFO: Epoch 116/10023
2018-11-27 14:04:02,143:INFO: - Train metrics: accuracy: 0.857 ; loss: 952.659
2018-11-27 14:04:07,630:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1670.189
2018-11-27 14:04:08,177:INFO: Epoch 117/10023
2018-11-27 14:04:32,623:INFO: - Train metrics: accuracy: 0.858 ; loss: 950.373
2018-11-27 14:04:38,050:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1689.219
2018-11-27 14:04:38,612:INFO: Epoch 118/10023
2018-11-27 14:05:02,971:INFO: - Train metrics: accuracy: 0.859 ; loss: 947.515
2018-11-27 14:05:08,393:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1670.088
2018-11-27 14:05:08,955:INFO: Epoch 119/10023
2018-11-27 14:05:33,274:INFO: - Train metrics: accuracy: 0.860 ; loss: 945.364
2018-11-27 14:05:38,753:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1688.691
2018-11-27 14:05:39,322:INFO: Epoch 120/10023
2018-11-27 14:06:03,811:INFO: - Train metrics: accuracy: 0.861 ; loss: 942.615
2018-11-27 14:06:09,240:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1669.963
2018-11-27 14:06:09,818:INFO: Epoch 121/10023
2018-11-27 14:06:34,206:INFO: - Train metrics: accuracy: 0.862 ; loss: 940.583
2018-11-27 14:06:39,671:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1687.965
2018-11-27 14:06:40,197:INFO: Epoch 122/10023
2018-11-27 14:07:04,631:INFO: - Train metrics: accuracy: 0.863 ; loss: 937.954
2018-11-27 14:07:10,078:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1669.822
2018-11-27 14:07:10,624:INFO: Epoch 123/10023
2018-11-27 14:07:35,114:INFO: - Train metrics: accuracy: 0.864 ; loss: 936.013
2018-11-27 14:07:40,589:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1687.012
2018-11-27 14:07:41,140:INFO: Epoch 124/10023
2018-11-27 14:08:05,564:INFO: - Train metrics: accuracy: 0.865 ; loss: 933.518
2018-11-27 14:08:10,375:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1669.680
2018-11-27 14:08:10,886:INFO: Epoch 125/10023
2018-11-27 14:08:34,852:INFO: - Train metrics: accuracy: 0.866 ; loss: 931.633
2018-11-27 14:08:39,931:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1686.055
2018-11-27 14:08:40,479:INFO: Epoch 126/10023
2018-11-27 14:09:03,075:INFO: - Train metrics: accuracy: 0.866 ; loss: 929.320
2018-11-27 14:09:08,602:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1669.565
2018-11-27 14:09:09,114:INFO: Epoch 127/10023
2018-11-27 14:09:33,859:INFO: - Train metrics: accuracy: 0.867 ; loss: 927.446
2018-11-27 14:09:38,438:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1685.411
2018-11-27 14:09:39,016:INFO: Epoch 128/10023
2018-11-27 14:10:01,212:INFO: - Train metrics: accuracy: 0.868 ; loss: 925.355
2018-11-27 14:10:06,440:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1669.411
2018-11-27 14:10:06,906:INFO: Epoch 129/10023
2018-11-27 14:10:27,751:INFO: - Train metrics: accuracy: 0.869 ; loss: 923.474
2018-11-27 14:10:31,972:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1685.166
2018-11-27 14:10:32,417:INFO: Epoch 130/10023
2018-11-27 14:10:53,561:INFO: - Train metrics: accuracy: 0.870 ; loss: 921.571
2018-11-27 14:10:58,179:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1669.143
2018-11-27 14:10:58,734:INFO: Epoch 131/10023
2018-11-27 14:11:21,465:INFO: - Train metrics: accuracy: 0.871 ; loss: 919.754
2018-11-27 14:11:26,973:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1685.169
2018-11-27 14:11:27,563:INFO: Epoch 132/10023
2018-11-27 14:11:52,104:INFO: - Train metrics: accuracy: 0.872 ; loss: 917.945
2018-11-27 14:11:57,677:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1668.825
2018-11-27 14:11:58,235:INFO: Epoch 133/10023
2018-11-27 14:12:22,597:INFO: - Train metrics: accuracy: 0.873 ; loss: 916.250
2018-11-27 14:12:28,176:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1685.262
2018-11-27 14:12:28,756:INFO: Epoch 134/10023
2018-11-27 14:12:53,406:INFO: - Train metrics: accuracy: 0.873 ; loss: 914.473
2018-11-27 14:12:58,857:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1668.566
2018-11-27 14:12:59,425:INFO: Epoch 135/10023
2018-11-27 14:13:24,104:INFO: - Train metrics: accuracy: 0.874 ; loss: 912.920
2018-11-27 14:13:29,574:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.387
2018-11-27 14:13:30,130:INFO: Epoch 136/10023
2018-11-27 14:13:54,845:INFO: - Train metrics: accuracy: 0.875 ; loss: 911.162
2018-11-27 14:14:00,315:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1668.366
2018-11-27 14:14:00,850:INFO: Epoch 137/10023
2018-11-27 14:14:25,191:INFO: - Train metrics: accuracy: 0.876 ; loss: 909.741
2018-11-27 14:14:30,733:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.484
2018-11-27 14:14:31,274:INFO: Epoch 138/10023
2018-11-27 14:14:55,926:INFO: - Train metrics: accuracy: 0.877 ; loss: 908.007
2018-11-27 14:15:01,335:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1668.189
2018-11-27 14:15:01,877:INFO: Epoch 139/10023
2018-11-27 14:15:26,384:INFO: - Train metrics: accuracy: 0.878 ; loss: 906.709
2018-11-27 14:15:31,925:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.581
2018-11-27 14:15:32,499:INFO: Epoch 140/10023
2018-11-27 14:15:57,108:INFO: - Train metrics: accuracy: 0.879 ; loss: 904.999
2018-11-27 14:16:02,493:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1668.043
2018-11-27 14:16:03,071:INFO: Epoch 141/10023
2018-11-27 14:16:27,619:INFO: - Train metrics: accuracy: 0.880 ; loss: 903.820
2018-11-27 14:16:33,032:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.615
2018-11-27 14:16:33,590:INFO: Epoch 142/10023
2018-11-27 14:16:58,340:INFO: - Train metrics: accuracy: 0.880 ; loss: 902.133
2018-11-27 14:17:03,735:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1667.901
2018-11-27 14:17:04,290:INFO: Epoch 143/10023
2018-11-27 14:17:28,853:INFO: - Train metrics: accuracy: 0.881 ; loss: 901.074
2018-11-27 14:17:34,457:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.682
2018-11-27 14:17:34,991:INFO: Epoch 144/10023
2018-11-27 14:17:59,553:INFO: - Train metrics: accuracy: 0.882 ; loss: 899.391
2018-11-27 14:18:05,003:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1667.743
2018-11-27 14:18:05,568:INFO: Epoch 145/10023
2018-11-27 14:18:30,172:INFO: - Train metrics: accuracy: 0.883 ; loss: 898.483
2018-11-27 14:18:35,504:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1685.827
2018-11-27 14:18:36,064:INFO: Epoch 146/10023
2018-11-27 14:19:00,360:INFO: - Train metrics: accuracy: 0.884 ; loss: 896.762
2018-11-27 14:19:05,819:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1667.587
2018-11-27 14:19:06,379:INFO: Epoch 147/10023
2018-11-27 14:19:29,862:INFO: - Train metrics: accuracy: 0.885 ; loss: 896.067
2018-11-27 14:19:33,953:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1685.978
2018-11-27 14:19:34,384:INFO: Epoch 148/10023
2018-11-27 14:19:54,133:INFO: - Train metrics: accuracy: 0.885 ; loss: 894.206
2018-11-27 14:19:58,411:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.607
2018-11-27 14:19:58,855:INFO: Epoch 149/10023
2018-11-27 14:20:20,657:INFO: - Train metrics: accuracy: 0.886 ; loss: 893.801
2018-11-27 14:20:25,688:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1685.531
2018-11-27 14:20:26,153:INFO: Epoch 150/10023
2018-11-27 14:20:50,657:INFO: - Train metrics: accuracy: 0.887 ; loss: 891.722
2018-11-27 14:20:55,161:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1668.116
2018-11-27 14:20:55,776:INFO: Epoch 151/10023
2018-11-27 14:21:20,204:INFO: - Train metrics: accuracy: 0.888 ; loss: 891.465
2018-11-27 14:21:25,640:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1684.268
2018-11-27 14:21:26,209:INFO: Epoch 152/10023
2018-11-27 14:21:50,104:INFO: - Train metrics: accuracy: 0.889 ; loss: 889.428
2018-11-27 14:21:55,270:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1668.097
2018-11-27 14:21:55,805:INFO: Epoch 153/10023
2018-11-27 14:22:19,220:INFO: - Train metrics: accuracy: 0.889 ; loss: 889.222
2018-11-27 14:22:23,813:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1684.722
2018-11-27 14:22:24,244:INFO: Epoch 154/10023
2018-11-27 14:22:46,720:INFO: - Train metrics: accuracy: 0.890 ; loss: 887.443
2018-11-27 14:22:50,927:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.896
2018-11-27 14:22:51,360:INFO: Epoch 155/10023
2018-11-27 14:23:12,070:INFO: - Train metrics: accuracy: 0.891 ; loss: 887.202
2018-11-27 14:23:16,861:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1684.687
2018-11-27 14:23:17,445:INFO: Epoch 156/10023
2018-11-27 14:23:40,380:INFO: - Train metrics: accuracy: 0.892 ; loss: 885.471
2018-11-27 14:23:45,895:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.958
2018-11-27 14:23:46,465:INFO: Epoch 157/10023
2018-11-27 14:24:10,347:INFO: - Train metrics: accuracy: 0.893 ; loss: 885.200
2018-11-27 14:24:15,722:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1684.469
2018-11-27 14:24:16,206:INFO: Epoch 158/10023
2018-11-27 14:24:40,311:INFO: - Train metrics: accuracy: 0.893 ; loss: 883.602
2018-11-27 14:24:45,577:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.865
2018-11-27 14:24:46,162:INFO: Epoch 159/10023
2018-11-27 14:25:10,722:INFO: - Train metrics: accuracy: 0.894 ; loss: 883.329
2018-11-27 14:25:16,170:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1684.591
2018-11-27 14:25:16,719:INFO: Epoch 160/10023
2018-11-27 14:25:40,920:INFO: - Train metrics: accuracy: 0.895 ; loss: 881.860
2018-11-27 14:25:46,021:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.865
2018-11-27 14:25:46,572:INFO: Epoch 161/10023
2018-11-27 14:26:10,903:INFO: - Train metrics: accuracy: 0.895 ; loss: 881.550
2018-11-27 14:26:16,522:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1684.503
2018-11-27 14:26:17,103:INFO: Epoch 162/10023
2018-11-27 14:26:41,578:INFO: - Train metrics: accuracy: 0.896 ; loss: 880.185
2018-11-27 14:26:47,132:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.875
2018-11-27 14:26:47,646:INFO: Epoch 163/10023
2018-11-27 14:27:11,852:INFO: - Train metrics: accuracy: 0.897 ; loss: 879.855
2018-11-27 14:27:16,602:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1684.553
2018-11-27 14:27:17,042:INFO: Epoch 164/10023
2018-11-27 14:27:38,356:INFO: - Train metrics: accuracy: 0.898 ; loss: 878.619
2018-11-27 14:27:42,640:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.855
2018-11-27 14:27:43,137:INFO: Epoch 165/10023
2018-11-27 14:28:03,813:INFO: - Train metrics: accuracy: 0.898 ; loss: 878.260
2018-11-27 14:28:10,081:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1684.582
2018-11-27 14:28:10,825:INFO: Epoch 166/10023
2018-11-27 14:28:35,326:INFO: - Train metrics: accuracy: 0.899 ; loss: 877.126
2018-11-27 14:28:40,881:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.892
2018-11-27 14:28:41,414:INFO: Epoch 167/10023
2018-11-27 14:29:05,830:INFO: - Train metrics: accuracy: 0.900 ; loss: 876.738
2018-11-27 14:29:11,287:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1684.624
2018-11-27 14:29:11,860:INFO: Epoch 168/10023
2018-11-27 14:29:35,497:INFO: - Train metrics: accuracy: 0.900 ; loss: 875.716
2018-11-27 14:29:40,863:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.876
2018-11-27 14:29:41,419:INFO: Epoch 169/10023
2018-11-27 14:30:04,143:INFO: - Train metrics: accuracy: 0.901 ; loss: 875.308
2018-11-27 14:30:08,472:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1684.709
2018-11-27 14:30:08,928:INFO: Epoch 170/10023
2018-11-27 14:30:33,157:INFO: - Train metrics: accuracy: 0.902 ; loss: 874.385
2018-11-27 14:30:38,601:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.897
2018-11-27 14:30:39,169:INFO: Epoch 171/10023
2018-11-27 14:31:03,603:INFO: - Train metrics: accuracy: 0.902 ; loss: 873.950
2018-11-27 14:31:09,007:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1684.770
2018-11-27 14:31:09,520:INFO: Epoch 172/10023
2018-11-27 14:31:32,655:INFO: - Train metrics: accuracy: 0.903 ; loss: 873.121
2018-11-27 14:31:38,226:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.912
2018-11-27 14:31:38,701:INFO: Epoch 173/10023
2018-11-27 14:31:59,851:INFO: - Train metrics: accuracy: 0.903 ; loss: 872.671
2018-11-27 14:32:06,880:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1684.853
2018-11-27 14:32:07,456:INFO: Epoch 174/10023
2018-11-27 14:32:34,012:INFO: - Train metrics: accuracy: 0.904 ; loss: 871.933
2018-11-27 14:32:39,432:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.926
2018-11-27 14:32:40,020:INFO: Epoch 175/10023
2018-11-27 14:33:04,076:INFO: - Train metrics: accuracy: 0.905 ; loss: 871.463
2018-11-27 14:33:09,614:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1684.919
2018-11-27 14:33:10,172:INFO: Epoch 176/10023
2018-11-27 14:33:34,930:INFO: - Train metrics: accuracy: 0.905 ; loss: 870.803
2018-11-27 14:33:39,927:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.923
2018-11-27 14:33:40,509:INFO: Epoch 177/10023
2018-11-27 14:34:04,887:INFO: - Train metrics: accuracy: 0.906 ; loss: 870.320
2018-11-27 14:34:10,305:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.018
2018-11-27 14:34:10,845:INFO: Epoch 178/10023
2018-11-27 14:34:32,064:INFO: - Train metrics: accuracy: 0.906 ; loss: 869.741
2018-11-27 14:34:36,731:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.921
2018-11-27 14:34:37,200:INFO: Epoch 179/10023
2018-11-27 14:35:01,133:INFO: - Train metrics: accuracy: 0.907 ; loss: 869.240
2018-11-27 14:35:06,626:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.095
2018-11-27 14:35:07,136:INFO: Epoch 180/10023
2018-11-27 14:35:32,066:INFO: - Train metrics: accuracy: 0.908 ; loss: 868.739
2018-11-27 14:35:37,386:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.913
2018-11-27 14:35:37,980:INFO: Epoch 181/10023
2018-11-27 14:36:02,792:INFO: - Train metrics: accuracy: 0.908 ; loss: 868.222
2018-11-27 14:36:08,249:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.216
2018-11-27 14:36:08,821:INFO: Epoch 182/10023
2018-11-27 14:36:35,198:INFO: - Train metrics: accuracy: 0.909 ; loss: 867.799
2018-11-27 14:36:41,102:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.884
2018-11-27 14:36:41,620:INFO: Epoch 183/10023
2018-11-27 14:37:06,027:INFO: - Train metrics: accuracy: 0.909 ; loss: 867.262
2018-11-27 14:37:11,368:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.349
2018-11-27 14:37:11,956:INFO: Epoch 184/10023
2018-11-27 14:37:36,820:INFO: - Train metrics: accuracy: 0.910 ; loss: 866.919
2018-11-27 14:37:42,188:INFO: - Eval metrics: accuracy: 0.947 ; loss: 1667.862
2018-11-27 14:37:42,783:INFO: Epoch 185/10023
2018-11-27 14:38:05,423:INFO: - Train metrics: accuracy: 0.910 ; loss: 866.352
2018-11-27 14:38:11,127:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.527
2018-11-27 14:38:11,670:INFO: Epoch 186/10023
2018-11-27 14:38:37,176:INFO: - Train metrics: accuracy: 0.911 ; loss: 866.094
2018-11-27 14:38:42,554:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1667.822
2018-11-27 14:38:43,138:INFO: Epoch 187/10023
2018-11-27 14:39:08,711:INFO: - Train metrics: accuracy: 0.911 ; loss: 865.488
2018-11-27 14:39:14,085:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.735
2018-11-27 14:39:14,673:INFO: Epoch 188/10023
2018-11-27 14:39:38,688:INFO: - Train metrics: accuracy: 0.912 ; loss: 865.325
2018-11-27 14:39:44,036:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1667.777
2018-11-27 14:39:44,613:INFO: Epoch 189/10023
2018-11-27 14:40:10,120:INFO: - Train metrics: accuracy: 0.912 ; loss: 864.670
2018-11-27 14:40:15,672:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.996
2018-11-27 14:40:16,234:INFO: Epoch 190/10023
2018-11-27 14:40:40,698:INFO: - Train metrics: accuracy: 0.913 ; loss: 864.607
2018-11-27 14:40:46,218:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1667.744
2018-11-27 14:40:46,744:INFO: Epoch 191/10023
2018-11-27 14:41:11,304:INFO: - Train metrics: accuracy: 0.913 ; loss: 863.890
2018-11-27 14:41:16,758:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1686.290
2018-11-27 14:41:17,312:INFO: Epoch 192/10023
2018-11-27 14:41:41,729:INFO: - Train metrics: accuracy: 0.914 ; loss: 863.935
2018-11-27 14:41:46,943:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1667.739
2018-11-27 14:41:47,383:INFO: Epoch 193/10023
2018-11-27 14:42:12,847:INFO: - Train metrics: accuracy: 0.914 ; loss: 863.142
2018-11-27 14:42:18,199:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1686.552
2018-11-27 14:42:18,714:INFO: Epoch 194/10023
2018-11-27 14:42:43,239:INFO: - Train metrics: accuracy: 0.914 ; loss: 863.305
2018-11-27 14:42:48,590:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1667.787
2018-11-27 14:42:49,107:INFO: Epoch 195/10023
2018-11-27 14:43:13,901:INFO: - Train metrics: accuracy: 0.915 ; loss: 862.422
2018-11-27 14:43:19,287:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1686.798
2018-11-27 14:43:19,854:INFO: Epoch 196/10023
2018-11-27 14:43:49,462:INFO: - Train metrics: accuracy: 0.915 ; loss: 862.712
2018-11-27 14:43:54,846:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1667.855
2018-11-27 14:43:55,408:INFO: Epoch 197/10023
2018-11-27 14:44:20,064:INFO: - Train metrics: accuracy: 0.916 ; loss: 861.735
2018-11-27 14:44:24,458:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1687.021
2018-11-27 14:44:24,877:INFO: Epoch 198/10023
2018-11-27 14:44:46,000:INFO: - Train metrics: accuracy: 0.916 ; loss: 862.148
2018-11-27 14:44:51,252:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1667.892
2018-11-27 14:44:51,824:INFO: Epoch 199/10023
2018-11-27 14:45:12,988:INFO: - Train metrics: accuracy: 0.916 ; loss: 861.097
2018-11-27 14:45:17,349:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1687.214
2018-11-27 14:45:17,906:INFO: Epoch 200/10023
2018-11-27 14:45:49,927:INFO: - Train metrics: accuracy: 0.917 ; loss: 861.607
2018-11-27 14:45:55,316:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1667.918
2018-11-27 14:45:55,824:INFO: Epoch 201/10023
2018-11-27 14:46:18,981:INFO: - Train metrics: accuracy: 0.917 ; loss: 860.501
2018-11-27 14:46:23,817:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1687.370
2018-11-27 14:46:24,241:INFO: Epoch 202/10023
2018-11-27 14:46:45,839:INFO: - Train metrics: accuracy: 0.918 ; loss: 861.089
2018-11-27 14:46:49,914:INFO: - Eval metrics: accuracy: 0.948 ; loss: 1667.925
2018-11-27 14:46:50,354:INFO: Epoch 203/10023
2018-11-27 14:47:10,120:INFO: - Train metrics: accuracy: 0.918 ; loss: 859.943
2018-11-27 14:47:14,890:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1687.488
2018-11-27 14:47:15,325:INFO: Epoch 204/10023
2018-11-27 14:47:38,571:INFO: - Train metrics: accuracy: 0.918 ; loss: 860.593
2018-11-27 14:47:44,069:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.921
2018-11-27 14:47:44,627:INFO: Epoch 205/10023
2018-11-27 14:48:07,467:INFO: - Train metrics: accuracy: 0.919 ; loss: 859.417
2018-11-27 14:48:12,105:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1687.568
2018-11-27 14:48:12,588:INFO: Epoch 206/10023
2018-11-27 14:48:41,747:INFO: - Train metrics: accuracy: 0.919 ; loss: 860.113
2018-11-27 14:48:47,234:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.906
2018-11-27 14:48:47,777:INFO: Epoch 207/10023
2018-11-27 14:49:11,123:INFO: - Train metrics: accuracy: 0.919 ; loss: 858.927
2018-11-27 14:49:16,140:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1687.590
2018-11-27 14:49:16,688:INFO: Epoch 208/10023
2018-11-27 14:49:42,210:INFO: - Train metrics: accuracy: 0.920 ; loss: 859.650
2018-11-27 14:49:47,324:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.885
2018-11-27 14:49:47,814:INFO: Epoch 209/10023
2018-11-27 14:50:10,661:INFO: - Train metrics: accuracy: 0.920 ; loss: 858.472
2018-11-27 14:50:16,018:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1687.563
2018-11-27 14:50:16,510:INFO: Epoch 210/10023
2018-11-27 14:50:39,903:INFO: - Train metrics: accuracy: 0.920 ; loss: 859.201
2018-11-27 14:50:45,310:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.854
2018-11-27 14:50:45,886:INFO: Epoch 211/10023
2018-11-27 14:51:10,513:INFO: - Train metrics: accuracy: 0.921 ; loss: 858.048
2018-11-27 14:51:16,052:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1687.500
2018-11-27 14:51:16,632:INFO: Epoch 212/10023
2018-11-27 14:51:41,328:INFO: - Train metrics: accuracy: 0.921 ; loss: 858.766
2018-11-27 14:51:46,712:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.813
2018-11-27 14:51:47,206:INFO: Epoch 213/10023
2018-11-27 14:52:11,413:INFO: - Train metrics: accuracy: 0.921 ; loss: 857.650
2018-11-27 14:52:16,895:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1687.386
2018-11-27 14:52:17,415:INFO: Epoch 214/10023
2018-11-27 14:52:41,906:INFO: - Train metrics: accuracy: 0.922 ; loss: 858.345
2018-11-27 14:52:47,371:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.778
2018-11-27 14:52:47,944:INFO: Epoch 215/10023
2018-11-27 14:53:09,207:INFO: - Train metrics: accuracy: 0.922 ; loss: 857.280
2018-11-27 14:53:13,654:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1687.245
2018-11-27 14:53:14,083:INFO: Epoch 216/10023
2018-11-27 14:53:37,394:INFO: - Train metrics: accuracy: 0.922 ; loss: 857.938
2018-11-27 14:53:42,779:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.741
2018-11-27 14:53:43,303:INFO: Epoch 217/10023
2018-11-27 14:54:07,717:INFO: - Train metrics: accuracy: 0.922 ; loss: 856.934
2018-11-27 14:54:13,054:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1687.064
2018-11-27 14:54:13,625:INFO: Epoch 218/10023
2018-11-27 14:54:38,339:INFO: - Train metrics: accuracy: 0.923 ; loss: 857.547
2018-11-27 14:54:43,766:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.711
2018-11-27 14:54:44,314:INFO: Epoch 219/10023
2018-11-27 14:55:09,371:INFO: - Train metrics: accuracy: 0.923 ; loss: 856.608
2018-11-27 14:55:14,610:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1686.850
2018-11-27 14:55:15,143:INFO: Epoch 220/10023
2018-11-27 14:55:39,766:INFO: - Train metrics: accuracy: 0.923 ; loss: 857.167
2018-11-27 14:55:45,215:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.701
2018-11-27 14:55:45,796:INFO: Epoch 221/10023
2018-11-27 14:56:10,325:INFO: - Train metrics: accuracy: 0.924 ; loss: 856.301
2018-11-27 14:56:15,636:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1686.619
2018-11-27 14:56:16,180:INFO: Epoch 222/10023
2018-11-27 14:56:41,492:INFO: - Train metrics: accuracy: 0.924 ; loss: 856.801
2018-11-27 14:56:47,057:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.683
2018-11-27 14:56:47,544:INFO: Epoch 223/10023
2018-11-27 14:57:12,523:INFO: - Train metrics: accuracy: 0.924 ; loss: 856.009
2018-11-27 14:57:17,900:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1686.360
2018-11-27 14:57:18,442:INFO: Epoch 224/10023
2018-11-27 14:57:46,787:INFO: - Train metrics: accuracy: 0.924 ; loss: 856.452
2018-11-27 14:57:52,222:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.651
2018-11-27 14:57:52,798:INFO: Epoch 225/10023
2018-11-27 14:58:17,408:INFO: - Train metrics: accuracy: 0.925 ; loss: 855.736
2018-11-27 14:58:21,800:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1686.094
2018-11-27 14:58:22,300:INFO: Epoch 226/10023
2018-11-27 14:58:42,936:INFO: - Train metrics: accuracy: 0.925 ; loss: 856.121
2018-11-27 14:58:47,307:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.635
2018-11-27 14:58:47,763:INFO: Epoch 227/10023
2018-11-27 14:59:13,953:INFO: - Train metrics: accuracy: 0.925 ; loss: 855.477
2018-11-27 14:59:19,414:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.822
2018-11-27 14:59:19,992:INFO: Epoch 228/10023
2018-11-27 14:59:44,835:INFO: - Train metrics: accuracy: 0.925 ; loss: 855.792
2018-11-27 14:59:50,382:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1668.290
2018-11-27 14:59:50,972:INFO: Epoch 229/10023
2018-11-27 15:00:15,816:INFO: - Train metrics: accuracy: 0.926 ; loss: 855.536
2018-11-27 15:00:21,361:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1684.959
2018-11-27 15:00:21,935:INFO: Epoch 230/10023
2018-11-27 15:00:47,624:INFO: - Train metrics: accuracy: 0.926 ; loss: 855.323
2018-11-27 15:00:52,926:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.617
2018-11-27 15:00:53,484:INFO: Epoch 231/10023
2018-11-27 15:01:18,022:INFO: - Train metrics: accuracy: 0.926 ; loss: 855.061
2018-11-27 15:01:23,373:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.358
2018-11-27 15:01:23,919:INFO: Epoch 232/10023
2018-11-27 15:01:48,543:INFO: - Train metrics: accuracy: 0.926 ; loss: 855.210
2018-11-27 15:01:53,772:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.683
2018-11-27 15:01:54,299:INFO: Epoch 233/10023
2018-11-27 15:02:21,677:INFO: - Train metrics: accuracy: 0.927 ; loss: 854.703
2018-11-27 15:02:27,247:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1685.616
2018-11-27 15:02:27,794:INFO: Epoch 234/10023
2018-11-27 15:02:49,625:INFO: - Train metrics: accuracy: 0.927 ; loss: 855.139
2018-11-27 15:02:53,818:INFO: - Eval metrics: accuracy: 0.949 ; loss: 1667.698
2018-11-27 15:02:54,258:INFO: Epoch 235/10023
2018-11-27 15:03:20,560:INFO: - Train metrics: accuracy: 0.928 ; loss: 854.523
2018-11-27 15:03:24,692:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1684.762
2018-11-27 15:03:25,120:INFO: Epoch 236/10023
2018-11-27 15:03:50,299:INFO: - Train metrics: accuracy: 0.928 ; loss: 854.662
2018-11-27 15:03:55,705:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1667.730
2018-11-27 15:03:56,253:INFO: Epoch 237/10023
2018-11-27 15:04:22,133:INFO: - Train metrics: accuracy: 0.929 ; loss: 854.259
2018-11-27 15:04:27,408:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1684.371
2018-11-27 15:04:27,872:INFO: Epoch 238/10023
2018-11-27 15:04:51,045:INFO: - Train metrics: accuracy: 0.930 ; loss: 854.369
2018-11-27 15:04:55,792:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1667.656
2018-11-27 15:04:56,388:INFO: Epoch 239/10023
2018-11-27 15:05:22,887:INFO: - Train metrics: accuracy: 0.931 ; loss: 854.045
2018-11-27 15:05:28,948:INFO: - Eval metrics: accuracy: 0.953 ; loss: 1684.004
2018-11-27 15:05:29,739:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-239
2018-11-27 15:05:29,739:INFO: Epoch 240/10023
2018-11-27 15:05:53,956:INFO: - Train metrics: accuracy: 0.932 ; loss: 854.084
2018-11-27 15:05:59,278:INFO: - Eval metrics: accuracy: 0.953 ; loss: 1667.624
2018-11-27 15:05:59,992:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-240
2018-11-27 15:05:59,992:INFO: Epoch 241/10023
2018-11-27 15:06:24,663:INFO: - Train metrics: accuracy: 0.933 ; loss: 853.770
2018-11-27 15:06:30,080:INFO: - Eval metrics: accuracy: 0.952 ; loss: 1683.659
2018-11-27 15:06:30,651:INFO: Epoch 242/10023
2018-11-27 15:06:54,980:INFO: - Train metrics: accuracy: 0.934 ; loss: 853.790
2018-11-27 15:07:01,858:INFO: - Eval metrics: accuracy: 0.954 ; loss: 1667.635
2018-11-27 15:07:02,579:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-242
2018-11-27 15:07:02,580:INFO: Epoch 243/10023
2018-11-27 15:07:26,414:INFO: - Train metrics: accuracy: 0.934 ; loss: 853.459
2018-11-27 15:07:31,714:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1683.292
2018-11-27 15:07:32,173:INFO: Epoch 244/10023
2018-11-27 15:08:00,211:INFO: - Train metrics: accuracy: 0.934 ; loss: 853.478
2018-11-27 15:08:05,284:INFO: - Eval metrics: accuracy: 0.954 ; loss: 1667.676
2018-11-27 15:08:05,757:INFO: Epoch 245/10023
2018-11-27 15:08:31,782:INFO: - Train metrics: accuracy: 0.935 ; loss: 853.115
2018-11-27 15:08:36,632:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1682.812
2018-11-27 15:08:37,081:INFO: Epoch 246/10023
2018-11-27 15:09:14,322:INFO: - Train metrics: accuracy: 0.934 ; loss: 853.147
2018-11-27 15:09:20,240:INFO: - Eval metrics: accuracy: 0.953 ; loss: 1667.746
2018-11-27 15:09:20,815:INFO: Epoch 247/10023
2018-11-27 15:09:48,916:INFO: - Train metrics: accuracy: 0.935 ; loss: 852.738
2018-11-27 15:09:53,870:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1682.208
2018-11-27 15:09:54,292:INFO: Epoch 248/10023
2018-11-27 15:10:37,151:INFO: - Train metrics: accuracy: 0.935 ; loss: 852.788
2018-11-27 15:10:43,723:INFO: - Eval metrics: accuracy: 0.953 ; loss: 1667.851
2018-11-27 15:10:44,831:INFO: Epoch 249/10023
2018-11-27 15:11:06,854:INFO: - Train metrics: accuracy: 0.935 ; loss: 852.335
2018-11-27 15:11:12,171:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1681.451
2018-11-27 15:11:12,676:INFO: Epoch 250/10023
2018-11-27 15:11:33,349:INFO: - Train metrics: accuracy: 0.935 ; loss: 852.399
2018-11-27 15:11:37,471:INFO: - Eval metrics: accuracy: 0.953 ; loss: 1667.945
2018-11-27 15:11:38,009:INFO: Epoch 251/10023
2018-11-27 15:11:57,107:INFO: - Train metrics: accuracy: 0.935 ; loss: 851.907
2018-11-27 15:12:01,560:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1680.539
2018-11-27 15:12:02,120:INFO: Epoch 252/10023
2018-11-27 15:12:23,714:INFO: - Train metrics: accuracy: 0.935 ; loss: 851.983
2018-11-27 15:12:29,210:INFO: - Eval metrics: accuracy: 0.953 ; loss: 1667.975
2018-11-27 15:12:29,770:INFO: Epoch 253/10023
2018-11-27 15:12:52,946:INFO: - Train metrics: accuracy: 0.935 ; loss: 851.461
2018-11-27 15:12:58,295:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1679.550
2018-11-27 15:12:58,844:INFO: Epoch 254/10023
2018-11-27 15:13:23,119:INFO: - Train metrics: accuracy: 0.935 ; loss: 851.539
2018-11-27 15:13:28,450:INFO: - Eval metrics: accuracy: 0.953 ; loss: 1667.938
2018-11-27 15:13:28,975:INFO: Epoch 255/10023
2018-11-27 15:13:53,522:INFO: - Train metrics: accuracy: 0.935 ; loss: 850.985
2018-11-27 15:13:59,706:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1678.455
2018-11-27 15:14:00,266:INFO: Epoch 256/10023
2018-11-27 15:14:23,703:INFO: - Train metrics: accuracy: 0.935 ; loss: 851.078
2018-11-27 15:14:29,173:INFO: - Eval metrics: accuracy: 0.953 ; loss: 1667.775
2018-11-27 15:14:29,710:INFO: Epoch 257/10023
2018-11-27 15:14:54,626:INFO: - Train metrics: accuracy: 0.935 ; loss: 850.478
2018-11-27 15:14:59,864:INFO: - Eval metrics: accuracy: 0.950 ; loss: 1677.170
2018-11-27 15:15:00,392:INFO: Epoch 258/10023
2018-11-27 15:15:25,262:INFO: - Train metrics: accuracy: 0.936 ; loss: 850.575
2018-11-27 15:15:30,028:INFO: - Eval metrics: accuracy: 0.953 ; loss: 1667.550
2018-11-27 15:15:30,522:INFO: Epoch 259/10023
2018-11-27 15:15:54,535:INFO: - Train metrics: accuracy: 0.936 ; loss: 849.977
2018-11-27 15:15:59,852:INFO: - Eval metrics: accuracy: 0.951 ; loss: 1675.622
2018-11-27 15:16:00,369:INFO: Epoch 260/10023
2018-11-27 15:16:23,116:INFO: - Train metrics: accuracy: 0.936 ; loss: 849.955
2018-11-27 15:16:28,066:INFO: - Eval metrics: accuracy: 0.953 ; loss: 1667.457
2018-11-27 15:16:28,493:INFO: Epoch 261/10023
2018-11-27 15:17:24,754:INFO: Creating the datasets...
2018-11-27 15:17:30,307:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 15:17:30,642:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 15:17:30,688:INFO: - done.
2018-11-27 15:17:30,688:INFO: Creating the model...
2018-11-27 15:17:30,867:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 15:17:32,324:INFO: - done.
2018-11-27 15:17:32,324:INFO: Starting training for 10000 epoch(s)
2018-11-27 15:17:32,692:INFO: Restoring parameters from experiments/last_weights
2018-11-27 15:17:32,723:INFO: Restoring parameters from experiments/last_weights/after-epoch-260
2018-11-27 15:17:33,363:INFO: Epoch 261/10260
2018-11-27 15:18:52,625:INFO: Creating the datasets...
2018-11-27 15:18:54,599:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 15:18:54,914:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 15:18:54,960:INFO: - done.
2018-11-27 15:18:54,960:INFO: Creating the model...
2018-11-27 15:18:55,050:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 15:18:56,394:INFO: - done.
2018-11-27 15:18:56,394:INFO: Starting training for 10000 epoch(s)
2018-11-27 15:18:56,533:INFO: Restoring parameters from experiments/last_weights
2018-11-27 15:18:56,536:INFO: Restoring parameters from experiments/last_weights/after-epoch-260
2018-11-27 15:18:57,159:INFO: Epoch 261/10260
2018-11-27 15:19:40,174:INFO: Creating the datasets...
2018-11-27 15:19:42,135:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 15:19:42,444:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 15:19:42,489:INFO: - done.
2018-11-27 15:19:42,490:INFO: Creating the model...
2018-11-27 15:19:42,577:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 15:19:43,894:INFO: - done.
2018-11-27 15:19:43,894:INFO: Starting training for 10000 epoch(s)
2018-11-27 15:19:44,038:INFO: Restoring parameters from experiments/best_weights
2018-11-27 15:19:44,065:INFO: Restoring parameters from experiments/best_weights/after-epoch-242
2018-11-27 15:19:44,904:INFO: Epoch 243/10242
2018-11-27 15:20:36,126:INFO: Creating the datasets...
2018-11-27 15:20:37,852:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 15:20:38,171:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 15:20:38,217:INFO: - done.
2018-11-27 15:20:38,217:INFO: Creating the model...
2018-11-27 15:20:38,308:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 15:20:39,648:INFO: - done.
2018-11-27 15:20:39,648:INFO: Starting training for 10000 epoch(s)
2018-11-27 15:20:39,793:INFO: Restoring parameters from experiments/last_weights
2018-11-27 15:20:39,796:INFO: Restoring parameters from experiments/last_weights/after-epoch-260
2018-11-27 15:20:40,440:INFO: Epoch 261/10260
2018-11-27 15:22:32,180:INFO: Creating the datasets...
2018-11-27 15:22:33,917:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 15:22:34,230:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 15:22:34,276:INFO: - done.
2018-11-27 15:22:34,277:INFO: Creating the model...
2018-11-27 15:22:34,366:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 15:22:35,700:INFO: - done.
2018-11-27 15:22:35,700:INFO: Starting training for 10000 epoch(s)
2018-11-27 15:22:36,462:INFO: Epoch 1/10000
2018-11-27 15:23:00,030:INFO: - Train metrics: accuracy: 0.089 ; loss: 455654.344
2018-11-27 15:23:05,521:INFO: - Eval metrics: accuracy: 0.147 ; loss: 708245.562
2018-11-27 15:23:06,678:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 15:23:06,678:INFO: Epoch 2/10000
2018-11-27 15:23:30,320:INFO: - Train metrics: accuracy: 0.240 ; loss: 446273.812
2018-11-27 15:23:34,586:INFO: - Eval metrics: accuracy: 0.409 ; loss: 686908.000
2018-11-27 15:23:35,210:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 15:23:35,211:INFO: Epoch 3/10000
2018-11-27 15:23:59,474:INFO: - Train metrics: accuracy: 0.289 ; loss: 426772.844
2018-11-27 15:24:04,724:INFO: - Eval metrics: accuracy: 0.445 ; loss: 651556.688
2018-11-27 15:24:05,576:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-27 15:24:05,576:INFO: Epoch 4/10000
2018-11-27 15:24:32,018:INFO: - Train metrics: accuracy: 0.367 ; loss: 398606.438
2018-11-27 15:24:37,346:INFO: - Eval metrics: accuracy: 0.396 ; loss: 603880.750
2018-11-27 15:24:37,890:INFO: Epoch 5/10000
2018-11-27 15:25:06,048:INFO: - Train metrics: accuracy: 0.386 ; loss: 363051.469
2018-11-27 15:25:12,169:INFO: - Eval metrics: accuracy: 0.489 ; loss: 545923.875
2018-11-27 15:25:12,934:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-27 15:25:12,935:INFO: Epoch 6/10000
2018-11-27 15:25:39,640:INFO: - Train metrics: accuracy: 0.361 ; loss: 322201.969
2018-11-27 15:25:45,075:INFO: - Eval metrics: accuracy: 0.518 ; loss: 480293.062
2018-11-27 15:25:45,809:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-27 15:25:45,810:INFO: Epoch 7/10000
2018-11-27 15:26:11,040:INFO: - Train metrics: accuracy: 0.374 ; loss: 278699.156
2018-11-27 15:26:15,420:INFO: - Eval metrics: accuracy: 0.557 ; loss: 410978.281
2018-11-27 15:26:16,175:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-27 15:26:16,176:INFO: Epoch 8/10000
2018-11-27 15:26:40,420:INFO: - Train metrics: accuracy: 0.390 ; loss: 232682.422
2018-11-27 15:26:45,581:INFO: - Eval metrics: accuracy: 0.598 ; loss: 337162.500
2018-11-27 15:26:46,311:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-27 15:26:46,312:INFO: Epoch 9/10000
2018-11-27 15:27:10,283:INFO: - Train metrics: accuracy: 0.404 ; loss: 186801.516
2018-11-27 15:27:15,535:INFO: - Eval metrics: accuracy: 0.638 ; loss: 263424.438
2018-11-27 15:27:16,253:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-27 15:27:16,254:INFO: Epoch 10/10000
2018-11-27 15:27:39,859:INFO: - Train metrics: accuracy: 0.423 ; loss: 143020.031
2018-11-27 15:27:44,017:INFO: - Eval metrics: accuracy: 0.674 ; loss: 192756.234
2018-11-27 15:27:44,608:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-27 15:27:44,608:INFO: Epoch 11/10000
2018-11-27 15:28:07,644:INFO: - Train metrics: accuracy: 0.462 ; loss: 102995.727
2018-11-27 15:28:12,625:INFO: - Eval metrics: accuracy: 0.664 ; loss: 128557.961
2018-11-27 15:28:13,137:INFO: Epoch 12/10000
2018-11-27 15:28:36,937:INFO: - Train metrics: accuracy: 0.526 ; loss: 70120.438
2018-11-27 15:28:42,055:INFO: - Eval metrics: accuracy: 0.706 ; loss: 74902.391
2018-11-27 15:28:42,647:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-27 15:28:42,648:INFO: Epoch 13/10000
2018-11-27 15:29:06,690:INFO: - Train metrics: accuracy: 0.587 ; loss: 45893.008
2018-11-27 15:29:12,014:INFO: - Eval metrics: accuracy: 0.823 ; loss: 36386.625
2018-11-27 15:29:12,687:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-27 15:29:12,687:INFO: Epoch 14/10000
2018-11-27 15:29:38,250:INFO: - Train metrics: accuracy: 0.625 ; loss: 31234.047
2018-11-27 15:29:44,578:INFO: - Eval metrics: accuracy: 0.871 ; loss: 16250.808
2018-11-27 15:29:45,357:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-27 15:29:45,358:INFO: Epoch 15/10000
2018-11-27 15:30:12,212:INFO: - Train metrics: accuracy: 0.653 ; loss: 24115.371
2018-11-27 15:30:17,577:INFO: - Eval metrics: accuracy: 0.892 ; loss: 8538.789
2018-11-27 15:30:18,350:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-27 15:30:18,350:INFO: Epoch 16/10000
2018-11-27 15:30:46,407:INFO: - Train metrics: accuracy: 0.670 ; loss: 20509.982
2018-11-27 15:30:51,870:INFO: - Eval metrics: accuracy: 0.914 ; loss: 6056.435
2018-11-27 15:30:52,636:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-27 15:30:52,637:INFO: Epoch 17/10000
2018-11-27 15:31:18,334:INFO: - Train metrics: accuracy: 0.679 ; loss: 18626.322
2018-11-27 15:31:23,207:INFO: - Eval metrics: accuracy: 0.900 ; loss: 5468.124
2018-11-27 15:31:23,658:INFO: Epoch 18/10000
2018-11-27 15:31:47,948:INFO: - Train metrics: accuracy: 0.686 ; loss: 17117.594
2018-11-27 15:31:53,376:INFO: - Eval metrics: accuracy: 0.891 ; loss: 5099.862
2018-11-27 15:31:53,832:INFO: Epoch 19/10000
2018-11-27 15:32:17,674:INFO: - Train metrics: accuracy: 0.693 ; loss: 15879.818
2018-11-27 15:32:23,098:INFO: - Eval metrics: accuracy: 0.923 ; loss: 4380.866
2018-11-27 15:32:23,731:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-27 15:32:23,732:INFO: Epoch 20/10000
2018-11-27 15:32:48,078:INFO: - Train metrics: accuracy: 0.696 ; loss: 13928.543
2018-11-27 15:32:53,467:INFO: - Eval metrics: accuracy: 0.920 ; loss: 4161.909
2018-11-27 15:32:53,954:INFO: Epoch 21/10000
2018-11-27 15:33:17,175:INFO: - Train metrics: accuracy: 0.692 ; loss: 11384.072
2018-11-27 15:33:22,458:INFO: - Eval metrics: accuracy: 0.920 ; loss: 3482.156
2018-11-27 15:33:22,991:INFO: Epoch 22/10000
2018-11-27 15:33:47,104:INFO: - Train metrics: accuracy: 0.706 ; loss: 9632.347
2018-11-27 15:33:52,393:INFO: - Eval metrics: accuracy: 0.929 ; loss: 2944.610
2018-11-27 15:33:53,134:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-27 15:33:53,134:INFO: Epoch 23/10000
2018-11-27 15:34:18,960:INFO: - Train metrics: accuracy: 0.714 ; loss: 8340.402
2018-11-27 15:34:24,642:INFO: - Eval metrics: accuracy: 0.933 ; loss: 2818.233
2018-11-27 15:34:25,479:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-23
2018-11-27 15:34:25,481:INFO: Epoch 24/10000
2018-11-27 15:34:53,533:INFO: - Train metrics: accuracy: 0.716 ; loss: 7098.446
2018-11-27 15:34:58,917:INFO: - Eval metrics: accuracy: 0.937 ; loss: 2654.324
2018-11-27 15:34:59,727:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-27 15:34:59,728:INFO: Epoch 25/10000
2018-11-27 15:35:26,384:INFO: Creating the datasets...
2018-11-27 15:35:32,529:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 15:35:33,311:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 15:35:33,413:INFO: - done.
2018-11-27 15:35:33,414:INFO: Creating the model...
2018-11-27 15:35:33,689:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 15:35:36,748:INFO: - done.
2018-11-27 15:35:36,749:INFO: Starting training for 10000 epoch(s)
2018-11-27 15:35:37,989:INFO: Epoch 1/10000
2018-11-27 15:36:02,742:INFO: - Train metrics: accuracy: 0.089 ; loss: 455654.344
2018-11-27 15:36:08,265:INFO: - Eval metrics: accuracy: 0.147 ; loss: 708245.562
2018-11-27 15:36:08,999:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 15:36:09,000:INFO: Epoch 2/10000
2018-11-27 15:36:32,882:INFO: - Train metrics: accuracy: 0.240 ; loss: 446273.812
2018-11-27 15:36:38,202:INFO: - Eval metrics: accuracy: 0.409 ; loss: 686908.000
2018-11-27 15:36:50,491:INFO: Creating the datasets...
2018-11-27 15:36:52,466:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 15:36:52,792:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 15:36:52,842:INFO: - done.
2018-11-27 15:36:52,842:INFO: Creating the model...
2018-11-27 15:36:52,944:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 15:36:54,328:INFO: - done.
2018-11-27 15:36:54,328:INFO: Starting training for 10000 epoch(s)
2018-11-27 15:36:54,475:INFO: Restoring parameters from experiments/best_weights
2018-11-27 15:36:54,501:INFO: Restoring parameters from experiments/best_weights/after-epoch-1
2018-11-27 15:36:55,161:INFO: Epoch 2/10001
2018-11-27 15:37:19,963:INFO: - Train metrics: accuracy: 0.240 ; loss: 446273.812
2018-11-27 15:37:25,337:INFO: - Eval metrics: accuracy: 0.409 ; loss: 686908.000
2018-11-27 15:37:26,179:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 15:37:26,180:INFO: Epoch 3/10001
2018-11-27 15:37:50,606:INFO: - Train metrics: accuracy: 0.289 ; loss: 426772.844
2018-11-27 15:37:55,131:INFO: - Eval metrics: accuracy: 0.445 ; loss: 651556.688
2018-11-27 15:37:55,757:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-27 15:37:55,757:INFO: Epoch 4/10001
2018-11-27 15:38:24,314:INFO: - Train metrics: accuracy: 0.367 ; loss: 398606.438
2018-11-27 15:38:30,071:INFO: - Eval metrics: accuracy: 0.396 ; loss: 603880.750
2018-11-27 15:38:30,599:INFO: Epoch 5/10001
2018-11-27 15:39:06,474:INFO: Creating the datasets...
2018-11-27 15:39:11,886:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 15:39:12,216:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 15:39:12,261:INFO: - done.
2018-11-27 15:39:12,261:INFO: Creating the model...
2018-11-27 15:39:12,446:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:276: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 15:39:13,764:INFO: - done.
2018-11-27 15:39:13,765:INFO: Starting training for 10000 epoch(s)
2018-11-27 15:39:14,063:INFO: Restoring parameters from experiments/best_weights
2018-11-27 15:39:14,110:INFO: Restoring parameters from experiments/best_weights/after-epoch-3
2018-11-27 15:39:14,816:INFO: Epoch 4/10003
2018-11-27 15:39:39,687:INFO: - Train metrics: accuracy: 0.367 ; loss: 398606.438
2018-11-27 15:39:44,896:INFO: - Eval metrics: accuracy: 0.396 ; loss: 603880.750
2018-11-27 15:39:45,759:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-27 15:39:45,759:INFO: Epoch 5/10003
2018-11-27 15:40:01,937:INFO: Creating the datasets...
2018-11-27 15:40:14,303:INFO: Creating the datasets...
2018-11-27 15:40:16,017:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 15:40:16,327:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 15:40:16,372:INFO: - done.
2018-11-27 15:40:16,372:INFO: Creating the model...
2018-11-27 15:40:16,467:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 15:40:17,765:INFO: - done.
2018-11-27 15:40:17,766:INFO: Starting training for 10000 epoch(s)
2018-11-27 15:40:18,519:INFO: Epoch 1/10000
2018-11-27 15:40:43,711:INFO: - Train metrics: accuracy: 0.099 ; loss: 455331.531
2018-11-27 15:40:49,164:INFO: - Eval metrics: accuracy: 0.182 ; loss: 706847.938
2018-11-27 15:40:49,995:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 15:40:49,995:INFO: Epoch 2/10000
2018-11-27 15:41:13,668:INFO: - Train metrics: accuracy: 0.255 ; loss: 444104.906
2018-11-27 15:41:18,763:INFO: - Eval metrics: accuracy: 0.373 ; loss: 681717.062
2018-11-27 15:41:19,417:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 15:41:19,417:INFO: Epoch 3/10000
2018-11-27 15:41:47,632:INFO: - Train metrics: accuracy: 0.300 ; loss: 421395.750
2018-11-27 15:41:53,097:INFO: - Eval metrics: accuracy: 0.466 ; loss: 640650.000
2018-11-27 15:41:53,847:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-27 15:41:53,847:INFO: Epoch 4/10000
2018-11-27 15:42:22,619:INFO: - Train metrics: accuracy: 0.364 ; loss: 388963.531
2018-11-27 15:42:28,374:INFO: - Eval metrics: accuracy: 0.416 ; loss: 586211.688
2018-11-27 15:42:28,958:INFO: Epoch 5/10000
2018-11-27 15:42:58,149:INFO: - Train metrics: accuracy: 0.382 ; loss: 348840.906
2018-11-27 15:43:03,756:INFO: - Eval metrics: accuracy: 0.496 ; loss: 520919.688
2018-11-27 15:43:04,453:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-27 15:43:04,454:INFO: Epoch 6/10000
2018-11-27 15:43:26,497:INFO: - Train metrics: accuracy: 0.352 ; loss: 303797.562
2018-11-27 15:43:31,778:INFO: - Eval metrics: accuracy: 0.542 ; loss: 448212.844
2018-11-27 15:43:32,455:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-27 15:43:32,456:INFO: Epoch 7/10000
2018-11-27 15:43:56,228:INFO: - Train metrics: accuracy: 0.379 ; loss: 255553.969
2018-11-27 15:44:01,442:INFO: - Eval metrics: accuracy: 0.580 ; loss: 371050.594
2018-11-27 15:44:02,129:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-27 15:44:02,129:INFO: Epoch 8/10000
2018-11-27 15:44:30,226:INFO: - Train metrics: accuracy: 0.398 ; loss: 205770.781
2018-11-27 15:44:35,227:INFO: - Eval metrics: accuracy: 0.623 ; loss: 291293.562
2018-11-27 15:44:35,894:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-27 15:44:35,895:INFO: Epoch 9/10000
2018-11-27 15:44:58,749:INFO: - Train metrics: accuracy: 0.415 ; loss: 157585.094
2018-11-27 15:45:03,945:INFO: - Eval metrics: accuracy: 0.662 ; loss: 213378.000
2018-11-27 15:45:04,666:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-27 15:45:04,666:INFO: Epoch 10/10000
2018-11-27 15:45:28,636:INFO: - Train metrics: accuracy: 0.451 ; loss: 112795.711
2018-11-27 15:45:33,591:INFO: - Eval metrics: accuracy: 0.651 ; loss: 141678.234
2018-11-27 15:45:34,124:INFO: Epoch 11/10000
2018-11-27 15:45:59,484:INFO: - Train metrics: accuracy: 0.517 ; loss: 75337.445
2018-11-27 15:46:04,764:INFO: - Eval metrics: accuracy: 0.694 ; loss: 81026.672
2018-11-27 15:46:05,466:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-27 15:46:05,466:INFO: Epoch 12/10000
2018-11-27 15:46:28,591:INFO: - Train metrics: accuracy: 0.581 ; loss: 48116.941
2018-11-27 15:46:33,710:INFO: - Eval metrics: accuracy: 0.819 ; loss: 37371.508
2018-11-27 15:46:34,259:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-27 15:46:34,260:INFO: Epoch 13/10000
2018-11-27 15:47:00,326:INFO: - Train metrics: accuracy: 0.621 ; loss: 32699.721
2018-11-27 15:47:05,899:INFO: - Eval metrics: accuracy: 0.869 ; loss: 15723.016
2018-11-27 15:47:06,613:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-27 15:47:06,613:INFO: Epoch 14/10000
2018-11-27 15:47:29,215:INFO: - Train metrics: accuracy: 0.648 ; loss: 25677.812
2018-11-27 15:47:33,362:INFO: - Eval metrics: accuracy: 0.883 ; loss: 8980.994
2018-11-27 15:47:33,919:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-27 15:47:33,920:INFO: Epoch 15/10000
2018-11-27 15:47:54,758:INFO: - Train metrics: accuracy: 0.666 ; loss: 21571.854
2018-11-27 15:48:00,038:INFO: - Eval metrics: accuracy: 0.903 ; loss: 6430.062
2018-11-27 15:48:00,742:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-27 15:48:00,742:INFO: Epoch 16/10000
2018-11-27 15:48:25,311:INFO: - Train metrics: accuracy: 0.677 ; loss: 18714.607
2018-11-27 15:48:30,694:INFO: - Eval metrics: accuracy: 0.913 ; loss: 5399.368
2018-11-27 15:48:31,399:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-27 15:48:31,399:INFO: Epoch 17/10000
2018-11-27 15:48:56,594:INFO: - Train metrics: accuracy: 0.685 ; loss: 16568.885
2018-11-27 15:49:01,497:INFO: - Eval metrics: accuracy: 0.915 ; loss: 4696.881
2018-11-27 15:49:02,195:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-17
2018-11-27 15:49:02,196:INFO: Epoch 18/10000
2018-11-27 15:49:26,449:INFO: - Train metrics: accuracy: 0.693 ; loss: 14475.728
2018-11-27 15:49:31,343:INFO: - Eval metrics: accuracy: 0.916 ; loss: 4128.128
2018-11-27 15:49:31,992:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-27 15:49:31,993:INFO: Epoch 19/10000
2018-11-27 15:49:55,737:INFO: - Train metrics: accuracy: 0.700 ; loss: 12612.633
2018-11-27 15:50:00,785:INFO: - Eval metrics: accuracy: 0.925 ; loss: 3617.781
2018-11-27 15:50:01,444:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-27 15:50:01,445:INFO: Epoch 20/10000
2018-11-27 15:50:25,679:INFO: - Train metrics: accuracy: 0.704 ; loss: 11091.495
2018-11-27 15:50:30,796:INFO: - Eval metrics: accuracy: 0.923 ; loss: 3252.551
2018-11-27 15:50:31,332:INFO: Epoch 21/10000
2018-11-27 15:50:55,528:INFO: - Train metrics: accuracy: 0.707 ; loss: 10261.586
2018-11-27 15:51:00,723:INFO: - Eval metrics: accuracy: 0.930 ; loss: 3433.886
2018-11-27 15:51:01,319:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-27 15:51:01,320:INFO: Epoch 22/10000
2018-11-27 15:51:26,369:INFO: - Train metrics: accuracy: 0.707 ; loss: 9575.511
2018-11-27 15:51:31,327:INFO: - Eval metrics: accuracy: 0.930 ; loss: 3378.565
2018-11-27 15:51:32,092:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-27 15:51:32,093:INFO: Epoch 23/10000
2018-11-27 15:51:56,816:INFO: - Train metrics: accuracy: 0.705 ; loss: 9005.565
2018-11-27 15:52:02,050:INFO: - Eval metrics: accuracy: 0.928 ; loss: 2874.781
2018-11-27 15:52:02,549:INFO: Epoch 24/10000
2018-11-27 15:52:27,672:INFO: - Train metrics: accuracy: 0.707 ; loss: 8461.528
2018-11-27 15:52:32,725:INFO: - Eval metrics: accuracy: 0.935 ; loss: 2846.081
2018-11-27 15:52:33,468:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-27 15:52:33,469:INFO: Epoch 25/10000
2018-11-27 15:52:58,650:INFO: - Train metrics: accuracy: 0.704 ; loss: 8011.291
2018-11-27 15:53:03,840:INFO: - Eval metrics: accuracy: 0.935 ; loss: 3150.696
2018-11-27 15:53:04,336:INFO: Epoch 26/10000
2018-11-27 15:53:28,969:INFO: - Train metrics: accuracy: 0.711 ; loss: 7484.946
2018-11-27 15:53:33,993:INFO: - Eval metrics: accuracy: 0.934 ; loss: 2836.847
2018-11-27 15:53:34,508:INFO: Epoch 27/10000
2018-11-27 15:53:58,850:INFO: - Train metrics: accuracy: 0.714 ; loss: 6908.376
2018-11-27 15:54:04,021:INFO: - Eval metrics: accuracy: 0.928 ; loss: 2630.986
2018-11-27 15:54:04,550:INFO: Epoch 28/10000
2018-11-27 15:54:29,219:INFO: - Train metrics: accuracy: 0.709 ; loss: 6419.240
2018-11-27 15:54:34,103:INFO: - Eval metrics: accuracy: 0.926 ; loss: 2527.702
2018-11-27 15:54:34,611:INFO: Epoch 29/10000
2018-11-27 15:54:58,682:INFO: - Train metrics: accuracy: 0.710 ; loss: 5982.896
2018-11-27 15:55:03,988:INFO: - Eval metrics: accuracy: 0.916 ; loss: 2485.546
2018-11-27 15:55:04,525:INFO: Epoch 30/10000
2018-11-27 15:55:29,650:INFO: - Train metrics: accuracy: 0.716 ; loss: 5625.651
2018-11-27 15:55:34,784:INFO: - Eval metrics: accuracy: 0.939 ; loss: 2618.601
2018-11-27 15:55:35,487:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-30
2018-11-27 15:55:35,488:INFO: Epoch 31/10000
2018-11-27 15:56:00,070:INFO: - Train metrics: accuracy: 0.696 ; loss: 5162.967
2018-11-27 15:56:05,312:INFO: - Eval metrics: accuracy: 0.902 ; loss: 2581.101
2018-11-27 15:56:05,850:INFO: Epoch 32/10000
2018-11-27 15:56:30,390:INFO: - Train metrics: accuracy: 0.678 ; loss: 4892.375
2018-11-27 15:56:35,297:INFO: - Eval metrics: accuracy: 0.926 ; loss: 2446.799
2018-11-27 15:56:35,867:INFO: Epoch 33/10000
2018-11-27 15:57:00,263:INFO: - Train metrics: accuracy: 0.705 ; loss: 4755.234
2018-11-27 15:57:06,665:INFO: Creating the datasets...
2018-11-27 15:57:08,390:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 15:57:08,698:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 15:57:08,743:INFO: - done.
2018-11-27 15:57:08,743:INFO: Creating the model...
2018-11-27 15:57:08,837:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 15:57:10,113:INFO: - done.
2018-11-27 15:57:10,114:INFO: Starting training for 10000 epoch(s)
2018-11-27 15:57:10,864:INFO: Epoch 1/10000
2018-11-27 15:57:38,909:INFO: Creating the datasets...
2018-11-27 15:57:40,636:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 15:57:40,958:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 15:57:41,007:INFO: - done.
2018-11-27 15:57:41,007:INFO: Creating the model...
2018-11-27 15:57:41,109:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 15:57:42,424:INFO: - done.
2018-11-27 15:57:42,424:INFO: Starting training for 10000 epoch(s)
2018-11-27 15:57:42,569:INFO: Restoring parameters from experiments/best_weights
2018-11-27 15:57:42,571:INFO: Restoring parameters from experiments/best_weights/after-epoch-30
2018-11-27 15:57:43,198:INFO: Epoch 31/10030
2018-11-27 15:58:08,411:INFO: - Train metrics: accuracy: 0.696 ; loss: 5162.967
2018-11-27 15:58:13,931:INFO: - Eval metrics: accuracy: 0.902 ; loss: 2581.101
2018-11-27 15:58:14,729:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-31
2018-11-27 15:58:14,729:INFO: Epoch 32/10030
2018-11-27 16:16:35,414:INFO: Creating the datasets...
2018-11-27 16:16:37,085:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 16:16:37,394:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 16:16:37,439:INFO: - done.
2018-11-27 16:16:37,439:INFO: Creating the model...
2018-11-27 16:16:37,533:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 16:16:38,816:INFO: - done.
2018-11-27 16:16:38,816:INFO: Starting training for 10000 epoch(s)
2018-11-27 16:16:38,956:INFO: Restoring parameters from experiments/best_weights
2018-11-27 16:16:55,481:INFO: Creating the datasets...
2018-11-27 16:16:57,153:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 16:16:57,459:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 16:16:57,502:INFO: - done.
2018-11-27 16:16:57,502:INFO: Creating the model...
2018-11-27 16:16:57,595:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 16:16:58,864:INFO: - done.
2018-11-27 16:16:58,864:INFO: Starting training for 10000 epoch(s)
2018-11-27 16:16:59,620:INFO: Epoch 1/10000
2018-11-27 16:17:42,019:INFO: Creating the datasets...
2018-11-27 16:17:43,796:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 16:17:44,106:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 16:17:44,152:INFO: - done.
2018-11-27 16:17:44,152:INFO: Creating the model...
2018-11-27 16:17:44,253:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 16:17:45,554:INFO: - done.
2018-11-27 16:17:45,554:INFO: Starting training for 10000 epoch(s)
2018-11-27 16:17:46,298:INFO: Epoch 1/10000
2018-11-27 16:18:11,597:INFO: - Train metrics: accuracy: 0.059 ; loss: 3871001.250
2018-11-27 16:18:26,523:INFO: Creating the datasets...
2018-11-27 16:18:28,232:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 16:18:28,540:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 16:18:28,584:INFO: - done.
2018-11-27 16:18:28,584:INFO: Creating the model...
2018-11-27 16:18:28,679:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 16:18:29,965:INFO: - done.
2018-11-27 16:18:29,965:INFO: Starting training for 10000 epoch(s)
2018-11-27 16:18:30,694:INFO: Epoch 1/10000
2018-11-27 16:19:16,967:INFO: - Train metrics: accuracy: 0.106 ; loss: 3273387.250
2018-11-27 16:19:27,477:INFO: - Eval metrics: accuracy: 0.177 ; loss: 1691640.375
2018-11-27 16:19:28,266:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 16:19:28,267:INFO: Epoch 2/10000
2018-11-27 16:20:14,107:INFO: - Train metrics: accuracy: 0.248 ; loss: 3164949.750
2018-11-27 16:20:24,793:INFO: - Eval metrics: accuracy: 0.245 ; loss: 1583952.375
2018-11-27 16:20:25,537:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 16:20:25,538:INFO: Epoch 3/10000
2018-11-27 16:21:12,075:INFO: - Train metrics: accuracy: 0.331 ; loss: 2951100.500
2018-11-27 16:21:22,171:INFO: - Eval metrics: accuracy: 0.287 ; loss: 1417859.625
2018-11-27 16:21:22,928:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-27 16:21:22,929:INFO: Epoch 4/10000
2018-11-27 16:22:08,182:INFO: - Train metrics: accuracy: 0.310 ; loss: 2655544.000
2018-11-27 16:22:18,339:INFO: - Eval metrics: accuracy: 0.297 ; loss: 1217627.250
2018-11-27 16:22:19,023:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-4
2018-11-27 16:22:19,023:INFO: Epoch 5/10000
2018-11-27 16:23:03,145:INFO: - Train metrics: accuracy: 0.314 ; loss: 2301987.250
2018-11-27 16:23:13,390:INFO: - Eval metrics: accuracy: 0.304 ; loss: 998760.188
2018-11-27 16:23:14,083:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-5
2018-11-27 16:23:14,084:INFO: Epoch 6/10000
2018-11-27 16:23:58,644:INFO: - Train metrics: accuracy: 0.329 ; loss: 1910324.000
2018-11-27 16:24:07,895:INFO: - Eval metrics: accuracy: 0.327 ; loss: 778319.812
2018-11-27 16:24:08,564:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-6
2018-11-27 16:24:08,565:INFO: Epoch 7/10000
2018-11-27 16:24:54,292:INFO: - Train metrics: accuracy: 0.374 ; loss: 1499328.125
2018-11-27 16:25:04,451:INFO: - Eval metrics: accuracy: 0.339 ; loss: 567451.875
2018-11-27 16:25:05,137:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-7
2018-11-27 16:25:05,137:INFO: Epoch 8/10000
2018-11-27 16:25:48,591:INFO: - Train metrics: accuracy: 0.428 ; loss: 1095690.250
2018-11-27 16:25:57,895:INFO: - Eval metrics: accuracy: 0.367 ; loss: 384539.500
2018-11-27 16:25:58,615:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-8
2018-11-27 16:25:58,615:INFO: Epoch 9/10000
2018-11-27 16:26:41,995:INFO: - Train metrics: accuracy: 0.480 ; loss: 721730.875
2018-11-27 16:26:51,129:INFO: - Eval metrics: accuracy: 0.392 ; loss: 231395.203
2018-11-27 16:26:51,843:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-9
2018-11-27 16:26:51,843:INFO: Epoch 10/10000
2018-11-27 16:27:36,378:INFO: - Train metrics: accuracy: 0.536 ; loss: 404856.125
2018-11-27 16:27:47,193:INFO: - Eval metrics: accuracy: 0.427 ; loss: 119852.727
2018-11-27 16:27:47,916:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-10
2018-11-27 16:27:47,930:INFO: Epoch 11/10000
2018-11-27 16:28:31,608:INFO: - Train metrics: accuracy: 0.606 ; loss: 175889.656
2018-11-27 16:28:41,860:INFO: - Eval metrics: accuracy: 0.535 ; loss: 58856.617
2018-11-27 16:28:42,573:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-11
2018-11-27 16:28:42,573:INFO: Epoch 12/10000
2018-11-27 16:29:27,876:INFO: - Train metrics: accuracy: 0.669 ; loss: 66890.125
2018-11-27 16:29:38,438:INFO: - Eval metrics: accuracy: 0.578 ; loss: 44138.805
2018-11-27 16:29:39,175:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-12
2018-11-27 16:29:39,176:INFO: Epoch 13/10000
2018-11-27 16:30:25,702:INFO: - Train metrics: accuracy: 0.709 ; loss: 36022.609
2018-11-27 16:30:36,187:INFO: - Eval metrics: accuracy: 0.587 ; loss: 38549.926
2018-11-27 16:30:36,886:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-13
2018-11-27 16:30:36,887:INFO: Epoch 14/10000
2018-11-27 16:31:23,855:INFO: - Train metrics: accuracy: 0.720 ; loss: 26013.965
2018-11-27 16:31:34,666:INFO: - Eval metrics: accuracy: 0.592 ; loss: 33818.965
2018-11-27 16:31:35,385:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-14
2018-11-27 16:31:35,386:INFO: Epoch 15/10000
2018-11-27 16:32:21,472:INFO: - Train metrics: accuracy: 0.742 ; loss: 21452.477
2018-11-27 16:32:31,485:INFO: - Eval metrics: accuracy: 0.627 ; loss: 30405.238
2018-11-27 16:32:32,187:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-15
2018-11-27 16:32:32,187:INFO: Epoch 16/10000
2018-11-27 16:33:17,317:INFO: - Train metrics: accuracy: 0.756 ; loss: 18592.172
2018-11-27 16:33:27,537:INFO: - Eval metrics: accuracy: 0.639 ; loss: 27445.520
2018-11-27 16:33:28,243:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-16
2018-11-27 16:33:28,244:INFO: Epoch 17/10000
2018-11-27 16:34:13,734:INFO: - Train metrics: accuracy: 0.769 ; loss: 17107.082
2018-11-27 16:34:24,197:INFO: - Eval metrics: accuracy: 0.620 ; loss: 25873.025
2018-11-27 16:34:24,720:INFO: Epoch 18/10000
2018-11-27 16:35:10,019:INFO: - Train metrics: accuracy: 0.769 ; loss: 16281.011
2018-11-27 16:35:20,357:INFO: - Eval metrics: accuracy: 0.640 ; loss: 24428.111
2018-11-27 16:35:21,045:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-18
2018-11-27 16:35:21,045:INFO: Epoch 19/10000
2018-11-27 16:36:06,463:INFO: - Train metrics: accuracy: 0.781 ; loss: 15242.200
2018-11-27 16:36:16,926:INFO: - Eval metrics: accuracy: 0.646 ; loss: 23471.910
2018-11-27 16:36:17,615:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-19
2018-11-27 16:36:17,616:INFO: Epoch 20/10000
2018-11-27 16:37:02,918:INFO: - Train metrics: accuracy: 0.787 ; loss: 14658.500
2018-11-27 16:37:13,219:INFO: - Eval metrics: accuracy: 0.639 ; loss: 22260.250
2018-11-27 16:37:13,758:INFO: Epoch 21/10000
2018-11-27 16:37:59,210:INFO: - Train metrics: accuracy: 0.793 ; loss: 14097.672
2018-11-27 16:38:09,606:INFO: - Eval metrics: accuracy: 0.656 ; loss: 21382.811
2018-11-27 16:38:10,312:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-21
2018-11-27 16:38:10,313:INFO: Epoch 22/10000
2018-11-27 16:38:56,030:INFO: - Train metrics: accuracy: 0.798 ; loss: 13689.607
2018-11-27 16:39:06,419:INFO: - Eval metrics: accuracy: 0.659 ; loss: 20665.492
2018-11-27 16:39:07,121:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-22
2018-11-27 16:39:07,122:INFO: Epoch 23/10000
2018-11-27 16:39:52,169:INFO: - Train metrics: accuracy: 0.801 ; loss: 13347.620
2018-11-27 16:40:02,509:INFO: - Eval metrics: accuracy: 0.656 ; loss: 19989.701
2018-11-27 16:40:03,057:INFO: Epoch 24/10000
2018-11-27 16:40:48,438:INFO: - Train metrics: accuracy: 0.806 ; loss: 13004.804
2018-11-27 16:40:58,707:INFO: - Eval metrics: accuracy: 0.664 ; loss: 19351.297
2018-11-27 16:40:59,386:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-24
2018-11-27 16:40:59,387:INFO: Epoch 25/10000
2018-11-27 16:41:44,952:INFO: - Train metrics: accuracy: 0.809 ; loss: 12736.271
2018-11-27 16:41:55,301:INFO: - Eval metrics: accuracy: 0.668 ; loss: 18716.242
2018-11-27 16:41:55,988:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-25
2018-11-27 16:41:55,988:INFO: Epoch 26/10000
2018-11-27 16:42:41,554:INFO: - Train metrics: accuracy: 0.812 ; loss: 12567.202
2018-11-27 16:42:51,859:INFO: - Eval metrics: accuracy: 0.668 ; loss: 18103.279
2018-11-27 16:42:52,418:INFO: Epoch 27/10000
2018-11-27 16:43:37,563:INFO: - Train metrics: accuracy: 0.812 ; loss: 12297.576
2018-11-27 16:43:48,052:INFO: - Eval metrics: accuracy: 0.671 ; loss: 17724.996
2018-11-27 16:43:48,880:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-27
2018-11-27 16:43:48,900:INFO: Epoch 28/10000
2018-11-27 16:44:34,301:INFO: - Train metrics: accuracy: 0.814 ; loss: 12081.707
2018-11-27 16:44:44,619:INFO: - Eval metrics: accuracy: 0.671 ; loss: 16942.549
2018-11-27 16:44:45,171:INFO: Epoch 29/10000
2018-11-27 16:45:30,268:INFO: - Train metrics: accuracy: 0.822 ; loss: 11749.721
2018-11-27 16:45:40,649:INFO: - Eval metrics: accuracy: 0.678 ; loss: 16153.630
2018-11-27 16:45:41,316:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-29
2018-11-27 16:45:41,317:INFO: Epoch 30/10000
2018-11-27 16:46:26,949:INFO: - Train metrics: accuracy: 0.825 ; loss: 11702.745
2018-11-27 16:46:37,265:INFO: - Eval metrics: accuracy: 0.678 ; loss: 15694.901
2018-11-27 16:46:37,819:INFO: Epoch 31/10000
2018-11-27 16:47:23,036:INFO: - Train metrics: accuracy: 0.826 ; loss: 11544.561
2018-11-27 16:47:33,066:INFO: - Eval metrics: accuracy: 0.679 ; loss: 15518.570
2018-11-27 16:47:33,746:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-31
2018-11-27 16:47:33,747:INFO: Epoch 32/10000
2018-11-27 16:48:19,095:INFO: - Train metrics: accuracy: 0.826 ; loss: 11500.280
2018-11-27 16:48:29,420:INFO: - Eval metrics: accuracy: 0.684 ; loss: 15497.432
2018-11-27 16:48:30,093:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-32
2018-11-27 16:48:30,093:INFO: Epoch 33/10000
2018-11-27 16:49:15,232:INFO: - Train metrics: accuracy: 0.828 ; loss: 11432.388
2018-11-27 16:49:25,528:INFO: - Eval metrics: accuracy: 0.685 ; loss: 15243.385
2018-11-27 16:49:26,234:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-33
2018-11-27 16:49:26,234:INFO: Epoch 34/10000
2018-11-27 16:50:11,610:INFO: - Train metrics: accuracy: 0.828 ; loss: 11393.828
2018-11-27 16:50:21,881:INFO: - Eval metrics: accuracy: 0.687 ; loss: 15232.612
2018-11-27 16:50:22,542:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-34
2018-11-27 16:50:22,542:INFO: Epoch 35/10000
2018-11-27 16:51:08,619:INFO: - Train metrics: accuracy: 0.827 ; loss: 11274.086
2018-11-27 16:51:18,943:INFO: - Eval metrics: accuracy: 0.686 ; loss: 15014.864
2018-11-27 16:51:19,460:INFO: Epoch 36/10000
2018-11-27 16:52:04,995:INFO: - Train metrics: accuracy: 0.824 ; loss: 11331.053
2018-11-27 16:52:15,377:INFO: - Eval metrics: accuracy: 0.679 ; loss: 15260.275
2018-11-27 16:52:15,939:INFO: Epoch 37/10000
2018-11-27 16:53:01,827:INFO: - Train metrics: accuracy: 0.829 ; loss: 11157.305
2018-11-27 16:53:12,121:INFO: - Eval metrics: accuracy: 0.697 ; loss: 14463.406
2018-11-27 16:53:12,800:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-37
2018-11-27 16:53:12,800:INFO: Epoch 38/10000
2018-11-27 16:53:58,297:INFO: - Train metrics: accuracy: 0.829 ; loss: 11557.717
2018-11-27 16:54:08,587:INFO: - Eval metrics: accuracy: 0.698 ; loss: 14278.972
2018-11-27 16:54:09,271:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-38
2018-11-27 16:54:09,272:INFO: Epoch 39/10000
2018-11-27 16:54:55,008:INFO: - Train metrics: accuracy: 0.834 ; loss: 11027.326
2018-11-27 16:55:05,355:INFO: - Eval metrics: accuracy: 0.697 ; loss: 14033.880
2018-11-27 16:55:05,909:INFO: Epoch 40/10000
2018-11-27 16:55:51,509:INFO: - Train metrics: accuracy: 0.819 ; loss: 10920.728
2018-11-27 16:56:01,820:INFO: - Eval metrics: accuracy: 0.687 ; loss: 13694.225
2018-11-27 16:56:02,362:INFO: Epoch 41/10000
2018-11-27 16:57:07,715:INFO: Creating the datasets...
2018-11-27 16:57:13,291:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 16:57:13,616:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 16:57:13,661:INFO: - done.
2018-11-27 16:57:13,661:INFO: Creating the model...
2018-11-27 16:57:13,825:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 16:57:15,124:INFO: - done.
2018-11-27 16:57:15,124:INFO: Starting training for 10000 epoch(s)
2018-11-27 16:57:15,450:INFO: Restoring parameters from experiments/best_weights
2018-11-27 16:57:15,483:INFO: Restoring parameters from experiments/best_weights/after-epoch-38
2018-11-27 16:57:16,141:INFO: Epoch 39/10038
2018-11-27 16:58:01,809:INFO: - Train metrics: accuracy: 0.834 ; loss: 11027.326
2018-11-27 16:58:12,257:INFO: - Eval metrics: accuracy: 0.697 ; loss: 14033.880
2018-11-27 16:58:13,058:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-39
2018-11-27 16:58:13,059:INFO: Epoch 40/10038
2018-11-27 16:58:57,572:INFO: - Train metrics: accuracy: 0.819 ; loss: 10920.728
2018-11-27 16:59:08,019:INFO: - Eval metrics: accuracy: 0.687 ; loss: 13694.225
2018-11-27 16:59:08,568:INFO: Epoch 41/10038
2018-11-27 16:59:16,445:INFO: Creating the datasets...
2018-11-27 16:59:18,144:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 16:59:18,447:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 16:59:18,490:INFO: - done.
2018-11-27 16:59:18,490:INFO: Creating the model...
2018-11-27 16:59:18,583:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 16:59:19,844:INFO: - done.
2018-11-27 16:59:19,844:INFO: Starting training for 10000 epoch(s)
2018-11-27 16:59:19,985:INFO: Restoring parameters from experiments/best_weights
2018-11-27 16:59:19,987:INFO: Restoring parameters from experiments/best_weights/after-epoch-39
2018-11-27 16:59:20,638:INFO: Epoch 40/10039
2018-11-27 17:00:06,911:INFO: - Train metrics: accuracy: 0.819 ; loss: 10920.728
2018-11-27 17:00:17,293:INFO: - Eval metrics: accuracy: 0.687 ; loss: 13694.225
2018-11-27 17:00:18,112:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-40
2018-11-27 17:00:18,113:INFO: Epoch 41/10039
2018-11-27 17:00:25,239:INFO: Creating the datasets...
2018-11-27 17:00:26,906:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:00:27,228:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:00:27,275:INFO: - done.
2018-11-27 17:00:27,275:INFO: Creating the model...
2018-11-27 17:00:27,377:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:00:28,702:INFO: - done.
2018-11-27 17:00:28,702:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:00:29,482:INFO: Epoch 1/10000
2018-11-27 17:01:16,581:INFO: - Train metrics: accuracy: 0.011 ; loss: 3290600.500
2018-11-27 17:01:27,213:INFO: - Eval metrics: accuracy: 0.022 ; loss: 1726897.375
2018-11-27 17:01:28,036:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 17:01:28,037:INFO: Epoch 2/10000
2018-11-27 17:02:14,384:INFO: - Train metrics: accuracy: 0.028 ; loss: 3282372.750
2018-11-27 17:02:24,771:INFO: - Eval metrics: accuracy: 0.079 ; loss: 1711976.625
2018-11-27 17:02:25,451:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 17:02:25,452:INFO: Epoch 3/10000
2018-11-27 17:03:11,664:INFO: - Train metrics: accuracy: 0.099 ; loss: 3222043.500
2018-11-27 17:03:22,004:INFO: - Eval metrics: accuracy: 0.202 ; loss: 1638783.625
2018-11-27 17:03:22,688:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-27 17:03:22,689:INFO: Epoch 4/10000
2018-11-27 17:03:27,165:INFO: Creating the datasets...
2018-11-27 17:03:28,884:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:03:29,212:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:03:29,262:INFO: - done.
2018-11-27 17:03:29,263:INFO: Creating the model...
2018-11-27 17:03:29,365:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:03:30,725:INFO: - done.
2018-11-27 17:03:30,725:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:03:31,472:INFO: Epoch 1/10000
2018-11-27 17:04:18,659:INFO: - Train metrics: accuracy: 0.011 ; loss: 3290600.500
2018-11-27 17:04:28,907:INFO: - Eval metrics: accuracy: 0.022 ; loss: 1726897.375
2018-11-27 17:04:29,687:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 17:04:29,687:INFO: Epoch 2/10000
2018-11-27 17:05:15,675:INFO: - Train metrics: accuracy: 0.028 ; loss: 3282372.750
2018-11-27 17:05:25,895:INFO: - Eval metrics: accuracy: 0.079 ; loss: 1711976.625
2018-11-27 17:05:26,557:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 17:05:26,557:INFO: Epoch 3/10000
2018-11-27 17:05:33,770:INFO: Creating the datasets...
2018-11-27 17:05:35,517:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:05:35,831:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:05:35,878:INFO: - done.
2018-11-27 17:05:35,879:INFO: Creating the model...
2018-11-27 17:05:35,974:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:06:34,610:INFO: Creating the datasets...
2018-11-27 17:06:36,393:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:06:36,704:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:06:36,751:INFO: - done.
2018-11-27 17:06:36,751:INFO: Creating the model...
2018-11-27 17:06:36,848:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:06:38,134:INFO: - done.
2018-11-27 17:06:38,134:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:06:38,876:INFO: Epoch 1/10000
2018-11-27 17:07:59,985:INFO: Creating the datasets...
2018-11-27 17:08:01,670:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:08:01,977:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:08:02,022:INFO: - done.
2018-11-27 17:08:02,022:INFO: Creating the model...
2018-11-27 17:08:02,118:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:08:03,394:INFO: - done.
2018-11-27 17:08:03,394:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:08:04,115:INFO: Epoch 1/10000
2018-11-27 17:08:25,177:INFO: Creating the datasets...
2018-11-27 17:08:26,862:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:08:27,172:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:08:27,217:INFO: - done.
2018-11-27 17:08:27,217:INFO: Creating the model...
2018-11-27 17:08:27,311:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:08:28,599:INFO: - done.
2018-11-27 17:08:28,599:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:08:29,327:INFO: Epoch 1/10000
2018-11-27 17:09:10,173:INFO: Creating the datasets...
2018-11-27 17:09:11,865:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:09:12,177:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:09:12,225:INFO: - done.
2018-11-27 17:09:12,225:INFO: Creating the model...
2018-11-27 17:09:12,320:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:11:02,470:INFO: Creating the datasets...
2018-11-27 17:11:04,192:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:11:04,497:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:11:04,541:INFO: - done.
2018-11-27 17:11:04,541:INFO: Creating the model...
2018-11-27 17:11:04,635:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:12:17,947:INFO: Creating the datasets...
2018-11-27 17:12:19,664:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:12:19,975:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:12:20,020:INFO: - done.
2018-11-27 17:12:20,020:INFO: Creating the model...
2018-11-27 17:12:20,117:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:12:46,818:INFO: Creating the datasets...
2018-11-27 17:12:48,551:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:12:48,870:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:12:48,915:INFO: - done.
2018-11-27 17:12:48,915:INFO: Creating the model...
2018-11-27 17:12:49,013:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:13:23,422:INFO: Creating the datasets...
2018-11-27 17:13:25,128:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:13:25,441:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:13:25,486:INFO: - done.
2018-11-27 17:13:25,486:INFO: Creating the model...
2018-11-27 17:13:25,582:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:13:40,928:INFO: Creating the datasets...
2018-11-27 17:13:42,628:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:13:42,938:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:13:42,984:INFO: - done.
2018-11-27 17:13:42,984:INFO: Creating the model...
2018-11-27 17:13:43,077:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:14:08,936:INFO: Creating the datasets...
2018-11-27 17:14:10,653:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:14:10,976:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:14:11,022:INFO: - done.
2018-11-27 17:14:11,022:INFO: Creating the model...
2018-11-27 17:14:11,118:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:14:57,262:INFO: Creating the datasets...
2018-11-27 17:14:58,978:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:14:59,285:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:14:59,329:INFO: - done.
2018-11-27 17:14:59,329:INFO: Creating the model...
2018-11-27 17:14:59,422:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:15:17,225:INFO: Creating the datasets...
2018-11-27 17:15:18,954:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:15:19,265:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:15:19,310:INFO: - done.
2018-11-27 17:15:19,311:INFO: Creating the model...
2018-11-27 17:15:19,406:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:15:20,477:INFO: - done.
2018-11-27 17:15:20,477:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:15:21,136:INFO: Epoch 1/10000
2018-11-27 17:15:56,170:INFO: Creating the datasets...
2018-11-27 17:15:57,892:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:15:58,202:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:15:58,249:INFO: - done.
2018-11-27 17:15:58,249:INFO: Creating the model...
2018-11-27 17:15:58,346:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:15:59,488:INFO: - done.
2018-11-27 17:15:59,488:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:16:00,184:INFO: Epoch 1/10000
2018-11-27 17:17:10,777:INFO: Creating the datasets...
2018-11-27 17:17:12,532:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:17:12,843:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:17:12,888:INFO: - done.
2018-11-27 17:17:12,888:INFO: Creating the model...
2018-11-27 17:17:12,985:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:17:14,129:INFO: - done.
2018-11-27 17:17:14,130:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:17:14,811:INFO: Epoch 1/10000
2018-11-27 17:17:54,628:INFO: Creating the datasets...
2018-11-27 17:17:56,345:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:17:56,652:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:17:56,700:INFO: - done.
2018-11-27 17:17:56,700:INFO: Creating the model...
2018-11-27 17:17:56,794:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:17:57,935:INFO: - done.
2018-11-27 17:17:57,935:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:17:58,603:INFO: Epoch 1/10000
2018-11-27 17:18:33,715:INFO: - Train metrics: accuracy: 0.014 ; loss: 3290305.000
2018-11-27 17:18:40,020:INFO: Creating the datasets...
2018-11-27 17:18:41,765:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:18:42,070:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:18:42,115:INFO: - done.
2018-11-27 17:18:42,115:INFO: Creating the model...
2018-11-27 17:18:42,211:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:18:43,342:INFO: - done.
2018-11-27 17:18:43,343:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:18:44,008:INFO: Epoch 1/10000
2018-11-27 17:19:04,223:INFO: Creating the datasets...
2018-11-27 17:19:05,958:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:19:06,268:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:19:06,312:INFO: - done.
2018-11-27 17:19:06,312:INFO: Creating the model...
2018-11-27 17:19:06,405:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:19:36,271:INFO: Creating the datasets...
2018-11-27 17:19:38,099:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:19:38,414:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:19:38,458:INFO: - done.
2018-11-27 17:19:38,458:INFO: Creating the model...
2018-11-27 17:19:38,552:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:19:39,760:INFO: - done.
2018-11-27 17:19:39,760:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:19:40,515:INFO: Epoch 1/10000
2018-11-27 17:19:50,016:INFO: Creating the datasets...
2018-11-27 17:19:51,755:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:19:52,080:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:19:52,126:INFO: - done.
2018-11-27 17:19:52,126:INFO: Creating the model...
2018-11-27 17:19:52,227:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:20:30,878:INFO: Creating the datasets...
2018-11-27 17:20:32,649:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:20:32,962:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:20:33,009:INFO: - done.
2018-11-27 17:20:33,009:INFO: Creating the model...
2018-11-27 17:20:33,105:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:21:11,351:INFO: Creating the datasets...
2018-11-27 17:21:13,026:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:21:13,334:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:21:13,378:INFO: - done.
2018-11-27 17:21:13,378:INFO: Creating the model...
2018-11-27 17:21:13,471:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:21:35,927:INFO: Creating the datasets...
2018-11-27 17:21:37,660:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:21:37,976:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:21:38,020:INFO: - done.
2018-11-27 17:21:38,020:INFO: Creating the model...
2018-11-27 17:21:38,115:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:21:51,070:INFO: Creating the datasets...
2018-11-27 17:21:52,802:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:21:53,140:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:21:53,186:INFO: - done.
2018-11-27 17:21:53,186:INFO: Creating the model...
2018-11-27 17:21:53,283:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:21:54,489:INFO: - done.
2018-11-27 17:21:54,489:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:21:55,185:INFO: Epoch 1/10000
2018-11-27 17:22:07,131:INFO: Creating the datasets...
2018-11-27 17:22:08,828:WARNING: From /home/rwee015/Code/Nov18/two/model/input_fn.py:49: CsvDataset.__init__ (from tensorflow.contrib.data.python.ops.readers) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.experimental.CsvDataset(...)`.
2018-11-27 17:22:09,134:WARNING: From /home/rwee015/Code/Nov18/two/venv/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py:488: sliding_window_batch (from tensorflow.contrib.data.python.ops.sliding) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.window(size=window_size, shift=window_shift, stride=window_stride).flat_map(lambda x: x.batch(window.size))` instead.
2018-11-27 17:22:09,178:INFO: - done.
2018-11-27 17:22:09,178:INFO: Creating the model...
2018-11-27 17:22:09,272:WARNING: From /home/rwee015/Code/Nov18/two/model/ntfCell.py:296: Print (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2018-08-20.
Instructions for updating:
Use tf.print instead of tf.Print. Note that tf.print returns a no-output operator that directly prints the output. Outside of defuns or eager mode, this operator will not be executed unless it is directly specified in session.run or used as a control dependency for other operators. This is only a concern in graph mode. Below is an example of how to ensure tf.print executes in graph mode:
```python
    sess = tf.Session()
    with sess.as_default():
        tensor = tf.range(10)
        print_op = tf.print(tensor)
        with tf.control_dependencies([print_op]):
          out = tf.add(tensor, tensor)
        sess.run(out)
    ```
Additionally, to use tf.print in python 2.7, users must make sure to import
the following:

  `from __future__ import print_function`

2018-11-27 17:22:10,519:INFO: - done.
2018-11-27 17:22:10,519:INFO: Starting training for 10000 epoch(s)
2018-11-27 17:22:11,230:INFO: Epoch 1/10000
2018-11-27 17:22:50,666:INFO: - Train metrics: accuracy: 0.012 ; loss: 3290678.750
2018-11-27 17:22:58,683:INFO: - Eval metrics: accuracy: 0.022 ; loss: 1726915.375
2018-11-27 17:22:59,339:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-1
2018-11-27 17:22:59,340:INFO: Epoch 2/10000
2018-11-27 17:23:37,931:INFO: - Train metrics: accuracy: 0.025 ; loss: 3282496.750
2018-11-27 17:23:45,827:INFO: - Eval metrics: accuracy: 0.055 ; loss: 1712423.250
2018-11-27 17:23:46,393:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-2
2018-11-27 17:23:46,394:INFO: Epoch 3/10000
2018-11-27 17:24:24,978:INFO: - Train metrics: accuracy: 0.077 ; loss: 3227015.500
2018-11-27 17:24:32,844:INFO: - Eval metrics: accuracy: 0.171 ; loss: 1647505.125
2018-11-27 17:24:33,418:INFO: - Found new best accuracy, saving in experiments/best_weights/after-epoch-3
2018-11-27 17:24:33,419:INFO: Epoch 4/10000
